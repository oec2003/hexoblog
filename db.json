{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/maupassant/source/css/jquery.fancybox.css","path":"css/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"de7610198cf7092db814e46d17b75d0c87cdc7cd","modified":1470929993000},{"_id":"themes/maupassant/.travis.yml","hash":"0339959f29deddc365e8fe8bd85da524410b9a23","modified":1470891025000},{"_id":"themes/maupassant/LICENSE","hash":"019dc6a9aba02ae3aaabca45f39aecd6e8e7f1d8","modified":1470891025000},{"_id":"themes/maupassant/README.md","hash":"75d8c42569809961953d1934de445418c00ab94c","modified":1470891025000},{"_id":"themes/maupassant/_config.yml","hash":"3255e44dbe1437f5e5ed7b663d1934f9b6b446cb","modified":1470977786000},{"_id":"themes/maupassant/package.json","hash":"81fb4e2ac051ecfb9a93f37b28910291b939771a","modified":1470891025000},{"_id":"source/about/index.md","hash":"7dc0a32ea38541115f49ad1eac4f1c154a233e42","modified":1470977939000},{"_id":"source/_posts/07-guangdong-job-experience-1.md","hash":"2fc628e8340cbe6cd56bafb18f6abbead12fc9f4","modified":1470923329000},{"_id":"source/_posts/07-guangdong-job-experience-2.md","hash":"6e9d5f0d5aacc6c0cb7ab04d59a29095ebae2a3d","modified":1470926132000},{"_id":"source/_posts/2006-2007.md","hash":"c090551131a80b88fd4f1c5f8354cb232fae54d8","modified":1471017482000},{"_id":"source/_posts/2010-national-day-reporter.md","hash":"47b832f054324eb7e58f6cb4bd31649ea82180d0","modified":1470926141000},{"_id":"source/_posts/2012-year-summary.md","hash":"c91fdde1ebe4f45abfe6852510cd432b1ff22a95","modified":1470926145000},{"_id":"source/_posts/a-billing-software-to-my-wife.md","hash":"38a39ecc460ccc46fcb84231677d862c18f29962","modified":1470926151000},{"_id":"source/_posts/a-little-information-about-loadrunner.md","hash":"7ae55f1e9c1993abd5387595956a3c8351dc9e8e","modified":1470926155000},{"_id":"source/_posts/a-little-understanding-of-design-patterns.md","hash":"ce801dd299a1c4aa97d7aa768d4784205b060a24","modified":1470926160000},{"_id":"source/_posts/a-small-performance-test-of-asp-net.md","hash":"4bace84d7d5976260208e6f7256735549a9629e5","modified":1471017231000},{"_id":"source/_posts/a-simple-wcf-example.md","hash":"dec8367256ebbb75b9e154e6e1cf71c8cb732fcb","modified":1471016557000},{"_id":"source/_posts/a-trip-to-beidaihe-2010-07-24.md","hash":"ab6feb41ab98c82cc0b79dc3c17f47e37fc8a48e","modified":1470926172000},{"_id":"source/_posts/add-a-bookmark-to-a-pdf-document.md","hash":"00e387e1774a628e57cd1d07b8505070d95b999e","modified":1470926175000},{"_id":"source/_posts/add-the-default-distribution-point-wms.md","hash":"45ac9b583dac3f931ccaf1f0b7b9da7849e3a7d2","modified":1470926178000},{"_id":"source/_posts/additional-database-failure-5120-error.md","hash":"35dba8cb34d193bf7b723dcbb40f502a6c31b271","modified":1470926185000},{"_id":"source/_posts/additional-program-installed-virtual-pc.md","hash":"8e08e88149199d6a5a0c47bfc415f94ee4b40b0f","modified":1470926191000},{"_id":"source/_posts/after-watching-goodbye-gangster-feeling.md","hash":"9b342552a277c037013a9e1a6319f1d9226cd23d","modified":1470926200000},{"_id":"source/_posts/adjust-disk-c-capacity-in-windows7.md","hash":"bab5532b6ecec8791d50e0477a9f375d32df0857","modified":1470926197000},{"_id":"source/_posts/ajax-actually-not-difficult.md","hash":"bb072dd24b6facf9b0c48c37cac54610d29972f3","modified":1470926203000},{"_id":"source/_posts/ajaxcontroltoolkit-installing.md","hash":"1ed9b911bada3bdc95e708896342967e86c37799","modified":1470926206000},{"_id":"source/_posts/almost-to-be-deceived.md","hash":"c21d1228350ef0efe48649233f0bc24d5c8352c5","modified":1470926215000},{"_id":"source/_posts/ajaxpro-autocomplete-function-implementation.md","hash":"8895b5319c57ffbba588ecef381562d4c414fafe","modified":1471355251000},{"_id":"source/_posts/an-introduction-to-the-sample-to-nhibernate.md","hash":"fc75fcc2c92f81cb468d5fc00f41a1c77ac2f0b1","modified":1471161318000},{"_id":"source/_posts/anniversary.md","hash":"4836130be7a79cb8bce4d3d931e6ecbfe2582d10","modified":1470926219000},{"_id":"source/_posts/asp-net-ajax-filteredtextbox.md","hash":"b226286f00895e73bd788e4eb8aa8293122d3242","modified":1471077421000},{"_id":"source/_posts/asp-net-ajax-autocomplete.md","hash":"3dde36a727cf1a0dc5f2771a6793092e72963d1e","modified":1471077429000},{"_id":"source/_posts/asp-net-ajax-passwordstrength.md","hash":"f9a3fde6c86c651c1c8d5c45fe9261ae83a9cce7","modified":1471077407000},{"_id":"source/_posts/asp-net-ajax-hovermenu.md","hash":"7b1648eabf9d147efb2721f510aa0ccc179550c0","modified":1471094468000},{"_id":"source/_posts/asp-net-ajax-popupcontrol.md","hash":"7dd1072376fae2e699466ebdf194928f8f7f7caa","modified":1471095209000},{"_id":"source/_posts/asp-net-ajax-textboxwateramrk.md","hash":"f65f2a8a36ff445112cb80f73385bf529536356b","modified":1471077413000},{"_id":"source/_posts/asp-net-ajax-validatorcallout.md","hash":"f5b8d89028f12efdfbc0c55b16b0ed4e4fe7383d","modified":1471094950000},{"_id":"source/_posts/asp-net-lists-data-bound-controls.md","hash":"f7704665ad9827f1102ed3b8ed8ba4854a3177ee","modified":1471016030000},{"_id":"source/_posts/aspnet-2-0-the-eval-method-of-explanation.md","hash":"cb899767e6ccae6d837cbfce95e5473076acabc2","modified":1471160864000},{"_id":"source/_posts/asp-net-performance-issues.md","hash":"464bbdcc0a0a3ba89bca4fe508720993e63f9ddc","modified":1471015724000},{"_id":"source/_posts/aspnet-access-database-connection.md","hash":"97832467bba6d87ba27c018feef501773b30d8bc","modified":1471160672000},{"_id":"source/_posts/aspnet-ajax-calendar-control.md","hash":"37823d3b7557abe515dd176fa2d12e17afb59e38","modified":1471095806000},{"_id":"source/_posts/aspnet-instead-of-eval-in-two-ways.md","hash":"a4690556a8103f9404bd6838018520ce5e6b277a","modified":1471272152000},{"_id":"source/_posts/aspnet-mvc-v2-preview-1.md","hash":"1ffb3909d59b817ee9cd2d25e930aa25cac4cb6e","modified":1471356083000},{"_id":"source/_posts/aspnet-recursive-implementation-of-css-menu.md","hash":"cd37e2ccb9f187f5cc264d8883d0efe35c3513ea","modified":1471161586000},{"_id":"source/_posts/backup-windows-live-writers-draft.md","hash":"fa9ad813815b9ffcd77ac63fc289fc0e6595eda6","modified":1471356639000},{"_id":"source/_posts/calligraphy-competition-prizes-heaven-umbrella.md","hash":"100542a05069aa6b3d9fab9d2769cc6e5385fa49","modified":1471357210000},{"_id":"source/_posts/clr-via-csharp-learning-notes-1-primitive-types.md","hash":"948791a675868eddbb9b66d5d2649b4464d28681","modified":1471269796000},{"_id":"source/_posts/clr-via-csharp-learning-notes-3-constants-and-fields.md","hash":"b5b101f549d6b140252ef4c89b46bd77e1cac43f","modified":1471271775000},{"_id":"source/_posts/clr-via-csharp-learning-notes-2-boxing-and-unboxing.md","hash":"4fff05c2cc241a7666058749bad1142c5c3110f2","modified":1471270172000},{"_id":"source/_posts/clr-via-csharp-learning-notes-5-methods-the-constructor.md","hash":"92d18ef06612f950402f61917fe0aece99cc57cc","modified":1471354669000},{"_id":"source/_posts/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor.md","hash":"088ba6a379d24bef49574dfd59a17206cdb37f3d","modified":1471354970000},{"_id":"source/_posts/clr-via-csharp-learning-notes-6-the-method-parameters-related.md","hash":"9380566943d7289c34f142ba64a6aaf8b7f889ff","modified":1471355479000},{"_id":"source/_posts/commonly-used-some-regular-expressions.md","hash":"0e30c6d891efe44ea06c28eae12e01e0fc2789cb","modified":1471018506000},{"_id":"source/_posts/delete-recently-opened-in-visual-studio-project-and-file-records.md","hash":"970725ce6d6cb35f6ddbd712f5a0599f039e20b4","modified":1471097164000},{"_id":"source/_posts/csharp-and-javascript-interaction.md","hash":"332a42e7f3b891c72213756dc38d3de2e0e04a61","modified":1471096189000},{"_id":"source/_posts/design-patterns-notes-18-iterator-pattern.md","hash":"51fe314163c659984831289988ccb2ea099cb61f","modified":1470926230000},{"_id":"source/_posts/dotnet-3-0-framework-introduce.md","hash":"37e08911b3e9a47917b178e8abf471ea853b7fb4","modified":1471075968000},{"_id":"source/_posts/dynamically-add-tow-to-gridview.md","hash":"c882393dfa210f571d4f1003dc05d5d79b9862f3","modified":1471098689000},{"_id":"source/_posts/generate-html-server-controls-in-the-background.md","hash":"541cf7d0f59b29f8e5772dbbc6feeb80e22a2999","modified":1471156767000},{"_id":"source/_posts/development-summary-javascript.md","hash":"712067e7894cb9512d64b1069cf5b5969089c857","modified":1471156652000},{"_id":"source/_posts/implement-mouseover-highlight-respectively-in-the-gridview-and-the-datagrid.md","hash":"3ea3bf251887b7d7ce4dc42591e64c8f70cf6e61","modified":1471018343000},{"_id":"source/_posts/english-cet-4.md","hash":"c0f8ed65a5738ce5b66d126db987ae2fb8fa7732","modified":1470977346000},{"_id":"source/_posts/graduation-reply.md","hash":"60292fd4a64cb1f860787677c3d6ffadd8428d39","modified":1471018683000},{"_id":"source/_posts/eliminate-the-prompt-window.md","hash":"01aa27c94410d3a0684ee2ccec58a61c251a5141","modified":1471160122000},{"_id":"source/_posts/in-setting-the-jquery-vs2008-intellisense.md","hash":"1e81b21faf78821b8346b29b577fce47488f14c4","modified":1471268337000},{"_id":"source/_posts/learning-c-3-0-2-object-collection-initializer.md","hash":"38e1115ba6f6447df71637abb46f7330da1c72cf","modified":1471099171000},{"_id":"source/_posts/learning-csharp-3-0-1-implied-type-of-local-variables-and-extension-methods.md","hash":"192ff3fbe47d1692dfbf5930ef88d2c3470ac983","modified":1471098946000},{"_id":"source/_posts/learning-csharp-3-0-3-anonymous-types.md","hash":"e4591adcbcade2e06152e2b0595f56f0bbab7fd0","modified":1471099665000},{"_id":"source/_posts/masterpage-introduction.md","hash":"a2f6e7b7d6fb0945950776ae2737ca2cca78832b","modified":1471159283000},{"_id":"source/_posts/net-generic-programming.md","hash":"9dc9d23f98f3e2e91c0377dab90b45e054bc77a7","modified":1471018606000},{"_id":"source/_posts/powerful-vs-plug-in-resharper.md","hash":"c61171d8fb44532adcebdb1b26c79c6a92a1631f","modified":1471358414000},{"_id":"source/_posts/prison-break.md","hash":"7745382f6991a090397246a1199d79334fb9f248","modified":1470966533000},{"_id":"source/_posts/programmers-not-really-35.md","hash":"3987ac77306e6d2a796e5165247fc74325abcf56","modified":1470976913000},{"_id":"source/_posts/rare-small-company-activities-badminton-match.md","hash":"7973bcbd8267f4d5f7290a5dd4d618d2d0dea5d5","modified":1471358494000},{"_id":"source/_posts/recommend-a-small-screenshots-tools.md","hash":"3b87ef1d5f78c64b19766f4b0c1535861e0a45ca","modified":1471268118000},{"_id":"source/_posts/remove-the-file-upload-control-values.md","hash":"f2a5e6febc812079cd9bd28e129d4bbbc15ff59b","modified":1471156984000},{"_id":"source/_posts/response-redirect-in-a-new-window-open-3-0-extension-methods.md","hash":"6220f4d1dc064f07ef3444d4feee06154381987a","modified":1471159888000},{"_id":"source/_posts/see-yaos-injury-after-the-rockets.md","hash":"7ff1317c780fe12621f8a493f5cd364426a7e510","modified":1471017704000},{"_id":"source/_posts/separate-strings-in-sql.md","hash":"4d9c901211bfb95ee1951dea30ef49b516cc3024","modified":1471358858000},{"_id":"source/_posts/several-different-types-without-refresh-linkage-example.md","hash":"74081a56dfd0d2e03f117f2a21e36d290637f44d","modified":1471096884000},{"_id":"source/_posts/simple-to-use-aspnet-in-crystal-reports.md","hash":"1ce3a4c6f682d4d0c0e176e7678b68eda9ea0d15","modified":1471017923000},{"_id":"source/_posts/solve-the-problem-of-sqlserver2005-database-sa-login.md","hash":"3158ee5f9a3da8f782ec78c35b3049792a8707f2","modified":1471097086000},{"_id":"source/_posts/solve-the-problem-of-the-aspnet-ajax-updatepanel-garbled.md","hash":"e7ac16ec68c8d9366d98b4f0249861ac201cb84e","modified":1471077448000},{"_id":"source/_posts/some-tips-of-my97.md","hash":"f6f3f75cc262911161c56f58649c0512c7d9f0bb","modified":1471158147000},{"_id":"source/_posts/soon-to-be-a-programmer.md","hash":"671e2f8c750f96c38b981c8363b7aecd60918f5a","modified":1471094881000},{"_id":"source/_posts/sql-implementation-group-statistical-query.md","hash":"f80c214713975a005c48e3f01e10c1299a907069","modified":1471268595000},{"_id":"source/_posts/sql-to-calculate-a-string-in-the-number-of-occurrences-of-another-string.md","hash":"62dcda06ced5f7c48a71eff9d4e08b52a6e464c9","modified":1471157207000},{"_id":"source/_posts/sqlserver2005-additional-database-for-read-only-solutions.md","hash":"2f74e008701381abd904dd22eff4a9417c95a754","modified":1471268022000},{"_id":"source/_posts/stored-procedure-to-generate-a-serial-number.md","hash":"171694f51a1bc95d1bf2889faaa427e6a6587426","modified":1471095466000},{"_id":"source/_posts/summary-the-database-development.md","hash":"cebcc1ea72b43309126d88c81ff4c16a1f76cadf","modified":1471157523000},{"_id":"source/_posts/sybase-powerdesiner12-0-download.md","hash":"c00aeb30ae2bb877ce6d0a43f7e408500873049b","modified":1471100401000},{"_id":"source/_posts/the-difference-between-the-and-aspnet.md","hash":"b46327dc275da584f8ae901d64a133f3b41abec5","modified":1471358823000},{"_id":"source/_posts/the-first-interview.md","hash":"06bd70cfe6265b674697039e01515e14ed64fe6d","modified":1471018127000},{"_id":"source/_posts/the-first-job-thoughts.md","hash":"ffcbd5e69483bf032db1aab0a014b73e409a2334","modified":1471095298000},{"_id":"source/_posts/the-realization-of-the-html-form-thin-lines.md","hash":"82c3f43f6b71cb712141cc0ce0009f4f52050d95","modified":1471098577000},{"_id":"source/_posts/the-rockets-18-in-a-row.md","hash":"bc65cf64f48005b088eaa3d5606fefdc4378e3c8","modified":1471099735000},{"_id":"source/_posts/the-ultimate-solution-checkbox-selection.md","hash":"0668e04577ae33667f500d3d0f4bd4e777c9aa1b","modified":1471159001000},{"_id":"source/_posts/to-graduate.md","hash":"60dff5947d2c391ccf2c35f40a570be199163731","modified":1471018773000},{"_id":"source/_posts/to-promote-the-blog-four-tips.md","hash":"2e70d7b020dedcef7ba53ff0c4cb96822d406b60","modified":1470977595000},{"_id":"source/_posts/to-realize-the-checkbox-selection-in-the-gridview.md","hash":"27bdef530b712fa4c91e9ff481ea77b237a32012","modified":1471096482000},{"_id":"source/_posts/to-solve-the-unable-to-solve-the-equal-to-operation-collation-conflict-problem.md","hash":"17c33168ea20bab2b0f1078d3bdf505c01c4cbdc","modified":1471156905000},{"_id":"source/_posts/type-of-the-gridview-controls-within-the-form-tag-must-be-placed-with-runat-equal-server-error-solution.md","hash":"3a20a982acbf3c6cc68b1278155294654c81aa74","modified":1471097285000},{"_id":"source/_posts/unable-to-start-debugging-on-the-web-server-do-not-have-permission-to-debug-the-program-problem-solving.md","hash":"a092611646db7276094a556a811ac04fc1ee7080","modified":1471096333000},{"_id":"source/_posts/updatepanel-issues.md","hash":"b825c82245c2b47c899bddb74653e61f539b19f8","modified":1471099465000},{"_id":"source/_posts/use-windows-live-writer-connection-csdn-and-cnblogs-blog.md","hash":"001c4d21b0c1ec4d78f46e3eeb5ff0274486ad3c","modified":1471356469000},{"_id":"source/_posts/use-zedgraph-in-the-web.md","hash":"24cfc512da84de700a2795fe0cd9da574fbbd66f","modified":1471268892000},{"_id":"source/_posts/using-httpmodule-prevent-sql-injection.md","hash":"3cbbe38a7e477f216c66641afb67a6cb345b03b4","modified":1471159129000},{"_id":"source/_posts/using-iedevtoolbar.md","hash":"a4b02fe7225b72a38cd5735707c23a7a555f3127","modified":1471099251000},{"_id":"source/_posts/visual-studio-2010-beta-2-download-address-publicly.md","hash":"b72784e7322a40357a18c9a94ed502649cc71586","modified":1471358673000},{"_id":"source/_posts/window-print-implementation-local-print.md","hash":"003b68f4209ce9ccc64f1d1e6b33d74c7d099a0a","modified":1471099569000},{"_id":"source/_posts/windows-live-writer-syntax-highlighting-in-the-plug-in.md","hash":"dcb1f62afc6e1d43ac4e435beaefc2e4482fa8c8","modified":1471356589000},{"_id":"source/_posts/words-in-the-table-in-the-database-multi-line-merged-into-a-column.md","hash":"daf36ebf3a25fd495e60ff9487cdf3750d799d72","modified":1471358261000},{"_id":"source/_posts/yao-ming-a-rebounding-flat-poor-records-the-rockets-2-points-defeat-the-blazers.md","hash":"774d787b9e98876262729b4577de033f3858eff8","modified":1470977686000},{"_id":"source/_posts/yao-ming-is-still-the-rockets-core.md","hash":"9b8bbd6301bd76864f235acdf5f2db990effa9e7","modified":1471018212000},{"_id":"source/history/index.md","hash":"4b54fb05363366e91a7e85f7af430eb6bae5cc44","modified":1470924650000},{"_id":"themes/maupassant/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1470891025000},{"_id":"themes/maupassant/.git/config","hash":"037345b11c41abb3dbbbd6e0242ced24979a7097","modified":1470891025000},{"_id":"themes/maupassant/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1470891015000},{"_id":"themes/maupassant/.git/index","hash":"0561c13dc5be2c6cbf88819e4f27ace2887ad801","modified":1470891606000},{"_id":"themes/maupassant/.git/packed-refs","hash":"53e4275068b4dbaa003c4f6e8f4eeaa4ed2360d0","modified":1470891025000},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"5d3556a885e355a8c2da65ef3e7b3ee36a628bfa","modified":1470891025000},{"_id":"themes/maupassant/languages/en.yml","hash":"e13ab1a2d2f1edbe67b4c035fd4667cb6a31db8e","modified":1470891025000},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"58e1d04bcd1834fa9d2960e18e027abbbccbedc9","modified":1470891025000},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"b47906ec0abf867fb3e3360bc046b7afb68aee25","modified":1470891025000},{"_id":"themes/maupassant/languages/ko.yml","hash":"909a33e0befa6978e8e72157c6b415b48551ee31","modified":1470891025000},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"ebacfa5d0c14d603e0d505757adb24c0bbe5dd13","modified":1470891025000},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"56b65995c60e99dcebbf00168447fd225d28e5b2","modified":1470891025000},{"_id":"themes/maupassant/layout/archive.jade","hash":"0050c883b4f202add71c8664d65e6072179e7190","modified":1470891025000},{"_id":"themes/maupassant/layout/base-without-sidebar.jade","hash":"1ad721de96784bf4253316b796db6200148d4152","modified":1470891025000},{"_id":"themes/maupassant/layout/base.jade","hash":"852c610ac392ef2fa130dbe73bcf4f96f423c869","modified":1470891025000},{"_id":"themes/maupassant/layout/index.jade","hash":"7466ce52023ed8a413a6b4461354a9e20e62fc14","modified":1470891025000},{"_id":"themes/maupassant/layout/page.jade","hash":"8d70fd3b93f2c9087a9ea7ec538dcc1d413bea01","modified":1470891025000},{"_id":"themes/maupassant/layout/post.jade","hash":"076ae66a89fdf3df125062a166e31f0a126c21e9","modified":1470929710000},{"_id":"themes/maupassant/layout/single-column.jade","hash":"c35fff4d9b331a41af5bc10f4278ec3d9da503db","modified":1470891025000},{"_id":"themes/maupassant/layout/timeline.jade","hash":"f03d8df63a188543cfe4e85e76194abe081411a1","modified":1470891025000},{"_id":"source/_posts/media/1-1.gif","hash":"7835bf3712f09572844d7a0c5c4cd64d20f51c2f","modified":1471076753000},{"_id":"source/_posts/media/1.gif","hash":"7835bf3712f09572844d7a0c5c4cd64d20f51c2f","modified":1471076753000},{"_id":"source/_posts/media/2010-10-15_153653.png","hash":"82abfa28dd71f05144468bfd13dde0415629a4d3","modified":1471358201000},{"_id":"source/_posts/media/2010-12-29_160715.gif","hash":"1d907fbbf228d86df97ba0b85959329f32c53641","modified":1471356171000},{"_id":"source/_posts/media/2010-12-29_160911.gif","hash":"434fb9831d6a6009d2fd7671538d336fcdab4958","modified":1471356185000},{"_id":"source/_posts/media/2010-12-29_160950.gif","hash":"b5d52bc8bd6d52cdd2d129383fea902aeec6fc99","modified":1471356209000},{"_id":"source/_posts/media/2010-12-29_161937.gif","hash":"9d4380d46ece60363da5a3ed6bf555abc8c4decc","modified":1471355651000},{"_id":"source/_posts/media/2010-12-29_163007.gif","hash":"e2de5626f8832b1189b2be20abf173e682243da3","modified":1471355703000},{"_id":"source/_posts/media/2010-12-29_163242.gif","hash":"647ddc4766bc433da4185b43a796814aeafb40e4","modified":1471355729000},{"_id":"source/_posts/media/2010-12-29_161754.gif","hash":"b2b25eaff0093661a8493508fbf7e1f377bd9af2","modified":1471355622000},{"_id":"source/_posts/media/2010-12-29_163336.gif","hash":"b2b4feb3c1d642ce804fe275a577c1a949e4b0e6","modified":1471355743000},{"_id":"source/_posts/media/2010-12-29_163517.gif","hash":"15f3cc5a9ce762520dc70680638e871b164f4414","modified":1471355762000},{"_id":"source/_posts/media/2010-12-29_163619.gif","hash":"5f24c3402648c710c7c5c51529c437d577a14414","modified":1471355787000},{"_id":"source/_posts/media/2010-12-29_163655.gif","hash":"8c54393b5f04b7be8a6c72faaf73b83f7aa84bf2","modified":1471355810000},{"_id":"source/_posts/media/2010-12-29_163813.gif","hash":"c4a8b0c958a7f848eedfcb1ea71e9ef5761a8eef","modified":1471356032000},{"_id":"source/_posts/media/2010-12-29_163730.gif","hash":"ac238e791b1f745aebd91cc03bce86fb66cb72d9","modified":1471355830000},{"_id":"source/_posts/media/2010-12-29_165108.gif","hash":"ade49030bf50bd66a70cc823aef2641b8ec5819c","modified":1471355415000},{"_id":"source/_posts/media/2010-12-29_170842.gif","hash":"9d69186d0fa416c6a540ab8151dcf1363f2d2c81","modified":1471355114000},{"_id":"source/_posts/media/2010-12-29_173428.gif","hash":"214c8215fd6e5819d6de659461b4f41b9c3e1169","modified":1471354816000},{"_id":"source/_posts/media/2010-12-29_170928.gif","hash":"a4fb7f79594d65ff39209c946001abd1fe51b3b3","modified":1471355132000},{"_id":"source/_posts/media/2010-12-29_173503.gif","hash":"95d1ba0e2cbfa26508a614e0cd1750211e31efd9","modified":1471354844000},{"_id":"source/_posts/media/2010-12-29_181713.gif","hash":"0e3743c6f3ebadc929b25d3d8b1d110fc41e895d","modified":1471271114000},{"_id":"source/_posts/media/2010-12-29_181748.gif","hash":"f79af9ba6d167bb27037b74d40a2998aaf085c6b","modified":1471271145000},{"_id":"source/_posts/media/2010-12-29_181824-1.gif","hash":"45b049ca56b98f4c49e7594daff7430753aed80a","modified":1471271150000},{"_id":"source/_posts/media/2010-12-29_181824.gif","hash":"45b049ca56b98f4c49e7594daff7430753aed80a","modified":1471271150000},{"_id":"source/_posts/media/2010-12-29_182011.gif","hash":"8de5e3bd3882a33c9067ad4cff7f4c1d929e36e3","modified":1471271243000},{"_id":"source/_posts/media/2010-12-29_182116.gif","hash":"473ae66e97ee2eef585c40ef8f7d3fc007f3ad10","modified":1471271270000},{"_id":"source/_posts/media/2010-12-29_183654-1.gif","hash":"05cba8cd152f399da03cfcd19d9983e00b61e301","modified":1471270027000},{"_id":"source/_posts/media/2010-12-29_183611.gif","hash":"127c7abffc425f64066bd881be6dedb060c1b77c","modified":1471270008000},{"_id":"source/_posts/media/2010-12-29_183654.gif","hash":"05cba8cd152f399da03cfcd19d9983e00b61e301","modified":1471270027000},{"_id":"source/_posts/media/2010-12-30_100156.gif","hash":"ea214575b4e17d807f72fea9d69e9c882c8b0039","modified":1471269469000},{"_id":"source/_posts/media/2010-12-30_100312.gif","hash":"b561437f7c8678670fd0ad64300d0fecdcd59393","modified":1471269490000},{"_id":"source/_posts/media/2010-12-30_101747.gif","hash":"1ff09b9672845ed50bd1b3416b5428874373c9db","modified":1471268681000},{"_id":"source/_posts/media/2010-12-30_101836.gif","hash":"864e5894e25cc198fe62bb9bf57db43fca21f975","modified":1471268692000},{"_id":"source/_posts/media/2010-12-30_102641.gif","hash":"d210bee169b872faf791bc1c40f01fff3eb8ecf2","modified":1471268757000},{"_id":"source/_posts/media/2010-12-30_103754.gif","hash":"f4946a5aa7c2cebd18e33278d9bd23dd4248f5da","modified":1471268462000},{"_id":"source/_posts/media/2010-12-30_104014.gif","hash":"50b7f9a9471b0c73465beb0ed199bea440072757","modified":1471268494000},{"_id":"source/_posts/media/2010-12-30_104425.gif","hash":"395898da2c980da6ec1b87b21f1d5a09566b616e","modified":1471268178000},{"_id":"source/_posts/media/2010-12-30_104151.gif","hash":"32a14b6f643d634e1cda4afdb32d173644c196f0","modified":1471268522000},{"_id":"source/_posts/media/2010-12-30_104506.gif","hash":"c9dfc98f6421632e84cfcceafff34a23293d15e5","modified":1471268218000},{"_id":"source/_posts/media/2010-12-30_104541.gif","hash":"460fa78f55fdea830a35b6eda11473b97dffc439","modified":1471268241000},{"_id":"source/_posts/media/2010-12-30_105751.gif","hash":"c00e23c8457958e1c751086f952a99cc2298ccc5","modified":1471267823000},{"_id":"source/_posts/media/2010-12-30_105828.gif","hash":"c89be80958114dea149ce450a3c311bd31838b82","modified":1471267849000},{"_id":"source/_posts/media/2010-12-30_105935.gif","hash":"a1edb4de12e1365b21e034dc59c2db99d4b88112","modified":1471267867000},{"_id":"source/_posts/media/2010-12-30_110010.gif","hash":"785250f19a727f9c09a35666007cf83303a42a6e","modified":1471267884000},{"_id":"source/_posts/media/2010-12-30_110055.gif","hash":"1b97769da355c73e62c6f9c2623ff5592da37f6c","modified":1471267897000},{"_id":"source/_posts/media/2010-12-30_112106.gif","hash":"4a0965342561126722580185eccf2a7a099aedff","modified":1471161451000},{"_id":"source/_posts/media/2010-12-30_112140.gif","hash":"ca600efe399454ea6c3daad06865638b79ebf28e","modified":1471161457000},{"_id":"source/_posts/media/2010-12-30_112219.gif","hash":"3d333774e48acba07a298a0959774e6401e67175","modified":1471161480000},{"_id":"source/_posts/media/2010-12-30_115417.gif","hash":"5d26a4f9afb73621c4e65ecf8fd8e48544b97a05","modified":1471161012000},{"_id":"source/_posts/media/2010-12-30_115523.gif","hash":"c1b00351b2ad9a985498a7def42d37d3a59fffcb","modified":1471161045000},{"_id":"source/_posts/media/2010-12-30_115603.gif","hash":"1c8f6c9f1dd30393be648f1c534016db6a3de5f8","modified":1471161060000},{"_id":"source/_posts/media/2010-12-30_115714.gif","hash":"ed0f1facea38d7cfc2376b8e08a258af3c9a8eea","modified":1471161184000},{"_id":"source/_posts/media/2010-12-30_124238.gif","hash":"6e6eda9d2f7018206749f48316957bd90932ab02","modified":1471160600000},{"_id":"source/_posts/media/2010-12-30_124855.gif","hash":"e6e2719ec3685569deb9ec4903e2e00182fb37d8","modified":1471160034000},{"_id":"source/_posts/media/2010-12-30_150932.gif","hash":"ef0902210cb84fbd266cb74fad18e1657e6327e9","modified":1471099772000},{"_id":"source/_posts/media/2010-12-30_165947.gif","hash":"c912c514cf17afb7b3a74247cee93d448222d589","modified":1471094758000},{"_id":"source/_posts/media/2010-12-30_185000.gif","hash":"8dff9fe3c27f3c0eff0ff355da14e95622f6057d","modified":1471077158000},{"_id":"source/_posts/media/2010-12-30_191105-1.gif","hash":"ebaf52ce662999dbf6688060d46a322462910e53","modified":1471076129000},{"_id":"source/_posts/media/2010-12-30_191105.gif","hash":"ebaf52ce662999dbf6688060d46a322462910e53","modified":1471076129000},{"_id":"source/_posts/media/2010-12-30_191941.gif","hash":"1eea7c628949f4b723b57be88b574f747a17bc0c","modified":1471075679000},{"_id":"source/_posts/media/2010-12-30_192023.gif","hash":"a8468b4e9421968de6730f61d141a15c2f749bdb","modified":1471075690000},{"_id":"source/_posts/media/2010-12-30_192056.gif","hash":"b1dfe1525a1b40858497a831ab0169a2f002bd9c","modified":1471075697000},{"_id":"source/_posts/media/2010-12-30_192132.gif","hash":"0a630d6c62928109adda03ee286eb0d08e5d0186","modified":1471075703000},{"_id":"source/_posts/media/2010-12-30_192205.gif","hash":"ce67ea665f32e0822299dcdda1feb642555a65ad","modified":1471075710000},{"_id":"source/_posts/media/2010-12-30_192236.gif","hash":"f7011b7738ca8a40619b2f35b5e1fef3b179dfda","modified":1471075719000},{"_id":"source/_posts/media/2010-12-30_214625.gif","hash":"43a72242e559c9ea4ae4555b7ae1314187c551bf","modified":1471016461000},{"_id":"source/_posts/media/2010-12-30_214704.gif","hash":"48c64b8b5953d2c8dd0c7944f6782f31724c47cb","modified":1471016487000},{"_id":"source/_posts/media/2010-12-30_214748.gif","hash":"06c7ec5ae7e05d5b684a471bf2a28006f8db1dbb","modified":1471016499000},{"_id":"source/_posts/media/2010-12-30_214826.gif","hash":"afa3e3dfd34e397afd373625f949627bc4d0d4c9","modified":1471016506000},{"_id":"source/_posts/media/2010-12-30_214859.gif","hash":"8840351bd9ca9d6f811c7291ccc3888362b91fda","modified":1471016511000},{"_id":"source/_posts/media/2010-12-31_112146.gif","hash":"588117f5713ab0c1bc739da29676b949633d49a6","modified":1471356541000},{"_id":"source/_posts/media/2010-12-31_152927.gif","hash":"8e470a798c4be07b8f7461e7941e95acf50cb13d","modified":1471096284000},{"_id":"themes/maupassant/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1470891015000},{"_id":"themes/maupassant/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1470891015000},{"_id":"themes/maupassant/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1470891015000},{"_id":"themes/maupassant/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1470891015000},{"_id":"themes/maupassant/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1470891015000},{"_id":"themes/maupassant/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1470891015000},{"_id":"themes/maupassant/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1470891015000},{"_id":"themes/maupassant/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1470891015000},{"_id":"themes/maupassant/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1470891015000},{"_id":"themes/maupassant/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1470891015000},{"_id":"themes/maupassant/.git/logs/HEAD","hash":"342b0ca7f2271f2b6730d57929c882a1461450d7","modified":1470891025000},{"_id":"themes/maupassant/layout/_partial/after_footer.jade","hash":"3dbcc9a9f0d6e55da191d3393c18bbfcfe99fa69","modified":1470891025000},{"_id":"themes/maupassant/layout/_partial/comments.jade","hash":"6c7f63ba04a4d28323ba31e79a4927f3d3fcc56e","modified":1470891025000},{"_id":"themes/maupassant/layout/_partial/footer.jade","hash":"ca2710d0cf5a692f7187783620d834573e05e54c","modified":1470965941000},{"_id":"themes/maupassant/layout/_partial/helpers.jade","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1470891025000},{"_id":"themes/maupassant/layout/_partial/mathjax.jade","hash":"b54b56faff9e47ab3ca3cdd55056c73e60776f3c","modified":1470891025000},{"_id":"themes/maupassant/layout/_partial/mathjax2.jade","hash":"d6ac5dc4e9c7a1b866f1f92d88988cfb35aded4c","modified":1470891025000},{"_id":"themes/maupassant/layout/_partial/paginator.jade","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1470891025000},{"_id":"themes/maupassant/layout/_partial/post_nav.jade","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1470891025000},{"_id":"themes/maupassant/layout/_partial/tag.jade","hash":"0f0e6770e9d5dd8040e330d71bbbfadd2df36a28","modified":1470891025000},{"_id":"themes/maupassant/layout/_partial/totop.jade","hash":"8225bbc3cdb9648bc2e6872e5c616a9a1e4def4f","modified":1470891025000},{"_id":"themes/maupassant/layout/_widget/category.jade","hash":"7c6aed762934ca51aa2669b886254da24b77bc14","modified":1470891025000},{"_id":"themes/maupassant/layout/_widget/links.jade","hash":"f57a0c76d243882b2b77330132bdb43bc648948b","modified":1470891025000},{"_id":"themes/maupassant/layout/_widget/recent_comments.jade","hash":"e119c5afa85abc60d139e2da99b0bfcd7a6530f8","modified":1470891025000},{"_id":"themes/maupassant/layout/_widget/recent_posts.jade","hash":"19431336d724d2118e46da43683bce9063176541","modified":1470891025000},{"_id":"themes/maupassant/layout/_widget/search.jade","hash":"193546282908e499813534f86d27ef6e0a1357b3","modified":1470891025000},{"_id":"themes/maupassant/layout/_widget/tag.jade","hash":"132f049ce677d0e38f50073174c4ee4b825d4a06","modified":1470891025000},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1470891025000},{"_id":"themes/maupassant/source/css/style.scss","hash":"158f1ebecf7b994ffae5332a627465f6bf38113b","modified":1470891025000},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1470891025000},{"_id":"themes/maupassant/source/js/search.js","hash":"53db2eb255dd40a412ed62ea7332ca5a22f7816f","modified":1470891025000},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1470891025000},{"_id":"themes/maupassant/source/js/share.js","hash":"f49776e0baa2b913ddc7a20db24b3edd469c8343","modified":1470891025000},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1470891025000},{"_id":"themes/maupassant/source/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1470891025000},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1470891025000},{"_id":"themes/maupassant/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1470891025000},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1470891025000},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1470891025000},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1470891025000},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1470891025000},{"_id":"source/_posts/media/14712687428710.jpg","hash":"7888463b615ed5b5e4ccc6b3ab0652cdf5e214d6","modified":1471268742000},{"_id":"themes/maupassant/.git/objects/pack/pack-d45bd21b288905947b74de863c245e4c731c2480.idx","hash":"43e3fe3c85d8675e954dc727cabd103d4a18de9f","modified":1470891025000},{"_id":"themes/maupassant/.git/refs/heads/master","hash":"9138f76c9461186fe7e14add27270f388fdabe2f","modified":1470891025000},{"_id":"themes/maupassant/.git/logs/refs/heads/master","hash":"342b0ca7f2271f2b6730d57929c882a1461450d7","modified":1470891025000},{"_id":"themes/maupassant/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1470891025000},{"_id":"themes/maupassant/.git/logs/refs/remotes/origin/HEAD","hash":"342b0ca7f2271f2b6730d57929c882a1461450d7","modified":1470891025000},{"_id":"themes/maupassant/.git/objects/pack/pack-d45bd21b288905947b74de863c245e4c731c2480.pack","hash":"918a384c159bb64729b866b8373769d865cb8041","modified":1470891025000},{"_id":"public/about/index.html","hash":"349af61a43640533baf1d651bf32063cfab7979a","modified":1471358878069},{"_id":"public/history/index.html","hash":"a0d8f9dd05cda83f03e1bd74d368ceb05d4e8d41","modified":1471358878070},{"_id":"public/2013/07/adjust-disk-c-capacity-in-windows7/index.html","hash":"fe2d5c419084660b90c146ef46f1f116279af860","modified":1471358878071},{"_id":"public/2011/05/additional-database-failure-5120-error/index.html","hash":"d62f85f6c82438ac09abe533d963365b70347900","modified":1471358878071},{"_id":"public/2009/05/recommend-a-small-screenshots-tools/index.html","hash":"5fd1d51a95220d13f0842e537b52391198ea0578","modified":1471358878071},{"_id":"public/2008/02/using-iedevtoolbar/index.html","hash":"9cf562e451dad0ae5a78ce9965797144bb077b12","modified":1471358878071},{"_id":"public/2007/12/delete-recently-opened-in-visual-studio-project-and-file-records/index.html","hash":"364f5e0f909ba4b4f9ae9d23a35158aa2f50dbdc","modified":1471358878071},{"_id":"public/2007/11/unable-to-start-debugging-on-the-web-server-do-not-have-permission-to-debug-the-program-problem-solving/index.html","hash":"f29d7b36ca2f42478bd39ce07eb5aff938633e89","modified":1471358878071},{"_id":"public/2007/10/the-first-job-thoughts/index.html","hash":"735f9b506ea74f011ff8d1c1145a9380d862304e","modified":1471358878071},{"_id":"public/2007/09/soon-to-be-a-programmer/index.html","hash":"20129f0591e0548d2c7a2ec6ed3c71350c11e020","modified":1471358878071},{"_id":"public/2007/06/to-graduate/index.html","hash":"5dee6709cc335b415f683d58abbd69a93f9aab3c","modified":1471358878071},{"_id":"public/2007/06/graduation-reply/index.html","hash":"c15c1b8607aeb686791b64fd1724de6a0c1e67fb","modified":1471358878072},{"_id":"public/2007/04/07-guangdong-job-experience-1/index.html","hash":"db282614f4204ad47cfcdd175ced6ed69bf39b5b","modified":1471358878072},{"_id":"public/2006/11/prison-break/index.html","hash":"06d233831d446abf193945c4370a5232ee6ab51d","modified":1471358878072},{"_id":"public/archives/2006/index.html","hash":"b8f98fbfd329e784e2263f0a225a623d0751a621","modified":1471358878078},{"_id":"public/archives/2006/11/index.html","hash":"438f165b3698207a2ef1c17491f9b205b6d7fc5a","modified":1471358878078},{"_id":"public/archives/2006/12/index.html","hash":"0374e4a4f6070ed0513a0a01f1e2e8d78f849422","modified":1471358878078},{"_id":"public/archives/2007/01/index.html","hash":"7d41f1c3ee47e5f1af4d8d980e2115c59fabac25","modified":1471358878078},{"_id":"public/archives/2007/03/index.html","hash":"f4d13aaa9abaee293e658dd264fe9fe4180567a1","modified":1471358878078},{"_id":"public/archives/2007/04/index.html","hash":"fdc4eb7e57d210e95a1c7f10a0d31969189378e6","modified":1471358878078},{"_id":"public/archives/2007/05/index.html","hash":"51f738d362e87cb161d945faadfad2a24fdcf882","modified":1471358878078},{"_id":"public/archives/2007/06/index.html","hash":"c1267d1ebae59e4550503dafa42aef305c148ef1","modified":1471358878078},{"_id":"public/archives/2007/07/index.html","hash":"fb192049f9d8424d1b7844eb046895ad2a17cc69","modified":1471358878078},{"_id":"public/archives/2007/08/index.html","hash":"3a54f32b612136e8be9f748ee74e8878b3975007","modified":1471358878078},{"_id":"public/archives/2007/09/index.html","hash":"7358ab618067b092b62f3d1b33a1b8731ac2935a","modified":1471358878078},{"_id":"public/archives/2007/10/index.html","hash":"dffc304db3f1bb84942e20eb8139f5feab701db7","modified":1471358878078},{"_id":"public/archives/2007/11/index.html","hash":"850e5d2021c9bc157752d2cc5dabe233e0b127bf","modified":1471358878078},{"_id":"public/archives/2007/12/index.html","hash":"98b0e3448b5acdb1b1377577582d0e1195b7088b","modified":1471358878079},{"_id":"public/archives/2008/01/index.html","hash":"52fec206434b279c4773e835fb6fdf2919dcf76f","modified":1471358878080},{"_id":"public/archives/2008/02/index.html","hash":"e407f4b26bf8aa3f11ffb288d0c4f4dd6657b244","modified":1471358878080},{"_id":"public/archives/2008/03/index.html","hash":"d2edca020303cfcdfae534fd15be6ddb5d22df09","modified":1471358878081},{"_id":"public/archives/2008/05/index.html","hash":"8478e0e23b877cf002c948c9a89d7408aa80b982","modified":1471358878081},{"_id":"public/archives/2008/07/index.html","hash":"42b978ae0daa27d346c13165677d7e72dd5de3bd","modified":1471358878081},{"_id":"public/archives/2008/08/index.html","hash":"7b897bfbf16e6146770047696431ffd41f0e3743","modified":1471358878081},{"_id":"public/archives/2008/10/index.html","hash":"bf915afa8273d623d742b27366a0bb50e1de7790","modified":1471358878081},{"_id":"public/archives/2008/12/index.html","hash":"afd97aeb8c4530d189966162410868e950ac5ea2","modified":1471358878081},{"_id":"public/archives/2008/11/index.html","hash":"05e26185cf929c67a797be537d31f0a80ea85a30","modified":1471358878081},{"_id":"public/archives/2009/01/index.html","hash":"2febbdbcea7a33220220a2598d9003e01a0412d1","modified":1471358878081},{"_id":"public/archives/2009/04/index.html","hash":"99fa03e85e503bbc08e84368b707f309fec12f1f","modified":1471358878081},{"_id":"public/archives/2009/05/index.html","hash":"4e5237742e26f1fab1d6ffa50b00c7b73fff5466","modified":1471358878081},{"_id":"public/archives/2009/06/index.html","hash":"9e99c5e578898ed8cd588825537a4d62f2bfb014","modified":1471358878081},{"_id":"public/archives/2010/index.html","hash":"64b3c82987bc91c1b3881d9b43ab5d195fd28683","modified":1471358878082},{"_id":"public/archives/2010/01/index.html","hash":"506409919cea02818f08b2110569ac02faff9974","modified":1471358878082},{"_id":"public/archives/2010/05/index.html","hash":"f7e31bb7814b1d047add5abe693d5eaf4f97be29","modified":1471358878082},{"_id":"public/archives/2010/06/index.html","hash":"917adef76ac467e106d5cafca944fc269b0a2251","modified":1471358878084},{"_id":"public/archives/2010/07/index.html","hash":"1814fd5b7dda0cfb17972d859b2d5dae820c9794","modified":1471358878082},{"_id":"public/archives/2010/08/index.html","hash":"a2998fc3dacff0715eefb07e513aceb871aeb628","modified":1471358878084},{"_id":"public/archives/2010/10/index.html","hash":"085cd571fbe378ca40ea622c7bf8cff16839c395","modified":1471358878084},{"_id":"public/archives/2010/09/index.html","hash":"670e3249ba57d64377c01fc50bc7e29a46c3d787","modified":1471358878084},{"_id":"public/archives/2010/11/index.html","hash":"6da809a01906dff847d94d01027be66eacbce615","modified":1471358878084},{"_id":"public/archives/2011/index.html","hash":"b468886360c73587c5e1357c8c53c720e30b8013","modified":1471358878084},{"_id":"public/archives/2011/05/index.html","hash":"b468886360c73587c5e1357c8c53c720e30b8013","modified":1471358878084},{"_id":"public/archives/2013/index.html","hash":"dd8f89f23f4c25da90f6e8923c38eecc1b5d3d31","modified":1471358878084},{"_id":"public/archives/2013/01/index.html","hash":"b74f92b2807c46e19d428ed3ffe8300424a550fc","modified":1471358878084},{"_id":"public/archives/2013/07/index.html","hash":"fba6946c1b6b1bbd4adbd2876bf1891195a27469","modified":1471358878084},{"_id":"public/archives/2016/index.html","hash":"9461789d81651961d0bd6328a17c3ef231b618b4","modified":1471358713626},{"_id":"public/archives/2016/08/index.html","hash":"9461789d81651961d0bd6328a17c3ef231b618b4","modified":1471358713626},{"_id":"public/categories/软件测试/index.html","hash":"b7e24f1b4999920a66193f050c2f255307ec624a","modified":1471358878072},{"_id":"public/categories/设计模式/index.html","hash":"78e85e75a893f1d97cc5217ed69102b0d6cfb272","modified":1471358878072},{"_id":"public/categories/WCF/index.html","hash":"cdd728acde67cd84bd1c2ab677ad889e5135a584","modified":1471358878072},{"_id":"public/categories/软件使用/index.html","hash":"3fe61bdceafdf74615025cc8bc939dacfd2d1e90","modified":1471358878072},{"_id":"public/categories/WMS/index.html","hash":"bcb43e22be616bc5c609404a15cdb00b7abfdc34","modified":1471358878072},{"_id":"public/categories/NHibernate/index.html","hash":"1c264cbb0ec74ae9e91f22f9476fbcd3def9ebce","modified":1471358878072},{"_id":"public/categories/CLR-Via-C/index.html","hash":"cf514439d30756ce7c48bf6eeb3b2fc901ba8169","modified":1471358878072},{"_id":"public/categories/Javascript/index.html","hash":"9aba14c7a8e7a04810398d18f8f0a5ea82923312","modified":1471358878072},{"_id":"public/categories/C/index.html","hash":"611fc25907e6a42982d40b66f506c39ed8b2f3f0","modified":1471358878072},{"_id":"public/categories/DotNet/index.html","hash":"c8932dbeaf60489765ab991b8c4a80530652c97b","modified":1471358878072},{"_id":"public/categories/DotNet/JQuery/index.html","hash":"10f5037b425313e52048b80f80c9b431464d2452","modified":1471358878072},{"_id":"public/categories/C/Javascript/index.html","hash":"06e0b2ec3d2bf4b30dc9e839f4aaf68a29bf365b","modified":1471358878072},{"_id":"public/categories/C/DotNet/index.html","hash":"e277719849bd4bce1df642656592adc0955e5062","modified":1471358878072},{"_id":"public/categories/软件推荐/index.html","hash":"6867541d1824e6ecadf2a0fd4cfbd7d779579f81","modified":1471358878072},{"_id":"public/categories/随笔杂谈/index.html","hash":"33eb2cdb43bae0a4239aec3641c41cdd6163d5b7","modified":1471358878072},{"_id":"public/categories/篮球/index.html","hash":"57d6dd5f74275665b963d1c7c7674a342205787a","modified":1471358878073},{"_id":"public/categories/HTML/index.html","hash":"6f8913a1b14abe0138b8adc48cdd9d68196f8d35","modified":1471358878073},{"_id":"public/categories/Asp-Net/Javascript/index.html","hash":"c87654d76721fabe0fa1b37ae682f13df75ba066","modified":1471358878073},{"_id":"public/tags/找工作/index.html","hash":"1bad8ea397f93330241b6039fd92c7be72d46f95","modified":1471358878073},{"_id":"public/tags/总结/index.html","hash":"7ac885a2ae711b0c332cad999dd0348fbcc66701","modified":1471358878073},{"_id":"public/tags/日记/index.html","hash":"30ded9612a784ab32d03a0908e0dc430a4f8f0d0","modified":1471358878073},{"_id":"public/tags/记账本/index.html","hash":"f78a1e28ec1d9201cbcb52fe92b99054eb7570a9","modified":1471358878073},{"_id":"public/tags/LoadRunner/index.html","hash":"5798ed341c2a64db177274031c0e7d2fa330a323","modified":1471358878073},{"_id":"public/tags/WMS/index.html","hash":"fd72763474fc5b413f782f75aded528ae6459952","modified":1471358878074},{"_id":"public/tags/压力测试/index.html","hash":"69f24d62aad1b1e65eec8e8437b474816558ebed","modified":1471358878074},{"_id":"public/tags/设计模式/index.html","hash":"78e85e75a893f1d97cc5217ed69102b0d6cfb272","modified":1471358878074},{"_id":"public/tags/xl/index.html","hash":"1c38eee1cf069154af0f1fbb67f8fbb733bf97b4","modified":1471358878074},{"_id":"public/tags/旅游/index.html","hash":"656bcaddc29c85bfbe136b99939a2cbf6516dbb4","modified":1471358878074},{"_id":"public/tags/WCF/index.html","hash":"cdd728acde67cd84bd1c2ab677ad889e5135a584","modified":1471358878075},{"_id":"public/tags/PDF/index.html","hash":"585e81d1dfe07d3fb555e458f2d4b1ffe5595c08","modified":1471358878075},{"_id":"public/tags/书签/index.html","hash":"83bd64c5061ec81c4791e1fa3ae6572434f7d56b","modified":1471358878075},{"_id":"public/tags/发布点/index.html","hash":"ac1647b1879f2fac8e1e112654a50d2fb1b321eb","modified":1471358878075},{"_id":"public/tags/SqlServer/index.html","hash":"ea03f1cdb10213ace6525317f6d66fa8d4e45e3d","modified":1471358878075},{"_id":"public/tags/sqlserver2008/index.html","hash":"6345d7823987e001ab37db095152854310620125","modified":1471358878075},{"_id":"public/tags/虚拟机/index.html","hash":"baa35f217c801bdc2614bf7e47cdc52d2abb8a24","modified":1471358878075},{"_id":"public/tags/小技巧/index.html","hash":"f273e3343d68aac0dbec28565f9697800590c957","modified":1471358878075},{"_id":"public/tags/Autocomplete/index.html","hash":"d9866f0ef5d03ec61546f173718ac832b6d15b1a","modified":1471358878075},{"_id":"public/tags/NHibernate/index.html","hash":"1c264cbb0ec74ae9e91f22f9476fbcd3def9ebce","modified":1471358878075},{"_id":"public/tags/纪念日/index.html","hash":"0c43beefc8771a1ffc66512a95edc03fb98a1ad3","modified":1471358878075},{"_id":"public/tags/spNet/index.html","hash":"907b60d6319cf0cab051047cdf4b87b46a69f35a","modified":1471358878075},{"_id":"public/tags/Eval/index.html","hash":"11a0fb57d6590a3dde589610294cf5176a77ad5b","modified":1471358878075},{"_id":"public/tags/CLR-via-C/index.html","hash":"d198c429191b68c4ac8920bfcf327e6bb74558fa","modified":1471358878076},{"_id":"public/tags/DotNet/index.html","hash":"957e88e9048535914c69c11a7f70e5bb3da4ac78","modified":1471358878076},{"_id":"public/tags/javascript/index.html","hash":"3348e4441c08d7d5b4a6290c105782b290a10818","modified":1471358878076},{"_id":"public/tags/正则/index.html","hash":"6c8b7aeb996902c57d0ae8c6a41d23b1b27ac229","modified":1471358878076},{"_id":"public/tags/visual-studio/index.html","hash":"ae1f5bda454a27e18bb5de78c23ee1d105f238da","modified":1471358878076},{"_id":"public/tags/C/index.html","hash":"17759a238f875ac9dba581d99b797fe2d956ca0a","modified":1471358878076},{"_id":"public/tags/DotNet3-0/index.html","hash":"4383b24081ee606a03d6a39eaf5c64613c452b73","modified":1471358878076},{"_id":"public/tags/GrdiView/index.html","hash":"6a3174350487f158bf411c532c45c5f4fe1f827a","modified":1471358878076},{"_id":"public/tags/英语/index.html","hash":"8ab76f52019b6d3de399605d67ce9358237f24ba","modified":1471358878076},{"_id":"public/tags/JQuery/index.html","hash":"10f5037b425313e52048b80f80c9b431464d2452","modified":1471358878076},{"_id":"public/tags/MasterPage/index.html","hash":"89213f287a785a796b18fe23bad0ae4741dd6516","modified":1471358878076},{"_id":"public/tags/泛型/index.html","hash":"e310258a8e862d768cd24c8374b798fd282be75b","modified":1471358878076},{"_id":"public/tags/FastStone/index.html","hash":"69e938e8cbc4133b133c2511271e6593b2501f65","modified":1471358878076},{"_id":"public/tags/软件推荐/index.html","hash":"8a044a9a4f95d913bd945d0a6d4474014de37224","modified":1471358878076},{"_id":"public/tags/NBA/index.html","hash":"9e3091ba63f7f0d3d56ada464b53d1f38459346a","modified":1471358878076},{"_id":"public/tags/lq/index.html","hash":"57d6dd5f74275665b963d1c7c7674a342205787a","modified":1471358878076},{"_id":"public/tags/Sql/index.html","hash":"40f0af30b9599f0a690c1f4da5a74e56ba6e088a","modified":1471358878076},{"_id":"public/tags/无刷新联动/index.html","hash":"9fa48d4c26adb0e3883df2861b5d2c33a0b48730","modified":1471358878076},{"_id":"public/tags/水晶报表/index.html","hash":"656ea7fe38fb4449223011963611965777da5251","modified":1471358878076},{"_id":"public/tags/My97/index.html","hash":"72e28a23d30a48b531752a335015635cc34ce08a","modified":1471358878076},{"_id":"public/tags/存储过程/index.html","hash":"506ac7f0b216857c6162e81234b483542c5135d6","modified":1471358878076},{"_id":"public/tags/PowerDesiner/index.html","hash":"c6c3fcc2d1899320f093ccd59067ce9a1dabc64c","modified":1471358878076},{"_id":"public/tags/HTML/index.html","hash":"6f8913a1b14abe0138b8adc48cdd9d68196f8d35","modified":1471358878077},{"_id":"public/tags/CheckBox/index.html","hash":"63839f946390c3fbc0291da723bf5da926cc696b","modified":1471358878077},{"_id":"public/tags/全选/index.html","hash":"3c4fd45a5174d6689cfda7a163154bfc88744e33","modified":1471358878077},{"_id":"public/tags/gridview/index.html","hash":"debd2e6d9cdc8e4c528d25b9b28e8e5e7fe44fe9","modified":1471358878077},{"_id":"public/tags/ZedGraph/index.html","hash":"f924c3104585f931964abdc65dfd252612233d7f","modified":1471358878077},{"_id":"public/tags/报表统计/index.html","hash":"a1e1e916d249650e56bd1822508a25176dc53439","modified":1471358878077},{"_id":"public/tags/HttpModule/index.html","hash":"1a4b3a69fef5c3bc6827752d3b2e0b64b08b3c2b","modified":1471358878077},{"_id":"public/tags/Sql注入/index.html","hash":"f38bbd788f5c1d81d9dd1af9dfeac329d7a6bc3b","modified":1471358878077},{"_id":"public/tags/print/index.html","hash":"45f7a108c488420d8e45d152f3f936b9bb077623","modified":1471358878077},{"_id":"public/2016/08/the-difference-between-the-and-aspnet/index.html","hash":"585b03f0ecc0602d8899ec7d4f00b2d2af3875a7","modified":1471358713629},{"_id":"public/2016/08/separate-strings-in-sql/index.html","hash":"109aaa4e7d4781e8179afd7164cc51b093724363","modified":1471358713629},{"_id":"public/2013/01/2012-year-summary/index.html","hash":"699af0c4ca69e4c7d8e5178854009e8c4ab0d75c","modified":1471358878084},{"_id":"public/2011/05/anniversary/index.html","hash":"4a80b42531a75d2397b4e0850a1f79bfe3852f12","modified":1471358878084},{"_id":"public/2010/11/add-a-bookmark-to-a-pdf-document/index.html","hash":"b20594f9985762e791652e19dc8bbe7c433846a0","modified":1471358878084},{"_id":"public/2010/10/2010-national-day-reporter/index.html","hash":"55919138d4b5bb1a4e0c64923f5bbbc2f3db914a","modified":1471358878084},{"_id":"public/2010/09/additional-program-installed-virtual-pc/index.html","hash":"fd0f8231c54d419d26a6999357773b733c93b352","modified":1471358878084},{"_id":"public/2010/08/a-little-information-about-loadrunner/index.html","hash":"4fdb607885dcddb3587a2de348fe482aa37db2be","modified":1471358878084},{"_id":"public/2010/07/a-trip-to-beidaihe-2010-07-24/index.html","hash":"9c913b847728c8fef067a654d315fe69f5a06cd8","modified":1471358878084},{"_id":"public/2010/07/a-simple-wcf-example/index.html","hash":"b7f7d79d4a3e883c87df86ed1ae2a7be5bcbe472","modified":1471358878085},{"_id":"public/2010/06/a-billing-software-to-my-wife/index.html","hash":"ed30fb08f4e9b0e6a9ea4cc319f383c9aa115503","modified":1471358878085},{"_id":"public/2010/05/add-the-default-distribution-point-wms/index.html","hash":"fb943019d0950c1b6f2789746c4cf6df408f7f2c","modified":1471358878085},{"_id":"public/2010/01/design-patterns-notes-18-iterator-pattern/index.html","hash":"5fbd86f6e3ad7d4ae583f8fa77ded2826df870e0","modified":1471358878085},{"_id":"public/2009/06/aspnet-instead-of-eval-in-two-ways/index.html","hash":"3091f7fff3294a8a3c9edf9a275f619b77e69c27","modified":1471358878085},{"_id":"public/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/index.html","hash":"310343adba355728c6259beef5e66678fd966374","modified":1471358878085},{"_id":"public/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/index.html","hash":"df4d860d666f69f66df6c5db7a966a8841a8f8da","modified":1471358878085},{"_id":"public/2009/06/clr-via-csharp-learning-notes-1-primitive-types/index.html","hash":"67f2d521b2000fb11c9e00ea1a067b8b35255cc3","modified":1471358878085},{"_id":"public/2009/06/use-zedgraph-in-the-web/index.html","hash":"b0e6441bd1021118ad04b2012289bf7d81c3cbe0","modified":1471358878086},{"_id":"public/2009/06/sql-implementation-group-statistical-query/index.html","hash":"eeeb6e76dc0c957ba9e3f12bb52750ba85c9ca14","modified":1471358878086},{"_id":"public/2009/05/in-setting-the-jquery-vs2008-intellisense/index.html","hash":"3bac9312fad9da2598aa3b5470784e6e97793e26","modified":1471358878086},{"_id":"public/2009/05/sqlserver2005-additional-database-for-read-only-solutions/index.html","hash":"117f7b2749b3eea8e8d8c1c408ad1a49a7d51357","modified":1471358878086},{"_id":"public/2009/04/aspnet-recursive-implementation-of-css-menu/index.html","hash":"5cd08541d0ca19371a0dbd22ef2bc7011fa9d22e","modified":1471358878086},{"_id":"public/2009/01/an-introduction-to-the-sample-to-nhibernate/index.html","hash":"e622b7b0d82c1cc9af8daa4fb5fc453258d74d26","modified":1471358878086},{"_id":"public/2009/01/aspnet-2-0-the-eval-method-of-explanation/index.html","hash":"72613a73aeaacda66e78bb219a757170602d5f22","modified":1471358878086},{"_id":"public/2009/01/aspnet-access-database-connection/index.html","hash":"6a0b11e0f3ff7521f62a85b280f4a40da716d36e","modified":1471358878086},{"_id":"public/2009/01/eliminate-the-prompt-window/index.html","hash":"d72421ce2c6caf1703204dc04cc33794de614cc1","modified":1471358878086},{"_id":"public/2009/01/response-redirect-in-a-new-window-open-3-0-extension-methods/index.html","hash":"5a67aed21b8543cd43e06e7a220286ff5af2a29d","modified":1471358878086},{"_id":"public/2008/12/masterpage-introduction/index.html","hash":"c08ecc8dc13cca90281c755177756cb7f46b7f50","modified":1471358878086},{"_id":"public/2008/11/using-httpmodule-prevent-sql-injection/index.html","hash":"6bb6e8bf78cb854bfa2452824c3bdcde3d99dfae","modified":1471358878086},{"_id":"public/2008/10/the-ultimate-solution-checkbox-selection/index.html","hash":"101fceb1447fd8d510249b35d9d805e0eff3db75","modified":1471358878086},{"_id":"public/2008/08/sql-to-calculate-a-string-in-the-number-of-occurrences-of-another-string/index.html","hash":"1fc158a4bf434a72b431518fd9fd76f1a3fcffb1","modified":1471358878086},{"_id":"public/2008/10/some-tips-of-my97/index.html","hash":"38d493ac088204864432800791a7373d8780ac64","modified":1471358878086},{"_id":"public/2008/08/summary-the-database-development/index.html","hash":"b416df885f78c30e0eac5e1136562b867f33e7a9","modified":1471358878086},{"_id":"public/2008/07/remove-the-file-upload-control-values/index.html","hash":"fa4db8597da465be2e822e47c46c7056303bea94","modified":1471358878086},{"_id":"public/2008/07/to-solve-the-unable-to-solve-the-equal-to-operation-collation-conflict-problem/index.html","hash":"33a04bc3351594cec721236b8b5226ea429db9b8","modified":1471358878086},{"_id":"public/2008/05/generate-html-server-controls-in-the-background/index.html","hash":"64618d0a532cbc32d2f8802a45382c58468a6524","modified":1471358878086},{"_id":"public/2008/05/development-summary-javascript/index.html","hash":"af2406f22f4588b1a392397b749a8de09355602a","modified":1471358878087},{"_id":"public/2008/05/sybase-powerdesiner12-0-download/index.html","hash":"dbcb7952ff83d5cf623ba0ab7ff5719f18c45bfb","modified":1471358878087},{"_id":"public/2008/03/learning-csharp-3-0-3-anonymous-types/index.html","hash":"cabf04d39563093ead69dc423e900323cd2ef269","modified":1471358878087},{"_id":"public/2008/03/the-rockets-18-in-a-row/index.html","hash":"d4246ec4d0a440137a73d9e012ffeffbd6c29779","modified":1471358878071},{"_id":"public/2008/03/window-print-implementation-local-print/index.html","hash":"e5ccd219a78cd6bd8e1c2c6ed5151e1b442c6c8d","modified":1471358878087},{"_id":"public/2008/03/after-watching-goodbye-gangster-feeling/index.html","hash":"a3e67412423c6ca90872b955c197e577dfa53968","modified":1471358878087},{"_id":"public/2008/02/learning-c-3-0-2-object-collection-initializer/index.html","hash":"c48322cd2323512925506aff84e427178c976792","modified":1471358878087},{"_id":"public/2008/02/learning-csharp-3-0-1-implied-type-of-local-variables-and-extension-methods/index.html","hash":"1f6abe2ad6e8f416ea707215076f6cd9b267ad94","modified":1471358878087},{"_id":"public/2008/02/dynamically-add-tow-to-gridview/index.html","hash":"3872c990393102bfe6877da47a92c8f91c104b97","modified":1471358878087},{"_id":"public/2008/01/updatepanel-issues/index.html","hash":"feac205faf688d4b076ba03a4ab38c434c983793","modified":1471358878087},{"_id":"public/2008/01/the-realization-of-the-html-form-thin-lines/index.html","hash":"329ebe8ca6a0dcb1c19b467894eb4ba9ca2a58c8","modified":1471358878087},{"_id":"public/2007/12/type-of-the-gridview-controls-within-the-form-tag-must-be-placed-with-runat-equal-server-error-solution/index.html","hash":"2babbda21b5b94b730d25ecd54d378b5edeecf70","modified":1471358878087},{"_id":"public/2007/12/solve-the-problem-of-sqlserver2005-database-sa-login/index.html","hash":"36ecbf359c32f1802fbb7b70ec96adffff25a5d7","modified":1471358878087},{"_id":"public/2007/11/several-different-types-without-refresh-linkage-example/index.html","hash":"ff9e47a99adffe94351fcf678d6df35ce172b29d","modified":1471358878087},{"_id":"public/2007/11/csharp-and-javascript-interaction/index.html","hash":"fce5fe68ebc6bf10a7fd758c60905d18c5ea81a6","modified":1471358878087},{"_id":"public/2007/11/to-realize-the-checkbox-selection-in-the-gridview/index.html","hash":"af21ec66346b2d33cdd4bbcae5a0dc51050238e8","modified":1471358878087},{"_id":"public/2007/11/aspnet-ajax-calendar-control/index.html","hash":"371c26bbc59e6b3b0af8232b370d351925dd1b6c","modified":1471358878087},{"_id":"public/2007/10/stored-procedure-to-generate-a-serial-number/index.html","hash":"ccaec92052d335a473fc561a49003c94226fe8ea","modified":1471358878087},{"_id":"public/2007/09/asp-net-ajax-popupcontrol/index.html","hash":"a1e27129b74ed7c1cf9bddbc9834da3fbbc454b4","modified":1471358878087},{"_id":"public/2007/09/a-little-understanding-of-design-patterns/index.html","hash":"60087d52baa5849b9e6a3f42a6aa3113bf4f322e","modified":1471358878088},{"_id":"public/2007/09/asp-net-ajax-validatorcallout/index.html","hash":"456386ca82849acff51ac8e595d242a941fc518d","modified":1471358878088},{"_id":"public/2007/09/asp-net-ajax-hovermenu/index.html","hash":"0dcebb750b722f2388ba7fc7cc1c20fb211e6b49","modified":1471358878088},{"_id":"public/2007/08/asp-net-ajax-passwordstrength/index.html","hash":"4e2752b9fabc913cca46d74f9142e7f295dc6105","modified":1471358878088},{"_id":"public/2007/08/asp-net-ajax-textboxwateramrk/index.html","hash":"23f97c478e96d8dfbb845e2228e4303bf2795ad2","modified":1471358878088},{"_id":"public/2007/08/asp-net-ajax-filteredtextbox/index.html","hash":"b85d2a5aab18d6e1cacc7bac4dfad9d21f652343","modified":1471358878088},{"_id":"public/2007/08/asp-net-ajax-autocomplete/index.html","hash":"f5508610206cec4260c2cd0c070a1792fc40ffba","modified":1471358878088},{"_id":"public/2007/08/dotnet-3-0-framework-introduce/index.html","hash":"4cdecbf4a10ee8648ecb0b52499c10c30966446d","modified":1471358878088},{"_id":"public/2007/08/ajaxcontroltoolkit-installing/index.html","hash":"ec7afdfefaa73812facf2260b80cc0bf91f81ed8","modified":1471358878088},{"_id":"public/2007/07/solve-the-problem-of-the-aspnet-ajax-updatepanel-garbled/index.html","hash":"15691c599d57fde9ea381ed40f5e82076a532a24","modified":1471358878088},{"_id":"public/2007/07/ajax-actually-not-difficult/index.html","hash":"bd7e029692cbd563d17bf0139225a92c227f0a2b","modified":1471358878088},{"_id":"public/2007/06/almost-to-be-deceived/index.html","hash":"9160930eccb15468bb28ea3f6d90ab7d60bb7674","modified":1471358878088},{"_id":"public/2007/05/net-generic-programming/index.html","hash":"d7e7e64b05ad6e9ed54619a15d3b2cd1e9bcc16f","modified":1471358878088},{"_id":"public/2007/05/commonly-used-some-regular-expressions/index.html","hash":"193f506f73c6fffe2eb914ff9590b855c3505227","modified":1471358878088},{"_id":"public/2007/05/implement-mouseover-highlight-respectively-in-the-gridview-and-the-datagrid/index.html","hash":"4dec26cc6882689bc905541e67e6c9f5d5e148ef","modified":1471358878089},{"_id":"public/2007/05/07-guangdong-job-experience-2/index.html","hash":"05c521a2f579dd7ab573575fa31ba756e84ce8f0","modified":1471358878089},{"_id":"public/2007/03/yao-ming-is-still-the-rockets-core/index.html","hash":"c9cfa7e1c5216b989d02572f35e4f9996eeb98cc","modified":1471358878089},{"_id":"public/2007/03/the-first-interview/index.html","hash":"9e77ac57e0af674e9d37db10e6d0451bd7a3fad6","modified":1471358878089},{"_id":"public/2007/01/simple-to-use-aspnet-in-crystal-reports/index.html","hash":"db5556b101957ae38ec4340e89855c36a7a6e3a1","modified":1471358878089},{"_id":"public/2007/01/see-yaos-injury-after-the-rockets/index.html","hash":"983d7f9b1ee06daf5d4db51edf21f5e3acd1796b","modified":1471358878089},{"_id":"public/2007/01/2006-2007/index.html","hash":"c5a0a5ca7d6faf5a03c6688745611fff157359c2","modified":1471358878089},{"_id":"public/2007/01/asp-net-lists-data-bound-controls/index.html","hash":"aa9f0e566315faa2a7cb987203a859c9ac84bee1","modified":1471358878089},{"_id":"public/2007/01/a-small-performance-test-of-asp-net/index.html","hash":"b3954b7f5c79d23ac3d12922febf30193a188e38","modified":1471358878089},{"_id":"public/2006/12/asp-net-performance-issues/index.html","hash":"2e1fa3e3a76b6b73ffbe03f5bd1a2bfb212864d3","modified":1471358878089},{"_id":"public/2006/12/yao-ming-a-rebounding-flat-poor-records-the-rockets-2-points-defeat-the-blazers/index.html","hash":"61de3e757e4e7eb542a7fc34d55ff1a06d4434b3","modified":1471358878089},{"_id":"public/2006/12/to-promote-the-blog-four-tips/index.html","hash":"5feef8305a8e9eea56aa065673a229326b683419","modified":1471358878089},{"_id":"public/2006/12/english-cet-4/index.html","hash":"2b8cb507ad296c7ca9e3dc2ea9a372c386793d23","modified":1471358878089},{"_id":"public/2006/12/programmers-not-really-35/index.html","hash":"947e419e74d201e93be82e01c4e3ecdca7b7f9ab","modified":1471358878089},{"_id":"public/archives/index.html","hash":"b8725c1c33851d3c92e93c52db1356db93a50c0c","modified":1471358878090},{"_id":"public/archives/2007/index.html","hash":"c6c46190fdb593de3fa33a45f27912a2e8eca7d0","modified":1471358878090},{"_id":"public/archives/2008/index.html","hash":"c1440b5b686947a9e4c3557d79fc6b89d34db9ad","modified":1471358878090},{"_id":"public/archives/2009/index.html","hash":"cf7fb1a3253940ef4d0d3f91c6cabaa6395a358e","modified":1471358878090},{"_id":"public/categories/心情日记/index.html","hash":"933cd0ed0287dc64f4d6828e04817440c121fc55","modified":1471358878090},{"_id":"public/categories/Asp-Net/index.html","hash":"0535c78ed707fd7ec95f9dd2cd30f89c87668ad2","modified":1471358878090},{"_id":"public/categories/SqlServer/index.html","hash":"3f210bb55e6883fe960a5bb6311dbdd95f6b3f04","modified":1471358878090},{"_id":"public/categories/Asp-Net-Ajax/index.html","hash":"50555b85c6bc9bc51a3d9518d27b323fead7aaa8","modified":1471358878090},{"_id":"public/index.html","hash":"fdb0db5dd962d4fc44c7a7f1a20a3ee5b7e1253f","modified":1471358878090},{"_id":"public/page/2/index.html","hash":"99ea9ec122ffa334ce15fbe9898165cf4629ee9d","modified":1471358878090},{"_id":"public/page/3/index.html","hash":"fd06c38b4877711af3da5bad6180cf6f80ee70a9","modified":1471358878090},{"_id":"public/page/4/index.html","hash":"5dd9f6512d15a7469d0ca5ab861b710fa0aa31c5","modified":1471358878090},{"_id":"public/page/5/index.html","hash":"e0e0cff669700eb58f30e1b819e3f0289abb6b10","modified":1471358878090},{"_id":"public/page/6/index.html","hash":"6fbf7f9e3c7758b6b0e1f98c9a6dd9e39288d694","modified":1471358878090},{"_id":"public/page/7/index.html","hash":"49cf7c1780523f24b544b464a5341472d6226d11","modified":1471358878090},{"_id":"public/page/8/index.html","hash":"fa9d530fa55843cba0603d7ff22a2799514015a3","modified":1471358878091},{"_id":"public/page/9/index.html","hash":"5c5a0ab6c6d4e1f8216f8a921705a8277db5c8b0","modified":1471358878091},{"_id":"public/page/10/index.html","hash":"7abff971686cb10b01e2e82e72128f0036e51c7c","modified":1471358878091},{"_id":"public/tags/AspNet/index.html","hash":"386058bb4bc568e709f5c05f98cfd0069dd1d905","modified":1471358878090},{"_id":"public/tags/错误解决/index.html","hash":"4360f53b82c19292714a5d14ffb1803381694e22","modified":1471358878090},{"_id":"public/tags/Ajax/index.html","hash":"ec2f59b8ba173c26b5eacf631e88e0a060e72f08","modified":1471358878090},{"_id":"public/2009/10/rare-small-company-activities-badminton-match/index.html","hash":"5d94b286343dff65c28caa4952a13083496fe0ba","modified":1471358878071},{"_id":"public/archives/2009/07/index.html","hash":"ccdc1ab08deb4f76679a4101ff0a361411a4e27e","modified":1471358878081},{"_id":"public/archives/2009/09/index.html","hash":"de01ceb3e9ff919f580da6699eb56aa2d61fd5ce","modified":1471358878082},{"_id":"public/archives/2009/08/index.html","hash":"049f00bdea34861795b1508ea2caa6d530a4adc9","modified":1471358878082},{"_id":"public/archives/2009/10/index.html","hash":"791d0bfbaa8035a3868cf0433a6d1cd31b8aeede","modified":1471358878082},{"_id":"public/categories/Asp-Net-MVC/index.html","hash":"42336726ddd3ec51c543b07b113a015e29fc2015","modified":1471358878072},{"_id":"public/categories/DotNet/软件推荐/index.html","hash":"7a4b2c6e8eb3a1a26a78bfc299aeccbbb0960ca8","modified":1471358878073},{"_id":"public/tags/ajaxpro/index.html","hash":"27847ebd88b038ccaf90873df346e6c1f6bf288f","modified":1471358878075},{"_id":"public/tags/MVC/index.html","hash":"77009c9c57f9a82688b2e5ec75a287e34dc54738","modified":1471358878075},{"_id":"public/tags/windows-live-writer/index.html","hash":"e7668ef3dc488a71ee97c60149f02bbc119fbfca","modified":1471358878075},{"_id":"public/tags/Resharper/index.html","hash":"51d891f5a7803772c3f4dc88ca4031a3d2276c9a","modified":1471358878076},{"_id":"public/tags/DotNet4/index.html","hash":"5a833b97b39fb9d01f460dcecaf317010a825715","modified":1471358878077},{"_id":"public/tags/vs2010/index.html","hash":"bd95a2ed0efc423c237ec0bce10cb48bb887e111","modified":1471358878077},{"_id":"public/tags/语法高亮/index.html","hash":"fee421867d10aee634c787f9122a8b36235e2f70","modified":1471358878077},{"_id":"public/tags/合并列/index.html","hash":"3e149731e40df3b213859c41510cc328ea564c8d","modified":1471358878078},{"_id":"public/2009/10/visual-studio-2010-beta-2-download-address-publicly/index.html","hash":"28b7f1b39637365781013db068d1283a511a6fb1","modified":1471358878085},{"_id":"public/2009/10/powerful-vs-plug-in-resharper/index.html","hash":"8b42f7ce2709dc854bad0272877ce6912f3b35b3","modified":1471358878085},{"_id":"public/2009/10/words-in-the-table-in-the-database-multi-line-merged-into-a-column/index.html","hash":"2bb6fe9d5fa0706c88249e81f5be5db072a26b92","modified":1471358878085},{"_id":"public/2009/09/use-windows-live-writer-connection-csdn-and-cnblogs-blog/index.html","hash":"f4f88bfa4ed12149a1f035003f7ee23eeebf1d2e","modified":1471358878085},{"_id":"public/2009/09/calligraphy-competition-prizes-heaven-umbrella/index.html","hash":"61b2fe8148267b986e75a2daf3c9f13168448e9c","modified":1471358878085},{"_id":"public/2009/09/backup-windows-live-writers-draft/index.html","hash":"723fc75d477f5f138d03a76ec766ada0ab13df66","modified":1471358878085},{"_id":"public/2009/09/windows-live-writer-syntax-highlighting-in-the-plug-in/index.html","hash":"9fb508c5139a55497cd5e4a099bc0f04be1ea430","modified":1471358878085},{"_id":"public/2009/08/aspnet-mvc-v2-preview-1/index.html","hash":"6c6ba3c42a426a6b1f20d5ef13491eec6ceddabf","modified":1471358878085},{"_id":"public/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/index.html","hash":"9aa946eaa12a0ce6d62aa5d2dcf729259b0642d0","modified":1471358878085},{"_id":"public/2009/07/ajaxpro-autocomplete-function-implementation/index.html","hash":"a71efdd38b278c05264537256e16163fe952fe11","modified":1471358878085},{"_id":"public/2009/07/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor/index.html","hash":"8b0770cfb84fa348ddc9709c9d6cc9107212e036","modified":1471358878085},{"_id":"public/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/index.html","hash":"d510bb2939e8c87d77158b37a3b8cc5fad0800ce","modified":1471358878085},{"_id":"public/page/11/index.html","hash":"2ccbd01e684fb70332388f31ad9daa0d24dd1f05","modified":1471358878091},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1471358713657},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1471358713657},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1471358713657},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1471358713657},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1471358713657},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1471358713657},{"_id":"public/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1471358713726},{"_id":"public/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1471358713726},{"_id":"public/js/search.js","hash":"53db2eb255dd40a412ed62ea7332ca5a22f7816f","modified":1471358713726},{"_id":"public/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1471358713726},{"_id":"public/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1471358713726},{"_id":"public/js/share.js","hash":"f49776e0baa2b913ddc7a20db24b3edd469c8343","modified":1471358713726},{"_id":"public/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1471358713726},{"_id":"public/css/style.css","hash":"2afb6e7e24abf81c8b7b7d472fb0bb9b9a1eac16","modified":1471358713727},{"_id":"public/archives/2008/04/index.html","hash":"1840fd9d7399b01e13dfc830169fa94476a2599c","modified":1471358878098},{"_id":"public/2008/04/the-difference-between-the-and-aspnet/index.html","hash":"7588b2c0788351f8aed80b90d8b813a6087a821a","modified":1471358878098},{"_id":"public/2008/03/separate-strings-in-sql/index.html","hash":"75baa2b44ac202280da78b9232ea32a8eccb45e0","modified":1471358878099}],"Category":[{"name":"心情日记","_id":"cirxkz8xq0005xfyn2q5jlxkb"},{"name":"软件测试","_id":"cirxkz8yd000mxfynojez3u7g"},{"name":"设计模式","_id":"cirxkz8yj000txfyndhmz4xkr"},{"name":"Asp.Net","_id":"cirxkz8yr0011xfynxaw34s2x"},{"name":"WCF","_id":"cirxkz8yy0018xfynf0ctdb0v"},{"name":"软件使用","_id":"cirxkz8z6001gxfynchm0zpsu"},{"name":"WMS","_id":"cirxkz8zi001mxfynvpf6fz2v"},{"name":"SqlServer","_id":"cirxkz8zs001txfyn7d9zhqq0"},{"name":"Asp.Net Ajax","_id":"cirxkz90g0028xfynzlamfiw1"},{"name":"NHibernate","_id":"cirxkz90u002txfyno08whov9"},{"name":"Asp.Net MVC","_id":"cirxkz91f003uxfynoe69an81"},{"name":"CLR Via C#","_id":"cirxkz91k0041xfyndait4lgl"},{"name":"Javascript","_id":"cirxkz9210051xfyn40ha60ce"},{"name":"DotNet","_id":"cirxkz9280059xfynzyxt8dg1"},{"name":"C#","_id":"cirxkz92b005hxfyn862xhc9z"},{"name":"JQuery","parent":"cirxkz9280059xfynzyxt8dg1","_id":"cirxkz92p0061xfyn1lpan6vv"},{"name":"Javascript","parent":"cirxkz92b005hxfyn862xhc9z","_id":"cirxkz92u006gxfynhi5ts7kb"},{"name":"DotNet","parent":"cirxkz92b005hxfyn862xhc9z","_id":"cirxkz931006oxfynw8kqr6r7"},{"name":"软件推荐","_id":"cirxkz934006wxfynmdn6yztn"},{"name":"随笔杂谈","_id":"cirxkz9370073xfyng0i99wh5"},{"name":"篮球","_id":"cirxkz93e007kxfyn6ygejw4f"},{"name":"HTML","_id":"cirxkz93o008exfynmmji0tjy"},{"name":"Javascript","parent":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz93s008pxfynoyklsr59"},{"name":"软件推荐","parent":"cirxkz9280059xfynzyxt8dg1","_id":"cirxkz948009vxfynbxdmg9z1"}],"Data":[],"Page":[{"title":"关于","layout":"page","_content":"\n爱编程、爱篮球 、爱颖颖、爱书法 、爱旅游\n\n![](http://ww3.sinaimg.cn/mw690/3cefded1gw1ez1yp5vu6rj206y05x74w.jpg)\n\n","source":"about/index.md","raw":"---\ntitle: 关于\nlayout: page\n---\n\n爱编程、爱篮球 、爱颖颖、爱书法 、爱旅游\n\n![](http://ww3.sinaimg.cn/mw690/3cefded1gw1ez1yp5vu6rj206y05x74w.jpg)\n\n","date":"2016-08-12T04:58:59.000Z","updated":"2016-08-12T04:58:59.000Z","path":"about/index.html","comments":1,"_id":"cirxkz8x70000xfynx8oqbrpv","content":"<p>爱编程、爱篮球 、爱颖颖、爱书法 、爱旅游</p>\n<p><img src=\"http://ww3.sinaimg.cn/mw690/3cefded1gw1ez1yp5vu6rj206y05x74w.jpg\" alt=\"\"></p>\n","excerpt":"","more":"<p>爱编程、爱篮球 、爱颖颖、爱书法 、爱旅游</p>\n<p><img src=\"http://ww3.sinaimg.cn/mw690/3cefded1gw1ez1yp5vu6rj206y05x74w.jpg\" alt=\"\"></p>\n"},{"title":"历史","layout":"timeline","_content":"\n\n","source":"history/index.md","raw":"---\ntitle: 历史\nlayout: timeline\n---\n\n\n","date":"2016-08-11T14:10:50.000Z","updated":"2016-08-11T14:10:50.000Z","path":"history/index.html","comments":1,"_id":"cirxkz8xf0002xfyn2kav84xf","content":"","excerpt":"","more":""}],"Post":[{"title":"07广东求职经历一","date":"2007-04-05T16:00:00.000Z","url":"/2007/04/07-guangdong-job-experience-1/","_content":"\n来到广东已经一个星期了， 现住在长安一个朋友这儿，来了才知道原来南方是如此发达，前几天去过长安的人才市场，职位倒是很多，但是转了整个会场没有一家招.net 编程的，所以简历也没有投出去几份，在东莞这地方工厂多，公司少，对各种技术工的需求量很大。不过在深圳关内软件公司很多，机会很多，这些天有时间也在网上投简历，今天终于收到了一个面试通知，让明天上午去参加比试，呵呵，明天又要跑到深圳去咯，祝我好运吧！\n<!--more-->\n对了，除了收到那个面试通知外还收到了两条短信，也是让我去面试的，刚才在深圳工商信息网上一查就那个通知面试的公司能够找到信息，其他的两家找不到信息，应该不是什么正规的公司，这年头骗人的东西太多了，所以出门在外一定要多留个心眼，事事要小心啊！！\n\n\n","source":"_posts/07-guangdong-job-experience-1.md","raw":"---\ntitle:  07广东求职经历一\ndate:  2007-04-06\nurl:  /2007/04/07-guangdong-job-experience-1/\ncategories: [心情日记]\ntags: [找工作]\n---\n\n来到广东已经一个星期了， 现住在长安一个朋友这儿，来了才知道原来南方是如此发达，前几天去过长安的人才市场，职位倒是很多，但是转了整个会场没有一家招.net 编程的，所以简历也没有投出去几份，在东莞这地方工厂多，公司少，对各种技术工的需求量很大。不过在深圳关内软件公司很多，机会很多，这些天有时间也在网上投简历，今天终于收到了一个面试通知，让明天上午去参加比试，呵呵，明天又要跑到深圳去咯，祝我好运吧！\n<!--more-->\n对了，除了收到那个面试通知外还收到了两条短信，也是让我去面试的，刚才在深圳工商信息网上一查就那个通知面试的公司能够找到信息，其他的两家找不到信息，应该不是什么正规的公司，这年头骗人的东西太多了，所以出门在外一定要多留个心眼，事事要小心啊！！\n\n\n","slug":"07-guangdong-job-experience-1","published":1,"updated":"2016-08-11T13:48:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8xa0001xfynvzt9xztr","content":"<p>来到广东已经一个星期了， 现住在长安一个朋友这儿，来了才知道原来南方是如此发达，前几天去过长安的人才市场，职位倒是很多，但是转了整个会场没有一家招.net 编程的，所以简历也没有投出去几份，在东莞这地方工厂多，公司少，对各种技术工的需求量很大。不过在深圳关内软件公司很多，机会很多，这些天有时间也在网上投简历，今天终于收到了一个面试通知，让明天上午去参加比试，呵呵，明天又要跑到深圳去咯，祝我好运吧！<br><a id=\"more\"></a><br>对了，除了收到那个面试通知外还收到了两条短信，也是让我去面试的，刚才在深圳工商信息网上一查就那个通知面试的公司能够找到信息，其他的两家找不到信息，应该不是什么正规的公司，这年头骗人的东西太多了，所以出门在外一定要多留个心眼，事事要小心啊！！</p>\n","excerpt":"<p>来到广东已经一个星期了， 现住在长安一个朋友这儿，来了才知道原来南方是如此发达，前几天去过长安的人才市场，职位倒是很多，但是转了整个会场没有一家招.net 编程的，所以简历也没有投出去几份，在东莞这地方工厂多，公司少，对各种技术工的需求量很大。不过在深圳关内软件公司很多，机会很多，这些天有时间也在网上投简历，今天终于收到了一个面试通知，让明天上午去参加比试，呵呵，明天又要跑到深圳去咯，祝我好运吧！<br>","more":"<br>对了，除了收到那个面试通知外还收到了两条短信，也是让我去面试的，刚才在深圳工商信息网上一查就那个通知面试的公司能够找到信息，其他的两家找不到信息，应该不是什么正规的公司，这年头骗人的东西太多了，所以出门在外一定要多留个心眼，事事要小心啊！！</p>"},{"title":"07广东求职经历二","date":"2007-05-03T16:00:00.000Z","url":"/2007/05/07-guangdong-job-experience-2/","_content":"\n来广东有一个月了，先前是住在东莞长安的一个朋友那里，去过很多次长安的人才市场，但没有什么收获，那边大部分是工厂，软件公司很少，因此在那边的二十多天基本是浪费了，现在来到深圳了，每天都在网上投简历，也去过一些公司面试。印象最深的是在中软创新，当时面试官先让我做了以下自我介绍，然后问了我一些简单的DotNet的相关知识，像Session和cookies的区别和各自的生命周期等等。我都回答得挺好。最后还说我去了之后的主要工作任务是什么以及他们公司的福利待遇，那天谈了很长时间，走的时候说一天后给我电话，当时感觉好象差不多了，但是一直都没有来电话，我还打过两次电话询问结果，接电话的小MM说老总出差了。至今我都不知道问什么就被刷下来了。\n<!--more-->\n对于一个月找不到工作我还是有心理准备的，所以还没有崩溃，对自己还是很有信心，第一份工作很重要，关系到我们以后职业的发展发向，所以我也不会因为着急而随便找个事就做。人要做自己喜欢的事情才会有激情有活力。经过这一个月的奔波，对面试到是有些经验了，我相信很快就会有结果了，也祝所有的应届毕业生都有好运！\n\n\n","source":"_posts/07-guangdong-job-experience-2.md","raw":"title:  07广东求职经历二\ndate:  2007-05-04\nurl:  /2007/05/07-guangdong-job-experience-2/\ncategories: [心情日记]\ntags: [找工作]\n---\n\n来广东有一个月了，先前是住在东莞长安的一个朋友那里，去过很多次长安的人才市场，但没有什么收获，那边大部分是工厂，软件公司很少，因此在那边的二十多天基本是浪费了，现在来到深圳了，每天都在网上投简历，也去过一些公司面试。印象最深的是在中软创新，当时面试官先让我做了以下自我介绍，然后问了我一些简单的DotNet的相关知识，像Session和cookies的区别和各自的生命周期等等。我都回答得挺好。最后还说我去了之后的主要工作任务是什么以及他们公司的福利待遇，那天谈了很长时间，走的时候说一天后给我电话，当时感觉好象差不多了，但是一直都没有来电话，我还打过两次电话询问结果，接电话的小MM说老总出差了。至今我都不知道问什么就被刷下来了。\n<!--more-->\n对于一个月找不到工作我还是有心理准备的，所以还没有崩溃，对自己还是很有信心，第一份工作很重要，关系到我们以后职业的发展发向，所以我也不会因为着急而随便找个事就做。人要做自己喜欢的事情才会有激情有活力。经过这一个月的奔波，对面试到是有些经验了，我相信很快就会有结果了，也祝所有的应届毕业生都有好运！\n\n\n","slug":"07-guangdong-job-experience-2","published":1,"updated":"2016-08-11T14:35:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8xi0003xfyn1cccg1ie","content":"<p>来广东有一个月了，先前是住在东莞长安的一个朋友那里，去过很多次长安的人才市场，但没有什么收获，那边大部分是工厂，软件公司很少，因此在那边的二十多天基本是浪费了，现在来到深圳了，每天都在网上投简历，也去过一些公司面试。印象最深的是在中软创新，当时面试官先让我做了以下自我介绍，然后问了我一些简单的DotNet的相关知识，像Session和cookies的区别和各自的生命周期等等。我都回答得挺好。最后还说我去了之后的主要工作任务是什么以及他们公司的福利待遇，那天谈了很长时间，走的时候说一天后给我电话，当时感觉好象差不多了，但是一直都没有来电话，我还打过两次电话询问结果，接电话的小MM说老总出差了。至今我都不知道问什么就被刷下来了。<br><a id=\"more\"></a><br>对于一个月找不到工作我还是有心理准备的，所以还没有崩溃，对自己还是很有信心，第一份工作很重要，关系到我们以后职业的发展发向，所以我也不会因为着急而随便找个事就做。人要做自己喜欢的事情才会有激情有活力。经过这一个月的奔波，对面试到是有些经验了，我相信很快就会有结果了，也祝所有的应届毕业生都有好运！</p>\n","excerpt":"<p>来广东有一个月了，先前是住在东莞长安的一个朋友那里，去过很多次长安的人才市场，但没有什么收获，那边大部分是工厂，软件公司很少，因此在那边的二十多天基本是浪费了，现在来到深圳了，每天都在网上投简历，也去过一些公司面试。印象最深的是在中软创新，当时面试官先让我做了以下自我介绍，然后问了我一些简单的DotNet的相关知识，像Session和cookies的区别和各自的生命周期等等。我都回答得挺好。最后还说我去了之后的主要工作任务是什么以及他们公司的福利待遇，那天谈了很长时间，走的时候说一天后给我电话，当时感觉好象差不多了，但是一直都没有来电话，我还打过两次电话询问结果，接电话的小MM说老总出差了。至今我都不知道问什么就被刷下来了。<br>","more":"<br>对于一个月找不到工作我还是有心理准备的，所以还没有崩溃，对自己还是很有信心，第一份工作很重要，关系到我们以后职业的发展发向，所以我也不会因为着急而随便找个事就做。人要做自己喜欢的事情才会有激情有活力。经过这一个月的奔波，对面试到是有些经验了，我相信很快就会有结果了，也祝所有的应届毕业生都有好运！</p>"},{"title":"回顾2006 畅想2007","date":"2007-01-05T16:00:00.000Z","toc":true,"_content":"\n## 2006\n### 学习\n\n在2006年初我开始了自学编程，其实这几年里也学了不少的程序设计语言，从vb、c 、java、delphi，可以说一些主流的语言都学遍了，但只是停留在表面，每学一种语言老师都是讲几个if语句和for循环，然后就是几乎每一本教程上都会有的常见的算法。不知是老师的水平不行还是怕讲深了我们接受不了，每种语言的特性和可能会在企业应用中用到的东西我们尊敬的老师却没有讲到，所以要以后从事IT行业，要想做一名出色的程序员，光靠老师讲的教材上的内容是远远不够的。必须靠自己的努力，但自学是很累的，尤其是在没有人指引的情况下。所以走了很多弯路，直到后来学习了asp.net才确定了自己的初期目标－－努力学习好asp.net，做一个合格的程序员，至少在毕业后能够胜任web开发的工作。当然要达到这个要求还要很多的东西学，但有了目标就能克服重重困难，最终取得成功。\n<!--more-->\n### 语言\n\n曾经也为选择什么样的语言苦恼过，是DotNet还是java，是做web还是winform，等等。也曾上网查过是DotNet更有发展前景还是java，网上的评论众说纷纭，每种语言都有自己的支持者。后来由于visual studio开发速度和门槛相对比较低的原因，选择了DotNet。在经过长时间的学习后也明白了语言之争其实没有必要，选择自己的喜欢的，适合自己的就可以了，语言只是工具而已，最重要的是能把问题解决掉。我会坚信我自己的选择并一直努力下去。\n\n刚才逛论坛见一贴在挺有意思，贴在这儿娱乐一下\n\n大碗之IT篇\n\n> 一定得是N层结构，  \n> 层数越多越好，层少了用户会误会我们不重视，  \n> 什么数据访问层呀，实体控制层啊，能给他加上的全加上。  \n>程序员一定都得是老鸟，30以下基本不考虑，  \n> 还得清一色的外企空降兵，  \n> 都有10年以上编程经验的那种，用过的语言越多越好，  \n> 编程都不带查MSDN的，牛吧！  \n> 程序员个个都配IBM笔记本，    \n> CPU要3G以上的，内存硬盘和屏幕都要最大的，  \n> 扩展槽别剩下，能插上的全插上。  \n> 能安的操作系统全安上，开机一屏幕上就一堆系统等你选，  \n> 倍有面子！  \n> 系统平台就得是J2EE，人家竞争对手除了C++就是JAVA,  \n> 你要用一.NET都不好意思和别人打招呼。  \n> 你说这样的系统设计出来得卖多少钱？  \n> 我觉得怎么也得100万吧？  \n> 100万,那是单机版！  \n> 1000万起！  \n> 你还别嫌太贵，还不免实施服务费。  \n> 你得研究有钱用户得心理，  \n> 愿意花1000万买这套软件用的，  \n> 根本不在乎再多花上几百万！  \n> 什么叫软件泡沫你知道么？  \n> 软件泡沫就是做都做最复杂的，  \n> 用就得用最贵的，还得特难用，显得用户水平高。  \n> 所以我们搞软件的口号就是：  \n> 不求好用，但求费劲!  \n\n### 宿舍兄弟\n\n2006年学校建了新公寓，环境比以前的宿舍好，当然住宿费也贵了，为了有一个更好的环境我搬到了新楼，在新的宿舍里我们相处的很融洽，而且我们宿舍应该也是学校里少有的无烟宿舍，唯一一个玩网游的兄弟最后也在女友的熏陶下改“邪”归正了，其实游戏我们都玩但不痴迷，仅当娱乐而已。再后来宿舍里除了我，几个兄弟都踏上了考研这条艰辛路了，感觉上我好像比他们轻松，但压力更大。很庆幸能在这样的宿舍里。\n\n### 篮球\n\n篮球一直以来都是我最喜欢的一项运动，而且自我感觉打的还不赖，凑巧的是宿舍的兄弟们也都打篮球，而且从后卫到中锋都不缺人。但在06年我们打球的心态和以前不一样了，至少我认为是这样，现在每个人都有学习的压力，不可能象以前那样疯狂，但我们没有停止对篮球的热爱，只要不出现特殊情况，每周肯定要打一次球，这也让我们这样的考研宿舍有了更多的话题可说不至于很沉闷。现在打球给我更多的感觉是在学习累了之后的一种放松。时间不多，马上兄弟们就要离别，还是好好珍惜这段美好时光吧！\n\n## 2007\n\n207年是很特殊的一年对我来说，在这一年里将结束我的大学生活也是整个读书生涯（不过也说不定，没准以后还考研了，呵呵）；在这一年里将第一次正式走进社会，朝着自己的理想去奋斗。近期有两件重要事情要做。\n\n### 毕业论文\n\n我们学校的毕业论文开题比较早，所以应该抓住这个机会，好好利用寒假这一个月的时间，让自己的编程水平上一个台阶，同时把毕业论文的框架做出来。这很重要，可以让我在春节过完后有更多的时间去早工作。\n\n### 实习\n\n在过完春节后找一家公司实习，虽然可能会遇到很多的困难，但还是要努力地去完成，实习对我们这样的应届毕业生很重要，可以积累工作经验为以后的工作做准备。希望到时能找到一家好的公司实习。\n\n\n","source":"_posts/2006-2007.md","raw":"title:  回顾2006 畅想2007\ndate:  2007-01-06\ncategories: [心情日记]\ntags: [总结]\ntoc: true\n---\n\n## 2006\n### 学习\n\n在2006年初我开始了自学编程，其实这几年里也学了不少的程序设计语言，从vb、c 、java、delphi，可以说一些主流的语言都学遍了，但只是停留在表面，每学一种语言老师都是讲几个if语句和for循环，然后就是几乎每一本教程上都会有的常见的算法。不知是老师的水平不行还是怕讲深了我们接受不了，每种语言的特性和可能会在企业应用中用到的东西我们尊敬的老师却没有讲到，所以要以后从事IT行业，要想做一名出色的程序员，光靠老师讲的教材上的内容是远远不够的。必须靠自己的努力，但自学是很累的，尤其是在没有人指引的情况下。所以走了很多弯路，直到后来学习了asp.net才确定了自己的初期目标－－努力学习好asp.net，做一个合格的程序员，至少在毕业后能够胜任web开发的工作。当然要达到这个要求还要很多的东西学，但有了目标就能克服重重困难，最终取得成功。\n<!--more-->\n### 语言\n\n曾经也为选择什么样的语言苦恼过，是DotNet还是java，是做web还是winform，等等。也曾上网查过是DotNet更有发展前景还是java，网上的评论众说纷纭，每种语言都有自己的支持者。后来由于visual studio开发速度和门槛相对比较低的原因，选择了DotNet。在经过长时间的学习后也明白了语言之争其实没有必要，选择自己的喜欢的，适合自己的就可以了，语言只是工具而已，最重要的是能把问题解决掉。我会坚信我自己的选择并一直努力下去。\n\n刚才逛论坛见一贴在挺有意思，贴在这儿娱乐一下\n\n大碗之IT篇\n\n> 一定得是N层结构，  \n> 层数越多越好，层少了用户会误会我们不重视，  \n> 什么数据访问层呀，实体控制层啊，能给他加上的全加上。  \n>程序员一定都得是老鸟，30以下基本不考虑，  \n> 还得清一色的外企空降兵，  \n> 都有10年以上编程经验的那种，用过的语言越多越好，  \n> 编程都不带查MSDN的，牛吧！  \n> 程序员个个都配IBM笔记本，    \n> CPU要3G以上的，内存硬盘和屏幕都要最大的，  \n> 扩展槽别剩下，能插上的全插上。  \n> 能安的操作系统全安上，开机一屏幕上就一堆系统等你选，  \n> 倍有面子！  \n> 系统平台就得是J2EE，人家竞争对手除了C++就是JAVA,  \n> 你要用一.NET都不好意思和别人打招呼。  \n> 你说这样的系统设计出来得卖多少钱？  \n> 我觉得怎么也得100万吧？  \n> 100万,那是单机版！  \n> 1000万起！  \n> 你还别嫌太贵，还不免实施服务费。  \n> 你得研究有钱用户得心理，  \n> 愿意花1000万买这套软件用的，  \n> 根本不在乎再多花上几百万！  \n> 什么叫软件泡沫你知道么？  \n> 软件泡沫就是做都做最复杂的，  \n> 用就得用最贵的，还得特难用，显得用户水平高。  \n> 所以我们搞软件的口号就是：  \n> 不求好用，但求费劲!  \n\n### 宿舍兄弟\n\n2006年学校建了新公寓，环境比以前的宿舍好，当然住宿费也贵了，为了有一个更好的环境我搬到了新楼，在新的宿舍里我们相处的很融洽，而且我们宿舍应该也是学校里少有的无烟宿舍，唯一一个玩网游的兄弟最后也在女友的熏陶下改“邪”归正了，其实游戏我们都玩但不痴迷，仅当娱乐而已。再后来宿舍里除了我，几个兄弟都踏上了考研这条艰辛路了，感觉上我好像比他们轻松，但压力更大。很庆幸能在这样的宿舍里。\n\n### 篮球\n\n篮球一直以来都是我最喜欢的一项运动，而且自我感觉打的还不赖，凑巧的是宿舍的兄弟们也都打篮球，而且从后卫到中锋都不缺人。但在06年我们打球的心态和以前不一样了，至少我认为是这样，现在每个人都有学习的压力，不可能象以前那样疯狂，但我们没有停止对篮球的热爱，只要不出现特殊情况，每周肯定要打一次球，这也让我们这样的考研宿舍有了更多的话题可说不至于很沉闷。现在打球给我更多的感觉是在学习累了之后的一种放松。时间不多，马上兄弟们就要离别，还是好好珍惜这段美好时光吧！\n\n## 2007\n\n207年是很特殊的一年对我来说，在这一年里将结束我的大学生活也是整个读书生涯（不过也说不定，没准以后还考研了，呵呵）；在这一年里将第一次正式走进社会，朝着自己的理想去奋斗。近期有两件重要事情要做。\n\n### 毕业论文\n\n我们学校的毕业论文开题比较早，所以应该抓住这个机会，好好利用寒假这一个月的时间，让自己的编程水平上一个台阶，同时把毕业论文的框架做出来。这很重要，可以让我在春节过完后有更多的时间去早工作。\n\n### 实习\n\n在过完春节后找一家公司实习，虽然可能会遇到很多的困难，但还是要努力地去完成，实习对我们这样的应届毕业生很重要，可以积累工作经验为以后的工作做准备。希望到时能找到一家好的公司实习。\n\n\n","slug":"2006-2007","published":1,"updated":"2016-08-12T15:58:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8xs0006xfynatzuq9jv","content":"<h2 id=\"2006\"><a href=\"#2006\" class=\"headerlink\" title=\"2006\"></a>2006</h2><h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>在2006年初我开始了自学编程，其实这几年里也学了不少的程序设计语言，从vb、c 、java、delphi，可以说一些主流的语言都学遍了，但只是停留在表面，每学一种语言老师都是讲几个if语句和for循环，然后就是几乎每一本教程上都会有的常见的算法。不知是老师的水平不行还是怕讲深了我们接受不了，每种语言的特性和可能会在企业应用中用到的东西我们尊敬的老师却没有讲到，所以要以后从事IT行业，要想做一名出色的程序员，光靠老师讲的教材上的内容是远远不够的。必须靠自己的努力，但自学是很累的，尤其是在没有人指引的情况下。所以走了很多弯路，直到后来学习了asp.net才确定了自己的初期目标－－努力学习好asp.net，做一个合格的程序员，至少在毕业后能够胜任web开发的工作。当然要达到这个要求还要很多的东西学，但有了目标就能克服重重困难，最终取得成功。<br><a id=\"more\"></a></p>\n<h3 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h3><p>曾经也为选择什么样的语言苦恼过，是DotNet还是java，是做web还是winform，等等。也曾上网查过是DotNet更有发展前景还是java，网上的评论众说纷纭，每种语言都有自己的支持者。后来由于visual studio开发速度和门槛相对比较低的原因，选择了DotNet。在经过长时间的学习后也明白了语言之争其实没有必要，选择自己的喜欢的，适合自己的就可以了，语言只是工具而已，最重要的是能把问题解决掉。我会坚信我自己的选择并一直努力下去。</p>\n<p>刚才逛论坛见一贴在挺有意思，贴在这儿娱乐一下</p>\n<p>大碗之IT篇</p>\n<blockquote>\n<p>一定得是N层结构，<br>层数越多越好，层少了用户会误会我们不重视，<br>什么数据访问层呀，实体控制层啊，能给他加上的全加上。<br>程序员一定都得是老鸟，30以下基本不考虑，<br>还得清一色的外企空降兵，<br>都有10年以上编程经验的那种，用过的语言越多越好，<br>编程都不带查MSDN的，牛吧！<br>程序员个个都配IBM笔记本，<br>CPU要3G以上的，内存硬盘和屏幕都要最大的，<br>扩展槽别剩下，能插上的全插上。<br>能安的操作系统全安上，开机一屏幕上就一堆系统等你选，<br>倍有面子！<br>系统平台就得是J2EE，人家竞争对手除了C++就是JAVA,<br>你要用一.NET都不好意思和别人打招呼。<br>你说这样的系统设计出来得卖多少钱？<br>我觉得怎么也得100万吧？<br>100万,那是单机版！<br>1000万起！<br>你还别嫌太贵，还不免实施服务费。<br>你得研究有钱用户得心理，<br>愿意花1000万买这套软件用的，<br>根本不在乎再多花上几百万！<br>什么叫软件泡沫你知道么？<br>软件泡沫就是做都做最复杂的，<br>用就得用最贵的，还得特难用，显得用户水平高。<br>所以我们搞软件的口号就是：<br>不求好用，但求费劲!  </p>\n</blockquote>\n<h3 id=\"宿舍兄弟\"><a href=\"#宿舍兄弟\" class=\"headerlink\" title=\"宿舍兄弟\"></a>宿舍兄弟</h3><p>2006年学校建了新公寓，环境比以前的宿舍好，当然住宿费也贵了，为了有一个更好的环境我搬到了新楼，在新的宿舍里我们相处的很融洽，而且我们宿舍应该也是学校里少有的无烟宿舍，唯一一个玩网游的兄弟最后也在女友的熏陶下改“邪”归正了，其实游戏我们都玩但不痴迷，仅当娱乐而已。再后来宿舍里除了我，几个兄弟都踏上了考研这条艰辛路了，感觉上我好像比他们轻松，但压力更大。很庆幸能在这样的宿舍里。</p>\n<h3 id=\"篮球\"><a href=\"#篮球\" class=\"headerlink\" title=\"篮球\"></a>篮球</h3><p>篮球一直以来都是我最喜欢的一项运动，而且自我感觉打的还不赖，凑巧的是宿舍的兄弟们也都打篮球，而且从后卫到中锋都不缺人。但在06年我们打球的心态和以前不一样了，至少我认为是这样，现在每个人都有学习的压力，不可能象以前那样疯狂，但我们没有停止对篮球的热爱，只要不出现特殊情况，每周肯定要打一次球，这也让我们这样的考研宿舍有了更多的话题可说不至于很沉闷。现在打球给我更多的感觉是在学习累了之后的一种放松。时间不多，马上兄弟们就要离别，还是好好珍惜这段美好时光吧！</p>\n<h2 id=\"2007\"><a href=\"#2007\" class=\"headerlink\" title=\"2007\"></a>2007</h2><p>207年是很特殊的一年对我来说，在这一年里将结束我的大学生活也是整个读书生涯（不过也说不定，没准以后还考研了，呵呵）；在这一年里将第一次正式走进社会，朝着自己的理想去奋斗。近期有两件重要事情要做。</p>\n<h3 id=\"毕业论文\"><a href=\"#毕业论文\" class=\"headerlink\" title=\"毕业论文\"></a>毕业论文</h3><p>我们学校的毕业论文开题比较早，所以应该抓住这个机会，好好利用寒假这一个月的时间，让自己的编程水平上一个台阶，同时把毕业论文的框架做出来。这很重要，可以让我在春节过完后有更多的时间去早工作。</p>\n<h3 id=\"实习\"><a href=\"#实习\" class=\"headerlink\" title=\"实习\"></a>实习</h3><p>在过完春节后找一家公司实习，虽然可能会遇到很多的困难，但还是要努力地去完成，实习对我们这样的应届毕业生很重要，可以积累工作经验为以后的工作做准备。希望到时能找到一家好的公司实习。</p>\n","excerpt":"<h2 id=\"2006\"><a href=\"#2006\" class=\"headerlink\" title=\"2006\"></a>2006</h2><h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>在2006年初我开始了自学编程，其实这几年里也学了不少的程序设计语言，从vb、c 、java、delphi，可以说一些主流的语言都学遍了，但只是停留在表面，每学一种语言老师都是讲几个if语句和for循环，然后就是几乎每一本教程上都会有的常见的算法。不知是老师的水平不行还是怕讲深了我们接受不了，每种语言的特性和可能会在企业应用中用到的东西我们尊敬的老师却没有讲到，所以要以后从事IT行业，要想做一名出色的程序员，光靠老师讲的教材上的内容是远远不够的。必须靠自己的努力，但自学是很累的，尤其是在没有人指引的情况下。所以走了很多弯路，直到后来学习了asp.net才确定了自己的初期目标－－努力学习好asp.net，做一个合格的程序员，至少在毕业后能够胜任web开发的工作。当然要达到这个要求还要很多的东西学，但有了目标就能克服重重困难，最终取得成功。<br>","more":"</p>\n<h3 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h3><p>曾经也为选择什么样的语言苦恼过，是DotNet还是java，是做web还是winform，等等。也曾上网查过是DotNet更有发展前景还是java，网上的评论众说纷纭，每种语言都有自己的支持者。后来由于visual studio开发速度和门槛相对比较低的原因，选择了DotNet。在经过长时间的学习后也明白了语言之争其实没有必要，选择自己的喜欢的，适合自己的就可以了，语言只是工具而已，最重要的是能把问题解决掉。我会坚信我自己的选择并一直努力下去。</p>\n<p>刚才逛论坛见一贴在挺有意思，贴在这儿娱乐一下</p>\n<p>大碗之IT篇</p>\n<blockquote>\n<p>一定得是N层结构，<br>层数越多越好，层少了用户会误会我们不重视，<br>什么数据访问层呀，实体控制层啊，能给他加上的全加上。<br>程序员一定都得是老鸟，30以下基本不考虑，<br>还得清一色的外企空降兵，<br>都有10年以上编程经验的那种，用过的语言越多越好，<br>编程都不带查MSDN的，牛吧！<br>程序员个个都配IBM笔记本，<br>CPU要3G以上的，内存硬盘和屏幕都要最大的，<br>扩展槽别剩下，能插上的全插上。<br>能安的操作系统全安上，开机一屏幕上就一堆系统等你选，<br>倍有面子！<br>系统平台就得是J2EE，人家竞争对手除了C++就是JAVA,<br>你要用一.NET都不好意思和别人打招呼。<br>你说这样的系统设计出来得卖多少钱？<br>我觉得怎么也得100万吧？<br>100万,那是单机版！<br>1000万起！<br>你还别嫌太贵，还不免实施服务费。<br>你得研究有钱用户得心理，<br>愿意花1000万买这套软件用的，<br>根本不在乎再多花上几百万！<br>什么叫软件泡沫你知道么？<br>软件泡沫就是做都做最复杂的，<br>用就得用最贵的，还得特难用，显得用户水平高。<br>所以我们搞软件的口号就是：<br>不求好用，但求费劲!  </p>\n</blockquote>\n<h3 id=\"宿舍兄弟\"><a href=\"#宿舍兄弟\" class=\"headerlink\" title=\"宿舍兄弟\"></a>宿舍兄弟</h3><p>2006年学校建了新公寓，环境比以前的宿舍好，当然住宿费也贵了，为了有一个更好的环境我搬到了新楼，在新的宿舍里我们相处的很融洽，而且我们宿舍应该也是学校里少有的无烟宿舍，唯一一个玩网游的兄弟最后也在女友的熏陶下改“邪”归正了，其实游戏我们都玩但不痴迷，仅当娱乐而已。再后来宿舍里除了我，几个兄弟都踏上了考研这条艰辛路了，感觉上我好像比他们轻松，但压力更大。很庆幸能在这样的宿舍里。</p>\n<h3 id=\"篮球\"><a href=\"#篮球\" class=\"headerlink\" title=\"篮球\"></a>篮球</h3><p>篮球一直以来都是我最喜欢的一项运动，而且自我感觉打的还不赖，凑巧的是宿舍的兄弟们也都打篮球，而且从后卫到中锋都不缺人。但在06年我们打球的心态和以前不一样了，至少我认为是这样，现在每个人都有学习的压力，不可能象以前那样疯狂，但我们没有停止对篮球的热爱，只要不出现特殊情况，每周肯定要打一次球，这也让我们这样的考研宿舍有了更多的话题可说不至于很沉闷。现在打球给我更多的感觉是在学习累了之后的一种放松。时间不多，马上兄弟们就要离别，还是好好珍惜这段美好时光吧！</p>\n<h2 id=\"2007\"><a href=\"#2007\" class=\"headerlink\" title=\"2007\"></a>2007</h2><p>207年是很特殊的一年对我来说，在这一年里将结束我的大学生活也是整个读书生涯（不过也说不定，没准以后还考研了，呵呵）；在这一年里将第一次正式走进社会，朝着自己的理想去奋斗。近期有两件重要事情要做。</p>\n<h3 id=\"毕业论文\"><a href=\"#毕业论文\" class=\"headerlink\" title=\"毕业论文\"></a>毕业论文</h3><p>我们学校的毕业论文开题比较早，所以应该抓住这个机会，好好利用寒假这一个月的时间，让自己的编程水平上一个台阶，同时把毕业论文的框架做出来。这很重要，可以让我在春节过完后有更多的时间去早工作。</p>\n<h3 id=\"实习\"><a href=\"#实习\" class=\"headerlink\" title=\"实习\"></a>实习</h3><p>在过完春节后找一家公司实习，虽然可能会遇到很多的困难，但还是要努力地去完成，实习对我们这样的应届毕业生很重要，可以积累工作经验为以后的工作做准备。希望到时能找到一家好的公司实习。</p>"},{"title":"2010十一长假小记","date":"2010-10-09T16:00:00.000Z","url":"/2010/10/2010-national-day-reporter/","_content":"\n今年的十一假特别长，因为没买到火车票的缘故导致放了11天的假。\n\n###927\n\n紧张的忙碌完工作后，下午准时下班在三元桥地铁站和老婆会合，直奔北京西站。\n<!--more-->\n###928\n\n早上7点多下的火车，回到了离开半年多的武汉。一下车就到售票厅去买返程的火车票，排列1个多小时的队还是没买到。离开火车站就和老婆一起去见了她的父母--这是第一次上门，虽然老婆都和我在一起但还是有一点点紧张。\n\n###929\n\n上午忙着搞返程票的事，最终买了8号的动车，还是一等座。下午回家，老婆送我到的车站。\n\n###930\n\n帮父母做事。\n\n###101\n\n上午帮父母做事，下午和爸妈还有我妹去市里面逛家具，买了一个皇朝的沙发。\n\n###102 103\n\n装虚机、配置环境做了些工作上的事情，还有就是和家人一起看电视。\n\n###104\n\n这天是我的生日，也是老婆来我家的日子，老婆还给我带来一个大大的蛋糕，坐车人那么多，还那么大老远带个蛋糕过来真的不容易，谢谢老婆！\n\n###105\n\n上午在家看电视，下午和老婆去我们市里逛了逛。\n\n###106\n\n吃完早饭和老婆一起坐车回武汉，下午和她姐 弟去森林公园玩，也是第一次去了森林公园的猴山。晚上一起去通宵KTV，早上5点多才回的家。\n\n###107\n\n由于通了宵上午自然是睡大觉了，中午他弟做了很多菜，算是为我们送行，因为8号就要去北京了。吃完午饭和老婆去购物，一人买了一双鞋，最值的就是老婆那双匡威的，才110块。\n\n###108\n\n5点就起床了，打的去的汉口火车站，路况很顺，提前很多到了车站。下午4点10分准时到达北京。\n\n\n","source":"_posts/2010-national-day-reporter.md","raw":"title:  2010十一长假小记\ndate:  2010-10-10\nurl:  /2010/10/2010-national-day-reporter/\ncategories: [心情日记]\ntags: [日记]\n---\n\n今年的十一假特别长，因为没买到火车票的缘故导致放了11天的假。\n\n###927\n\n紧张的忙碌完工作后，下午准时下班在三元桥地铁站和老婆会合，直奔北京西站。\n<!--more-->\n###928\n\n早上7点多下的火车，回到了离开半年多的武汉。一下车就到售票厅去买返程的火车票，排列1个多小时的队还是没买到。离开火车站就和老婆一起去见了她的父母--这是第一次上门，虽然老婆都和我在一起但还是有一点点紧张。\n\n###929\n\n上午忙着搞返程票的事，最终买了8号的动车，还是一等座。下午回家，老婆送我到的车站。\n\n###930\n\n帮父母做事。\n\n###101\n\n上午帮父母做事，下午和爸妈还有我妹去市里面逛家具，买了一个皇朝的沙发。\n\n###102 103\n\n装虚机、配置环境做了些工作上的事情，还有就是和家人一起看电视。\n\n###104\n\n这天是我的生日，也是老婆来我家的日子，老婆还给我带来一个大大的蛋糕，坐车人那么多，还那么大老远带个蛋糕过来真的不容易，谢谢老婆！\n\n###105\n\n上午在家看电视，下午和老婆去我们市里逛了逛。\n\n###106\n\n吃完早饭和老婆一起坐车回武汉，下午和她姐 弟去森林公园玩，也是第一次去了森林公园的猴山。晚上一起去通宵KTV，早上5点多才回的家。\n\n###107\n\n由于通了宵上午自然是睡大觉了，中午他弟做了很多菜，算是为我们送行，因为8号就要去北京了。吃完午饭和老婆去购物，一人买了一双鞋，最值的就是老婆那双匡威的，才110块。\n\n###108\n\n5点就起床了，打的去的汉口火车站，路况很顺，提前很多到了车站。下午4点10分准时到达北京。\n\n\n","slug":"2010-national-day-reporter","published":1,"updated":"2016-08-11T14:35:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8xu0007xfynh70blsul","content":"<p>今年的十一假特别长，因为没买到火车票的缘故导致放了11天的假。</p>\n<p>###927</p>\n<p>紧张的忙碌完工作后，下午准时下班在三元桥地铁站和老婆会合，直奔北京西站。<br><a id=\"more\"></a></p>\n<p>###928</p>\n<p>早上7点多下的火车，回到了离开半年多的武汉。一下车就到售票厅去买返程的火车票，排列1个多小时的队还是没买到。离开火车站就和老婆一起去见了她的父母–这是第一次上门，虽然老婆都和我在一起但还是有一点点紧张。</p>\n<p>###929</p>\n<p>上午忙着搞返程票的事，最终买了8号的动车，还是一等座。下午回家，老婆送我到的车站。</p>\n<p>###930</p>\n<p>帮父母做事。</p>\n<p>###101</p>\n<p>上午帮父母做事，下午和爸妈还有我妹去市里面逛家具，买了一个皇朝的沙发。</p>\n<p>###102 103</p>\n<p>装虚机、配置环境做了些工作上的事情，还有就是和家人一起看电视。</p>\n<p>###104</p>\n<p>这天是我的生日，也是老婆来我家的日子，老婆还给我带来一个大大的蛋糕，坐车人那么多，还那么大老远带个蛋糕过来真的不容易，谢谢老婆！</p>\n<p>###105</p>\n<p>上午在家看电视，下午和老婆去我们市里逛了逛。</p>\n<p>###106</p>\n<p>吃完早饭和老婆一起坐车回武汉，下午和她姐 弟去森林公园玩，也是第一次去了森林公园的猴山。晚上一起去通宵KTV，早上5点多才回的家。</p>\n<p>###107</p>\n<p>由于通了宵上午自然是睡大觉了，中午他弟做了很多菜，算是为我们送行，因为8号就要去北京了。吃完午饭和老婆去购物，一人买了一双鞋，最值的就是老婆那双匡威的，才110块。</p>\n<p>###108</p>\n<p>5点就起床了，打的去的汉口火车站，路况很顺，提前很多到了车站。下午4点10分准时到达北京。</p>\n","excerpt":"<p>今年的十一假特别长，因为没买到火车票的缘故导致放了11天的假。</p>\n<p>###927</p>\n<p>紧张的忙碌完工作后，下午准时下班在三元桥地铁站和老婆会合，直奔北京西站。<br>","more":"</p>\n<p>###928</p>\n<p>早上7点多下的火车，回到了离开半年多的武汉。一下车就到售票厅去买返程的火车票，排列1个多小时的队还是没买到。离开火车站就和老婆一起去见了她的父母–这是第一次上门，虽然老婆都和我在一起但还是有一点点紧张。</p>\n<p>###929</p>\n<p>上午忙着搞返程票的事，最终买了8号的动车，还是一等座。下午回家，老婆送我到的车站。</p>\n<p>###930</p>\n<p>帮父母做事。</p>\n<p>###101</p>\n<p>上午帮父母做事，下午和爸妈还有我妹去市里面逛家具，买了一个皇朝的沙发。</p>\n<p>###102 103</p>\n<p>装虚机、配置环境做了些工作上的事情，还有就是和家人一起看电视。</p>\n<p>###104</p>\n<p>这天是我的生日，也是老婆来我家的日子，老婆还给我带来一个大大的蛋糕，坐车人那么多，还那么大老远带个蛋糕过来真的不容易，谢谢老婆！</p>\n<p>###105</p>\n<p>上午在家看电视，下午和老婆去我们市里逛了逛。</p>\n<p>###106</p>\n<p>吃完早饭和老婆一起坐车回武汉，下午和她姐 弟去森林公园玩，也是第一次去了森林公园的猴山。晚上一起去通宵KTV，早上5点多才回的家。</p>\n<p>###107</p>\n<p>由于通了宵上午自然是睡大觉了，中午他弟做了很多菜，算是为我们送行，因为8号就要去北京了。吃完午饭和老婆去购物，一人买了一双鞋，最值的就是老婆那双匡威的，才110块。</p>\n<p>###108</p>\n<p>5点就起床了，打的去的汉口火车站，路况很顺，提前很多到了车站。下午4点10分准时到达北京。</p>"},{"title":"2012年总结","date":"2013-01-15T16:00:00.000Z","url":"/2013/01/2012-year-summary/","_content":"\n在我的[2011年总结](http://blog.fwhyy.com/2012/01/summary-in-2011/)是以年度记事作为开头，2012虽然特别，但对我来说还算是比较平淡的一年，并没有很多事情发生，所以2012年的总结就以工作和生活两个方面来说。\n<!--more-->\n# 工作\n\n2012年是在一家公司中度过，不管从公司业务知识还是个人技术都是有所进步的。在2012年的下半年，我利用有业余时间写了一个小工具，最初是给组内的同事使用，可以给开发人员带来一些便利，最终推广到了整个部门，代码也随之部署到了部门的服务器。这对我个人来说算是一种激励，在遇到自己兴趣和公司环境有冲突时，不要一味的埋怨所学不能所用，而是要思考怎样才能将所学能够在实际工作中应用起来，或是可以辅助实际工作。\n\n之前的技术学习，涉及面非常广，在博客、论坛中了解到的一些新技术都会去研究一番，但仅限于做一些Demo，并没有很深入，2013年我将改变这种状态，选择几种技术然后深入研究下去，要达到在这几种技术上，能够回答别人提出的问题，解决别人提出的问题，甚至能通过宣讲的方式将这些技术传授给其他人。\n\n绩效考核是个有利有弊的制度，考核指标的设定非常重要，我们公司的绩效考核我在之前一篇博文《[谈“绩效考核”》](http://blog.fwhyy.com/2012/04/talk-about-performance-appraisal/)详细说过，我个人认为很不合理，在公司和上级以及人力资源的同事都有过沟通，但公司有公司的考虑，既然不能改变那就去适应，每天去排斥还不如想办法将他为我所用，心态的转变也算是成长的一种表现。\n\n# 生活\n\n生活上2012年的头等大事应该就是装修了，从春节过后就开始忙装修，买材料都是我和老婆一起去的，施工现场都是岳父在盯着，真的是非常感谢。最繁琐最累的事情都是岳父帮忙做了，所以整个装修下来我反倒没觉得非常的累，只是觉得周期很长，因为陆陆续续一直到5月份才装好。\n\n放了两个月后，7月底搬入新家，搬家前的一个礼拜我和老婆去工贸买的家用电器，然后去电信办了12兆的宽带套餐，1个月169包含电视、网和3个手机，感觉还挺划算。在搬家之前，老婆就陆陆续续在网上淘了很多家里用的东东，相信在老婆的布置下这个家会很温馨的。\n\n2012年12月21号，这个世人皆知的日子里，我和老婆也没闲着，各自请假一天，一起去逛街、吃饭、看电影，当时上映的有一部叫《泰囧》的电影，我问老婆问什么要看这部，老婆说我们都过的很囧了，走进影院看看别人是怎么更囧的，涂个哈哈一乐。票是团购的，所以要排很长的队换票，下午5点左右终于排到了，因为要去吃晚饭，所以就决定买晚上9点半的票，票买完，就出去吃饭。9点半进场后发现有人和我们的座位号是一样的，各自奇怪之时，对方发现我们的票上的时间是5点半的，没有办法只能遗憾离开了影院，因为票已经撕了，也没法去找影院扯皮。电影没看成，自己倒过了一把囧途的瘾。\n\n2012年12月的最后一个周末，我回家报了驾校，在武汉问了很多驾校，价格都在5000左右，而且还要排队，选择回家报名，主要还是价格便宜很多，但也会麻烦很多，有什么事就得请假回去，而且学车也需要周末回去。\n\n# 2013展望\n\n1. 能尽快的把驾照拿到手；\n\n1. 准备要小宝宝；\n\n1. 买车；\n\n1. 工资有所突破；\n\n1. 职位有所突破；\n\n1. 深入研究几种技术，性能优化为主。\n\n\n","source":"_posts/2012-year-summary.md","raw":"title:  2012年总结\ndate:  2013-01-16\nurl:  /2013/01/2012-year-summary/\ncategories: [心情日记]\ntags:  [总结]\n\n---\n\n在我的[2011年总结](http://blog.fwhyy.com/2012/01/summary-in-2011/)是以年度记事作为开头，2012虽然特别，但对我来说还算是比较平淡的一年，并没有很多事情发生，所以2012年的总结就以工作和生活两个方面来说。\n<!--more-->\n# 工作\n\n2012年是在一家公司中度过，不管从公司业务知识还是个人技术都是有所进步的。在2012年的下半年，我利用有业余时间写了一个小工具，最初是给组内的同事使用，可以给开发人员带来一些便利，最终推广到了整个部门，代码也随之部署到了部门的服务器。这对我个人来说算是一种激励，在遇到自己兴趣和公司环境有冲突时，不要一味的埋怨所学不能所用，而是要思考怎样才能将所学能够在实际工作中应用起来，或是可以辅助实际工作。\n\n之前的技术学习，涉及面非常广，在博客、论坛中了解到的一些新技术都会去研究一番，但仅限于做一些Demo，并没有很深入，2013年我将改变这种状态，选择几种技术然后深入研究下去，要达到在这几种技术上，能够回答别人提出的问题，解决别人提出的问题，甚至能通过宣讲的方式将这些技术传授给其他人。\n\n绩效考核是个有利有弊的制度，考核指标的设定非常重要，我们公司的绩效考核我在之前一篇博文《[谈“绩效考核”》](http://blog.fwhyy.com/2012/04/talk-about-performance-appraisal/)详细说过，我个人认为很不合理，在公司和上级以及人力资源的同事都有过沟通，但公司有公司的考虑，既然不能改变那就去适应，每天去排斥还不如想办法将他为我所用，心态的转变也算是成长的一种表现。\n\n# 生活\n\n生活上2012年的头等大事应该就是装修了，从春节过后就开始忙装修，买材料都是我和老婆一起去的，施工现场都是岳父在盯着，真的是非常感谢。最繁琐最累的事情都是岳父帮忙做了，所以整个装修下来我反倒没觉得非常的累，只是觉得周期很长，因为陆陆续续一直到5月份才装好。\n\n放了两个月后，7月底搬入新家，搬家前的一个礼拜我和老婆去工贸买的家用电器，然后去电信办了12兆的宽带套餐，1个月169包含电视、网和3个手机，感觉还挺划算。在搬家之前，老婆就陆陆续续在网上淘了很多家里用的东东，相信在老婆的布置下这个家会很温馨的。\n\n2012年12月21号，这个世人皆知的日子里，我和老婆也没闲着，各自请假一天，一起去逛街、吃饭、看电影，当时上映的有一部叫《泰囧》的电影，我问老婆问什么要看这部，老婆说我们都过的很囧了，走进影院看看别人是怎么更囧的，涂个哈哈一乐。票是团购的，所以要排很长的队换票，下午5点左右终于排到了，因为要去吃晚饭，所以就决定买晚上9点半的票，票买完，就出去吃饭。9点半进场后发现有人和我们的座位号是一样的，各自奇怪之时，对方发现我们的票上的时间是5点半的，没有办法只能遗憾离开了影院，因为票已经撕了，也没法去找影院扯皮。电影没看成，自己倒过了一把囧途的瘾。\n\n2012年12月的最后一个周末，我回家报了驾校，在武汉问了很多驾校，价格都在5000左右，而且还要排队，选择回家报名，主要还是价格便宜很多，但也会麻烦很多，有什么事就得请假回去，而且学车也需要周末回去。\n\n# 2013展望\n\n1. 能尽快的把驾照拿到手；\n\n1. 准备要小宝宝；\n\n1. 买车；\n\n1. 工资有所突破；\n\n1. 职位有所突破；\n\n1. 深入研究几种技术，性能优化为主。\n\n\n","slug":"2012-year-summary","published":1,"updated":"2016-08-11T14:35:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8xw0009xfynxmpe69t8","content":"<p>在我的<a href=\"http://blog.fwhyy.com/2012/01/summary-in-2011/\" target=\"_blank\" rel=\"external\">2011年总结</a>是以年度记事作为开头，2012虽然特别，但对我来说还算是比较平淡的一年，并没有很多事情发生，所以2012年的总结就以工作和生活两个方面来说。<br><a id=\"more\"></a></p>\n<h1 id=\"工作\"><a href=\"#工作\" class=\"headerlink\" title=\"工作\"></a>工作</h1><p>2012年是在一家公司中度过，不管从公司业务知识还是个人技术都是有所进步的。在2012年的下半年，我利用有业余时间写了一个小工具，最初是给组内的同事使用，可以给开发人员带来一些便利，最终推广到了整个部门，代码也随之部署到了部门的服务器。这对我个人来说算是一种激励，在遇到自己兴趣和公司环境有冲突时，不要一味的埋怨所学不能所用，而是要思考怎样才能将所学能够在实际工作中应用起来，或是可以辅助实际工作。</p>\n<p>之前的技术学习，涉及面非常广，在博客、论坛中了解到的一些新技术都会去研究一番，但仅限于做一些Demo，并没有很深入，2013年我将改变这种状态，选择几种技术然后深入研究下去，要达到在这几种技术上，能够回答别人提出的问题，解决别人提出的问题，甚至能通过宣讲的方式将这些技术传授给其他人。</p>\n<p>绩效考核是个有利有弊的制度，考核指标的设定非常重要，我们公司的绩效考核我在之前一篇博文《<a href=\"http://blog.fwhyy.com/2012/04/talk-about-performance-appraisal/\" target=\"_blank\" rel=\"external\">谈“绩效考核”》</a>详细说过，我个人认为很不合理，在公司和上级以及人力资源的同事都有过沟通，但公司有公司的考虑，既然不能改变那就去适应，每天去排斥还不如想办法将他为我所用，心态的转变也算是成长的一种表现。</p>\n<h1 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h1><p>生活上2012年的头等大事应该就是装修了，从春节过后就开始忙装修，买材料都是我和老婆一起去的，施工现场都是岳父在盯着，真的是非常感谢。最繁琐最累的事情都是岳父帮忙做了，所以整个装修下来我反倒没觉得非常的累，只是觉得周期很长，因为陆陆续续一直到5月份才装好。</p>\n<p>放了两个月后，7月底搬入新家，搬家前的一个礼拜我和老婆去工贸买的家用电器，然后去电信办了12兆的宽带套餐，1个月169包含电视、网和3个手机，感觉还挺划算。在搬家之前，老婆就陆陆续续在网上淘了很多家里用的东东，相信在老婆的布置下这个家会很温馨的。</p>\n<p>2012年12月21号，这个世人皆知的日子里，我和老婆也没闲着，各自请假一天，一起去逛街、吃饭、看电影，当时上映的有一部叫《泰囧》的电影，我问老婆问什么要看这部，老婆说我们都过的很囧了，走进影院看看别人是怎么更囧的，涂个哈哈一乐。票是团购的，所以要排很长的队换票，下午5点左右终于排到了，因为要去吃晚饭，所以就决定买晚上9点半的票，票买完，就出去吃饭。9点半进场后发现有人和我们的座位号是一样的，各自奇怪之时，对方发现我们的票上的时间是5点半的，没有办法只能遗憾离开了影院，因为票已经撕了，也没法去找影院扯皮。电影没看成，自己倒过了一把囧途的瘾。</p>\n<p>2012年12月的最后一个周末，我回家报了驾校，在武汉问了很多驾校，价格都在5000左右，而且还要排队，选择回家报名，主要还是价格便宜很多，但也会麻烦很多，有什么事就得请假回去，而且学车也需要周末回去。</p>\n<h1 id=\"2013展望\"><a href=\"#2013展望\" class=\"headerlink\" title=\"2013展望\"></a>2013展望</h1><ol>\n<li><p>能尽快的把驾照拿到手；</p>\n</li>\n<li><p>准备要小宝宝；</p>\n</li>\n<li><p>买车；</p>\n</li>\n<li><p>工资有所突破；</p>\n</li>\n<li><p>职位有所突破；</p>\n</li>\n<li><p>深入研究几种技术，性能优化为主。</p>\n</li>\n</ol>\n","excerpt":"<p>在我的<a href=\"http://blog.fwhyy.com/2012/01/summary-in-2011/\">2011年总结</a>是以年度记事作为开头，2012虽然特别，但对我来说还算是比较平淡的一年，并没有很多事情发生，所以2012年的总结就以工作和生活两个方面来说。<br>","more":"</p>\n<h1 id=\"工作\"><a href=\"#工作\" class=\"headerlink\" title=\"工作\"></a>工作</h1><p>2012年是在一家公司中度过，不管从公司业务知识还是个人技术都是有所进步的。在2012年的下半年，我利用有业余时间写了一个小工具，最初是给组内的同事使用，可以给开发人员带来一些便利，最终推广到了整个部门，代码也随之部署到了部门的服务器。这对我个人来说算是一种激励，在遇到自己兴趣和公司环境有冲突时，不要一味的埋怨所学不能所用，而是要思考怎样才能将所学能够在实际工作中应用起来，或是可以辅助实际工作。</p>\n<p>之前的技术学习，涉及面非常广，在博客、论坛中了解到的一些新技术都会去研究一番，但仅限于做一些Demo，并没有很深入，2013年我将改变这种状态，选择几种技术然后深入研究下去，要达到在这几种技术上，能够回答别人提出的问题，解决别人提出的问题，甚至能通过宣讲的方式将这些技术传授给其他人。</p>\n<p>绩效考核是个有利有弊的制度，考核指标的设定非常重要，我们公司的绩效考核我在之前一篇博文《<a href=\"http://blog.fwhyy.com/2012/04/talk-about-performance-appraisal/\">谈“绩效考核”》</a>详细说过，我个人认为很不合理，在公司和上级以及人力资源的同事都有过沟通，但公司有公司的考虑，既然不能改变那就去适应，每天去排斥还不如想办法将他为我所用，心态的转变也算是成长的一种表现。</p>\n<h1 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h1><p>生活上2012年的头等大事应该就是装修了，从春节过后就开始忙装修，买材料都是我和老婆一起去的，施工现场都是岳父在盯着，真的是非常感谢。最繁琐最累的事情都是岳父帮忙做了，所以整个装修下来我反倒没觉得非常的累，只是觉得周期很长，因为陆陆续续一直到5月份才装好。</p>\n<p>放了两个月后，7月底搬入新家，搬家前的一个礼拜我和老婆去工贸买的家用电器，然后去电信办了12兆的宽带套餐，1个月169包含电视、网和3个手机，感觉还挺划算。在搬家之前，老婆就陆陆续续在网上淘了很多家里用的东东，相信在老婆的布置下这个家会很温馨的。</p>\n<p>2012年12月21号，这个世人皆知的日子里，我和老婆也没闲着，各自请假一天，一起去逛街、吃饭、看电影，当时上映的有一部叫《泰囧》的电影，我问老婆问什么要看这部，老婆说我们都过的很囧了，走进影院看看别人是怎么更囧的，涂个哈哈一乐。票是团购的，所以要排很长的队换票，下午5点左右终于排到了，因为要去吃晚饭，所以就决定买晚上9点半的票，票买完，就出去吃饭。9点半进场后发现有人和我们的座位号是一样的，各自奇怪之时，对方发现我们的票上的时间是5点半的，没有办法只能遗憾离开了影院，因为票已经撕了，也没法去找影院扯皮。电影没看成，自己倒过了一把囧途的瘾。</p>\n<p>2012年12月的最后一个周末，我回家报了驾校，在武汉问了很多驾校，价格都在5000左右，而且还要排队，选择回家报名，主要还是价格便宜很多，但也会麻烦很多，有什么事就得请假回去，而且学车也需要周末回去。</p>\n<h1 id=\"2013展望\"><a href=\"#2013展望\" class=\"headerlink\" title=\"2013展望\"></a>2013展望</h1><ol>\n<li><p>能尽快的把驾照拿到手；</p>\n</li>\n<li><p>准备要小宝宝；</p>\n</li>\n<li><p>买车；</p>\n</li>\n<li><p>工资有所突破；</p>\n</li>\n<li><p>职位有所突破；</p>\n</li>\n<li><p>深入研究几种技术，性能优化为主。</p>\n</li>\n</ol>"},{"title":"给老婆做的记账小软件","date":"2010-06-01T16:00:00.000Z","url":"/2010/06/a-billing-software-to-my-wife/","_content":"\n最近比较闲，根据老婆的需求利用上班时间花了一天多的时间做了一个家用记账小软件。现在网络上有那么的记账工具，为什么还要自己写呢？一来比较闲自己给自己找点事做，二来自己写的改动起来也方便点。下面就截几张图看看吧：\n<!--more-->\n\n#登录界面\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_094931.gif \"2010-12-31_094931\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_094931.gif)\n\n#登录成功后的主界面\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095027.gif \"2010-12-31_095027\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095027.gif)\n\n[ ](http://photo.blog.sina.com.cn/showpic.html#blogid=3cefded10100ixo8&amp;url=http://static16.photo.sina.com.cn/orignal/3cefded1t88091587d37f)\n\n#分类管理\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095401.gif \"2010-12-31_095401\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095401.gif)\n\n#记账管理\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095513.gif \"2010-12-31_095513\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095513.gif)\n\n#添加账目\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095559.gif \"2010-12-31_095559\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095559.gif)\n\n#搜索账目\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095656.gif \"2010-12-31_095656\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095656.gif)\n\n添加分类\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095833.gif \"2010-12-31_095833\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095833.gif)\n\n#切换主题\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095921.gif \"2010-12-31_095921\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095921.gif)\n\n#MSN风格主题\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_100002.gif \"2010-12-31_100002\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_100002.gif)\n\n#Vista风格主题\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_100047.gif \"2010-12-31_100047\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_100047.gif)\n\n\n","source":"_posts/a-billing-software-to-my-wife.md","raw":"title:  给老婆做的记账小软件\ndate:  2010-06-02\nurl:  /2010/06/a-billing-software-to-my-wife/\ncategories: [心情日记]\ntags:  [记账本]\n---\n\n最近比较闲，根据老婆的需求利用上班时间花了一天多的时间做了一个家用记账小软件。现在网络上有那么的记账工具，为什么还要自己写呢？一来比较闲自己给自己找点事做，二来自己写的改动起来也方便点。下面就截几张图看看吧：\n<!--more-->\n\n#登录界面\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_094931.gif \"2010-12-31_094931\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_094931.gif)\n\n#登录成功后的主界面\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095027.gif \"2010-12-31_095027\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095027.gif)\n\n[ ](http://photo.blog.sina.com.cn/showpic.html#blogid=3cefded10100ixo8&amp;url=http://static16.photo.sina.com.cn/orignal/3cefded1t88091587d37f)\n\n#分类管理\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095401.gif \"2010-12-31_095401\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095401.gif)\n\n#记账管理\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095513.gif \"2010-12-31_095513\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095513.gif)\n\n#添加账目\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095559.gif \"2010-12-31_095559\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095559.gif)\n\n#搜索账目\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095656.gif \"2010-12-31_095656\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095656.gif)\n\n添加分类\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095833.gif \"2010-12-31_095833\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095833.gif)\n\n#切换主题\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095921.gif \"2010-12-31_095921\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095921.gif)\n\n#MSN风格主题\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_100002.gif \"2010-12-31_100002\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_100002.gif)\n\n#Vista风格主题\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_100047.gif \"2010-12-31_100047\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_100047.gif)\n\n\n","slug":"a-billing-software-to-my-wife","published":1,"updated":"2016-08-11T14:35:51.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8y4000cxfynnbtno159","content":"<p>最近比较闲，根据老婆的需求利用上班时间花了一天多的时间做了一个家用记账小软件。现在网络上有那么的记账工具，为什么还要自己写呢？一来比较闲自己给自己找点事做，二来自己写的改动起来也方便点。下面就截几张图看看吧：<br><a id=\"more\"></a></p>\n<p>#登录界面</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_094931.gif\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_094931.gif\" alt=\"\" title=\"2010-12-31_094931\"></a></p>\n<p>#登录成功后的主界面</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095027.gif\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095027.gif\" alt=\"\" title=\"2010-12-31_095027\"></a></p>\n<p><a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=3cefded10100ixo8&amp;url=http://static16.photo.sina.com.cn/orignal/3cefded1t88091587d37f\" target=\"_blank\" rel=\"external\"> </a></p>\n<p>#分类管理</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095401.gif\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095401.gif\" alt=\"\" title=\"2010-12-31_095401\"></a></p>\n<p>#记账管理</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095513.gif\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095513.gif\" alt=\"\" title=\"2010-12-31_095513\"></a></p>\n<p>#添加账目</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095559.gif\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095559.gif\" alt=\"\" title=\"2010-12-31_095559\"></a></p>\n<p>#搜索账目</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095656.gif\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095656.gif\" alt=\"\" title=\"2010-12-31_095656\"></a></p>\n<p>添加分类</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095833.gif\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095833.gif\" alt=\"\" title=\"2010-12-31_095833\"></a></p>\n<p>#切换主题</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095921.gif\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095921.gif\" alt=\"\" title=\"2010-12-31_095921\"></a></p>\n<p>#MSN风格主题</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_100002.gif\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_100002.gif\" alt=\"\" title=\"2010-12-31_100002\"></a></p>\n<p>#Vista风格主题</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_100047.gif\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_100047.gif\" alt=\"\" title=\"2010-12-31_100047\"></a></p>\n","excerpt":"<p>最近比较闲，根据老婆的需求利用上班时间花了一天多的时间做了一个家用记账小软件。现在网络上有那么的记账工具，为什么还要自己写呢？一来比较闲自己给自己找点事做，二来自己写的改动起来也方便点。下面就截几张图看看吧：<br>","more":"</p>\n<p>#登录界面</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_094931.gif\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_094931.gif\" alt=\"\" title=\"2010-12-31_094931\"></a></p>\n<p>#登录成功后的主界面</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095027.gif\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095027.gif\" alt=\"\" title=\"2010-12-31_095027\"></a></p>\n<p><a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=3cefded10100ixo8&amp;url=http://static16.photo.sina.com.cn/orignal/3cefded1t88091587d37f\"> </a></p>\n<p>#分类管理</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095401.gif\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095401.gif\" alt=\"\" title=\"2010-12-31_095401\"></a></p>\n<p>#记账管理</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095513.gif\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095513.gif\" alt=\"\" title=\"2010-12-31_095513\"></a></p>\n<p>#添加账目</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095559.gif\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095559.gif\" alt=\"\" title=\"2010-12-31_095559\"></a></p>\n<p>#搜索账目</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095656.gif\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095656.gif\" alt=\"\" title=\"2010-12-31_095656\"></a></p>\n<p>添加分类</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095833.gif\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095833.gif\" alt=\"\" title=\"2010-12-31_095833\"></a></p>\n<p>#切换主题</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095921.gif\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_095921.gif\" alt=\"\" title=\"2010-12-31_095921\"></a></p>\n<p>#MSN风格主题</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_100002.gif\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_100002.gif\" alt=\"\" title=\"2010-12-31_100002\"></a></p>\n<p>#Vista风格主题</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_100047.gif\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-31_100047.gif\" alt=\"\" title=\"2010-12-31_100047\"></a></p>"},{"title":"关于LoadRunner的一点资料","date":"2010-08-23T16:00:00.000Z","url":"/2010/08/a-little-information-about-loadrunner/","_content":"\nLoadRunner是一款很强大的测试工具，前不久有过一段时间的使用经历，并且写了篇文章加以介绍\n\n[使用LoadRunner测试WMS](http://www.cnblogs.com/oec2003/archive/2010/05/21/1740625.html)\n\n在使用LoadRunner期间也积累的一些资料，下面给出下载地址与大家分享:\n<!--more-->\n[LOADRUNNER使用介绍PPT.rar](http://files.cnblogs.com/oec2003/LOADRUNNER%e4%bd%bf%e7%94%a8%e4%bb%8b%e7%bb%8dPPT.rar)\n\n[性能测试大全.rar](http://files.cnblogs.com/oec2003/%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95%e5%a4%a7%e5%85%a8.rar)\n\n[LoadRunner基本实例教程.rar](http://files.cnblogs.com/oec2003/LoadRunner%e5%9f%ba%e6%9c%ac%e5%ae%9e%e4%be%8b%e6%95%99%e7%a8%8b.rar)\n\n[LoadRunner的227问题.rar](http://files.cnblogs.com/oec2003/LoadRunner%e7%9a%84227%e9%97%ae%e9%a2%98.rar)\n\n\n","source":"_posts/a-little-information-about-loadrunner.md","raw":"title:  关于LoadRunner的一点资料\ndate:  2010-08-24\nurl:  /2010/08/a-little-information-about-loadrunner/\ncategories: [软件测试]\ntags:  [LoadRunner,WMS,压力测试]\n---\n\nLoadRunner是一款很强大的测试工具，前不久有过一段时间的使用经历，并且写了篇文章加以介绍\n\n[使用LoadRunner测试WMS](http://www.cnblogs.com/oec2003/archive/2010/05/21/1740625.html)\n\n在使用LoadRunner期间也积累的一些资料，下面给出下载地址与大家分享:\n<!--more-->\n[LOADRUNNER使用介绍PPT.rar](http://files.cnblogs.com/oec2003/LOADRUNNER%e4%bd%bf%e7%94%a8%e4%bb%8b%e7%bb%8dPPT.rar)\n\n[性能测试大全.rar](http://files.cnblogs.com/oec2003/%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95%e5%a4%a7%e5%85%a8.rar)\n\n[LoadRunner基本实例教程.rar](http://files.cnblogs.com/oec2003/LoadRunner%e5%9f%ba%e6%9c%ac%e5%ae%9e%e4%be%8b%e6%95%99%e7%a8%8b.rar)\n\n[LoadRunner的227问题.rar](http://files.cnblogs.com/oec2003/LoadRunner%e7%9a%84227%e9%97%ae%e9%a2%98.rar)\n\n\n","slug":"a-little-information-about-loadrunner","published":1,"updated":"2016-08-11T14:35:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8y7000fxfynzuv8qcgt","content":"<p>LoadRunner是一款很强大的测试工具，前不久有过一段时间的使用经历，并且写了篇文章加以介绍</p>\n<p><a href=\"http://www.cnblogs.com/oec2003/archive/2010/05/21/1740625.html\" target=\"_blank\" rel=\"external\">使用LoadRunner测试WMS</a></p>\n<p>在使用LoadRunner期间也积累的一些资料，下面给出下载地址与大家分享:<br><a id=\"more\"></a><br><a href=\"http://files.cnblogs.com/oec2003/LOADRUNNER%e4%bd%bf%e7%94%a8%e4%bb%8b%e7%bb%8dPPT.rar\" target=\"_blank\" rel=\"external\">LOADRUNNER使用介绍PPT.rar</a></p>\n<p><a href=\"http://files.cnblogs.com/oec2003/%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95%e5%a4%a7%e5%85%a8.rar\" target=\"_blank\" rel=\"external\">性能测试大全.rar</a></p>\n<p><a href=\"http://files.cnblogs.com/oec2003/LoadRunner%e5%9f%ba%e6%9c%ac%e5%ae%9e%e4%be%8b%e6%95%99%e7%a8%8b.rar\" target=\"_blank\" rel=\"external\">LoadRunner基本实例教程.rar</a></p>\n<p><a href=\"http://files.cnblogs.com/oec2003/LoadRunner%e7%9a%84227%e9%97%ae%e9%a2%98.rar\" target=\"_blank\" rel=\"external\">LoadRunner的227问题.rar</a></p>\n","excerpt":"<p>LoadRunner是一款很强大的测试工具，前不久有过一段时间的使用经历，并且写了篇文章加以介绍</p>\n<p><a href=\"http://www.cnblogs.com/oec2003/archive/2010/05/21/1740625.html\">使用LoadRunner测试WMS</a></p>\n<p>在使用LoadRunner期间也积累的一些资料，下面给出下载地址与大家分享:<br>","more":"<br><a href=\"http://files.cnblogs.com/oec2003/LOADRUNNER%e4%bd%bf%e7%94%a8%e4%bb%8b%e7%bb%8dPPT.rar\">LOADRUNNER使用介绍PPT.rar</a></p>\n<p><a href=\"http://files.cnblogs.com/oec2003/%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95%e5%a4%a7%e5%85%a8.rar\">性能测试大全.rar</a></p>\n<p><a href=\"http://files.cnblogs.com/oec2003/LoadRunner%e5%9f%ba%e6%9c%ac%e5%ae%9e%e4%be%8b%e6%95%99%e7%a8%8b.rar\">LoadRunner基本实例教程.rar</a></p>\n<p><a href=\"http://files.cnblogs.com/oec2003/LoadRunner%e7%9a%84227%e9%97%ae%e9%a2%98.rar\">LoadRunner的227问题.rar</a></p>"},{"title":"对设计模式的一点理解","date":"2007-09-07T16:00:00.000Z","url":"/2007/09/a-little-understanding-of-design-patterns/","_content":"\n说起设计模式，不得不提的是GoF23种设计模式，这些设计模式是在历史性的一本经典著作《设计模式：可复用面向对象软件的基础》被描述的，这本书的四位作者并称为Gang of Four(GoF) 。由于这本书极具影响力，所以我们通常所说的设计模式就隐含地表示为“面向对象设计模式”，但这并不意味着“设计模式”就等同于“面向对象设计模式”。\n<!--more-->\n很多人认为设计模式就是一种法则或一种解决方案，认为只要使用设计模式就可以提高设计的质量。在我还没有接触设计模式之前也认为是这样。然而这种观点是不正确的，设计模式不是我们必须遵守的法则，也不是解决方案，而是与一定的上下文相关的并且综合各种考虑的选择，是在一种特定的场景中权衡各方面利弊的一种方案的选择，这种选择是这些利弊平衡的结果，获得好处的同时我们也会付出相应的代价，所以并不是任何情况都能使用设计模式，更直观地说就是在权衡了利弊之后，只有当利大于弊的时候使用设计模式才对我们有用，否则只会适得其反，给我们的设计带来麻烦。是否采用设计模式取决于项目是否有符合模式的场景，并且所付出的代价是否在我们可接受的防范围之内，有时候处理一些简单的问题不使用设计模式同样可以很好地解决，所以在使用设计模式时应该慎重以避免发生不必要的麻烦。\n\n使用设计模式能提高我们的开发速度吗？这个问题应该从两个方面来考虑。短期来看使用设计模式可能会引进更多的对象和更复杂的装配关系，从而使程序有更多的动态状态，从局部来看结构变得复杂，不好理解而且测试困难，看起来事情好像变得更糟糕了，开发周期肯定会变长，然而这只是一种表面现象。如果从项目的整个开发周期来看，合理地使用设计模式会使程序结构变得更健壮，维护性更好。现在的软件开发客户的需求不可能使一成不变的，一个结构不好的程序有可能前期的开发书的很快，但客户的需求一但发生变化，就需要花费更多的时间和精力来维护。所以从长远来看或是说从软件的整个生命周期来看，在使用设计模式时所花费的时间和精力是为后期的维护带来更多的方便，是值得的。\n\n因为现在我们所说的设计模式是指面向对象设计模式，所以学习设计模式是建立在理解面向对象的基础之上。说起面向对象我们通常会想到面向对象语言，如C++、C#、JAVA等。这些语言之间是有区别的，但他们都对面向对象三大机制支持，即：“封装、继承、多态”。但面向对象语言并不是面向对象的全部，面向对象语言用得很熟也不能说明就很了解面向对象了。我也是才刚刚起步，还在不断努力之中，当然谈不上对面向对象有多深的理解，但我认为理解这种思想是很重要的，不要误以为会点面向对象语言就以为精通面向对象了。\n\n\n","source":"_posts/a-little-understanding-of-design-patterns.md","raw":"title:  对设计模式的一点理解\ndate:  2007-09-08\nurl:  /2007/09/a-little-understanding-of-design-patterns/\ncategories: [设计模式]\ntags:  [设计模式]\n---\n\n说起设计模式，不得不提的是GoF23种设计模式，这些设计模式是在历史性的一本经典著作《设计模式：可复用面向对象软件的基础》被描述的，这本书的四位作者并称为Gang of Four(GoF) 。由于这本书极具影响力，所以我们通常所说的设计模式就隐含地表示为“面向对象设计模式”，但这并不意味着“设计模式”就等同于“面向对象设计模式”。\n<!--more-->\n很多人认为设计模式就是一种法则或一种解决方案，认为只要使用设计模式就可以提高设计的质量。在我还没有接触设计模式之前也认为是这样。然而这种观点是不正确的，设计模式不是我们必须遵守的法则，也不是解决方案，而是与一定的上下文相关的并且综合各种考虑的选择，是在一种特定的场景中权衡各方面利弊的一种方案的选择，这种选择是这些利弊平衡的结果，获得好处的同时我们也会付出相应的代价，所以并不是任何情况都能使用设计模式，更直观地说就是在权衡了利弊之后，只有当利大于弊的时候使用设计模式才对我们有用，否则只会适得其反，给我们的设计带来麻烦。是否采用设计模式取决于项目是否有符合模式的场景，并且所付出的代价是否在我们可接受的防范围之内，有时候处理一些简单的问题不使用设计模式同样可以很好地解决，所以在使用设计模式时应该慎重以避免发生不必要的麻烦。\n\n使用设计模式能提高我们的开发速度吗？这个问题应该从两个方面来考虑。短期来看使用设计模式可能会引进更多的对象和更复杂的装配关系，从而使程序有更多的动态状态，从局部来看结构变得复杂，不好理解而且测试困难，看起来事情好像变得更糟糕了，开发周期肯定会变长，然而这只是一种表面现象。如果从项目的整个开发周期来看，合理地使用设计模式会使程序结构变得更健壮，维护性更好。现在的软件开发客户的需求不可能使一成不变的，一个结构不好的程序有可能前期的开发书的很快，但客户的需求一但发生变化，就需要花费更多的时间和精力来维护。所以从长远来看或是说从软件的整个生命周期来看，在使用设计模式时所花费的时间和精力是为后期的维护带来更多的方便，是值得的。\n\n因为现在我们所说的设计模式是指面向对象设计模式，所以学习设计模式是建立在理解面向对象的基础之上。说起面向对象我们通常会想到面向对象语言，如C++、C#、JAVA等。这些语言之间是有区别的，但他们都对面向对象三大机制支持，即：“封装、继承、多态”。但面向对象语言并不是面向对象的全部，面向对象语言用得很熟也不能说明就很了解面向对象了。我也是才刚刚起步，还在不断努力之中，当然谈不上对面向对象有多深的理解，但我认为理解这种思想是很重要的，不要误以为会点面向对象语言就以为精通面向对象了。\n\n\n","slug":"a-little-understanding-of-design-patterns","published":1,"updated":"2016-08-11T14:36:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8ya000jxfynjhyvxdfd","content":"<p>说起设计模式，不得不提的是GoF23种设计模式，这些设计模式是在历史性的一本经典著作《设计模式：可复用面向对象软件的基础》被描述的，这本书的四位作者并称为Gang of Four(GoF) 。由于这本书极具影响力，所以我们通常所说的设计模式就隐含地表示为“面向对象设计模式”，但这并不意味着“设计模式”就等同于“面向对象设计模式”。<br><a id=\"more\"></a><br>很多人认为设计模式就是一种法则或一种解决方案，认为只要使用设计模式就可以提高设计的质量。在我还没有接触设计模式之前也认为是这样。然而这种观点是不正确的，设计模式不是我们必须遵守的法则，也不是解决方案，而是与一定的上下文相关的并且综合各种考虑的选择，是在一种特定的场景中权衡各方面利弊的一种方案的选择，这种选择是这些利弊平衡的结果，获得好处的同时我们也会付出相应的代价，所以并不是任何情况都能使用设计模式，更直观地说就是在权衡了利弊之后，只有当利大于弊的时候使用设计模式才对我们有用，否则只会适得其反，给我们的设计带来麻烦。是否采用设计模式取决于项目是否有符合模式的场景，并且所付出的代价是否在我们可接受的防范围之内，有时候处理一些简单的问题不使用设计模式同样可以很好地解决，所以在使用设计模式时应该慎重以避免发生不必要的麻烦。</p>\n<p>使用设计模式能提高我们的开发速度吗？这个问题应该从两个方面来考虑。短期来看使用设计模式可能会引进更多的对象和更复杂的装配关系，从而使程序有更多的动态状态，从局部来看结构变得复杂，不好理解而且测试困难，看起来事情好像变得更糟糕了，开发周期肯定会变长，然而这只是一种表面现象。如果从项目的整个开发周期来看，合理地使用设计模式会使程序结构变得更健壮，维护性更好。现在的软件开发客户的需求不可能使一成不变的，一个结构不好的程序有可能前期的开发书的很快，但客户的需求一但发生变化，就需要花费更多的时间和精力来维护。所以从长远来看或是说从软件的整个生命周期来看，在使用设计模式时所花费的时间和精力是为后期的维护带来更多的方便，是值得的。</p>\n<p>因为现在我们所说的设计模式是指面向对象设计模式，所以学习设计模式是建立在理解面向对象的基础之上。说起面向对象我们通常会想到面向对象语言，如C++、C#、JAVA等。这些语言之间是有区别的，但他们都对面向对象三大机制支持，即：“封装、继承、多态”。但面向对象语言并不是面向对象的全部，面向对象语言用得很熟也不能说明就很了解面向对象了。我也是才刚刚起步，还在不断努力之中，当然谈不上对面向对象有多深的理解，但我认为理解这种思想是很重要的，不要误以为会点面向对象语言就以为精通面向对象了。</p>\n","excerpt":"<p>说起设计模式，不得不提的是GoF23种设计模式，这些设计模式是在历史性的一本经典著作《设计模式：可复用面向对象软件的基础》被描述的，这本书的四位作者并称为Gang of Four(GoF) 。由于这本书极具影响力，所以我们通常所说的设计模式就隐含地表示为“面向对象设计模式”，但这并不意味着“设计模式”就等同于“面向对象设计模式”。<br>","more":"<br>很多人认为设计模式就是一种法则或一种解决方案，认为只要使用设计模式就可以提高设计的质量。在我还没有接触设计模式之前也认为是这样。然而这种观点是不正确的，设计模式不是我们必须遵守的法则，也不是解决方案，而是与一定的上下文相关的并且综合各种考虑的选择，是在一种特定的场景中权衡各方面利弊的一种方案的选择，这种选择是这些利弊平衡的结果，获得好处的同时我们也会付出相应的代价，所以并不是任何情况都能使用设计模式，更直观地说就是在权衡了利弊之后，只有当利大于弊的时候使用设计模式才对我们有用，否则只会适得其反，给我们的设计带来麻烦。是否采用设计模式取决于项目是否有符合模式的场景，并且所付出的代价是否在我们可接受的防范围之内，有时候处理一些简单的问题不使用设计模式同样可以很好地解决，所以在使用设计模式时应该慎重以避免发生不必要的麻烦。</p>\n<p>使用设计模式能提高我们的开发速度吗？这个问题应该从两个方面来考虑。短期来看使用设计模式可能会引进更多的对象和更复杂的装配关系，从而使程序有更多的动态状态，从局部来看结构变得复杂，不好理解而且测试困难，看起来事情好像变得更糟糕了，开发周期肯定会变长，然而这只是一种表面现象。如果从项目的整个开发周期来看，合理地使用设计模式会使程序结构变得更健壮，维护性更好。现在的软件开发客户的需求不可能使一成不变的，一个结构不好的程序有可能前期的开发书的很快，但客户的需求一但发生变化，就需要花费更多的时间和精力来维护。所以从长远来看或是说从软件的整个生命周期来看，在使用设计模式时所花费的时间和精力是为后期的维护带来更多的方便，是值得的。</p>\n<p>因为现在我们所说的设计模式是指面向对象设计模式，所以学习设计模式是建立在理解面向对象的基础之上。说起面向对象我们通常会想到面向对象语言，如C++、C#、JAVA等。这些语言之间是有区别的，但他们都对面向对象三大机制支持，即：“封装、继承、多态”。但面向对象语言并不是面向对象的全部，面向对象语言用得很熟也不能说明就很了解面向对象了。我也是才刚刚起步，还在不断努力之中，当然谈不上对面向对象有多深的理解，但我认为理解这种思想是很重要的，不要误以为会点面向对象语言就以为精通面向对象了。</p>"},{"title":"Asp.Net中的一个小的性能测试","date":"2007-01-02T16:00:00.000Z","_content":"\n大家都知道使用缓存可用大大提高asp.net应用程序的性能,那么究竟能提高多少性能呢?我做了一个小小的测试.\n\n1. 在vs2003中新建一个web应用程序,在页面上添加一个DataGrid控件，让DataGrid里显示NorthWind数据库中employees表的内容。我的做法是在vs2003的服务器资源管理器中建立一个连接到NorthWind数据库的连接，然后将其中的employees\n<!--more-->\n表拖到页面中，如图：\n\n![2010-12-30_214625](http://oec2003.qiniudn.com/2010-12-30_214625.gif)\n\n当然还有别的方法连接数据库\n\n这样就自动生成了sqlDataConnection1和sqlDataAdapter1，右击sqlDataAdapter1点击生成数据集，根据向导生成数据集dataSet11。\n\n2. 双击页面进入.cs文件下（我用的是C＃语言），首先导入命名空间，然后在Page_Load中写如下代码：\n\n![2010-12-30_214704](http://oec2003.qiniudn.com/2010-12-30_214704.gif)\n\n按F5运行，就能看见DataGrid控件中显employees表中的数据。\n\n3. 显示做完了，现在就开始测试了，打开vs2003自带的测试工具－MicroSoft Application Center Test如图：\n\n![2010-12-30_214748](http://oec2003.qiniudn.com/2010-12-30_214748.gif)\n\n打开了测试工具后，点击文件下面的新建项目来新建一个测试项目，在新建的测试项目上右击新建一个测试，根据向导完成。在页面没用缓存和使用了缓存分别做一次。就能看见出明显的差别了。使用页面缓存方法是：将页面切换到HTML代码模式，在上面加上OutpurCache指令。\n\n如:\n\n```\n[%@OutputCache Duration=\"60\" VaryByParam=\"none\" %](mailto:%25@OutputCache%20Duration=)\n```\n\n下面两张图为使用缓存前后的结果对比图\n\n**使用前：**\n\n![2010-12-30_214826](http://oec2003.qiniudn.com/2010-12-30_214826.gif)\n\n\n**使用后：**\n\n![2010-12-30_214859](http://oec2003.qiniudn.com/2010-12-30_214859.gif)\n\n很明显可以看出使用页面缓存和性能提高了4倍多\n\n\n","source":"_posts/a-small-performance-test-of-asp-net.md","raw":"title:  Asp.Net中的一个小的性能测试\ndate:  2007-01-03\ncategories: [Asp.Net]\ntags:  [AspNet,性能]\n---\n\n大家都知道使用缓存可用大大提高asp.net应用程序的性能,那么究竟能提高多少性能呢?我做了一个小小的测试.\n\n1. 在vs2003中新建一个web应用程序,在页面上添加一个DataGrid控件，让DataGrid里显示NorthWind数据库中employees表的内容。我的做法是在vs2003的服务器资源管理器中建立一个连接到NorthWind数据库的连接，然后将其中的employees\n<!--more-->\n表拖到页面中，如图：\n\n![2010-12-30_214625](http://oec2003.qiniudn.com/2010-12-30_214625.gif)\n\n当然还有别的方法连接数据库\n\n这样就自动生成了sqlDataConnection1和sqlDataAdapter1，右击sqlDataAdapter1点击生成数据集，根据向导生成数据集dataSet11。\n\n2. 双击页面进入.cs文件下（我用的是C＃语言），首先导入命名空间，然后在Page_Load中写如下代码：\n\n![2010-12-30_214704](http://oec2003.qiniudn.com/2010-12-30_214704.gif)\n\n按F5运行，就能看见DataGrid控件中显employees表中的数据。\n\n3. 显示做完了，现在就开始测试了，打开vs2003自带的测试工具－MicroSoft Application Center Test如图：\n\n![2010-12-30_214748](http://oec2003.qiniudn.com/2010-12-30_214748.gif)\n\n打开了测试工具后，点击文件下面的新建项目来新建一个测试项目，在新建的测试项目上右击新建一个测试，根据向导完成。在页面没用缓存和使用了缓存分别做一次。就能看见出明显的差别了。使用页面缓存方法是：将页面切换到HTML代码模式，在上面加上OutpurCache指令。\n\n如:\n\n```\n[%@OutputCache Duration=\"60\" VaryByParam=\"none\" %](mailto:%25@OutputCache%20Duration=)\n```\n\n下面两张图为使用缓存前后的结果对比图\n\n**使用前：**\n\n![2010-12-30_214826](http://oec2003.qiniudn.com/2010-12-30_214826.gif)\n\n\n**使用后：**\n\n![2010-12-30_214859](http://oec2003.qiniudn.com/2010-12-30_214859.gif)\n\n很明显可以看出使用页面缓存和性能提高了4倍多\n\n\n","slug":"a-small-performance-test-of-asp-net","published":1,"updated":"2016-08-12T15:53:51.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8yc000lxfyn9bpngicw","content":"<p>大家都知道使用缓存可用大大提高asp.net应用程序的性能,那么究竟能提高多少性能呢?我做了一个小小的测试.</p>\n<ol>\n<li>在vs2003中新建一个web应用程序,在页面上添加一个DataGrid控件，让DataGrid里显示NorthWind数据库中employees表的内容。我的做法是在vs2003的服务器资源管理器中建立一个连接到NorthWind数据库的连接，然后将其中的employees<a id=\"more\"></a>\n表拖到页面中，如图：</li>\n</ol>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_214625.gif\" alt=\"2010-12-30_214625\"></p>\n<p>当然还有别的方法连接数据库</p>\n<p>这样就自动生成了sqlDataConnection1和sqlDataAdapter1，右击sqlDataAdapter1点击生成数据集，根据向导生成数据集dataSet11。</p>\n<ol>\n<li>双击页面进入.cs文件下（我用的是C＃语言），首先导入命名空间，然后在Page_Load中写如下代码：</li>\n</ol>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_214704.gif\" alt=\"2010-12-30_214704\"></p>\n<p>按F5运行，就能看见DataGrid控件中显employees表中的数据。</p>\n<ol>\n<li>显示做完了，现在就开始测试了，打开vs2003自带的测试工具－MicroSoft Application Center Test如图：</li>\n</ol>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_214748.gif\" alt=\"2010-12-30_214748\"></p>\n<p>打开了测试工具后，点击文件下面的新建项目来新建一个测试项目，在新建的测试项目上右击新建一个测试，根据向导完成。在页面没用缓存和使用了缓存分别做一次。就能看见出明显的差别了。使用页面缓存方法是：将页面切换到HTML代码模式，在上面加上OutpurCache指令。</p>\n<p>如:</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-attr\">[%@OutputCache Duration=\"60\" VaryByParam=\"none\" %]</span>(<span class=\"attribute\">mailto</span>:%<span class=\"number\">25</span><span class=\"variable\">@OutputCache</span>%<span class=\"number\">20</span>Duration=)</div></pre></td></tr></table></figure>\n<p>下面两张图为使用缓存前后的结果对比图</p>\n<p><strong>使用前：</strong></p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_214826.gif\" alt=\"2010-12-30_214826\"></p>\n<p><strong>使用后：</strong></p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_214859.gif\" alt=\"2010-12-30_214859\"></p>\n<p>很明显可以看出使用页面缓存和性能提高了4倍多</p>\n","excerpt":"<p>大家都知道使用缓存可用大大提高asp.net应用程序的性能,那么究竟能提高多少性能呢?我做了一个小小的测试.</p>\n<ol>\n<li>在vs2003中新建一个web应用程序,在页面上添加一个DataGrid控件，让DataGrid里显示NorthWind数据库中employees表的内容。我的做法是在vs2003的服务器资源管理器中建立一个连接到NorthWind数据库的连接，然后将其中的employees","more":"表拖到页面中，如图：</li>\n</ol>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_214625.gif\" alt=\"2010-12-30_214625\"></p>\n<p>当然还有别的方法连接数据库</p>\n<p>这样就自动生成了sqlDataConnection1和sqlDataAdapter1，右击sqlDataAdapter1点击生成数据集，根据向导生成数据集dataSet11。</p>\n<ol>\n<li>双击页面进入.cs文件下（我用的是C＃语言），首先导入命名空间，然后在Page_Load中写如下代码：</li>\n</ol>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_214704.gif\" alt=\"2010-12-30_214704\"></p>\n<p>按F5运行，就能看见DataGrid控件中显employees表中的数据。</p>\n<ol>\n<li>显示做完了，现在就开始测试了，打开vs2003自带的测试工具－MicroSoft Application Center Test如图：</li>\n</ol>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_214748.gif\" alt=\"2010-12-30_214748\"></p>\n<p>打开了测试工具后，点击文件下面的新建项目来新建一个测试项目，在新建的测试项目上右击新建一个测试，根据向导完成。在页面没用缓存和使用了缓存分别做一次。就能看见出明显的差别了。使用页面缓存方法是：将页面切换到HTML代码模式，在上面加上OutpurCache指令。</p>\n<p>如:</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-attr\">[%@OutputCache Duration=\"60\" VaryByParam=\"none\" %]</span>(<span class=\"attribute\">mailto</span>:%<span class=\"number\">25</span><span class=\"variable\">@OutputCache</span>%<span class=\"number\">20</span>Duration=)</div></pre></td></tr></table></figure>\n<p>下面两张图为使用缓存前后的结果对比图</p>\n<p><strong>使用前：</strong></p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_214826.gif\" alt=\"2010-12-30_214826\"></p>\n<p><strong>使用后：</strong></p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_214859.gif\" alt=\"2010-12-30_214859\"></p>\n<p>很明显可以看出使用页面缓存和性能提高了4倍多</p>"},{"title":"公司组织北戴河夏游小记 2010年7月24日","date":"2010-07-25T16:00:00.000Z","url":"/2010/07/a-trip-to-beidaihe-2010-07-24/","_content":"\n24日早上起了个大早做地铁赶到公司集合，不过司机同志也太不守时了，害我们多等了半个小时。车程4个小时到达秦皇岛，时间正好是中午的饭点，所以就安排了吃中午饭，饭菜实在不怎么样，不过也挺习惯这种旅游的饭菜，让人不能理解的是吃饭的桌子没有转盘，我也懒得起身，这样使得我只吃到了一半的菜。\n\n<!--more-->\n24日下午坐车去了第一个目的地---南戴河沙雕大世界，本来40多分钟就可以到，但因为堵车用了1个多小时。沙雕大世界里有很多项目，滑沙、滑草、射箭、真人CS、沙滩摩托、沙滩足球等。既然是在海边玩肯定就直奔主题来到了海边，因不会游泳所以只是拖了鞋在海边走了走。之后便和同事一起进行了激烈的沙滩足球赛，不过以我的人数也就是充充人数而已，另人意外的是平时只在篮球场上驰骋的辰哥在这次足球赛中也表现比较出彩。一个多小时很快过去，在剧烈运动大汗淋漓的状态下吹吹凉爽的海风真的很爽。\n\n24日晚上吃的海鲜大排档，这也是我第一次正儿八经的吃海鲜，自然很多东西也是第一次吃到。没有什么很特别的感觉，不过感觉也不难吃。吃饭期间公司组织了抽奖活动，一共有12个中奖名额，幸运的是我是这12人之一，在此特别感谢下宇哥，一个蓝牙的无线鼠标也正好用的上。\n\n24日深夜去北戴河海边游夜泳，临时买的泳裤和租的游泳圈，吃完饭后在海水里泡泡很舒服。刚下海的时候一个浪过来喝了好几口海水，第一次尝到了海水的味道。\n\n25日上午安排的是坐游轮，这也是本次旅游最后一个项目，本来是坐上午10点的船，但由于早饭吃的比较晚等原因没能赶上10点的，自由活动1小时后坐的11点的船，在船上的时间是1个小时，不一会就看不见岸边的建筑的，四面都是茫茫大海，尽管天气很炎热，但穿上的风很大。这也是我第一次坐船在大海上，发现这次出来有不少第一次，呵呵。\n\n25日吃完午饭后就坐车回京了。重点提下25号的中午饭，在有人提过意见后，质量比24号的中午饭好太多了。\n\n开心的事\n\n*   抽中一个蓝牙无线鼠\n\n*   深夜去海里游泳\n\n遗憾的事\n\n*   没能和老婆一起\n\n其实公司这次活动是可以带家属的，但我没让老婆一起去，原因有三：\n\n1.  老婆身体状况不好，处在感冒期\n\n2.  去的是海边城市，吃的东西都是海鲜类，而老婆又不吃海鲜类的东西\n\n3.  进公司时间不是很长，很多同事不是很熟，想借此机会好好熟悉一下，如果老婆一起了我肯定要全陪了。\n\n考虑到上面的原因我就自作主张的没有让老婆去了，回来后也让老婆很生气，因为她之前以为我们公司是不能带家属，所以我才没邀请她的。这事确实是我做的不对了，希望老婆能原谅一次，下不为例了。两个人在一起需要互相信任，也希望老婆能信任我，不要胡思乱想了。\n\n\n","source":"_posts/a-trip-to-beidaihe-2010-07-24.md","raw":"title:  公司组织北戴河夏游小记 2010年7月24日\ndate:  2010-07-26\nurl:  /2010/07/a-trip-to-beidaihe-2010-07-24/\ncategories: [心情日记]\ntags: [旅游]\n---\n\n24日早上起了个大早做地铁赶到公司集合，不过司机同志也太不守时了，害我们多等了半个小时。车程4个小时到达秦皇岛，时间正好是中午的饭点，所以就安排了吃中午饭，饭菜实在不怎么样，不过也挺习惯这种旅游的饭菜，让人不能理解的是吃饭的桌子没有转盘，我也懒得起身，这样使得我只吃到了一半的菜。\n\n<!--more-->\n24日下午坐车去了第一个目的地---南戴河沙雕大世界，本来40多分钟就可以到，但因为堵车用了1个多小时。沙雕大世界里有很多项目，滑沙、滑草、射箭、真人CS、沙滩摩托、沙滩足球等。既然是在海边玩肯定就直奔主题来到了海边，因不会游泳所以只是拖了鞋在海边走了走。之后便和同事一起进行了激烈的沙滩足球赛，不过以我的人数也就是充充人数而已，另人意外的是平时只在篮球场上驰骋的辰哥在这次足球赛中也表现比较出彩。一个多小时很快过去，在剧烈运动大汗淋漓的状态下吹吹凉爽的海风真的很爽。\n\n24日晚上吃的海鲜大排档，这也是我第一次正儿八经的吃海鲜，自然很多东西也是第一次吃到。没有什么很特别的感觉，不过感觉也不难吃。吃饭期间公司组织了抽奖活动，一共有12个中奖名额，幸运的是我是这12人之一，在此特别感谢下宇哥，一个蓝牙的无线鼠标也正好用的上。\n\n24日深夜去北戴河海边游夜泳，临时买的泳裤和租的游泳圈，吃完饭后在海水里泡泡很舒服。刚下海的时候一个浪过来喝了好几口海水，第一次尝到了海水的味道。\n\n25日上午安排的是坐游轮，这也是本次旅游最后一个项目，本来是坐上午10点的船，但由于早饭吃的比较晚等原因没能赶上10点的，自由活动1小时后坐的11点的船，在船上的时间是1个小时，不一会就看不见岸边的建筑的，四面都是茫茫大海，尽管天气很炎热，但穿上的风很大。这也是我第一次坐船在大海上，发现这次出来有不少第一次，呵呵。\n\n25日吃完午饭后就坐车回京了。重点提下25号的中午饭，在有人提过意见后，质量比24号的中午饭好太多了。\n\n开心的事\n\n*   抽中一个蓝牙无线鼠\n\n*   深夜去海里游泳\n\n遗憾的事\n\n*   没能和老婆一起\n\n其实公司这次活动是可以带家属的，但我没让老婆一起去，原因有三：\n\n1.  老婆身体状况不好，处在感冒期\n\n2.  去的是海边城市，吃的东西都是海鲜类，而老婆又不吃海鲜类的东西\n\n3.  进公司时间不是很长，很多同事不是很熟，想借此机会好好熟悉一下，如果老婆一起了我肯定要全陪了。\n\n考虑到上面的原因我就自作主张的没有让老婆去了，回来后也让老婆很生气，因为她之前以为我们公司是不能带家属，所以我才没邀请她的。这事确实是我做的不对了，希望老婆能原谅一次，下不为例了。两个人在一起需要互相信任，也希望老婆能信任我，不要胡思乱想了。\n\n\n","slug":"a-trip-to-beidaihe-2010-07-24","published":1,"updated":"2016-08-11T14:36:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8ye000qxfynhptb9pco","content":"<p>24日早上起了个大早做地铁赶到公司集合，不过司机同志也太不守时了，害我们多等了半个小时。车程4个小时到达秦皇岛，时间正好是中午的饭点，所以就安排了吃中午饭，饭菜实在不怎么样，不过也挺习惯这种旅游的饭菜，让人不能理解的是吃饭的桌子没有转盘，我也懒得起身，这样使得我只吃到了一半的菜。</p>\n<a id=\"more\"></a>\n<p>24日下午坐车去了第一个目的地—南戴河沙雕大世界，本来40多分钟就可以到，但因为堵车用了1个多小时。沙雕大世界里有很多项目，滑沙、滑草、射箭、真人CS、沙滩摩托、沙滩足球等。既然是在海边玩肯定就直奔主题来到了海边，因不会游泳所以只是拖了鞋在海边走了走。之后便和同事一起进行了激烈的沙滩足球赛，不过以我的人数也就是充充人数而已，另人意外的是平时只在篮球场上驰骋的辰哥在这次足球赛中也表现比较出彩。一个多小时很快过去，在剧烈运动大汗淋漓的状态下吹吹凉爽的海风真的很爽。</p>\n<p>24日晚上吃的海鲜大排档，这也是我第一次正儿八经的吃海鲜，自然很多东西也是第一次吃到。没有什么很特别的感觉，不过感觉也不难吃。吃饭期间公司组织了抽奖活动，一共有12个中奖名额，幸运的是我是这12人之一，在此特别感谢下宇哥，一个蓝牙的无线鼠标也正好用的上。</p>\n<p>24日深夜去北戴河海边游夜泳，临时买的泳裤和租的游泳圈，吃完饭后在海水里泡泡很舒服。刚下海的时候一个浪过来喝了好几口海水，第一次尝到了海水的味道。</p>\n<p>25日上午安排的是坐游轮，这也是本次旅游最后一个项目，本来是坐上午10点的船，但由于早饭吃的比较晚等原因没能赶上10点的，自由活动1小时后坐的11点的船，在船上的时间是1个小时，不一会就看不见岸边的建筑的，四面都是茫茫大海，尽管天气很炎热，但穿上的风很大。这也是我第一次坐船在大海上，发现这次出来有不少第一次，呵呵。</p>\n<p>25日吃完午饭后就坐车回京了。重点提下25号的中午饭，在有人提过意见后，质量比24号的中午饭好太多了。</p>\n<p>开心的事</p>\n<ul>\n<li><p>抽中一个蓝牙无线鼠</p>\n</li>\n<li><p>深夜去海里游泳</p>\n</li>\n</ul>\n<p>遗憾的事</p>\n<ul>\n<li>没能和老婆一起</li>\n</ul>\n<p>其实公司这次活动是可以带家属的，但我没让老婆一起去，原因有三：</p>\n<ol>\n<li><p>老婆身体状况不好，处在感冒期</p>\n</li>\n<li><p>去的是海边城市，吃的东西都是海鲜类，而老婆又不吃海鲜类的东西</p>\n</li>\n<li><p>进公司时间不是很长，很多同事不是很熟，想借此机会好好熟悉一下，如果老婆一起了我肯定要全陪了。</p>\n</li>\n</ol>\n<p>考虑到上面的原因我就自作主张的没有让老婆去了，回来后也让老婆很生气，因为她之前以为我们公司是不能带家属，所以我才没邀请她的。这事确实是我做的不对了，希望老婆能原谅一次，下不为例了。两个人在一起需要互相信任，也希望老婆能信任我，不要胡思乱想了。</p>\n","excerpt":"<p>24日早上起了个大早做地铁赶到公司集合，不过司机同志也太不守时了，害我们多等了半个小时。车程4个小时到达秦皇岛，时间正好是中午的饭点，所以就安排了吃中午饭，饭菜实在不怎么样，不过也挺习惯这种旅游的饭菜，让人不能理解的是吃饭的桌子没有转盘，我也懒得起身，这样使得我只吃到了一半的菜。</p>","more":"<p>24日下午坐车去了第一个目的地—南戴河沙雕大世界，本来40多分钟就可以到，但因为堵车用了1个多小时。沙雕大世界里有很多项目，滑沙、滑草、射箭、真人CS、沙滩摩托、沙滩足球等。既然是在海边玩肯定就直奔主题来到了海边，因不会游泳所以只是拖了鞋在海边走了走。之后便和同事一起进行了激烈的沙滩足球赛，不过以我的人数也就是充充人数而已，另人意外的是平时只在篮球场上驰骋的辰哥在这次足球赛中也表现比较出彩。一个多小时很快过去，在剧烈运动大汗淋漓的状态下吹吹凉爽的海风真的很爽。</p>\n<p>24日晚上吃的海鲜大排档，这也是我第一次正儿八经的吃海鲜，自然很多东西也是第一次吃到。没有什么很特别的感觉，不过感觉也不难吃。吃饭期间公司组织了抽奖活动，一共有12个中奖名额，幸运的是我是这12人之一，在此特别感谢下宇哥，一个蓝牙的无线鼠标也正好用的上。</p>\n<p>24日深夜去北戴河海边游夜泳，临时买的泳裤和租的游泳圈，吃完饭后在海水里泡泡很舒服。刚下海的时候一个浪过来喝了好几口海水，第一次尝到了海水的味道。</p>\n<p>25日上午安排的是坐游轮，这也是本次旅游最后一个项目，本来是坐上午10点的船，但由于早饭吃的比较晚等原因没能赶上10点的，自由活动1小时后坐的11点的船，在船上的时间是1个小时，不一会就看不见岸边的建筑的，四面都是茫茫大海，尽管天气很炎热，但穿上的风很大。这也是我第一次坐船在大海上，发现这次出来有不少第一次，呵呵。</p>\n<p>25日吃完午饭后就坐车回京了。重点提下25号的中午饭，在有人提过意见后，质量比24号的中午饭好太多了。</p>\n<p>开心的事</p>\n<ul>\n<li><p>抽中一个蓝牙无线鼠</p>\n</li>\n<li><p>深夜去海里游泳</p>\n</li>\n</ul>\n<p>遗憾的事</p>\n<ul>\n<li>没能和老婆一起</li>\n</ul>\n<p>其实公司这次活动是可以带家属的，但我没让老婆一起去，原因有三：</p>\n<ol>\n<li><p>老婆身体状况不好，处在感冒期</p>\n</li>\n<li><p>去的是海边城市，吃的东西都是海鲜类，而老婆又不吃海鲜类的东西</p>\n</li>\n<li><p>进公司时间不是很长，很多同事不是很熟，想借此机会好好熟悉一下，如果老婆一起了我肯定要全陪了。</p>\n</li>\n</ol>\n<p>考虑到上面的原因我就自作主张的没有让老婆去了，回来后也让老婆很生气，因为她之前以为我们公司是不能带家属，所以我才没邀请她的。这事确实是我做的不对了，希望老婆能原谅一次，下不为例了。两个人在一起需要互相信任，也希望老婆能信任我，不要胡思乱想了。</p>"},{"title":"一个简单的WCF示例","date":"2010-07-14T16:00:00.000Z","url":"/2010/07/a-simple-wcf-example/","_content":"\nWCF程序分为三个部分：服务、宿主和客户端。下面就一步一步按这三个部分来构建一个简单的WCF程序。可以选择这三个部分都创建独立的解决方案，也可以在一个解决方案中创建三个项目。在下面的例子中将采用将三个项目放在一个解决方案中。服务使用类库项目，宿主和客户端使用控制台程序。\n<!--more-->\n\n1. 创建一个空的解决方案命名为WCFDemo，在该解决方案中创建两个控制台项目和一个类库项目，分别为Client、Host和Service。在这三个项目中分别引用程序集`System.ServiceModel`，另外在`Service`项目中引用程序集`using System.Runtime.Serialization`\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_110417.png \"2010-07-15_110417\")](http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_110417.png)\n\n2. 在本例中Service的功能就是提供一个返回`HelloWorld`的方法。在`Service`项目中添加一个名为`IHelloWorldService`的接口，并给接口添加相应的契约，代码如下：\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n//new using\nusing System.Runtime.Serialization;\nusing System.ServiceModel;\nnamespace Service\n{\n    [ServiceContract(Name=\"http://oec2003.cnblogs.com\")]\n    public interface IHelloWorldService\n    {\n\n        [OperationContract]\n        string SayHello();\n    }\n}\n```\n\n3. 将Service项目中的类Class1重命名为`HelloWorldService`，让该类继承接口`IHelloWorldService`，并实现方法SayHello。代码如下：\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.ServiceModel;\nnamespace Service\n{\n    public class HelloWorldService:IHelloWorldService\n    {\n        public string SayHello()\n        {\n            return \"Hello oec2003\";\n        }\n    }\n}\n```\n\n4. 至此，服务类已经编写好了，编译下该项目，接下来就开始做宿主了，首先在Host项目中添加对Service项目的引用，如下图：\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_112926.png \"2010-07-15_112926\")](http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_112926.png)\n\n5. 在Host项目中需要初始化`ServiceHost`，并添加端点，代码如下:\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.ServiceModel;\nusing Service;\nnamespace Host\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            using (ServiceHost host = new ServiceHost(typeof(HelloWorldService)))\n            {\n                host.AddServiceEndpoint(typeof(IHelloWorldService), new BasicHttpBinding(),\n                    new Uri(\"http://localhost:10000/Service/HelloWorldService\"));\n                if (host.State != CommunicationState.Opening)\n                    host.Open();\n                Console.WriteLine(\"服务已经启动！\");\n                Console.ReadLine();\n            }\n        }\n    }\n}\n```\n\n6. 宿主到这儿也写好了，本例中的端点是用程序的方式来编写的，还可以使用配置文件的方式来做，有关配置文件的方式在以后的博客中会提到。现在开始写客户程序，将Service项目中的`IHelloWorldService`接口复制一份到Client项目中，在生成客户代理时用到。客户端程序代码如下：\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.ServiceModel;\nnamespace Client\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            EndpointAddress ea =\n                new EndpointAddress(\"http://localhost:10000/Service/HelloWorldService\");\n            IHelloWorldService proxy =\n                ChannelFactory&lt;IHelloWorldService&gt;.CreateChannel(new BasicHttpBinding(),ea);\n            Console.WriteLine(proxy.SayHello());\n            Console.ReadLine();\n        }\n    }\n}\n```\n\n**注：上面代码的EndpointAddress地址要和Host中的EndPoint地址一致**\n\n7. 所有代码编写完成，先运行Host，再运行Client，会看到结果如下：\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_121033.png \"2010-07-15_121033\")](http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_121033.png)\n\nhost\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_121042.png \"2010-07-15_121042\")](http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_121042.png)\n\nClient\n\n#总结\n\n*   本例中只是实现了一个很简单的功能，是我们对WCF有个全局性的了解，知道一个基本的运行流程\n\n*   Host项目中设置服务端点用的是程序实现，而且直接给出完整URI。这个服务端点的地址设置是很灵活的，可以程序写、可以配置文件配置、可以写完整URI、可以使用相对地址。如果使用了相对地址在`ServiceHost`中药设置基地址\n\n*   Host项目中的绑定使用的是`BasicHttpBinding`，绑定是用来定义通信信道，`BasicHttpBinding`绑定可以实现基本的`Http`协议的需求。绑定的方式有很多种，可以根据实际开发需求选择\n\n*   `Client`项目中的代理创建方式是使用`ChannelFactory`手动创建的，使用这种方式创建需要有服务的操作元数据，本例中将`Service`项目中的`IHelloWorldService`接口复制了一份在客户端来提供操作元数据。生成代理还有其他多种方式，以后博文中再写。\n\n[源码下载](http://files.cnblogs.com/oec2003/WCFDemo.rar)\n\n\n","source":"_posts/a-simple-wcf-example.md","raw":"title:  一个简单的WCF示例\ndate:  2010-07-15\nurl:  /2010/07/a-simple-wcf-example/\ncategories: [WCF]\ntags:  [WCF]\n---\n\nWCF程序分为三个部分：服务、宿主和客户端。下面就一步一步按这三个部分来构建一个简单的WCF程序。可以选择这三个部分都创建独立的解决方案，也可以在一个解决方案中创建三个项目。在下面的例子中将采用将三个项目放在一个解决方案中。服务使用类库项目，宿主和客户端使用控制台程序。\n<!--more-->\n\n1. 创建一个空的解决方案命名为WCFDemo，在该解决方案中创建两个控制台项目和一个类库项目，分别为Client、Host和Service。在这三个项目中分别引用程序集`System.ServiceModel`，另外在`Service`项目中引用程序集`using System.Runtime.Serialization`\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_110417.png \"2010-07-15_110417\")](http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_110417.png)\n\n2. 在本例中Service的功能就是提供一个返回`HelloWorld`的方法。在`Service`项目中添加一个名为`IHelloWorldService`的接口，并给接口添加相应的契约，代码如下：\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n//new using\nusing System.Runtime.Serialization;\nusing System.ServiceModel;\nnamespace Service\n{\n    [ServiceContract(Name=\"http://oec2003.cnblogs.com\")]\n    public interface IHelloWorldService\n    {\n\n        [OperationContract]\n        string SayHello();\n    }\n}\n```\n\n3. 将Service项目中的类Class1重命名为`HelloWorldService`，让该类继承接口`IHelloWorldService`，并实现方法SayHello。代码如下：\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.ServiceModel;\nnamespace Service\n{\n    public class HelloWorldService:IHelloWorldService\n    {\n        public string SayHello()\n        {\n            return \"Hello oec2003\";\n        }\n    }\n}\n```\n\n4. 至此，服务类已经编写好了，编译下该项目，接下来就开始做宿主了，首先在Host项目中添加对Service项目的引用，如下图：\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_112926.png \"2010-07-15_112926\")](http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_112926.png)\n\n5. 在Host项目中需要初始化`ServiceHost`，并添加端点，代码如下:\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.ServiceModel;\nusing Service;\nnamespace Host\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            using (ServiceHost host = new ServiceHost(typeof(HelloWorldService)))\n            {\n                host.AddServiceEndpoint(typeof(IHelloWorldService), new BasicHttpBinding(),\n                    new Uri(\"http://localhost:10000/Service/HelloWorldService\"));\n                if (host.State != CommunicationState.Opening)\n                    host.Open();\n                Console.WriteLine(\"服务已经启动！\");\n                Console.ReadLine();\n            }\n        }\n    }\n}\n```\n\n6. 宿主到这儿也写好了，本例中的端点是用程序的方式来编写的，还可以使用配置文件的方式来做，有关配置文件的方式在以后的博客中会提到。现在开始写客户程序，将Service项目中的`IHelloWorldService`接口复制一份到Client项目中，在生成客户代理时用到。客户端程序代码如下：\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.ServiceModel;\nnamespace Client\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            EndpointAddress ea =\n                new EndpointAddress(\"http://localhost:10000/Service/HelloWorldService\");\n            IHelloWorldService proxy =\n                ChannelFactory&lt;IHelloWorldService&gt;.CreateChannel(new BasicHttpBinding(),ea);\n            Console.WriteLine(proxy.SayHello());\n            Console.ReadLine();\n        }\n    }\n}\n```\n\n**注：上面代码的EndpointAddress地址要和Host中的EndPoint地址一致**\n\n7. 所有代码编写完成，先运行Host，再运行Client，会看到结果如下：\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_121033.png \"2010-07-15_121033\")](http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_121033.png)\n\nhost\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_121042.png \"2010-07-15_121042\")](http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_121042.png)\n\nClient\n\n#总结\n\n*   本例中只是实现了一个很简单的功能，是我们对WCF有个全局性的了解，知道一个基本的运行流程\n\n*   Host项目中设置服务端点用的是程序实现，而且直接给出完整URI。这个服务端点的地址设置是很灵活的，可以程序写、可以配置文件配置、可以写完整URI、可以使用相对地址。如果使用了相对地址在`ServiceHost`中药设置基地址\n\n*   Host项目中的绑定使用的是`BasicHttpBinding`，绑定是用来定义通信信道，`BasicHttpBinding`绑定可以实现基本的`Http`协议的需求。绑定的方式有很多种，可以根据实际开发需求选择\n\n*   `Client`项目中的代理创建方式是使用`ChannelFactory`手动创建的，使用这种方式创建需要有服务的操作元数据，本例中将`Service`项目中的`IHelloWorldService`接口复制了一份在客户端来提供操作元数据。生成代理还有其他多种方式，以后博文中再写。\n\n[源码下载](http://files.cnblogs.com/oec2003/WCFDemo.rar)\n\n\n","slug":"a-simple-wcf-example","published":1,"updated":"2016-08-12T15:42:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8yh000sxfyn2jtpey2c","content":"<p>WCF程序分为三个部分：服务、宿主和客户端。下面就一步一步按这三个部分来构建一个简单的WCF程序。可以选择这三个部分都创建独立的解决方案，也可以在一个解决方案中创建三个项目。在下面的例子中将采用将三个项目放在一个解决方案中。服务使用类库项目，宿主和客户端使用控制台程序。<br><a id=\"more\"></a></p>\n<ol>\n<li>创建一个空的解决方案命名为WCFDemo，在该解决方案中创建两个控制台项目和一个类库项目，分别为Client、Host和Service。在这三个项目中分别引用程序集<code>System.ServiceModel</code>，另外在<code>Service</code>项目中引用程序集<code>using System.Runtime.Serialization</code></li>\n</ol>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_110417.png\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_110417.png\" alt=\"\" title=\"2010-07-15_110417\"></a></p>\n<ol>\n<li>在本例中Service的功能就是提供一个返回<code>HelloWorld</code>的方法。在<code>Service</code>项目中添加一个名为<code>IHelloWorldService</code>的接口，并给接口添加相应的契约，代码如下：</li>\n</ol>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"comment\">//new using</span></div><div class=\"line\"><span class=\"keyword\">using</span> System.Runtime.Serialization;</div><div class=\"line\"><span class=\"keyword\">using</span> System.ServiceModel;</div><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Service</span></div><div class=\"line\">&#123;</div><div class=\"line\">    [ServiceContract(Name=<span class=\"string\">\"http://oec2003.cnblogs.com\"</span>)]</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IHelloWorldService</span></div><div class=\"line\">    &#123;</div><div class=\"line\"></div><div class=\"line\">        [OperationContract]</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">string</span> <span class=\"title\">SayHello</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ol>\n<li>将Service项目中的类Class1重命名为<code>HelloWorldService</code>，让该类继承接口<code>IHelloWorldService</code>，并实现方法SayHello。代码如下：</li>\n</ol>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> System.ServiceModel;</div><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Service</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">HelloWorldService</span>:<span class=\"title\">IHelloWorldService</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">string</span> <span class=\"title\">SayHello</span>(<span class=\"params\"></span>)</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"Hello oec2003\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ol>\n<li>至此，服务类已经编写好了，编译下该项目，接下来就开始做宿主了，首先在Host项目中添加对Service项目的引用，如下图：</li>\n</ol>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_112926.png\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_112926.png\" alt=\"\" title=\"2010-07-15_112926\"></a></p>\n<ol>\n<li>在Host项目中需要初始化<code>ServiceHost</code>，并添加端点，代码如下:</li>\n</ol>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> System.ServiceModel;</div><div class=\"line\"><span class=\"keyword\">using</span> Service;</div><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Host</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">using</span> (ServiceHost host = <span class=\"keyword\">new</span> ServiceHost(<span class=\"keyword\">typeof</span>(HelloWorldService)))</div><div class=\"line\">            &#123;</div><div class=\"line\">                host.AddServiceEndpoint(<span class=\"keyword\">typeof</span>(IHelloWorldService), <span class=\"keyword\">new</span> BasicHttpBinding(),</div><div class=\"line\">                    <span class=\"keyword\">new</span> Uri(<span class=\"string\">\"http://localhost:10000/Service/HelloWorldService\"</span>));</div><div class=\"line\">                <span class=\"keyword\">if</span> (host.State != CommunicationState.Opening)</div><div class=\"line\">                    host.Open();</div><div class=\"line\">                Console.WriteLine(<span class=\"string\">\"服务已经启动！\"</span>);</div><div class=\"line\">                Console.ReadLine();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ol>\n<li>宿主到这儿也写好了，本例中的端点是用程序的方式来编写的，还可以使用配置文件的方式来做，有关配置文件的方式在以后的博客中会提到。现在开始写客户程序，将Service项目中的<code>IHelloWorldService</code>接口复制一份到Client项目中，在生成客户代理时用到。客户端程序代码如下：</li>\n</ol>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> System.ServiceModel;</div><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"built_in\">Client</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> Main(<span class=\"keyword\">string</span>[] args)</div><div class=\"line\">        &#123;</div><div class=\"line\">            EndpointAddress ea =</div><div class=\"line\">                <span class=\"keyword\">new</span> EndpointAddress(<span class=\"string\">\"http://localhost:10000/Service/HelloWorldService\"</span>);</div><div class=\"line\">            IHelloWorldService proxy =</div><div class=\"line\">                ChannelFactory&amp;lt;IHelloWorldService&amp;gt;.CreateChannel(<span class=\"keyword\">new</span> BasicHttpBinding(),ea);</div><div class=\"line\">            <span class=\"built_in\">Console</span>.WriteLine(proxy.SayHello());</div><div class=\"line\">            <span class=\"built_in\">Console</span>.ReadLine();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>注：上面代码的EndpointAddress地址要和Host中的EndPoint地址一致</strong></p>\n<ol>\n<li>所有代码编写完成，先运行Host，再运行Client，会看到结果如下：</li>\n</ol>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_121033.png\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_121033.png\" alt=\"\" title=\"2010-07-15_121033\"></a></p>\n<p>host</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_121042.png\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_121042.png\" alt=\"\" title=\"2010-07-15_121042\"></a></p>\n<p>Client</p>\n<p>#总结</p>\n<ul>\n<li><p>本例中只是实现了一个很简单的功能，是我们对WCF有个全局性的了解，知道一个基本的运行流程</p>\n</li>\n<li><p>Host项目中设置服务端点用的是程序实现，而且直接给出完整URI。这个服务端点的地址设置是很灵活的，可以程序写、可以配置文件配置、可以写完整URI、可以使用相对地址。如果使用了相对地址在<code>ServiceHost</code>中药设置基地址</p>\n</li>\n<li><p>Host项目中的绑定使用的是<code>BasicHttpBinding</code>，绑定是用来定义通信信道，<code>BasicHttpBinding</code>绑定可以实现基本的<code>Http</code>协议的需求。绑定的方式有很多种，可以根据实际开发需求选择</p>\n</li>\n<li><p><code>Client</code>项目中的代理创建方式是使用<code>ChannelFactory</code>手动创建的，使用这种方式创建需要有服务的操作元数据，本例中将<code>Service</code>项目中的<code>IHelloWorldService</code>接口复制了一份在客户端来提供操作元数据。生成代理还有其他多种方式，以后博文中再写。</p>\n</li>\n</ul>\n<p><a href=\"http://files.cnblogs.com/oec2003/WCFDemo.rar\" target=\"_blank\" rel=\"external\">源码下载</a></p>\n","excerpt":"<p>WCF程序分为三个部分：服务、宿主和客户端。下面就一步一步按这三个部分来构建一个简单的WCF程序。可以选择这三个部分都创建独立的解决方案，也可以在一个解决方案中创建三个项目。在下面的例子中将采用将三个项目放在一个解决方案中。服务使用类库项目，宿主和客户端使用控制台程序。<br>","more":"</p>\n<ol>\n<li>创建一个空的解决方案命名为WCFDemo，在该解决方案中创建两个控制台项目和一个类库项目，分别为Client、Host和Service。在这三个项目中分别引用程序集<code>System.ServiceModel</code>，另外在<code>Service</code>项目中引用程序集<code>using System.Runtime.Serialization</code></li>\n</ol>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_110417.png\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_110417.png\" alt=\"\" title=\"2010-07-15_110417\"></a></p>\n<ol>\n<li>在本例中Service的功能就是提供一个返回<code>HelloWorld</code>的方法。在<code>Service</code>项目中添加一个名为<code>IHelloWorldService</code>的接口，并给接口添加相应的契约，代码如下：</li>\n</ol>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"comment\">//new using</span></div><div class=\"line\"><span class=\"keyword\">using</span> System.Runtime.Serialization;</div><div class=\"line\"><span class=\"keyword\">using</span> System.ServiceModel;</div><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Service</span></div><div class=\"line\">&#123;</div><div class=\"line\">    [ServiceContract(Name=<span class=\"string\">\"http://oec2003.cnblogs.com\"</span>)]</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IHelloWorldService</span></div><div class=\"line\">    &#123;</div><div class=\"line\"></div><div class=\"line\">        [OperationContract]</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">string</span> <span class=\"title\">SayHello</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ol>\n<li>将Service项目中的类Class1重命名为<code>HelloWorldService</code>，让该类继承接口<code>IHelloWorldService</code>，并实现方法SayHello。代码如下：</li>\n</ol>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> System.ServiceModel;</div><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Service</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">HelloWorldService</span>:<span class=\"title\">IHelloWorldService</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">string</span> <span class=\"title\">SayHello</span>(<span class=\"params\"></span>)</div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"Hello oec2003\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ol>\n<li>至此，服务类已经编写好了，编译下该项目，接下来就开始做宿主了，首先在Host项目中添加对Service项目的引用，如下图：</li>\n</ol>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_112926.png\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_112926.png\" alt=\"\" title=\"2010-07-15_112926\"></a></p>\n<ol>\n<li>在Host项目中需要初始化<code>ServiceHost</code>，并添加端点，代码如下:</li>\n</ol>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> System.ServiceModel;</div><div class=\"line\"><span class=\"keyword\">using</span> Service;</div><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Host</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">using</span> (ServiceHost host = <span class=\"keyword\">new</span> ServiceHost(<span class=\"keyword\">typeof</span>(HelloWorldService)))</div><div class=\"line\">            &#123;</div><div class=\"line\">                host.AddServiceEndpoint(<span class=\"keyword\">typeof</span>(IHelloWorldService), <span class=\"keyword\">new</span> BasicHttpBinding(),</div><div class=\"line\">                    <span class=\"keyword\">new</span> Uri(<span class=\"string\">\"http://localhost:10000/Service/HelloWorldService\"</span>));</div><div class=\"line\">                <span class=\"keyword\">if</span> (host.State != CommunicationState.Opening)</div><div class=\"line\">                    host.Open();</div><div class=\"line\">                Console.WriteLine(<span class=\"string\">\"服务已经启动！\"</span>);</div><div class=\"line\">                Console.ReadLine();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ol>\n<li>宿主到这儿也写好了，本例中的端点是用程序的方式来编写的，还可以使用配置文件的方式来做，有关配置文件的方式在以后的博客中会提到。现在开始写客户程序，将Service项目中的<code>IHelloWorldService</code>接口复制一份到Client项目中，在生成客户代理时用到。客户端程序代码如下：</li>\n</ol>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> System.ServiceModel;</div><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"built_in\">Client</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> Main(<span class=\"keyword\">string</span>[] args)</div><div class=\"line\">        &#123;</div><div class=\"line\">            EndpointAddress ea =</div><div class=\"line\">                <span class=\"keyword\">new</span> EndpointAddress(<span class=\"string\">\"http://localhost:10000/Service/HelloWorldService\"</span>);</div><div class=\"line\">            IHelloWorldService proxy =</div><div class=\"line\">                ChannelFactory&amp;lt;IHelloWorldService&amp;gt;.CreateChannel(<span class=\"keyword\">new</span> BasicHttpBinding(),ea);</div><div class=\"line\">            <span class=\"built_in\">Console</span>.WriteLine(proxy.SayHello());</div><div class=\"line\">            <span class=\"built_in\">Console</span>.ReadLine();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>注：上面代码的EndpointAddress地址要和Host中的EndPoint地址一致</strong></p>\n<ol>\n<li>所有代码编写完成，先运行Host，再运行Client，会看到结果如下：</li>\n</ol>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_121033.png\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_121033.png\" alt=\"\" title=\"2010-07-15_121033\"></a></p>\n<p>host</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_121042.png\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/07/2010-07-15_121042.png\" alt=\"\" title=\"2010-07-15_121042\"></a></p>\n<p>Client</p>\n<p>#总结</p>\n<ul>\n<li><p>本例中只是实现了一个很简单的功能，是我们对WCF有个全局性的了解，知道一个基本的运行流程</p>\n</li>\n<li><p>Host项目中设置服务端点用的是程序实现，而且直接给出完整URI。这个服务端点的地址设置是很灵活的，可以程序写、可以配置文件配置、可以写完整URI、可以使用相对地址。如果使用了相对地址在<code>ServiceHost</code>中药设置基地址</p>\n</li>\n<li><p>Host项目中的绑定使用的是<code>BasicHttpBinding</code>，绑定是用来定义通信信道，<code>BasicHttpBinding</code>绑定可以实现基本的<code>Http</code>协议的需求。绑定的方式有很多种，可以根据实际开发需求选择</p>\n</li>\n<li><p><code>Client</code>项目中的代理创建方式是使用<code>ChannelFactory</code>手动创建的，使用这种方式创建需要有服务的操作元数据，本例中将<code>Service</code>项目中的<code>IHelloWorldService</code>接口复制了一份在客户端来提供操作元数据。生成代理还有其他多种方式，以后博文中再写。</p>\n</li>\n</ul>\n<p><a href=\"http://files.cnblogs.com/oec2003/WCFDemo.rar\">源码下载</a></p>"},{"title":"给PDF文档添加书签","date":"2010-11-19T16:00:00.000Z","url":"/2010/11/add-a-bookmark-to-a-pdf-document/","_content":"\n我们在阅读纸质的书时，一般都会使用书签来标识看到什么地方以便下次看时可以方便的找到。如果是在电脑上阅读PDF文档，我们同样希望能够给PDF文档做些标记，不过默认情况下PDF是不支持标记的。下面就来介绍一种方法可以在PDF文档中添加书签。\n<!--more-->\n首先下载一个JS脚本，[下载](http://files.cnblogs.com/oec2003/bookmark_page.rar)\n\n解压后将JS文件放到PDF安装目录的Javascripts目录中\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220415.gif \"2010-12-30_220415\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220415.gif)\n\n打开编辑-》首选项，选择左边的javascript，勾选右侧的“启用Acrobat Javascript  ”\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220451.gif \"2010-12-30_220451\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220451.gif)\n\n确定后，再打开视图菜单，会发现下面多了“设置本页为书签”等四项，这样我们可以给一些重要的页添加书签，然后使用“转到指定书签”方便的定位到相关页。\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220536.gif \"2010-12-30_220536\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220536.gif)\n\n通过最近一段时间阅读电子书发现，英文版大多比中文版做的好，一般多会有目录，中文版，特别是扫面的中文版电子书大多都没目录，这时给电子书设置书签就显得尤为重要了。\n\n\n","source":"_posts/add-a-bookmark-to-a-pdf-document.md","raw":"title:  给PDF文档添加书签\ndate:  2010-11-20\nurl:  /2010/11/add-a-bookmark-to-a-pdf-document/\ncategories: [软件使用]\ntags:  [PDF,书签]\n---\n\n我们在阅读纸质的书时，一般都会使用书签来标识看到什么地方以便下次看时可以方便的找到。如果是在电脑上阅读PDF文档，我们同样希望能够给PDF文档做些标记，不过默认情况下PDF是不支持标记的。下面就来介绍一种方法可以在PDF文档中添加书签。\n<!--more-->\n首先下载一个JS脚本，[下载](http://files.cnblogs.com/oec2003/bookmark_page.rar)\n\n解压后将JS文件放到PDF安装目录的Javascripts目录中\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220415.gif \"2010-12-30_220415\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220415.gif)\n\n打开编辑-》首选项，选择左边的javascript，勾选右侧的“启用Acrobat Javascript  ”\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220451.gif \"2010-12-30_220451\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220451.gif)\n\n确定后，再打开视图菜单，会发现下面多了“设置本页为书签”等四项，这样我们可以给一些重要的页添加书签，然后使用“转到指定书签”方便的定位到相关页。\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220536.gif \"2010-12-30_220536\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220536.gif)\n\n通过最近一段时间阅读电子书发现，英文版大多比中文版做的好，一般多会有目录，中文版，特别是扫面的中文版电子书大多都没目录，这时给电子书设置书签就显得尤为重要了。\n\n\n","slug":"add-a-bookmark-to-a-pdf-document","published":1,"updated":"2016-08-11T14:36:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8yk000wxfyn80wzbk0z","content":"<p>我们在阅读纸质的书时，一般都会使用书签来标识看到什么地方以便下次看时可以方便的找到。如果是在电脑上阅读PDF文档，我们同样希望能够给PDF文档做些标记，不过默认情况下PDF是不支持标记的。下面就来介绍一种方法可以在PDF文档中添加书签。<br><a id=\"more\"></a><br>首先下载一个JS脚本，<a href=\"http://files.cnblogs.com/oec2003/bookmark_page.rar\" target=\"_blank\" rel=\"external\">下载</a></p>\n<p>解压后将JS文件放到PDF安装目录的Javascripts目录中</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220415.gif\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220415.gif\" alt=\"\" title=\"2010-12-30_220415\"></a></p>\n<p>打开编辑-》首选项，选择左边的javascript，勾选右侧的“启用Acrobat Javascript  ”</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220451.gif\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220451.gif\" alt=\"\" title=\"2010-12-30_220451\"></a></p>\n<p>确定后，再打开视图菜单，会发现下面多了“设置本页为书签”等四项，这样我们可以给一些重要的页添加书签，然后使用“转到指定书签”方便的定位到相关页。</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220536.gif\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220536.gif\" alt=\"\" title=\"2010-12-30_220536\"></a></p>\n<p>通过最近一段时间阅读电子书发现，英文版大多比中文版做的好，一般多会有目录，中文版，特别是扫面的中文版电子书大多都没目录，这时给电子书设置书签就显得尤为重要了。</p>\n","excerpt":"<p>我们在阅读纸质的书时，一般都会使用书签来标识看到什么地方以便下次看时可以方便的找到。如果是在电脑上阅读PDF文档，我们同样希望能够给PDF文档做些标记，不过默认情况下PDF是不支持标记的。下面就来介绍一种方法可以在PDF文档中添加书签。<br>","more":"<br>首先下载一个JS脚本，<a href=\"http://files.cnblogs.com/oec2003/bookmark_page.rar\">下载</a></p>\n<p>解压后将JS文件放到PDF安装目录的Javascripts目录中</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220415.gif\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220415.gif\" alt=\"\" title=\"2010-12-30_220415\"></a></p>\n<p>打开编辑-》首选项，选择左边的javascript，勾选右侧的“启用Acrobat Javascript  ”</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220451.gif\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220451.gif\" alt=\"\" title=\"2010-12-30_220451\"></a></p>\n<p>确定后，再打开视图菜单，会发现下面多了“设置本页为书签”等四项，这样我们可以给一些重要的页添加书签，然后使用“转到指定书签”方便的定位到相关页。</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220536.gif\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_220536.gif\" alt=\"\" title=\"2010-12-30_220536\"></a></p>\n<p>通过最近一段时间阅读电子书发现，英文版大多比中文版做的好，一般多会有目录，中文版，特别是扫面的中文版电子书大多都没目录，这时给电子书设置书签就显得尤为重要了。</p>"},{"title":"WMS中添加默认发布点","date":"2010-05-18T16:00:00.000Z","url":"/2010/05/add-the-default-distribution-point-wms/","_content":"\n当我们在服务器中安装了WMS后会自动创建一个默认的点播发布点，对应的目录为C:\\WMPub\\WMRoot，当然我们也可以根据需要更改。有这个默认发布点，就可以通过mms://ServerName/MediaName  这种方式来访问C:\\WMPub\\WMRoot目录中的音视频文件。\n<!--more-->\n如果一不小心将默认的发布点删除了，之后又想重新添加默认发布点，我们可以像下面这样做。\n\n1 创建一个点播发布点，名称可以随便取，路径一般指向C:\\WMPub\\WMRoot。如下图：\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105210.png \"2010-05-19_105210\")](http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105210.png)\n\n2 将新建的发布点改名为“/” ，本例中新建的发布点名称为“默认”，如下图：\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105229.png \"2010-05-19_105229\")](http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105229.png)\n\n3 改完名称后“默认”发布点就变成真正的默认发布点了，如下图：\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105305.png \"2010-05-19_105305\")](http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105305.png)\n\n\n","source":"_posts/add-the-default-distribution-point-wms.md","raw":"title:  WMS中添加默认发布点\ndate:  2010-05-19\nurl:  /2010/05/add-the-default-distribution-point-wms/\ncategories: [WMS]\ntags:  [WMS,发布点]\n---\n\n当我们在服务器中安装了WMS后会自动创建一个默认的点播发布点，对应的目录为C:\\WMPub\\WMRoot，当然我们也可以根据需要更改。有这个默认发布点，就可以通过mms://ServerName/MediaName  这种方式来访问C:\\WMPub\\WMRoot目录中的音视频文件。\n<!--more-->\n如果一不小心将默认的发布点删除了，之后又想重新添加默认发布点，我们可以像下面这样做。\n\n1 创建一个点播发布点，名称可以随便取，路径一般指向C:\\WMPub\\WMRoot。如下图：\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105210.png \"2010-05-19_105210\")](http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105210.png)\n\n2 将新建的发布点改名为“/” ，本例中新建的发布点名称为“默认”，如下图：\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105229.png \"2010-05-19_105229\")](http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105229.png)\n\n3 改完名称后“默认”发布点就变成真正的默认发布点了，如下图：\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105305.png \"2010-05-19_105305\")](http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105305.png)\n\n\n","slug":"add-the-default-distribution-point-wms","published":1,"updated":"2016-08-11T14:36:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8yp000zxfyn16l4d6pq","content":"<p>当我们在服务器中安装了WMS后会自动创建一个默认的点播发布点，对应的目录为C:\\WMPub\\WMRoot，当然我们也可以根据需要更改。有这个默认发布点，就可以通过mms://ServerName/MediaName  这种方式来访问C:\\WMPub\\WMRoot目录中的音视频文件。<br><a id=\"more\"></a><br>如果一不小心将默认的发布点删除了，之后又想重新添加默认发布点，我们可以像下面这样做。</p>\n<p>1 创建一个点播发布点，名称可以随便取，路径一般指向C:\\WMPub\\WMRoot。如下图：</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105210.png\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105210.png\" alt=\"\" title=\"2010-05-19_105210\"></a></p>\n<p>2 将新建的发布点改名为“/” ，本例中新建的发布点名称为“默认”，如下图：</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105229.png\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105229.png\" alt=\"\" title=\"2010-05-19_105229\"></a></p>\n<p>3 改完名称后“默认”发布点就变成真正的默认发布点了，如下图：</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105305.png\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105305.png\" alt=\"\" title=\"2010-05-19_105305\"></a></p>\n","excerpt":"<p>当我们在服务器中安装了WMS后会自动创建一个默认的点播发布点，对应的目录为C:\\WMPub\\WMRoot，当然我们也可以根据需要更改。有这个默认发布点，就可以通过mms://ServerName/MediaName  这种方式来访问C:\\WMPub\\WMRoot目录中的音视频文件。<br>","more":"<br>如果一不小心将默认的发布点删除了，之后又想重新添加默认发布点，我们可以像下面这样做。</p>\n<p>1 创建一个点播发布点，名称可以随便取，路径一般指向C:\\WMPub\\WMRoot。如下图：</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105210.png\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105210.png\" alt=\"\" title=\"2010-05-19_105210\"></a></p>\n<p>2 将新建的发布点改名为“/” ，本例中新建的发布点名称为“默认”，如下图：</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105229.png\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105229.png\" alt=\"\" title=\"2010-05-19_105229\"></a></p>\n<p>3 改完名称后“默认”发布点就变成真正的默认发布点了，如下图：</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105305.png\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/05/2010-05-19_105305.png\" alt=\"\" title=\"2010-05-19_105305\"></a></p>"},{"title":"附加数据库失败 操作系统错误5","date":"2011-05-21T16:00:00.000Z","url":"/2011/05/additional-database-failure-5120-error/","_content":"\n# 环境\n\n数据库版本：SqlServer2008 R2 32位\n\n附加文件的版本：SqlServer2008 R2 64位\n<!--more-->\n# 出错截图\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2011/05/2011-05-22_101011.png \"2011-05-22_101011\")](http://blog.fwhyy.com/wp-content/uploads/2011/05/2011-05-22_101011.png)\n\n# 解决方法\n\n设置数据库文件mdf和ldf两个文件的权限，在这两个文件上点击右键-》属性-》安全，在用户和组中添加Authenticated Users用户，然后设置该用户的权限为完全控制，重新附加数据库。\n\n\n","source":"_posts/additional-database-failure-5120-error.md","raw":"title:  附加数据库失败 操作系统错误5\ndate:  2011-05-22\nurl:  /2011/05/additional-database-failure-5120-error/\ncategories: [SqlServer]\ntags:  [SqlServer,sqlserver2008,错误解决]\n---\n\n# 环境\n\n数据库版本：SqlServer2008 R2 32位\n\n附加文件的版本：SqlServer2008 R2 64位\n<!--more-->\n# 出错截图\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2011/05/2011-05-22_101011.png \"2011-05-22_101011\")](http://blog.fwhyy.com/wp-content/uploads/2011/05/2011-05-22_101011.png)\n\n# 解决方法\n\n设置数据库文件mdf和ldf两个文件的权限，在这两个文件上点击右键-》属性-》安全，在用户和组中添加Authenticated Users用户，然后设置该用户的权限为完全控制，重新附加数据库。\n\n\n","slug":"additional-database-failure-5120-error","published":1,"updated":"2016-08-11T14:36:25.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8yt0013xfynd39e7gm6","content":"<h1 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h1><p>数据库版本：SqlServer2008 R2 32位</p>\n<p>附加文件的版本：SqlServer2008 R2 64位<br><a id=\"more\"></a></p>\n<h1 id=\"出错截图\"><a href=\"#出错截图\" class=\"headerlink\" title=\"出错截图\"></a>出错截图</h1><p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2011/05/2011-05-22_101011.png\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2011/05/2011-05-22_101011.png\" alt=\"\" title=\"2011-05-22_101011\"></a></p>\n<h1 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h1><p>设置数据库文件mdf和ldf两个文件的权限，在这两个文件上点击右键-》属性-》安全，在用户和组中添加Authenticated Users用户，然后设置该用户的权限为完全控制，重新附加数据库。</p>\n","excerpt":"<h1 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h1><p>数据库版本：SqlServer2008 R2 32位</p>\n<p>附加文件的版本：SqlServer2008 R2 64位<br>","more":"</p>\n<h1 id=\"出错截图\"><a href=\"#出错截图\" class=\"headerlink\" title=\"出错截图\"></a>出错截图</h1><p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2011/05/2011-05-22_101011.png\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2011/05/2011-05-22_101011.png\" alt=\"\" title=\"2011-05-22_101011\"></a></p>\n<h1 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h1><p>设置数据库文件mdf和ldf两个文件的权限，在这两个文件上点击右键-》属性-》安全，在用户和组中添加Authenticated Users用户，然后设置该用户的权限为完全控制，重新附加数据库。</p>"},{"title":"Virtual PC附加程序安装","date":"2010-09-22T16:00:00.000Z","url":"/2010/09/additional-program-installed-virtual-pc/","_content":"\n在Virtual PC中安装好了虚机后，要想让虚拟机能够和物理机实现文件共享就必须安装附加程序。下面介绍附加程序的安装方法。\n<!--more-->\n1 附加文件在Virtual PC安装目录下的Virtual Machine Additions目录中，如下图：\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222033.gif \"2010-12-30_222033\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222033.gif)\n\n2 点击虚机的菜单“CD”，选择Capture ISO Image项，将附加文件的ISO文件装载。\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222107.gif \"2010-12-30_222107\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222107.gif)\n\n[](http://photo.blog.sina.com.cn/showpic.html#blogid=3cefded10100lfys&amp;url=http://static5.photo.sina.com.cn/orignal/3cefded1g90e504e534d4)3 点击Action菜单下的倒数第二项，进行安装，如果不能顺利安装，看下面步骤。\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222146.gif \"2010-12-30_222146\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222146.gif)\n\n4 如果上面操作不能顺利安装，就需要手动进行安装，进入到虚机的光驱里，找到Setup文件双击即可。\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222222.gif \"2010-12-30_222222\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222222.gif)\n\n5 安装成功后，可以发现虚机可以和物理机共享文件了，并且鼠标也不会像没安装附件程序前一点击虚机就进入了，需要按右边的alt才能出来。\n\n\n","source":"_posts/additional-program-installed-virtual-pc.md","raw":"title:  Virtual PC附加程序安装\ndate:  2010-09-23\nurl:  /2010/09/additional-program-installed-virtual-pc/\ncategories: [软件使用]\ntags:  [虚拟机]\n---\n\n在Virtual PC中安装好了虚机后，要想让虚拟机能够和物理机实现文件共享就必须安装附加程序。下面介绍附加程序的安装方法。\n<!--more-->\n1 附加文件在Virtual PC安装目录下的Virtual Machine Additions目录中，如下图：\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222033.gif \"2010-12-30_222033\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222033.gif)\n\n2 点击虚机的菜单“CD”，选择Capture ISO Image项，将附加文件的ISO文件装载。\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222107.gif \"2010-12-30_222107\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222107.gif)\n\n[](http://photo.blog.sina.com.cn/showpic.html#blogid=3cefded10100lfys&amp;url=http://static5.photo.sina.com.cn/orignal/3cefded1g90e504e534d4)3 点击Action菜单下的倒数第二项，进行安装，如果不能顺利安装，看下面步骤。\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222146.gif \"2010-12-30_222146\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222146.gif)\n\n4 如果上面操作不能顺利安装，就需要手动进行安装，进入到虚机的光驱里，找到Setup文件双击即可。\n\n[![](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222222.gif \"2010-12-30_222222\")](http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222222.gif)\n\n5 安装成功后，可以发现虚机可以和物理机共享文件了，并且鼠标也不会像没安装附件程序前一点击虚机就进入了，需要按右边的alt才能出来。\n\n\n","slug":"additional-program-installed-virtual-pc","published":1,"updated":"2016-08-11T14:36:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8yw0015xfynvpgf7vfp","content":"<p>在Virtual PC中安装好了虚机后，要想让虚拟机能够和物理机实现文件共享就必须安装附加程序。下面介绍附加程序的安装方法。<br><a id=\"more\"></a><br>1 附加文件在Virtual PC安装目录下的Virtual Machine Additions目录中，如下图：</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222033.gif\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222033.gif\" alt=\"\" title=\"2010-12-30_222033\"></a></p>\n<p>2 点击虚机的菜单“CD”，选择Capture ISO Image项，将附加文件的ISO文件装载。</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222107.gif\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222107.gif\" alt=\"\" title=\"2010-12-30_222107\"></a></p>\n<p><a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=3cefded10100lfys&amp;url=http://static5.photo.sina.com.cn/orignal/3cefded1g90e504e534d4\" target=\"_blank\" rel=\"external\"></a>3 点击Action菜单下的倒数第二项，进行安装，如果不能顺利安装，看下面步骤。</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222146.gif\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222146.gif\" alt=\"\" title=\"2010-12-30_222146\"></a></p>\n<p>4 如果上面操作不能顺利安装，就需要手动进行安装，进入到虚机的光驱里，找到Setup文件双击即可。</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222222.gif\" target=\"_blank\" rel=\"external\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222222.gif\" alt=\"\" title=\"2010-12-30_222222\"></a></p>\n<p>5 安装成功后，可以发现虚机可以和物理机共享文件了，并且鼠标也不会像没安装附件程序前一点击虚机就进入了，需要按右边的alt才能出来。</p>\n","excerpt":"<p>在Virtual PC中安装好了虚机后，要想让虚拟机能够和物理机实现文件共享就必须安装附加程序。下面介绍附加程序的安装方法。<br>","more":"<br>1 附加文件在Virtual PC安装目录下的Virtual Machine Additions目录中，如下图：</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222033.gif\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222033.gif\" alt=\"\" title=\"2010-12-30_222033\"></a></p>\n<p>2 点击虚机的菜单“CD”，选择Capture ISO Image项，将附加文件的ISO文件装载。</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222107.gif\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222107.gif\" alt=\"\" title=\"2010-12-30_222107\"></a></p>\n<p><a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=3cefded10100lfys&amp;url=http://static5.photo.sina.com.cn/orignal/3cefded1g90e504e534d4\"></a>3 点击Action菜单下的倒数第二项，进行安装，如果不能顺利安装，看下面步骤。</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222146.gif\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222146.gif\" alt=\"\" title=\"2010-12-30_222146\"></a></p>\n<p>4 如果上面操作不能顺利安装，就需要手动进行安装，进入到虚机的光驱里，找到Setup文件双击即可。</p>\n<p><a href=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222222.gif\"><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/12/2010-12-30_222222.gif\" alt=\"\" title=\"2010-12-30_222222\"></a></p>\n<p>5 安装成功后，可以发现虚机可以和物理机共享文件了，并且鼠标也不会像没安装附件程序前一点击虚机就进入了，需要按右边的alt才能出来。</p>"},{"title":"看完《再见古惑仔》的一点感想","date":"2008-03-05T16:00:00.000Z","url":"/2008/03/after-watching-goodbye-gangster-feeling/","_content":"\n古惑仔系列可以说影响过我们这一代人，有的人只是当作是一般的动作电影，娱乐一下而已，有的人可能会效仿片中的一些行为。很庆幸我是属于前者。\n\n近几天我看到《再见古惑仔》的这个片名，第一想到的就是是不是剧组想到8年前的古惑仔系列给社会带来的负面影响太大，拍这个来挽回一下。看完也证实了这一点，虽然片中也充满着打斗血腥的场面，但还是起到了一定的教育作用。\n<!--more-->\n印象最深的有两个地方:\n\n* 一是陈小春说的二十岁能混，三十岁还能混，那四十呢？有了孩子呢？可见“混”这一行是吃青春饭的一行，陈小春在监狱已经想得很明白，所以出来后改作了装修，那个约尼在小春跟他讲过后还不能明白，最后导致被砍死。\n\n* 二是陈坤说的，人本来什么都没有，只是曾经拥有过，所以觉得那些东西是你的。这句话很经典，要是每个人都能这么想，社会就会安定很多啊。\n\n呵呵，就到这儿吧，要上班了。\n\n\n","source":"_posts/after-watching-goodbye-gangster-feeling.md","raw":"title:  看完《再见古惑仔》的一点感想\ndate:  2008-03-06\nurl:  /2008/03/after-watching-goodbye-gangster-feeling/\ncategories: [心情日记]\ntags: [日记]\n---\n\n古惑仔系列可以说影响过我们这一代人，有的人只是当作是一般的动作电影，娱乐一下而已，有的人可能会效仿片中的一些行为。很庆幸我是属于前者。\n\n近几天我看到《再见古惑仔》的这个片名，第一想到的就是是不是剧组想到8年前的古惑仔系列给社会带来的负面影响太大，拍这个来挽回一下。看完也证实了这一点，虽然片中也充满着打斗血腥的场面，但还是起到了一定的教育作用。\n<!--more-->\n印象最深的有两个地方:\n\n* 一是陈小春说的二十岁能混，三十岁还能混，那四十呢？有了孩子呢？可见“混”这一行是吃青春饭的一行，陈小春在监狱已经想得很明白，所以出来后改作了装修，那个约尼在小春跟他讲过后还不能明白，最后导致被砍死。\n\n* 二是陈坤说的，人本来什么都没有，只是曾经拥有过，所以觉得那些东西是你的。这句话很经典，要是每个人都能这么想，社会就会安定很多啊。\n\n呵呵，就到这儿吧，要上班了。\n\n\n","slug":"after-watching-goodbye-gangster-feeling","published":1,"updated":"2016-08-11T14:36:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8yz0019xfyn8yetbf85","content":"<p>古惑仔系列可以说影响过我们这一代人，有的人只是当作是一般的动作电影，娱乐一下而已，有的人可能会效仿片中的一些行为。很庆幸我是属于前者。</p>\n<p>近几天我看到《再见古惑仔》的这个片名，第一想到的就是是不是剧组想到8年前的古惑仔系列给社会带来的负面影响太大，拍这个来挽回一下。看完也证实了这一点，虽然片中也充满着打斗血腥的场面，但还是起到了一定的教育作用。<br><a id=\"more\"></a><br>印象最深的有两个地方:</p>\n<ul>\n<li><p>一是陈小春说的二十岁能混，三十岁还能混，那四十呢？有了孩子呢？可见“混”这一行是吃青春饭的一行，陈小春在监狱已经想得很明白，所以出来后改作了装修，那个约尼在小春跟他讲过后还不能明白，最后导致被砍死。</p>\n</li>\n<li><p>二是陈坤说的，人本来什么都没有，只是曾经拥有过，所以觉得那些东西是你的。这句话很经典，要是每个人都能这么想，社会就会安定很多啊。</p>\n</li>\n</ul>\n<p>呵呵，就到这儿吧，要上班了。</p>\n","excerpt":"<p>古惑仔系列可以说影响过我们这一代人，有的人只是当作是一般的动作电影，娱乐一下而已，有的人可能会效仿片中的一些行为。很庆幸我是属于前者。</p>\n<p>近几天我看到《再见古惑仔》的这个片名，第一想到的就是是不是剧组想到8年前的古惑仔系列给社会带来的负面影响太大，拍这个来挽回一下。看完也证实了这一点，虽然片中也充满着打斗血腥的场面，但还是起到了一定的教育作用。<br>","more":"<br>印象最深的有两个地方:</p>\n<ul>\n<li><p>一是陈小春说的二十岁能混，三十岁还能混，那四十呢？有了孩子呢？可见“混”这一行是吃青春饭的一行，陈小春在监狱已经想得很明白，所以出来后改作了装修，那个约尼在小春跟他讲过后还不能明白，最后导致被砍死。</p>\n</li>\n<li><p>二是陈坤说的，人本来什么都没有，只是曾经拥有过，所以觉得那些东西是你的。这句话很经典，要是每个人都能这么想，社会就会安定很多啊。</p>\n</li>\n</ul>\n<p>呵呵，就到这儿吧，要上班了。</p>"},{"title":"Windows7给C盘扩容","date":"2013-07-12T16:00:00.000Z","url":"/2013/07/adjust-disk-c-capacity-in-windows7/","_content":"\n在之前的系统中都是使用PartitionMagic来进行磁盘容量的分配，但PartitionMagic在Windows7中的兼容性不是好很好，导致不能使用。其实Windows7自带了磁盘管理工具，下面说说怎样使用自带的磁盘管理工具进行C盘的扩容。\n<!--more-->\n1. 将D盘的文件转移到其他的地方；\n\n2. 使用[DiskGenius](http://www.diskgenius.cn/)将D盘转换成主分区，如果你的D盘已经是主分区，这一步可以省略；\n\n3. 删除D盘分区；\n\n4. 打开磁盘管理（计算机右键-》管理-》磁盘管理），在C盘分区上点击右键，这时扩展卷是激活状态，根据向导就可以实现C盘的扩容了。\n\n\n","source":"_posts/adjust-disk-c-capacity-in-windows7.md","raw":"title:  Windows7给C盘扩容\ndate:  2013-07-13\nurl:  /2013/07/adjust-disk-c-capacity-in-windows7/\ncategories: [心情日记]\ntags: [小技巧]\n---\n\n在之前的系统中都是使用PartitionMagic来进行磁盘容量的分配，但PartitionMagic在Windows7中的兼容性不是好很好，导致不能使用。其实Windows7自带了磁盘管理工具，下面说说怎样使用自带的磁盘管理工具进行C盘的扩容。\n<!--more-->\n1. 将D盘的文件转移到其他的地方；\n\n2. 使用[DiskGenius](http://www.diskgenius.cn/)将D盘转换成主分区，如果你的D盘已经是主分区，这一步可以省略；\n\n3. 删除D盘分区；\n\n4. 打开磁盘管理（计算机右键-》管理-》磁盘管理），在C盘分区上点击右键，这时扩展卷是激活状态，根据向导就可以实现C盘的扩容了。\n\n\n","slug":"adjust-disk-c-capacity-in-windows7","published":1,"updated":"2016-08-11T14:36:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8z2001bxfynq1y4tod4","content":"<p>在之前的系统中都是使用PartitionMagic来进行磁盘容量的分配，但PartitionMagic在Windows7中的兼容性不是好很好，导致不能使用。其实Windows7自带了磁盘管理工具，下面说说怎样使用自带的磁盘管理工具进行C盘的扩容。<br><a id=\"more\"></a></p>\n<ol>\n<li><p>将D盘的文件转移到其他的地方；</p>\n</li>\n<li><p>使用<a href=\"http://www.diskgenius.cn/\" target=\"_blank\" rel=\"external\">DiskGenius</a>将D盘转换成主分区，如果你的D盘已经是主分区，这一步可以省略；</p>\n</li>\n<li><p>删除D盘分区；</p>\n</li>\n<li><p>打开磁盘管理（计算机右键-》管理-》磁盘管理），在C盘分区上点击右键，这时扩展卷是激活状态，根据向导就可以实现C盘的扩容了。</p>\n</li>\n</ol>\n","excerpt":"<p>在之前的系统中都是使用PartitionMagic来进行磁盘容量的分配，但PartitionMagic在Windows7中的兼容性不是好很好，导致不能使用。其实Windows7自带了磁盘管理工具，下面说说怎样使用自带的磁盘管理工具进行C盘的扩容。<br>","more":"</p>\n<ol>\n<li><p>将D盘的文件转移到其他的地方；</p>\n</li>\n<li><p>使用<a href=\"http://www.diskgenius.cn/\">DiskGenius</a>将D盘转换成主分区，如果你的D盘已经是主分区，这一步可以省略；</p>\n</li>\n<li><p>删除D盘分区；</p>\n</li>\n<li><p>打开磁盘管理（计算机右键-》管理-》磁盘管理），在C盘分区上点击右键，这时扩展卷是激活状态，根据向导就可以实现C盘的扩容了。</p>\n</li>\n</ol>"},{"title":"Ajax,其实并不难","date":"2007-07-22T16:00:00.000Z","url":"/2007/07/ajax-actually-not-difficult/","_content":"\nAjax是一种应用技术的缩写，全称为`Asynchronous Javascript And XML `,这种技术的使用可以更好地提高用户的体验。组成这种技术的主要因素有：`javascript`语言，`css`样式表，`XMLHttpRequest`数据交换对象和`Dom`对象。\n<!--more-->\n`XMLHttpRequest`对象是`ajax`技术的关键，它是依附于浏览器的一个组件。在`IE`和`firefox`两种不同的浏览器中，\n\n`XMLHttpRequest`对象的声明也不同，通常我们需要判断一下浏览器再创建对象，代码如下：\n\n```\nvar xmlhttp;\nfunction createRequest() {\n    if (window.ActiveXObject) {\n        xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\n    }\n    else if (window.XMLHTttpRequest) {\n        xmlhttp = new XMLHttpRequest();\n    }\n}\n```\n\n创建好`http`对象后，下一个步骤是加载数据所在的服务器。Ajax可以从其他网站获取数据，也可以从`xml`中获取，\n\n语法如下：\n\n*   xmlHttp.open(method, url, bool)\n\n*   method 表示http的请求方法，一共有5种方法：get,post,head,put,delete,其中比较常用的是get和post\n\n*   url表示数据的地址，如果是本地地址就指定具体的路径，如果是其他的网站的数据就指定完整的url地址。\n\nbool表示是否使用异步获取，true表示异步，false表示同步。如下：\n\n```\nxmlHttp.open(\"get\", \"http://blog.csdn.net/oec2003\", true);\nxmlHttp.open(\"get\", \"oec2003.xml\", true);\n```\n\n在异步调用开始请求前，需要将状态改变时的事件和jacascript定义的方式挂钩，如下：\n\n```\nxmlHttp.onreadystatechange = oec;\nfunction oec() {\n    //4表示异步调用完成，200表示异步调用成功\n    if (xmlhttp.readystate == 4 && xmlhttp.states == 200) {\n        alert(\"哈哈，异步调用成功\");\n    }\n}\n```\n\n当加载完请求后，还需要发送一个http请求，一般表示请求的数据。\n\n```\nxmlhttp.send(params);\n```\n\n其中params表示可选的参数，如果请求的数据不要参数可以直接在括号中写null。\n\n最后就是处理异步获取的数据，数据的类型有两种：\n\n*   文本型：用XMLHttp.ResponseText获取\n\n*   ml类型：用XMLHttp.ResponseXML获取。\n\n\n","source":"_posts/ajax-actually-not-difficult.md","raw":"title:  Ajax,其实并不难\ndate:  2007-07-23\nurl:  /2007/07/ajax-actually-not-difficult/\ncategories: [Asp.Net Ajax]\ntags:  [Ajax,AspNet]\n---\n\nAjax是一种应用技术的缩写，全称为`Asynchronous Javascript And XML `,这种技术的使用可以更好地提高用户的体验。组成这种技术的主要因素有：`javascript`语言，`css`样式表，`XMLHttpRequest`数据交换对象和`Dom`对象。\n<!--more-->\n`XMLHttpRequest`对象是`ajax`技术的关键，它是依附于浏览器的一个组件。在`IE`和`firefox`两种不同的浏览器中，\n\n`XMLHttpRequest`对象的声明也不同，通常我们需要判断一下浏览器再创建对象，代码如下：\n\n```\nvar xmlhttp;\nfunction createRequest() {\n    if (window.ActiveXObject) {\n        xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\n    }\n    else if (window.XMLHTttpRequest) {\n        xmlhttp = new XMLHttpRequest();\n    }\n}\n```\n\n创建好`http`对象后，下一个步骤是加载数据所在的服务器。Ajax可以从其他网站获取数据，也可以从`xml`中获取，\n\n语法如下：\n\n*   xmlHttp.open(method, url, bool)\n\n*   method 表示http的请求方法，一共有5种方法：get,post,head,put,delete,其中比较常用的是get和post\n\n*   url表示数据的地址，如果是本地地址就指定具体的路径，如果是其他的网站的数据就指定完整的url地址。\n\nbool表示是否使用异步获取，true表示异步，false表示同步。如下：\n\n```\nxmlHttp.open(\"get\", \"http://blog.csdn.net/oec2003\", true);\nxmlHttp.open(\"get\", \"oec2003.xml\", true);\n```\n\n在异步调用开始请求前，需要将状态改变时的事件和jacascript定义的方式挂钩，如下：\n\n```\nxmlHttp.onreadystatechange = oec;\nfunction oec() {\n    //4表示异步调用完成，200表示异步调用成功\n    if (xmlhttp.readystate == 4 && xmlhttp.states == 200) {\n        alert(\"哈哈，异步调用成功\");\n    }\n}\n```\n\n当加载完请求后，还需要发送一个http请求，一般表示请求的数据。\n\n```\nxmlhttp.send(params);\n```\n\n其中params表示可选的参数，如果请求的数据不要参数可以直接在括号中写null。\n\n最后就是处理异步获取的数据，数据的类型有两种：\n\n*   文本型：用XMLHttp.ResponseText获取\n\n*   ml类型：用XMLHttp.ResponseXML获取。\n\n\n","slug":"ajax-actually-not-difficult","published":1,"updated":"2016-08-11T14:36:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8z4001fxfyn3e6nu6fc","content":"<p>Ajax是一种应用技术的缩写，全称为<code>Asynchronous Javascript And XML</code>,这种技术的使用可以更好地提高用户的体验。组成这种技术的主要因素有：<code>javascript</code>语言，<code>css</code>样式表，<code>XMLHttpRequest</code>数据交换对象和<code>Dom</code>对象。<br><a id=\"more\"></a><br><code>XMLHttpRequest</code>对象是<code>ajax</code>技术的关键，它是依附于浏览器的一个组件。在<code>IE</code>和<code>firefox</code>两种不同的浏览器中，</p>\n<p><code>XMLHttpRequest</code>对象的声明也不同，通常我们需要判断一下浏览器再创建对象，代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> xmlhttp;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createRequest</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.ActiveXObject) &#123;</div><div class=\"line\">        xmlhttp = <span class=\"keyword\">new</span> ActiveXObject(<span class=\"string\">\"Microsoft.XMLHTTP\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.XMLHTttpRequest) &#123;</div><div class=\"line\">        xmlhttp = <span class=\"keyword\">new</span> XMLHttpRequest();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>创建好<code>http</code>对象后，下一个步骤是加载数据所在的服务器。Ajax可以从其他网站获取数据，也可以从<code>xml</code>中获取，</p>\n<p>语法如下：</p>\n<ul>\n<li><p>xmlHttp.open(method, url, bool)</p>\n</li>\n<li><p>method 表示http的请求方法，一共有5种方法：get,post,head,put,delete,其中比较常用的是get和post</p>\n</li>\n<li><p>url表示数据的地址，如果是本地地址就指定具体的路径，如果是其他的网站的数据就指定完整的url地址。</p>\n</li>\n</ul>\n<p>bool表示是否使用异步获取，true表示异步，false表示同步。如下：</p>\n<figure class=\"highlight fsharp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">xmlHttp.<span class=\"keyword\">open</span>(<span class=\"string\">\"get\"</span>, <span class=\"string\">\"http://blog.csdn.net/oec2003\"</span>, <span class=\"keyword\">true</span>);</div><div class=\"line\">xmlHttp.<span class=\"keyword\">open</span>(<span class=\"string\">\"get\"</span>, <span class=\"string\">\"oec2003.xml\"</span>, <span class=\"keyword\">true</span>);</div></pre></td></tr></table></figure>\n<p>在异步调用开始请求前，需要将状态改变时的事件和jacascript定义的方式挂钩，如下：</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">xmlHttp.onreadystatechange = oec;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">oec</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">//4表示异步调用完成，200表示异步调用成功</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (xmlhttp.readystate == <span class=\"number\">4</span> &amp;&amp; xmlhttp.states == <span class=\"number\">200</span>) &#123;</div><div class=\"line\">        alert(<span class=\"string\">\"哈哈，异步调用成功\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>当加载完请求后，还需要发送一个http请求，一般表示请求的数据。</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">xmlhttp<span class=\"selector-class\">.send</span>(params);</div></pre></td></tr></table></figure>\n<p>其中params表示可选的参数，如果请求的数据不要参数可以直接在括号中写null。</p>\n<p>最后就是处理异步获取的数据，数据的类型有两种：</p>\n<ul>\n<li><p>文本型：用XMLHttp.ResponseText获取</p>\n</li>\n<li><p>ml类型：用XMLHttp.ResponseXML获取。</p>\n</li>\n</ul>\n","excerpt":"<p>Ajax是一种应用技术的缩写，全称为<code>Asynchronous Javascript And XML</code>,这种技术的使用可以更好地提高用户的体验。组成这种技术的主要因素有：<code>javascript</code>语言，<code>css</code>样式表，<code>XMLHttpRequest</code>数据交换对象和<code>Dom</code>对象。<br>","more":"<br><code>XMLHttpRequest</code>对象是<code>ajax</code>技术的关键，它是依附于浏览器的一个组件。在<code>IE</code>和<code>firefox</code>两种不同的浏览器中，</p>\n<p><code>XMLHttpRequest</code>对象的声明也不同，通常我们需要判断一下浏览器再创建对象，代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> xmlhttp;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createRequest</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.ActiveXObject) &#123;</div><div class=\"line\">        xmlhttp = <span class=\"keyword\">new</span> ActiveXObject(<span class=\"string\">\"Microsoft.XMLHTTP\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.XMLHTttpRequest) &#123;</div><div class=\"line\">        xmlhttp = <span class=\"keyword\">new</span> XMLHttpRequest();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>创建好<code>http</code>对象后，下一个步骤是加载数据所在的服务器。Ajax可以从其他网站获取数据，也可以从<code>xml</code>中获取，</p>\n<p>语法如下：</p>\n<ul>\n<li><p>xmlHttp.open(method, url, bool)</p>\n</li>\n<li><p>method 表示http的请求方法，一共有5种方法：get,post,head,put,delete,其中比较常用的是get和post</p>\n</li>\n<li><p>url表示数据的地址，如果是本地地址就指定具体的路径，如果是其他的网站的数据就指定完整的url地址。</p>\n</li>\n</ul>\n<p>bool表示是否使用异步获取，true表示异步，false表示同步。如下：</p>\n<figure class=\"highlight fsharp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">xmlHttp.<span class=\"keyword\">open</span>(<span class=\"string\">\"get\"</span>, <span class=\"string\">\"http://blog.csdn.net/oec2003\"</span>, <span class=\"keyword\">true</span>);</div><div class=\"line\">xmlHttp.<span class=\"keyword\">open</span>(<span class=\"string\">\"get\"</span>, <span class=\"string\">\"oec2003.xml\"</span>, <span class=\"keyword\">true</span>);</div></pre></td></tr></table></figure>\n<p>在异步调用开始请求前，需要将状态改变时的事件和jacascript定义的方式挂钩，如下：</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">xmlHttp.onreadystatechange = oec;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">oec</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">//4表示异步调用完成，200表示异步调用成功</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (xmlhttp.readystate == <span class=\"number\">4</span> &amp;&amp; xmlhttp.states == <span class=\"number\">200</span>) &#123;</div><div class=\"line\">        alert(<span class=\"string\">\"哈哈，异步调用成功\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>当加载完请求后，还需要发送一个http请求，一般表示请求的数据。</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">xmlhttp<span class=\"selector-class\">.send</span>(params);</div></pre></td></tr></table></figure>\n<p>其中params表示可选的参数，如果请求的数据不要参数可以直接在括号中写null。</p>\n<p>最后就是处理异步获取的数据，数据的类型有两种：</p>\n<ul>\n<li><p>文本型：用XMLHttp.ResponseText获取</p>\n</li>\n<li><p>ml类型：用XMLHttp.ResponseXML获取。</p>\n</li>\n</ul>"},{"title":"AjaxControlToolkit安装&下载","date":"2007-08-02T16:00:00.000Z","url":"/2007/08/ajaxcontroltoolkit-installing/","_content":"\n以下是收集关于AjaxControlToolkit安装的一篇文章，感谢原作者\n<!--more-->\n# AjaxControlToolkit下载\n\n[http://ajax.asp.net/downloads/default.aspx?tabid=47](http://ajax.asp.net/downloads/default.aspx?tabid=47)\n\n[http://www.codeplex.com/AtlasControlToolkit/Release/ProjectReleases.aspx?ReleaseId=1425](http://www.codeplex.com/AtlasControlToolkit/Release/ProjectReleases.aspx?ReleaseId=1425)\n\n# 环境设置\n\n1 下载完 ASPAJAXExtSetup.msi 安装更新后在你的系统盘下的（以C盘为例） 出现这个 文件夹：\n\n```\nC:\\Program Files\\Microsoft asp.NET\\ASP.NET 2.0 ajax Extensions\\v1.0.61025\n```\n\n2 安装这个后我们就可以创建Asp.net AJAXEnabledWebSite站点了，这其实就是个ajax.net网站的模板。但是我们现在还不能使用微软给我们开发好的ajax控件 。要想知道怎么使用ajax.net控件往下看。\n\n3 下载AjaxControlToolkit ，上面两个一个是带源代码的 一个是不带源代码的toolkit。建议下载带源代码的 toolkit。下载完成后把该文件解压到：\n\n```\nC:\\Program Files\\Microsoft asp.NET\\ASP.NET 2.0 ajax Extensions\\v1.0.61025\\AjaxContronlToolkit\\\n```\n\n4 双击运行AjaxControlToolkit.sln。用vs2005打开这个sln，编译TemplateVSI这个项目后，把在C:\\Program Files\\Microsoft ASP.NET\\ASP.NET 2.0 AJAX Extensions\\SampleWebSite\\Bin下面生成的AjaxControlToolkit.dll和AjaxControlToolkit.pdb复制到C:\\Program Files\\Microsoft asp.NET\\ASP.NET 2.0 AJAX Extensions\\Binaries文件夹下面，这样我们就可以在vs2005中使用ajax.net这些控件了。\n\n5 新建一个Ajax ControlToolkitWebSite 类型的web项目。在工具栏中新添加一个选项卡起名：AjaxControltoolkit\n\n\n","source":"_posts/ajaxcontroltoolkit-installing.md","raw":"title:  AjaxControlToolkit安装&下载\ndate:  2007-08-03\nurl:  /2007/08/ajaxcontroltoolkit-installing/\ncategories: [Asp.Net Ajax]\ntags:  [Ajax,AspNet]\n---\n\n以下是收集关于AjaxControlToolkit安装的一篇文章，感谢原作者\n<!--more-->\n# AjaxControlToolkit下载\n\n[http://ajax.asp.net/downloads/default.aspx?tabid=47](http://ajax.asp.net/downloads/default.aspx?tabid=47)\n\n[http://www.codeplex.com/AtlasControlToolkit/Release/ProjectReleases.aspx?ReleaseId=1425](http://www.codeplex.com/AtlasControlToolkit/Release/ProjectReleases.aspx?ReleaseId=1425)\n\n# 环境设置\n\n1 下载完 ASPAJAXExtSetup.msi 安装更新后在你的系统盘下的（以C盘为例） 出现这个 文件夹：\n\n```\nC:\\Program Files\\Microsoft asp.NET\\ASP.NET 2.0 ajax Extensions\\v1.0.61025\n```\n\n2 安装这个后我们就可以创建Asp.net AJAXEnabledWebSite站点了，这其实就是个ajax.net网站的模板。但是我们现在还不能使用微软给我们开发好的ajax控件 。要想知道怎么使用ajax.net控件往下看。\n\n3 下载AjaxControlToolkit ，上面两个一个是带源代码的 一个是不带源代码的toolkit。建议下载带源代码的 toolkit。下载完成后把该文件解压到：\n\n```\nC:\\Program Files\\Microsoft asp.NET\\ASP.NET 2.0 ajax Extensions\\v1.0.61025\\AjaxContronlToolkit\\\n```\n\n4 双击运行AjaxControlToolkit.sln。用vs2005打开这个sln，编译TemplateVSI这个项目后，把在C:\\Program Files\\Microsoft ASP.NET\\ASP.NET 2.0 AJAX Extensions\\SampleWebSite\\Bin下面生成的AjaxControlToolkit.dll和AjaxControlToolkit.pdb复制到C:\\Program Files\\Microsoft asp.NET\\ASP.NET 2.0 AJAX Extensions\\Binaries文件夹下面，这样我们就可以在vs2005中使用ajax.net这些控件了。\n\n5 新建一个Ajax ControlToolkitWebSite 类型的web项目。在工具栏中新添加一个选项卡起名：AjaxControltoolkit\n\n\n","slug":"ajaxcontroltoolkit-installing","published":1,"updated":"2016-08-11T14:36:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8z7001ixfyndsui9xim","content":"<p>以下是收集关于AjaxControlToolkit安装的一篇文章，感谢原作者<br><a id=\"more\"></a></p>\n<h1 id=\"AjaxControlToolkit下载\"><a href=\"#AjaxControlToolkit下载\" class=\"headerlink\" title=\"AjaxControlToolkit下载\"></a>AjaxControlToolkit下载</h1><p><a href=\"http://ajax.asp.net/downloads/default.aspx?tabid=47\" target=\"_blank\" rel=\"external\">http://ajax.asp.net/downloads/default.aspx?tabid=47</a></p>\n<p><a href=\"http://www.codeplex.com/AtlasControlToolkit/Release/ProjectReleases.aspx?ReleaseId=1425\" target=\"_blank\" rel=\"external\">http://www.codeplex.com/AtlasControlToolkit/Release/ProjectReleases.aspx?ReleaseId=1425</a></p>\n<h1 id=\"环境设置\"><a href=\"#环境设置\" class=\"headerlink\" title=\"环境设置\"></a>环境设置</h1><p>1 下载完 ASPAJAXExtSetup.msi 安装更新后在你的系统盘下的（以C盘为例） 出现这个 文件夹：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">C</span>:\\<span class=\"selector-tag\">Program</span> <span class=\"selector-tag\">Files</span>\\<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">asp</span><span class=\"selector-class\">.NET</span>\\<span class=\"selector-tag\">ASP</span><span class=\"selector-class\">.NET</span> 2<span class=\"selector-class\">.0</span> <span class=\"selector-tag\">ajax</span> <span class=\"selector-tag\">Extensions</span>\\<span class=\"selector-tag\">v1</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.61025</span></div></pre></td></tr></table></figure>\n<p>2 安装这个后我们就可以创建Asp.net AJAXEnabledWebSite站点了，这其实就是个ajax.net网站的模板。但是我们现在还不能使用微软给我们开发好的ajax控件 。要想知道怎么使用ajax.net控件往下看。</p>\n<p>3 下载AjaxControlToolkit ，上面两个一个是带源代码的 一个是不带源代码的toolkit。建议下载带源代码的 toolkit。下载完成后把该文件解压到：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">C</span>:\\<span class=\"selector-tag\">Program</span> <span class=\"selector-tag\">Files</span>\\<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">asp</span><span class=\"selector-class\">.NET</span>\\<span class=\"selector-tag\">ASP</span><span class=\"selector-class\">.NET</span> 2<span class=\"selector-class\">.0</span> <span class=\"selector-tag\">ajax</span> <span class=\"selector-tag\">Extensions</span>\\<span class=\"selector-tag\">v1</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.61025</span>\\<span class=\"selector-tag\">AjaxContronlToolkit</span>\\</div></pre></td></tr></table></figure>\n<p>4 双击运行AjaxControlToolkit.sln。用vs2005打开这个sln，编译TemplateVSI这个项目后，把在C:\\Program Files\\Microsoft ASP.NET\\ASP.NET 2.0 AJAX Extensions\\SampleWebSite\\Bin下面生成的AjaxControlToolkit.dll和AjaxControlToolkit.pdb复制到C:\\Program Files\\Microsoft asp.NET\\ASP.NET 2.0 AJAX Extensions\\Binaries文件夹下面，这样我们就可以在vs2005中使用ajax.net这些控件了。</p>\n<p>5 新建一个Ajax ControlToolkitWebSite 类型的web项目。在工具栏中新添加一个选项卡起名：AjaxControltoolkit</p>\n","excerpt":"<p>以下是收集关于AjaxControlToolkit安装的一篇文章，感谢原作者<br>","more":"</p>\n<h1 id=\"AjaxControlToolkit下载\"><a href=\"#AjaxControlToolkit下载\" class=\"headerlink\" title=\"AjaxControlToolkit下载\"></a>AjaxControlToolkit下载</h1><p><a href=\"http://ajax.asp.net/downloads/default.aspx?tabid=47\">http://ajax.asp.net/downloads/default.aspx?tabid=47</a></p>\n<p><a href=\"http://www.codeplex.com/AtlasControlToolkit/Release/ProjectReleases.aspx?ReleaseId=1425\">http://www.codeplex.com/AtlasControlToolkit/Release/ProjectReleases.aspx?ReleaseId=1425</a></p>\n<h1 id=\"环境设置\"><a href=\"#环境设置\" class=\"headerlink\" title=\"环境设置\"></a>环境设置</h1><p>1 下载完 ASPAJAXExtSetup.msi 安装更新后在你的系统盘下的（以C盘为例） 出现这个 文件夹：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">C</span>:\\<span class=\"selector-tag\">Program</span> <span class=\"selector-tag\">Files</span>\\<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">asp</span><span class=\"selector-class\">.NET</span>\\<span class=\"selector-tag\">ASP</span><span class=\"selector-class\">.NET</span> 2<span class=\"selector-class\">.0</span> <span class=\"selector-tag\">ajax</span> <span class=\"selector-tag\">Extensions</span>\\<span class=\"selector-tag\">v1</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.61025</span></div></pre></td></tr></table></figure>\n<p>2 安装这个后我们就可以创建Asp.net AJAXEnabledWebSite站点了，这其实就是个ajax.net网站的模板。但是我们现在还不能使用微软给我们开发好的ajax控件 。要想知道怎么使用ajax.net控件往下看。</p>\n<p>3 下载AjaxControlToolkit ，上面两个一个是带源代码的 一个是不带源代码的toolkit。建议下载带源代码的 toolkit。下载完成后把该文件解压到：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">C</span>:\\<span class=\"selector-tag\">Program</span> <span class=\"selector-tag\">Files</span>\\<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">asp</span><span class=\"selector-class\">.NET</span>\\<span class=\"selector-tag\">ASP</span><span class=\"selector-class\">.NET</span> 2<span class=\"selector-class\">.0</span> <span class=\"selector-tag\">ajax</span> <span class=\"selector-tag\">Extensions</span>\\<span class=\"selector-tag\">v1</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.61025</span>\\<span class=\"selector-tag\">AjaxContronlToolkit</span>\\</div></pre></td></tr></table></figure>\n<p>4 双击运行AjaxControlToolkit.sln。用vs2005打开这个sln，编译TemplateVSI这个项目后，把在C:\\Program Files\\Microsoft ASP.NET\\ASP.NET 2.0 AJAX Extensions\\SampleWebSite\\Bin下面生成的AjaxControlToolkit.dll和AjaxControlToolkit.pdb复制到C:\\Program Files\\Microsoft asp.NET\\ASP.NET 2.0 AJAX Extensions\\Binaries文件夹下面，这样我们就可以在vs2005中使用ajax.net这些控件了。</p>\n<p>5 新建一个Ajax ControlToolkitWebSite 类型的web项目。在工具栏中新添加一个选项卡起名：AjaxControltoolkit</p>"},{"title":"差点受骗了","date":"2007-06-09T16:00:00.000Z","url":"/2007/06/almost-to-be-deceived/","_content":"\n昨天下午在宿舍呆着，正没什么事情做，突然我的手机响了，是一个陌生的号，但我还是接了，里面是一个男子的声音，说找儿子，我还很客气地对他说不好意思你打错电话了，然后我就挂掉了电话，没想到，刚一挂电话手机又再次响起，还是那个号码，我又挂掉了，刚挂掉又响，就这样持续了十几分钟，我将手机关了一分种，开了机后还是响，我感觉有点不对劲，将手机的来电转移到了宿舍的电话上。将宿舍的电话线拔掉了，然后用手机给移动人工台打了电话，想让他们将这个骚扰电话给屏蔽掉，接电话的小姐说移动现在还没有这样的功能。以前从来没有碰到这样的事情，还真有点不知所措了，这时我又将手机的从宿舍电话转移回来了，电话有响了，我刚准备挂掉，一看是我妹的，马上就接了，我妹说爸妈找你都找不到，急死了，赶快给家里打个电话吧。我赶紧就给家里打了电话，我爸说你现在是在学校吧，没什么事吧，我一下懵了，忙问怎么回事，我爸说刚才家里接到一个电话，说你在石家庄医院抢救，让汇3万元到一个指定账户上，我和你妈觉得事情挺蹊跷的，就联系你，但联系不上，虽然知道可能是骗人的，但还是很担心。我把我这里发生的事情和我爸说了，让他们放心。\n<!--more-->\n\n后来我在网上查了一下，打给我家里的和打给我的电话是同一个地方的。而且在网上也查到了和我类似的案例。那些骗子就是先给你打骚扰电话，逼你关机，然后在打给你家里骗钱。由于我爸妈对那些骗人的戏法有所耳闻，加上我没有关机的习惯，能够及时与家里取得联系，才使骗子没有得逞。\n\n在此贴出我的个人经历，也希望所有的网友在社会上混都要多留个心眼，以防上当受骗，家里的电话不要轻易透露给他人。\n\n\n","source":"_posts/almost-to-be-deceived.md","raw":"title:  差点受骗了\ndate:  2007-06-10\nurl:  /2007/06/almost-to-be-deceived/\ncategories: [心情日记]\ntags: [日记]\n---\n\n昨天下午在宿舍呆着，正没什么事情做，突然我的手机响了，是一个陌生的号，但我还是接了，里面是一个男子的声音，说找儿子，我还很客气地对他说不好意思你打错电话了，然后我就挂掉了电话，没想到，刚一挂电话手机又再次响起，还是那个号码，我又挂掉了，刚挂掉又响，就这样持续了十几分钟，我将手机关了一分种，开了机后还是响，我感觉有点不对劲，将手机的来电转移到了宿舍的电话上。将宿舍的电话线拔掉了，然后用手机给移动人工台打了电话，想让他们将这个骚扰电话给屏蔽掉，接电话的小姐说移动现在还没有这样的功能。以前从来没有碰到这样的事情，还真有点不知所措了，这时我又将手机的从宿舍电话转移回来了，电话有响了，我刚准备挂掉，一看是我妹的，马上就接了，我妹说爸妈找你都找不到，急死了，赶快给家里打个电话吧。我赶紧就给家里打了电话，我爸说你现在是在学校吧，没什么事吧，我一下懵了，忙问怎么回事，我爸说刚才家里接到一个电话，说你在石家庄医院抢救，让汇3万元到一个指定账户上，我和你妈觉得事情挺蹊跷的，就联系你，但联系不上，虽然知道可能是骗人的，但还是很担心。我把我这里发生的事情和我爸说了，让他们放心。\n<!--more-->\n\n后来我在网上查了一下，打给我家里的和打给我的电话是同一个地方的。而且在网上也查到了和我类似的案例。那些骗子就是先给你打骚扰电话，逼你关机，然后在打给你家里骗钱。由于我爸妈对那些骗人的戏法有所耳闻，加上我没有关机的习惯，能够及时与家里取得联系，才使骗子没有得逞。\n\n在此贴出我的个人经历，也希望所有的网友在社会上混都要多留个心眼，以防上当受骗，家里的电话不要轻易透露给他人。\n\n\n","slug":"almost-to-be-deceived","published":1,"updated":"2016-08-11T14:36:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8zb001kxfyn58wdxyxc","content":"<p>昨天下午在宿舍呆着，正没什么事情做，突然我的手机响了，是一个陌生的号，但我还是接了，里面是一个男子的声音，说找儿子，我还很客气地对他说不好意思你打错电话了，然后我就挂掉了电话，没想到，刚一挂电话手机又再次响起，还是那个号码，我又挂掉了，刚挂掉又响，就这样持续了十几分钟，我将手机关了一分种，开了机后还是响，我感觉有点不对劲，将手机的来电转移到了宿舍的电话上。将宿舍的电话线拔掉了，然后用手机给移动人工台打了电话，想让他们将这个骚扰电话给屏蔽掉，接电话的小姐说移动现在还没有这样的功能。以前从来没有碰到这样的事情，还真有点不知所措了，这时我又将手机的从宿舍电话转移回来了，电话有响了，我刚准备挂掉，一看是我妹的，马上就接了，我妹说爸妈找你都找不到，急死了，赶快给家里打个电话吧。我赶紧就给家里打了电话，我爸说你现在是在学校吧，没什么事吧，我一下懵了，忙问怎么回事，我爸说刚才家里接到一个电话，说你在石家庄医院抢救，让汇3万元到一个指定账户上，我和你妈觉得事情挺蹊跷的，就联系你，但联系不上，虽然知道可能是骗人的，但还是很担心。我把我这里发生的事情和我爸说了，让他们放心。<br><a id=\"more\"></a></p>\n<p>后来我在网上查了一下，打给我家里的和打给我的电话是同一个地方的。而且在网上也查到了和我类似的案例。那些骗子就是先给你打骚扰电话，逼你关机，然后在打给你家里骗钱。由于我爸妈对那些骗人的戏法有所耳闻，加上我没有关机的习惯，能够及时与家里取得联系，才使骗子没有得逞。</p>\n<p>在此贴出我的个人经历，也希望所有的网友在社会上混都要多留个心眼，以防上当受骗，家里的电话不要轻易透露给他人。</p>\n","excerpt":"<p>昨天下午在宿舍呆着，正没什么事情做，突然我的手机响了，是一个陌生的号，但我还是接了，里面是一个男子的声音，说找儿子，我还很客气地对他说不好意思你打错电话了，然后我就挂掉了电话，没想到，刚一挂电话手机又再次响起，还是那个号码，我又挂掉了，刚挂掉又响，就这样持续了十几分钟，我将手机关了一分种，开了机后还是响，我感觉有点不对劲，将手机的来电转移到了宿舍的电话上。将宿舍的电话线拔掉了，然后用手机给移动人工台打了电话，想让他们将这个骚扰电话给屏蔽掉，接电话的小姐说移动现在还没有这样的功能。以前从来没有碰到这样的事情，还真有点不知所措了，这时我又将手机的从宿舍电话转移回来了，电话有响了，我刚准备挂掉，一看是我妹的，马上就接了，我妹说爸妈找你都找不到，急死了，赶快给家里打个电话吧。我赶紧就给家里打了电话，我爸说你现在是在学校吧，没什么事吧，我一下懵了，忙问怎么回事，我爸说刚才家里接到一个电话，说你在石家庄医院抢救，让汇3万元到一个指定账户上，我和你妈觉得事情挺蹊跷的，就联系你，但联系不上，虽然知道可能是骗人的，但还是很担心。我把我这里发生的事情和我爸说了，让他们放心。<br>","more":"</p>\n<p>后来我在网上查了一下，打给我家里的和打给我的电话是同一个地方的。而且在网上也查到了和我类似的案例。那些骗子就是先给你打骚扰电话，逼你关机，然后在打给你家里骗钱。由于我爸妈对那些骗人的戏法有所耳闻，加上我没有关机的习惯，能够及时与家里取得联系，才使骗子没有得逞。</p>\n<p>在此贴出我的个人经历，也希望所有的网友在社会上混都要多留个心眼，以防上当受骗，家里的电话不要轻易透露给他人。</p>"},{"title":"AjaxPro版自动完成（Autocomplete）功能实现","date":"2009-07-12T16:00:00.000Z","_content":"\n07年的时候写过一篇有关自动完成(Atuocomplete)的文章 [asp.net Ajax —AutoComplete控件使用](http://www.cnblogs.com/oec2003/archive/2007/08/18/860870.html) ，那篇文章中使用的是Asp.net Ajax ControlTollKit中的一个控件，虽然那时对里面几十个控件都研究过，不过遗憾的是在实际开发中确从未用到过，鉴于现在Ajaxpro的易用性和普遍性，本文将使用ajaxpro来实现自动完成的功能。\n<!--more-->\n\n使用Ajaxpro之前，还是来重温下使用Ajaxpro的四个必备条件。\n\n1 添加对Ajaxpro的引用。\n\n2 配置webconfig的httpHandlers 节点，代码如下：\n\n```\n<add verb=\"*\" path=\"ajaxpro/*.ashx\" type=\"AjaxPro.AjaxHandlerFactory, AjaxPro.2\"/>\n```\n\n3 在PageLoad中注册类 ，代码如下\n\n```\nAjaxPro.Utility.RegisterTypeForAjax(typeof(Autocomplete2.AjaxproDemo));\n```\n\n4 后台被调用的方法上要写上`[AjaxPro.AjaxMethod()]` 标记\n\n本示例将采用Ajaxpro根据文本框中输入的关键字从后台取出结果返回到客户端，由于是演示后台使用List作为数据源，数据是用程序添加的，在正式使用时可以换成在数据库中取值的方式。代码如下：\n\n前台代码：\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"AjaxproDemo.aspx.cs\"\n  Inherits=\"Autocomplete2.AjaxproDemo\" %>\n\n  <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\n  http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n\n  <html xmlns=\"http://www.w3.org/1999/xhtml\" >\n  <head id=\"Head1\" runat=\"server\">\n      <title>Ajaxpro-Autocomplete</title>\n      <style type=\"text/css\">\n      #divText\n     {\n         display:none;\n         position:absolute;\n         z-index:100;\n         width:252px;\n         height:200px;\n         border:1px solid #6EBDD0;\n         background-color:#EEF4F7;\n     }\n\n     #txtKeyword\n     {\n         width:250px;\n         border:1px solid #6EBDD0;\n     }\n     </style>\n\n     <script type=\"text/javascript\">\n\n         function displayDiv(id, mode) {\n             var divText = document.getElementById(\"divText\");\n             if (mode) {\n                 divText.style.display = \"inline\";\n             } else {\n                 divText.style.display = \"none\";\n             }\n         }\n\n         function getText(obj) {\n             var keyword = obj.value;\n             var x = obj.offsetLeft;\n             var y = obj.offsetTop;\n             while (obj = obj.offsetParent) {\n                 x += obj.offsetLeft;\n                 y += obj.offsetTop;\n             }\n\n             if (keyword != \"\") {\n                 var result = Autocomplete2.AjaxproDemo.GetText(keyword).value;\n                 var divText = document.getElementById(\"divText\");\n                 if (result != \"\" && result!=null) {\n                     //divText.style.display = \"inline\";\n                     displayDiv(\"divText\", true);\n                     divText.style.top = (parseInt(y, 10) + 21) + \"px\";\n                     divText.style.left = x + \"px\";\n                     divText.innerHTML = result;\n                 }\n                 else {\n                     displayDiv(\"divText\", false);\n                 }\n             }\n         }\n\n         function setText(obj) {\n             displayDiv(\"divText\", false);\n             document.getElementById(\"txtKeyword\").value = obj.innerHTML;\n\n         }\n         function setColor(obj) {\n             obj.style.backgroundColor = \"#D0E4E9\";\n         }\n         function clearColor(obj) {\n             obj.style.backgroundColor = \"\"\n         }\n     </script>\n </head>\n <body>\n     <form id=\"form2\" runat=\"server\">\n     <input id=\"txtKeyword\" type=\"text\" onkeyup=\"getText(this)\" />\n\n     <!---->\n     <div id=\"divText\" runat=\"server\" >\n\n     </div>\n     <!---->\n     </form>\n </body>\n </html> \n```\n\n后台代码：\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n//new using\nusing System.Data.Linq.SqlClient;\nusing AjaxPro;\nusing System.Text;\n\nnamespace Autocomplete2\n{\n    /// <summary>\n    /// Ajaxpro-Autocomplete\n    /// </summary>\n    public partial class AjaxproDemo : System.Web.UI.Page\n    {\n        protected void Page_Load(object sender, EventArgs e)\n        {\n            AjaxPro.Utility.RegisterTypeForAjax(typeof(AjaxproDemo));\n        }\n\n        /// <summary>\n        ///根据关键字匹配和关键字相符的结果返回\n        /// </summary>\n        /// <param name=\"keyWord\">关键字</param>\n        /// <returns></returns>\n        [AjaxPro.AjaxMethod()]\n        public string GetText(string keyWord)\n        {\n            List<Content> list = new List<Content>();\n            list.Add(new Content(\"asp.net mvc\"));\n            list.Add(new Content(\"asp.net ajax\"));\n            list.Add(new Content(\"asp.net 教程\"));\n            list.Add(new Content(\"asp.net 视频教程\"));\n            list.Add(new Content(\"asp.net 源码\"));\n            list.Add(new Content(\"asp.net cms\"));\n            list.Add(new Content(\"asp.net 3.5\"));\n            list.Add(new Content(\"c# 数组\"));\n            list.Add(new Content(\"c# 多线程\"));\n            list.Add(new Content(\"oec2003\"));\n            list.Add(new Content(\"oec2004\"));\n            list.Add(new Content(\"oec2005\"));\n            list.Add(new Content(\"oec2006\"));\n            var q = list.Where(p => p.Title.StartsWith(keyWord)).Take(10);\n\n            StringBuilder sb = new StringBuilder();\n            try\n            {\n                if (q.Count() > 0)\n                {\n                    foreach (var t in q.ToList<Content>())\n                    {\n                        sb.Append(\"<div onclick=\\\"setText(this)\\\"\" +\n                           \"onmouseover=\\\"setColor(this)\\\" \" +\n                           \"onmouseout=\\\"clearColor(this)\\\" \" +\n                           \"style=\\\"cursor:pointer;width:100%\\\">\" +\n                            t.Title + \"</div>\");\n                    }\n                }\n                return sb.ToString();\n            }\n            catch\n            {\n                return \"\";\n            }\n        }\n    }\n\n    public class Content\n    {\n        public string Title { get; set; }\n\n        public Content(string title)\n        {\n            Title = title;\n        }\n    }\n}\n```\n\n运行结果如下图：\n\n![2010-12-29_170842](http://oec2003.qiniudn.com/2010-12-29_170842.gif)\n![2010-12-29_170928](http://oec2003.qiniudn.com/2010-12-29_170928.gif)\n\n注：Ajax.net有Ajaxpro.dll和Ajax.dll两个版本，这两个版本在使用时有些区别。\n\n1 webconfig的配置不一样\n\nAjaxpro.dll的webconfig配置如下:\n\n```\n<add verb=\"*\" path=\"ajaxpro/*.ashx\" type=\"AjaxPro.AjaxHandlerFactory, AjaxPro.2\"/>\n```\n\nAjax.dll的webconfig配置如下 :\n\n```\n<add verb=\"Post,Get\"path=\"ajax/*.ashx\" type=\"Ajax.AjaxHandlerFactory,Ajax\"/>\n```\n\n2 在客户端调用后台方法时有区别\n\nAjax.dll在调用时直接写类名.方法名就可以，如下\n\n```\nvar result = AjaxproDemo.GetText(keyword).value;\n```\n\nAjaxpro.dll在调用时要加上命名空间，如下：\n\n```\nvar result = Autocomplete2.AjaxproDemo.GetText(keyword).value;\n```\n\n[示例下载](http://files.cnblogs.com/oec2003/Autocomplete2.rar)\n\n\n","source":"_posts/ajaxpro-autocomplete-function-implementation.md","raw":"---\ntitle: AjaxPro版自动完成（Autocomplete）功能实现\ndate: 2009-07-13\ncategories: [Asp.Net Ajax]\ntags: [ajaxpro, AspNet, Autocomplete]\n---\n\n07年的时候写过一篇有关自动完成(Atuocomplete)的文章 [asp.net Ajax —AutoComplete控件使用](http://www.cnblogs.com/oec2003/archive/2007/08/18/860870.html) ，那篇文章中使用的是Asp.net Ajax ControlTollKit中的一个控件，虽然那时对里面几十个控件都研究过，不过遗憾的是在实际开发中确从未用到过，鉴于现在Ajaxpro的易用性和普遍性，本文将使用ajaxpro来实现自动完成的功能。\n<!--more-->\n\n使用Ajaxpro之前，还是来重温下使用Ajaxpro的四个必备条件。\n\n1 添加对Ajaxpro的引用。\n\n2 配置webconfig的httpHandlers 节点，代码如下：\n\n```\n<add verb=\"*\" path=\"ajaxpro/*.ashx\" type=\"AjaxPro.AjaxHandlerFactory, AjaxPro.2\"/>\n```\n\n3 在PageLoad中注册类 ，代码如下\n\n```\nAjaxPro.Utility.RegisterTypeForAjax(typeof(Autocomplete2.AjaxproDemo));\n```\n\n4 后台被调用的方法上要写上`[AjaxPro.AjaxMethod()]` 标记\n\n本示例将采用Ajaxpro根据文本框中输入的关键字从后台取出结果返回到客户端，由于是演示后台使用List作为数据源，数据是用程序添加的，在正式使用时可以换成在数据库中取值的方式。代码如下：\n\n前台代码：\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"AjaxproDemo.aspx.cs\"\n  Inherits=\"Autocomplete2.AjaxproDemo\" %>\n\n  <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\n  http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n\n  <html xmlns=\"http://www.w3.org/1999/xhtml\" >\n  <head id=\"Head1\" runat=\"server\">\n      <title>Ajaxpro-Autocomplete</title>\n      <style type=\"text/css\">\n      #divText\n     {\n         display:none;\n         position:absolute;\n         z-index:100;\n         width:252px;\n         height:200px;\n         border:1px solid #6EBDD0;\n         background-color:#EEF4F7;\n     }\n\n     #txtKeyword\n     {\n         width:250px;\n         border:1px solid #6EBDD0;\n     }\n     </style>\n\n     <script type=\"text/javascript\">\n\n         function displayDiv(id, mode) {\n             var divText = document.getElementById(\"divText\");\n             if (mode) {\n                 divText.style.display = \"inline\";\n             } else {\n                 divText.style.display = \"none\";\n             }\n         }\n\n         function getText(obj) {\n             var keyword = obj.value;\n             var x = obj.offsetLeft;\n             var y = obj.offsetTop;\n             while (obj = obj.offsetParent) {\n                 x += obj.offsetLeft;\n                 y += obj.offsetTop;\n             }\n\n             if (keyword != \"\") {\n                 var result = Autocomplete2.AjaxproDemo.GetText(keyword).value;\n                 var divText = document.getElementById(\"divText\");\n                 if (result != \"\" && result!=null) {\n                     //divText.style.display = \"inline\";\n                     displayDiv(\"divText\", true);\n                     divText.style.top = (parseInt(y, 10) + 21) + \"px\";\n                     divText.style.left = x + \"px\";\n                     divText.innerHTML = result;\n                 }\n                 else {\n                     displayDiv(\"divText\", false);\n                 }\n             }\n         }\n\n         function setText(obj) {\n             displayDiv(\"divText\", false);\n             document.getElementById(\"txtKeyword\").value = obj.innerHTML;\n\n         }\n         function setColor(obj) {\n             obj.style.backgroundColor = \"#D0E4E9\";\n         }\n         function clearColor(obj) {\n             obj.style.backgroundColor = \"\"\n         }\n     </script>\n </head>\n <body>\n     <form id=\"form2\" runat=\"server\">\n     <input id=\"txtKeyword\" type=\"text\" onkeyup=\"getText(this)\" />\n\n     <!---->\n     <div id=\"divText\" runat=\"server\" >\n\n     </div>\n     <!---->\n     </form>\n </body>\n </html> \n```\n\n后台代码：\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n//new using\nusing System.Data.Linq.SqlClient;\nusing AjaxPro;\nusing System.Text;\n\nnamespace Autocomplete2\n{\n    /// <summary>\n    /// Ajaxpro-Autocomplete\n    /// </summary>\n    public partial class AjaxproDemo : System.Web.UI.Page\n    {\n        protected void Page_Load(object sender, EventArgs e)\n        {\n            AjaxPro.Utility.RegisterTypeForAjax(typeof(AjaxproDemo));\n        }\n\n        /// <summary>\n        ///根据关键字匹配和关键字相符的结果返回\n        /// </summary>\n        /// <param name=\"keyWord\">关键字</param>\n        /// <returns></returns>\n        [AjaxPro.AjaxMethod()]\n        public string GetText(string keyWord)\n        {\n            List<Content> list = new List<Content>();\n            list.Add(new Content(\"asp.net mvc\"));\n            list.Add(new Content(\"asp.net ajax\"));\n            list.Add(new Content(\"asp.net 教程\"));\n            list.Add(new Content(\"asp.net 视频教程\"));\n            list.Add(new Content(\"asp.net 源码\"));\n            list.Add(new Content(\"asp.net cms\"));\n            list.Add(new Content(\"asp.net 3.5\"));\n            list.Add(new Content(\"c# 数组\"));\n            list.Add(new Content(\"c# 多线程\"));\n            list.Add(new Content(\"oec2003\"));\n            list.Add(new Content(\"oec2004\"));\n            list.Add(new Content(\"oec2005\"));\n            list.Add(new Content(\"oec2006\"));\n            var q = list.Where(p => p.Title.StartsWith(keyWord)).Take(10);\n\n            StringBuilder sb = new StringBuilder();\n            try\n            {\n                if (q.Count() > 0)\n                {\n                    foreach (var t in q.ToList<Content>())\n                    {\n                        sb.Append(\"<div onclick=\\\"setText(this)\\\"\" +\n                           \"onmouseover=\\\"setColor(this)\\\" \" +\n                           \"onmouseout=\\\"clearColor(this)\\\" \" +\n                           \"style=\\\"cursor:pointer;width:100%\\\">\" +\n                            t.Title + \"</div>\");\n                    }\n                }\n                return sb.ToString();\n            }\n            catch\n            {\n                return \"\";\n            }\n        }\n    }\n\n    public class Content\n    {\n        public string Title { get; set; }\n\n        public Content(string title)\n        {\n            Title = title;\n        }\n    }\n}\n```\n\n运行结果如下图：\n\n![2010-12-29_170842](http://oec2003.qiniudn.com/2010-12-29_170842.gif)\n![2010-12-29_170928](http://oec2003.qiniudn.com/2010-12-29_170928.gif)\n\n注：Ajax.net有Ajaxpro.dll和Ajax.dll两个版本，这两个版本在使用时有些区别。\n\n1 webconfig的配置不一样\n\nAjaxpro.dll的webconfig配置如下:\n\n```\n<add verb=\"*\" path=\"ajaxpro/*.ashx\" type=\"AjaxPro.AjaxHandlerFactory, AjaxPro.2\"/>\n```\n\nAjax.dll的webconfig配置如下 :\n\n```\n<add verb=\"Post,Get\"path=\"ajax/*.ashx\" type=\"Ajax.AjaxHandlerFactory,Ajax\"/>\n```\n\n2 在客户端调用后台方法时有区别\n\nAjax.dll在调用时直接写类名.方法名就可以，如下\n\n```\nvar result = AjaxproDemo.GetText(keyword).value;\n```\n\nAjaxpro.dll在调用时要加上命名空间，如下：\n\n```\nvar result = Autocomplete2.AjaxproDemo.GetText(keyword).value;\n```\n\n[示例下载](http://files.cnblogs.com/oec2003/Autocomplete2.rar)\n\n\n","slug":"ajaxpro-autocomplete-function-implementation","published":1,"updated":"2016-08-16T13:47:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8zj001oxfyngfsmzk8v","content":"<p>07年的时候写过一篇有关自动完成(Atuocomplete)的文章 <a href=\"http://www.cnblogs.com/oec2003/archive/2007/08/18/860870.html\" target=\"_blank\" rel=\"external\">asp.net Ajax —AutoComplete控件使用</a> ，那篇文章中使用的是Asp.net Ajax ControlTollKit中的一个控件，虽然那时对里面几十个控件都研究过，不过遗憾的是在实际开发中确从未用到过，鉴于现在Ajaxpro的易用性和普遍性，本文将使用ajaxpro来实现自动完成的功能。<br><a id=\"more\"></a></p>\n<p>使用Ajaxpro之前，还是来重温下使用Ajaxpro的四个必备条件。</p>\n<p>1 添加对Ajaxpro的引用。</p>\n<p>2 配置webconfig的httpHandlers 节点，代码如下：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"built_in\">add</span> <span class=\"keyword\">verb</span>=<span class=\"string\">\"*\"</span> path=<span class=\"string\">\"ajaxpro/*.ashx\"</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"AjaxPro.AjaxHandlerFactory, AjaxPro.2\"</span>/&gt;</div></pre></td></tr></table></figure>\n<p>3 在PageLoad中注册类 ，代码如下</p>\n<figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"type\">AjaxPro</span>.<span class=\"type\">Utility</span>.<span class=\"type\">RegisterTypeForAjax</span>(typeof(<span class=\"type\">Autocomplete2</span>.<span class=\"type\">AjaxproDemo</span>));</div></pre></td></tr></table></figure>\n<p>4 后台被调用的方法上要写上<code>[AjaxPro.AjaxMethod()]</code> 标记</p>\n<p>本示例将采用Ajaxpro根据文本框中输入的关键字从后台取出结果返回到客户端，由于是演示后台使用List作为数据源，数据是用程序添加的，在正式使用时可以换成在数据库中取值的方式。代码如下：</p>\n<p>前台代码：</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeBehind=<span class=\"string\">\"AjaxproDemo.aspx.cs\"</span></span></div><div class=\"line\">  Inherits=<span class=\"string\">\"Autocomplete2.AjaxproDemo\"</span> <span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"</span></div><div class=\"line\">  http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span> &gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Ajaxpro-Autocomplete<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"css\"></span></div><div class=\"line\">      <span class=\"selector-id\">#divText</span></div><div class=\"line\">     &#123;</div><div class=\"line\">         <span class=\"attribute\">display</span>:none;</div><div class=\"line\">         <span class=\"attribute\">position</span>:absolute;</div><div class=\"line\">         <span class=\"attribute\">z-index</span>:<span class=\"number\">100</span>;</div><div class=\"line\">         <span class=\"attribute\">width</span>:<span class=\"number\">252px</span>;</div><div class=\"line\">         <span class=\"attribute\">height</span>:<span class=\"number\">200px</span>;</div><div class=\"line\">         <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#6EBDD0</span>;</div><div class=\"line\">         <span class=\"attribute\">background-color</span>:<span class=\"number\">#EEF4F7</span>;</div><div class=\"line\">     &#125;</div><div class=\"line\"></div><div class=\"line\">     <span class=\"selector-id\">#txtKeyword</span></div><div class=\"line\">     &#123;</div><div class=\"line\">         <span class=\"attribute\">width</span>:<span class=\"number\">250px</span>;</div><div class=\"line\">         <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#6EBDD0</span>;</div><div class=\"line\">     &#125;</div><div class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\"></div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">displayDiv</span>(<span class=\"params\">id, mode</span>) </span>&#123;</div><div class=\"line\">             <span class=\"keyword\">var</span> divText = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"divText\"</span>);</div><div class=\"line\">             <span class=\"keyword\">if</span> (mode) &#123;</div><div class=\"line\">                 divText.style.display = <span class=\"string\">\"inline\"</span>;</div><div class=\"line\">             &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                 divText.style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">             &#125;</div><div class=\"line\">         &#125;</div><div class=\"line\"></div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getText</span>(<span class=\"params\">obj</span>) </span>&#123;</div><div class=\"line\">             <span class=\"keyword\">var</span> keyword = obj.value;</div><div class=\"line\">             <span class=\"keyword\">var</span> x = obj.offsetLeft;</div><div class=\"line\">             <span class=\"keyword\">var</span> y = obj.offsetTop;</div><div class=\"line\">             <span class=\"keyword\">while</span> (obj = obj.offsetParent) &#123;</div><div class=\"line\">                 x += obj.offsetLeft;</div><div class=\"line\">                 y += obj.offsetTop;</div><div class=\"line\">             &#125;</div><div class=\"line\"></div><div class=\"line\">             <span class=\"keyword\">if</span> (keyword != <span class=\"string\">\"\"</span>) &#123;</div><div class=\"line\">                 <span class=\"keyword\">var</span> result = Autocomplete2.AjaxproDemo.GetText(keyword).value;</div><div class=\"line\">                 <span class=\"keyword\">var</span> divText = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"divText\"</span>);</div><div class=\"line\">                 <span class=\"keyword\">if</span> (result != <span class=\"string\">\"\"</span> &amp;&amp; result!=<span class=\"literal\">null</span>) &#123;</div><div class=\"line\">                     <span class=\"comment\">//divText.style.display = \"inline\";</span></div><div class=\"line\">                     displayDiv(<span class=\"string\">\"divText\"</span>, <span class=\"literal\">true</span>);</div><div class=\"line\">                     divText.style.top = (<span class=\"built_in\">parseInt</span>(y, <span class=\"number\">10</span>) + <span class=\"number\">21</span>) + <span class=\"string\">\"px\"</span>;</div><div class=\"line\">                     divText.style.left = x + <span class=\"string\">\"px\"</span>;</div><div class=\"line\">                     divText.innerHTML = result;</div><div class=\"line\">                 &#125;</div><div class=\"line\">                 <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                     displayDiv(<span class=\"string\">\"divText\"</span>, <span class=\"literal\">false</span>);</div><div class=\"line\">                 &#125;</div><div class=\"line\">             &#125;</div><div class=\"line\">         &#125;</div><div class=\"line\"></div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setText</span>(<span class=\"params\">obj</span>) </span>&#123;</div><div class=\"line\">             displayDiv(<span class=\"string\">\"divText\"</span>, <span class=\"literal\">false</span>);</div><div class=\"line\">             <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txtKeyword\"</span>).value = obj.innerHTML;</div><div class=\"line\"></div><div class=\"line\">         &#125;</div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setColor</span>(<span class=\"params\">obj</span>) </span>&#123;</div><div class=\"line\">             obj.style.backgroundColor = <span class=\"string\">\"#D0E4E9\"</span>;</div><div class=\"line\">         &#125;</div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">clearColor</span>(<span class=\"params\">obj</span>) </span>&#123;</div><div class=\"line\">             obj.style.backgroundColor = <span class=\"string\">\"\"</span></div><div class=\"line\">         &#125;</div><div class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txtKeyword\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">onkeyup</span>=<span class=\"string\">\"getText(this)\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">     <span class=\"comment\">&lt;!----&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"divText\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> &gt;</span></div><div class=\"line\"></div><div class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">     <span class=\"comment\">&lt;!----&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>后台代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls;</div><div class=\"line\"><span class=\"comment\">//new using</span></div><div class=\"line\"><span class=\"keyword\">using</span> System.Data.Linq.SqlClient;</div><div class=\"line\"><span class=\"keyword\">using</span> AjaxPro;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> Autocomplete2</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// Ajaxpro-Autocomplete</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> AjaxproDemo : System.Web.UI.Page</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            AjaxPro.Utility.RegisterTypeForAjax(typeof(AjaxproDemo));</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">///根据关键字匹配和关键字相符的结果返回</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"keyWord\"&gt;关键字&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        [AjaxPro.AjaxMethod()]</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> <span class=\"title\">GetText</span><span class=\"params\">(<span class=\"built_in\">string</span> keyWord)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            List&lt;Content&gt; <span class=\"built_in\">list</span> = <span class=\"keyword\">new</span> List&lt;Content&gt;();</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"asp.net mvc\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"asp.net ajax\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"asp.net 教程\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"asp.net 视频教程\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"asp.net 源码\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"asp.net cms\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"asp.net 3.5\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"c# 数组\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"c# 多线程\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"oec2003\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"oec2004\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"oec2005\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"oec2006\"</span>));</div><div class=\"line\">            var q = <span class=\"built_in\">list</span>.Where(p =&gt; p.Title.StartsWith(keyWord)).Take(<span class=\"number\">10</span>);</div><div class=\"line\"></div><div class=\"line\">            StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (q.Count() &gt; <span class=\"number\">0</span>)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    foreach (var t in q.ToList&lt;Content&gt;())</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        sb.Append(<span class=\"string\">\"&lt;div onclick=\\\"setText(this)\\\"\"</span> +</div><div class=\"line\">                           <span class=\"string\">\"onmouseover=\\\"setColor(this)\\\" \"</span> +</div><div class=\"line\">                           <span class=\"string\">\"onmouseout=\\\"clearColor(this)\\\" \"</span> +</div><div class=\"line\">                           <span class=\"string\">\"style=\\\"cursor:pointer;width:100%\\\"&gt;\"</span> +</div><div class=\"line\">                            t.Title + <span class=\"string\">\"&lt;/div&gt;\"</span>);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">return</span> sb.ToString();</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Content</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Title &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Content</span><span class=\"params\">(<span class=\"built_in\">string</span> title)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Title = title;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>运行结果如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_170842.gif\" alt=\"2010-12-29_170842\"><br><img src=\"http://oec2003.qiniudn.com/2010-12-29_170928.gif\" alt=\"2010-12-29_170928\"></p>\n<p>注：Ajax.net有Ajaxpro.dll和Ajax.dll两个版本，这两个版本在使用时有些区别。</p>\n<p>1 webconfig的配置不一样</p>\n<p>Ajaxpro.dll的webconfig配置如下:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"built_in\">add</span> <span class=\"keyword\">verb</span>=<span class=\"string\">\"*\"</span> path=<span class=\"string\">\"ajaxpro/*.ashx\"</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"AjaxPro.AjaxHandlerFactory, AjaxPro.2\"</span>/&gt;</div></pre></td></tr></table></figure>\n<p>Ajax.dll的webconfig配置如下 :</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"built_in\">add</span> <span class=\"keyword\">verb</span>=<span class=\"string\">\"Post,Get\"</span>path=<span class=\"string\">\"ajax/*.ashx\"</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"Ajax.AjaxHandlerFactory,Ajax\"</span>/&gt;</div></pre></td></tr></table></figure>\n<p>2 在客户端调用后台方法时有区别</p>\n<p>Ajax.dll在调用时直接写类名.方法名就可以，如下</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> result = AjaxproDemo.GetText(keyword).<span class=\"keyword\">value</span>;</div></pre></td></tr></table></figure>\n<p>Ajaxpro.dll在调用时要加上命名空间，如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> result = Autocomplete2.AjaxproDemo.GetText(keyword).<span class=\"keyword\">value</span>;</div></pre></td></tr></table></figure>\n<p><a href=\"http://files.cnblogs.com/oec2003/Autocomplete2.rar\" target=\"_blank\" rel=\"external\">示例下载</a></p>\n","excerpt":"<p>07年的时候写过一篇有关自动完成(Atuocomplete)的文章 <a href=\"http://www.cnblogs.com/oec2003/archive/2007/08/18/860870.html\">asp.net Ajax —AutoComplete控件使用</a> ，那篇文章中使用的是Asp.net Ajax ControlTollKit中的一个控件，虽然那时对里面几十个控件都研究过，不过遗憾的是在实际开发中确从未用到过，鉴于现在Ajaxpro的易用性和普遍性，本文将使用ajaxpro来实现自动完成的功能。<br>","more":"</p>\n<p>使用Ajaxpro之前，还是来重温下使用Ajaxpro的四个必备条件。</p>\n<p>1 添加对Ajaxpro的引用。</p>\n<p>2 配置webconfig的httpHandlers 节点，代码如下：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"built_in\">add</span> <span class=\"keyword\">verb</span>=<span class=\"string\">\"*\"</span> path=<span class=\"string\">\"ajaxpro/*.ashx\"</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"AjaxPro.AjaxHandlerFactory, AjaxPro.2\"</span>/&gt;</div></pre></td></tr></table></figure>\n<p>3 在PageLoad中注册类 ，代码如下</p>\n<figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"type\">AjaxPro</span>.<span class=\"type\">Utility</span>.<span class=\"type\">RegisterTypeForAjax</span>(typeof(<span class=\"type\">Autocomplete2</span>.<span class=\"type\">AjaxproDemo</span>));</div></pre></td></tr></table></figure>\n<p>4 后台被调用的方法上要写上<code>[AjaxPro.AjaxMethod()]</code> 标记</p>\n<p>本示例将采用Ajaxpro根据文本框中输入的关键字从后台取出结果返回到客户端，由于是演示后台使用List作为数据源，数据是用程序添加的，在正式使用时可以换成在数据库中取值的方式。代码如下：</p>\n<p>前台代码：</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeBehind=<span class=\"string\">\"AjaxproDemo.aspx.cs\"</span></div><div class=\"line\">  Inherits=<span class=\"string\">\"Autocomplete2.AjaxproDemo\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"</div><div class=\"line\">  http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span> &gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Ajaxpro-Autocomplete<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"css\"></div><div class=\"line\">      <span class=\"selector-id\">#divText</span></div><div class=\"line\">     &#123;</div><div class=\"line\">         <span class=\"attribute\">display</span>:none;</div><div class=\"line\">         <span class=\"attribute\">position</span>:absolute;</div><div class=\"line\">         <span class=\"attribute\">z-index</span>:<span class=\"number\">100</span>;</div><div class=\"line\">         <span class=\"attribute\">width</span>:<span class=\"number\">252px</span>;</div><div class=\"line\">         <span class=\"attribute\">height</span>:<span class=\"number\">200px</span>;</div><div class=\"line\">         <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#6EBDD0</span>;</div><div class=\"line\">         <span class=\"attribute\">background-color</span>:<span class=\"number\">#EEF4F7</span>;</div><div class=\"line\">     &#125;</div><div class=\"line\"></div><div class=\"line\">     <span class=\"selector-id\">#txtKeyword</span></div><div class=\"line\">     &#123;</div><div class=\"line\">         <span class=\"attribute\">width</span>:<span class=\"number\">250px</span>;</div><div class=\"line\">         <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#6EBDD0</span>;</div><div class=\"line\">     &#125;</div><div class=\"line\">     </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\"></div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">displayDiv</span>(<span class=\"params\">id, mode</span>) </span>&#123;</div><div class=\"line\">             <span class=\"keyword\">var</span> divText = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"divText\"</span>);</div><div class=\"line\">             <span class=\"keyword\">if</span> (mode) &#123;</div><div class=\"line\">                 divText.style.display = <span class=\"string\">\"inline\"</span>;</div><div class=\"line\">             &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                 divText.style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">             &#125;</div><div class=\"line\">         &#125;</div><div class=\"line\"></div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getText</span>(<span class=\"params\">obj</span>) </span>&#123;</div><div class=\"line\">             <span class=\"keyword\">var</span> keyword = obj.value;</div><div class=\"line\">             <span class=\"keyword\">var</span> x = obj.offsetLeft;</div><div class=\"line\">             <span class=\"keyword\">var</span> y = obj.offsetTop;</div><div class=\"line\">             <span class=\"keyword\">while</span> (obj = obj.offsetParent) &#123;</div><div class=\"line\">                 x += obj.offsetLeft;</div><div class=\"line\">                 y += obj.offsetTop;</div><div class=\"line\">             &#125;</div><div class=\"line\"></div><div class=\"line\">             <span class=\"keyword\">if</span> (keyword != <span class=\"string\">\"\"</span>) &#123;</div><div class=\"line\">                 <span class=\"keyword\">var</span> result = Autocomplete2.AjaxproDemo.GetText(keyword).value;</div><div class=\"line\">                 <span class=\"keyword\">var</span> divText = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"divText\"</span>);</div><div class=\"line\">                 <span class=\"keyword\">if</span> (result != <span class=\"string\">\"\"</span> &amp;&amp; result!=<span class=\"literal\">null</span>) &#123;</div><div class=\"line\">                     <span class=\"comment\">//divText.style.display = \"inline\";</span></div><div class=\"line\">                     displayDiv(<span class=\"string\">\"divText\"</span>, <span class=\"literal\">true</span>);</div><div class=\"line\">                     divText.style.top = (<span class=\"built_in\">parseInt</span>(y, <span class=\"number\">10</span>) + <span class=\"number\">21</span>) + <span class=\"string\">\"px\"</span>;</div><div class=\"line\">                     divText.style.left = x + <span class=\"string\">\"px\"</span>;</div><div class=\"line\">                     divText.innerHTML = result;</div><div class=\"line\">                 &#125;</div><div class=\"line\">                 <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                     displayDiv(<span class=\"string\">\"divText\"</span>, <span class=\"literal\">false</span>);</div><div class=\"line\">                 &#125;</div><div class=\"line\">             &#125;</div><div class=\"line\">         &#125;</div><div class=\"line\"></div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setText</span>(<span class=\"params\">obj</span>) </span>&#123;</div><div class=\"line\">             displayDiv(<span class=\"string\">\"divText\"</span>, <span class=\"literal\">false</span>);</div><div class=\"line\">             <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txtKeyword\"</span>).value = obj.innerHTML;</div><div class=\"line\"></div><div class=\"line\">         &#125;</div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setColor</span>(<span class=\"params\">obj</span>) </span>&#123;</div><div class=\"line\">             obj.style.backgroundColor = <span class=\"string\">\"#D0E4E9\"</span>;</div><div class=\"line\">         &#125;</div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">clearColor</span>(<span class=\"params\">obj</span>) </span>&#123;</div><div class=\"line\">             obj.style.backgroundColor = <span class=\"string\">\"\"</span></div><div class=\"line\">         &#125;</div><div class=\"line\">     </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txtKeyword\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">onkeyup</span>=<span class=\"string\">\"getText(this)\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">     <span class=\"comment\">&lt;!----&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"divText\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> &gt;</span></div><div class=\"line\"></div><div class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">     <span class=\"comment\">&lt;!----&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>后台代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls;</div><div class=\"line\"><span class=\"comment\">//new using</span></div><div class=\"line\"><span class=\"keyword\">using</span> System.Data.Linq.SqlClient;</div><div class=\"line\"><span class=\"keyword\">using</span> AjaxPro;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> Autocomplete2</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// Ajaxpro-Autocomplete</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> AjaxproDemo : System.Web.UI.Page</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            AjaxPro.Utility.RegisterTypeForAjax(typeof(AjaxproDemo));</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">///根据关键字匹配和关键字相符的结果返回</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"keyWord\"&gt;关键字&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        [AjaxPro.AjaxMethod()]</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> <span class=\"title\">GetText</span><span class=\"params\">(<span class=\"built_in\">string</span> keyWord)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            List&lt;Content&gt; <span class=\"built_in\">list</span> = <span class=\"keyword\">new</span> List&lt;Content&gt;();</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"asp.net mvc\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"asp.net ajax\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"asp.net 教程\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"asp.net 视频教程\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"asp.net 源码\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"asp.net cms\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"asp.net 3.5\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"c# 数组\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"c# 多线程\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"oec2003\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"oec2004\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"oec2005\"</span>));</div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(<span class=\"keyword\">new</span> Content(<span class=\"string\">\"oec2006\"</span>));</div><div class=\"line\">            var q = <span class=\"built_in\">list</span>.Where(p =&gt; p.Title.StartsWith(keyWord)).Take(<span class=\"number\">10</span>);</div><div class=\"line\"></div><div class=\"line\">            StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (q.Count() &gt; <span class=\"number\">0</span>)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    foreach (var t in q.ToList&lt;Content&gt;())</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        sb.Append(<span class=\"string\">\"&lt;div onclick=\\\"setText(this)\\\"\"</span> +</div><div class=\"line\">                           <span class=\"string\">\"onmouseover=\\\"setColor(this)\\\" \"</span> +</div><div class=\"line\">                           <span class=\"string\">\"onmouseout=\\\"clearColor(this)\\\" \"</span> +</div><div class=\"line\">                           <span class=\"string\">\"style=\\\"cursor:pointer;width:100%\\\"&gt;\"</span> +</div><div class=\"line\">                            t.Title + <span class=\"string\">\"&lt;/div&gt;\"</span>);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">return</span> sb.ToString();</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Content</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Title &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Content</span><span class=\"params\">(<span class=\"built_in\">string</span> title)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Title = title;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>运行结果如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_170842.gif\" alt=\"2010-12-29_170842\"><br><img src=\"http://oec2003.qiniudn.com/2010-12-29_170928.gif\" alt=\"2010-12-29_170928\"></p>\n<p>注：Ajax.net有Ajaxpro.dll和Ajax.dll两个版本，这两个版本在使用时有些区别。</p>\n<p>1 webconfig的配置不一样</p>\n<p>Ajaxpro.dll的webconfig配置如下:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"built_in\">add</span> <span class=\"keyword\">verb</span>=<span class=\"string\">\"*\"</span> path=<span class=\"string\">\"ajaxpro/*.ashx\"</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"AjaxPro.AjaxHandlerFactory, AjaxPro.2\"</span>/&gt;</div></pre></td></tr></table></figure>\n<p>Ajax.dll的webconfig配置如下 :</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"built_in\">add</span> <span class=\"keyword\">verb</span>=<span class=\"string\">\"Post,Get\"</span>path=<span class=\"string\">\"ajax/*.ashx\"</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"Ajax.AjaxHandlerFactory,Ajax\"</span>/&gt;</div></pre></td></tr></table></figure>\n<p>2 在客户端调用后台方法时有区别</p>\n<p>Ajax.dll在调用时直接写类名.方法名就可以，如下</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> result = AjaxproDemo.GetText(keyword).<span class=\"keyword\">value</span>;</div></pre></td></tr></table></figure>\n<p>Ajaxpro.dll在调用时要加上命名空间，如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> result = Autocomplete2.AjaxproDemo.GetText(keyword).<span class=\"keyword\">value</span>;</div></pre></td></tr></table></figure>\n<p><a href=\"http://files.cnblogs.com/oec2003/Autocomplete2.rar\">示例下载</a></p>"},{"title":"NHibernate入门级示例（增 删 改）","date":"2009-01-19T16:00:00.000Z","_content":"\nNHibernate相信大家都已非常熟悉，园子里有很多高手写了相关的系列文章，不过我还是NHibernate的一名初学者，在此将一个晚上学习成果分享一下，一个很简单的利用NHibernate实现增删改的例子。\n<!--more-->\n\n本例中使用的NHibernate版本为版本为官方2008年9月29日最新发布的NHibernate-2.0.1.GA版本，[点击下载](http://sourceforge.net/projects/nhibernate/)\n\n1 首先创建一个数据库NHibernateSample，使用的数据库版本为sqlserver2005。在该数据库中创建表UserInfo。\n\n```\nCREATE TABLE [dbo].[UserInfo]\n(\n    [UserInfoID] [int] IDENTITY(1,1) NOT NULL,\n    [UserName] [varchar](20) COLLATE Chinese_PRC_CI_AS NULL,\n    [Email] [varchar](100) COLLATE Chinese_PRC_CI_AS NULL\n)\n```\n\n2 打开vs2008，创建web application 命名为Web，解决方案的名称设为NHibernateDemo，然后在此解决方案下添加两个类库项目BLL和Model。\n\n![2010-12-30_115417](http://oec2003.qiniudn.com/2010-12-30_115417.gif)\n\n3 解压下载的NHibernate包，将NHibernate-2.0.1.GA-bin\\bin\\net-2.0目录下的dll文件复制到web项目中的DLL文件夹中。DLL文件夹用来存放一些公用的dll文件。\n\n4 在Model项目中创建两个目录:Entities和Mappings。分别存放实体类和映射文件。\n\n在Entities目录下创建类UserInfo.cs\n\n```\npublic class UserInfo\n{\n    public virtual int UserInfoID { get; set; }\n    public virtual string UserName { get; set; }\n    public virtual string Email { get; set; }\n}\n```\n\n需要注意到是实体类中的属性必须加virtual修饰符。\n\n在Mappings目录下创建映射文件UserInfo.hbm.xml\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<hibernate-mapping   xmlns=\"urn:nhibernate-mapping-2.2\"\n   assembly=\"Model\" namespace=\"Model\">\n  <class name =\"Model.Entities.UserInfo,Model\" table=\"UserInfo\">\n    <id name=\"UserInfoID\" column=\"UserInfoID\" type=\"Int32\" unsaved-value=\"0\">\n      <generator class =\"native\"></generator>\n    </id>\n    <property name=\"UserName\" column =\"UserName\" type=\"string\" length=\"20\" not-null=\"false\"/>\n    <property name=\"Email\" column=\"Email\" type=\"string\"\n         length=\"100\" not-null=\"false\" ></property>\n  </class>\n</hibernate-mapping>\n```\n\n映射文件创建好后，要修改该文件的输入操作为“嵌入式资源”，默认情况下为内容，在映射文件上右击属性,修改如下：\n\n![2010-12-30_115523](http://oec2003.qiniudn.com/2010-12-30_115523.gif)\n\n5 在BLL项目中创建类UserInfoBLL.cs 用来实现对UserInfo表的增删改操作。在BLL项目中添加对Model和NHibernate的引用\n\n![2010-12-30_115603](http://oec2003.qiniudn.com/2010-12-30_115603.gif)\n\nUserInfoBLL.csl类的代码如下：\n\n```\npublic class UserInfoBLL\n{\n    private string path = HttpContext.Current.Server.MapPath(\"~/hibernate.cfg.xml\");\n\n    public bool Insert(UserInfo userInfo)\n    {\n        Configuration cfg = new Configuration().Configure(path);\n\n        ISession session = cfg.BuildSessionFactory().OpenSession();\n        ITransaction transaction = session.BeginTransaction();\n\n        try\n        {\n            session.Save(userInfo);\n            transaction.Commit();\n            return true;\n        }\n        catch (Exception e)\n        {\n            transaction.Rollback();\n            return false;\n        }\n        finally\n        {\n            session.Close();\n        }\n    }\n\n    public IList<UserInfo> GetUsers()\n    {\n        Configuration cfg = new Configuration().Configure(path);\n        ISession session = cfg.BuildSessionFactory().OpenSession();\n\n        //使用HQL\n        IList<UserInfo> list = session.CreateQuery(\" from UserInfo\")\n            .List<UserInfo>();\n        return list;\n    }\n\n    public bool Update(UserInfo userInfo)\n    {\n        Configuration cfg = new Configuration().Configure(path);\n\n        ISession session = cfg.BuildSessionFactory().OpenSession();\n        ITransaction transaction = session.BeginTransaction();\n        try\n        {\n            session.Update(userInfo);\n            transaction.Commit();\n            return true;\n        }\n        catch (Exception e)\n        {\n            transaction.Rollback();\n            return false;\n        }\n        finally\n        {\n            session.Close();\n        }\n    }\n\n    public bool Delete(UserInfo userInfo)\n    {\n        Configuration cfg = new Configuration().Configure(path);\n\n        ISession session = cfg.BuildSessionFactory().OpenSession();\n        ITransaction transaction = session.BeginTransaction();\n        try\n        {\n            session.Delete(userInfo);\n            transaction.Commit();\n            return true;\n        }\n        catch (Exception e)\n        {\n            transaction.Rollback();\n            return false;\n        }\n        finally\n        {\n            session.Close();\n        }\n    }\n\n    public UserInfo GetUserInfoById(int userId)\n    {\n        Configuration cfg = new Configuration().Configure(path);\n        ISession session = cfg.BuildSessionFactory().OpenSession();\n        return session.Get<UserInfo>(userId);\n    }\n}\n```\n\n上面的GetUsers方法中用的是HQL查询的数据，NHibernate查询数据的方式有三种，具体参见[NHibernate文档](http://files.cnblogs.com/oec2003/NH2Doc.rar)。\n\n6 在web项目的根目录下添加hibernate.cfg.xml文件，该文件用于配置一些数据库连接方面的信息。\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<hibernate-configuration  xmlns=\"urn:nhibernate-configuration-2.2\" >\n  <session-factory name=\"NHibernateDemo\">\n    <property name=\"connection.driver_class\">NHibernate.Driver.SqlClientDriver</property>\n    <property name=\"connection.connection_string\">\n      Data Source=.\\SQLEXPRESS;Initial Catalog=NHibernateSample;\n      Integrated Security=True;Pooling=False;uid=sa;pwd=sa123\n    </property>\n    <property name=\"adonet.batch_size\">10</property>\n    <property name=\"show_sql\">false</property>\n    <property name=\"dialect\">NHibernate.Dialect.MsSql2005Dialect</property>\n    <property name=\"use_outer_join\">true</property>\n    <property name=\"command_timeout\">10</property>\n    <property name=\"query.substitutions\">true 1, false 0, yes 'Y', no 'N'</property>\n    <mapping assembly=\"Model\"/>\n  </session-factory>\n</hibernate-configuration>\n```\n\n7 在web项目中添加Model和BLL的引用。\n\n接着添加页面User.aspx，前台的现实我们使用repeater控件\n\n```\n<asp:Repeater ID=\"rptUserInfo\" runat=\"server\">\n    <HeaderTemplate>\n        <table id=\"tblUserInfo\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"1\">\n            <tr>\n                <td>\n                    <input type=\"checkbox\" id=\"chkAll\" name=\"chkAll\" value=\"checkbox\" \n                      onclick=\"checkAll('chkAll',this);\" />\n                </td>\n                <td>\n                    用户ID\n                </td>\n                <td>\n                    用户名\n                </td>\n                <td>\n                    电子邮箱\n                </td>\n            </tr>\n    </HeaderTemplate>\n    <ItemTemplate>\n        <tr>\n            <td>\n                <input type=\"checkbox\" name=\"chkSelect\" \n      value='<%# (Container.DataItem as Model.Entities.UserInfo).UserInfoID %>'\n                    onclick=\"checkAll('chkAll',this);\" />\n            </td>\n            <td>\n                <%# (Container.DataItem as Model.Entities.UserInfo).UserInfoID%>\n                </td>\n            <td>\n                <%# (Container.DataItem as Model.Entities.UserInfo).UserName%>\n                </td>\n            <td>\n                <%# (Container.DataItem as Model.Entities.UserInfo).Email%>\n                </td>\n        </tr>\n    </ItemTemplate>\n    <FooterTemplate>\n        </table>\n    </FooterTemplate>\n</asp:Repeater>\n```\n\n后台绑定方法\n\n```\nprivate void BindInfo()\n{\n     UserInfoBLL u = new UserInfoBLL();\n     IList<Model.Entities.UserInfo> list = u.GetUsers();\n     rptUserInfo.DataSource = list;\n     rptUserInfo.DataBind();\n}\n```\n\n新增，修改和删除的代码就不一一贴出了，因为比较简单 就是调用UserInfoBLL类中的方法而已，大家可以在下面下载本实例的源码看。\n\n最后的运行结果\n\n![2010-12-30_115714](http://oec2003.qiniudn.com/2010-12-30_115714.gif)\n\n需要注意的地方：\n\n* 实体类中的属性要加virtual修饰符。\n* 实体类的映射文件UserInfo.hbm.xml 的生成操作默认为为“Content(内容)”，要将之改为“Embedded Resource（嵌入式资源）”\n* hibernate.cfg.xml配置文件的connection.connection_string 要修改为自己的连接串。\n* 终于写完，由于刚接触NHibernate，不好的地方希望大家批评指正，希望对初学NHibernate的朋友有所帮助。\n\n[NHibernateDemo示例下载](http://files.cnblogs.com/oec2003/NHibernateDemo.rar)\n\n","source":"_posts/an-introduction-to-the-sample-to-nhibernate.md","raw":"---\ntitle: NHibernate入门级示例（增 删 改）\ndate: 2009-01-20\ncategories: [NHibernate]\ntags: [AspNet, NHibernate]\n---\n\nNHibernate相信大家都已非常熟悉，园子里有很多高手写了相关的系列文章，不过我还是NHibernate的一名初学者，在此将一个晚上学习成果分享一下，一个很简单的利用NHibernate实现增删改的例子。\n<!--more-->\n\n本例中使用的NHibernate版本为版本为官方2008年9月29日最新发布的NHibernate-2.0.1.GA版本，[点击下载](http://sourceforge.net/projects/nhibernate/)\n\n1 首先创建一个数据库NHibernateSample，使用的数据库版本为sqlserver2005。在该数据库中创建表UserInfo。\n\n```\nCREATE TABLE [dbo].[UserInfo]\n(\n    [UserInfoID] [int] IDENTITY(1,1) NOT NULL,\n    [UserName] [varchar](20) COLLATE Chinese_PRC_CI_AS NULL,\n    [Email] [varchar](100) COLLATE Chinese_PRC_CI_AS NULL\n)\n```\n\n2 打开vs2008，创建web application 命名为Web，解决方案的名称设为NHibernateDemo，然后在此解决方案下添加两个类库项目BLL和Model。\n\n![2010-12-30_115417](http://oec2003.qiniudn.com/2010-12-30_115417.gif)\n\n3 解压下载的NHibernate包，将NHibernate-2.0.1.GA-bin\\bin\\net-2.0目录下的dll文件复制到web项目中的DLL文件夹中。DLL文件夹用来存放一些公用的dll文件。\n\n4 在Model项目中创建两个目录:Entities和Mappings。分别存放实体类和映射文件。\n\n在Entities目录下创建类UserInfo.cs\n\n```\npublic class UserInfo\n{\n    public virtual int UserInfoID { get; set; }\n    public virtual string UserName { get; set; }\n    public virtual string Email { get; set; }\n}\n```\n\n需要注意到是实体类中的属性必须加virtual修饰符。\n\n在Mappings目录下创建映射文件UserInfo.hbm.xml\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<hibernate-mapping   xmlns=\"urn:nhibernate-mapping-2.2\"\n   assembly=\"Model\" namespace=\"Model\">\n  <class name =\"Model.Entities.UserInfo,Model\" table=\"UserInfo\">\n    <id name=\"UserInfoID\" column=\"UserInfoID\" type=\"Int32\" unsaved-value=\"0\">\n      <generator class =\"native\"></generator>\n    </id>\n    <property name=\"UserName\" column =\"UserName\" type=\"string\" length=\"20\" not-null=\"false\"/>\n    <property name=\"Email\" column=\"Email\" type=\"string\"\n         length=\"100\" not-null=\"false\" ></property>\n  </class>\n</hibernate-mapping>\n```\n\n映射文件创建好后，要修改该文件的输入操作为“嵌入式资源”，默认情况下为内容，在映射文件上右击属性,修改如下：\n\n![2010-12-30_115523](http://oec2003.qiniudn.com/2010-12-30_115523.gif)\n\n5 在BLL项目中创建类UserInfoBLL.cs 用来实现对UserInfo表的增删改操作。在BLL项目中添加对Model和NHibernate的引用\n\n![2010-12-30_115603](http://oec2003.qiniudn.com/2010-12-30_115603.gif)\n\nUserInfoBLL.csl类的代码如下：\n\n```\npublic class UserInfoBLL\n{\n    private string path = HttpContext.Current.Server.MapPath(\"~/hibernate.cfg.xml\");\n\n    public bool Insert(UserInfo userInfo)\n    {\n        Configuration cfg = new Configuration().Configure(path);\n\n        ISession session = cfg.BuildSessionFactory().OpenSession();\n        ITransaction transaction = session.BeginTransaction();\n\n        try\n        {\n            session.Save(userInfo);\n            transaction.Commit();\n            return true;\n        }\n        catch (Exception e)\n        {\n            transaction.Rollback();\n            return false;\n        }\n        finally\n        {\n            session.Close();\n        }\n    }\n\n    public IList<UserInfo> GetUsers()\n    {\n        Configuration cfg = new Configuration().Configure(path);\n        ISession session = cfg.BuildSessionFactory().OpenSession();\n\n        //使用HQL\n        IList<UserInfo> list = session.CreateQuery(\" from UserInfo\")\n            .List<UserInfo>();\n        return list;\n    }\n\n    public bool Update(UserInfo userInfo)\n    {\n        Configuration cfg = new Configuration().Configure(path);\n\n        ISession session = cfg.BuildSessionFactory().OpenSession();\n        ITransaction transaction = session.BeginTransaction();\n        try\n        {\n            session.Update(userInfo);\n            transaction.Commit();\n            return true;\n        }\n        catch (Exception e)\n        {\n            transaction.Rollback();\n            return false;\n        }\n        finally\n        {\n            session.Close();\n        }\n    }\n\n    public bool Delete(UserInfo userInfo)\n    {\n        Configuration cfg = new Configuration().Configure(path);\n\n        ISession session = cfg.BuildSessionFactory().OpenSession();\n        ITransaction transaction = session.BeginTransaction();\n        try\n        {\n            session.Delete(userInfo);\n            transaction.Commit();\n            return true;\n        }\n        catch (Exception e)\n        {\n            transaction.Rollback();\n            return false;\n        }\n        finally\n        {\n            session.Close();\n        }\n    }\n\n    public UserInfo GetUserInfoById(int userId)\n    {\n        Configuration cfg = new Configuration().Configure(path);\n        ISession session = cfg.BuildSessionFactory().OpenSession();\n        return session.Get<UserInfo>(userId);\n    }\n}\n```\n\n上面的GetUsers方法中用的是HQL查询的数据，NHibernate查询数据的方式有三种，具体参见[NHibernate文档](http://files.cnblogs.com/oec2003/NH2Doc.rar)。\n\n6 在web项目的根目录下添加hibernate.cfg.xml文件，该文件用于配置一些数据库连接方面的信息。\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<hibernate-configuration  xmlns=\"urn:nhibernate-configuration-2.2\" >\n  <session-factory name=\"NHibernateDemo\">\n    <property name=\"connection.driver_class\">NHibernate.Driver.SqlClientDriver</property>\n    <property name=\"connection.connection_string\">\n      Data Source=.\\SQLEXPRESS;Initial Catalog=NHibernateSample;\n      Integrated Security=True;Pooling=False;uid=sa;pwd=sa123\n    </property>\n    <property name=\"adonet.batch_size\">10</property>\n    <property name=\"show_sql\">false</property>\n    <property name=\"dialect\">NHibernate.Dialect.MsSql2005Dialect</property>\n    <property name=\"use_outer_join\">true</property>\n    <property name=\"command_timeout\">10</property>\n    <property name=\"query.substitutions\">true 1, false 0, yes 'Y', no 'N'</property>\n    <mapping assembly=\"Model\"/>\n  </session-factory>\n</hibernate-configuration>\n```\n\n7 在web项目中添加Model和BLL的引用。\n\n接着添加页面User.aspx，前台的现实我们使用repeater控件\n\n```\n<asp:Repeater ID=\"rptUserInfo\" runat=\"server\">\n    <HeaderTemplate>\n        <table id=\"tblUserInfo\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"1\">\n            <tr>\n                <td>\n                    <input type=\"checkbox\" id=\"chkAll\" name=\"chkAll\" value=\"checkbox\" \n                      onclick=\"checkAll('chkAll',this);\" />\n                </td>\n                <td>\n                    用户ID\n                </td>\n                <td>\n                    用户名\n                </td>\n                <td>\n                    电子邮箱\n                </td>\n            </tr>\n    </HeaderTemplate>\n    <ItemTemplate>\n        <tr>\n            <td>\n                <input type=\"checkbox\" name=\"chkSelect\" \n      value='<%# (Container.DataItem as Model.Entities.UserInfo).UserInfoID %>'\n                    onclick=\"checkAll('chkAll',this);\" />\n            </td>\n            <td>\n                <%# (Container.DataItem as Model.Entities.UserInfo).UserInfoID%>\n                </td>\n            <td>\n                <%# (Container.DataItem as Model.Entities.UserInfo).UserName%>\n                </td>\n            <td>\n                <%# (Container.DataItem as Model.Entities.UserInfo).Email%>\n                </td>\n        </tr>\n    </ItemTemplate>\n    <FooterTemplate>\n        </table>\n    </FooterTemplate>\n</asp:Repeater>\n```\n\n后台绑定方法\n\n```\nprivate void BindInfo()\n{\n     UserInfoBLL u = new UserInfoBLL();\n     IList<Model.Entities.UserInfo> list = u.GetUsers();\n     rptUserInfo.DataSource = list;\n     rptUserInfo.DataBind();\n}\n```\n\n新增，修改和删除的代码就不一一贴出了，因为比较简单 就是调用UserInfoBLL类中的方法而已，大家可以在下面下载本实例的源码看。\n\n最后的运行结果\n\n![2010-12-30_115714](http://oec2003.qiniudn.com/2010-12-30_115714.gif)\n\n需要注意的地方：\n\n* 实体类中的属性要加virtual修饰符。\n* 实体类的映射文件UserInfo.hbm.xml 的生成操作默认为为“Content(内容)”，要将之改为“Embedded Resource（嵌入式资源）”\n* hibernate.cfg.xml配置文件的connection.connection_string 要修改为自己的连接串。\n* 终于写完，由于刚接触NHibernate，不好的地方希望大家批评指正，希望对初学NHibernate的朋友有所帮助。\n\n[NHibernateDemo示例下载](http://files.cnblogs.com/oec2003/NHibernateDemo.rar)\n\n","slug":"an-introduction-to-the-sample-to-nhibernate","published":1,"updated":"2016-08-14T07:55:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz8zo001qxfynweox409m","content":"<p>NHibernate相信大家都已非常熟悉，园子里有很多高手写了相关的系列文章，不过我还是NHibernate的一名初学者，在此将一个晚上学习成果分享一下，一个很简单的利用NHibernate实现增删改的例子。<br><a id=\"more\"></a></p>\n<p>本例中使用的NHibernate版本为版本为官方2008年9月29日最新发布的NHibernate-2.0.1.GA版本，<a href=\"http://sourceforge.net/projects/nhibernate/\" target=\"_blank\" rel=\"external\">点击下载</a></p>\n<p>1 首先创建一个数据库NHibernateSample，使用的数据库版本为sqlserver2005。在该数据库中创建表UserInfo。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> [dbo].[UserInfo]</div><div class=\"line\">(</div><div class=\"line\">    [UserInfoID] [<span class=\"built_in\">int</span>] <span class=\"keyword\">IDENTITY</span>(<span class=\"number\">1</span>,<span class=\"number\">1</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</div><div class=\"line\">    [UserName] [<span class=\"built_in\">varchar</span>](<span class=\"number\">20</span>) <span class=\"keyword\">COLLATE</span> Chinese_PRC_CI_AS <span class=\"literal\">NULL</span>,</div><div class=\"line\">    [Email] [<span class=\"built_in\">varchar</span>](<span class=\"number\">100</span>) <span class=\"keyword\">COLLATE</span> Chinese_PRC_CI_AS <span class=\"literal\">NULL</span></div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<p>2 打开vs2008，创建web application 命名为Web，解决方案的名称设为NHibernateDemo，然后在此解决方案下添加两个类库项目BLL和Model。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_115417.gif\" alt=\"2010-12-30_115417\"></p>\n<p>3 解压下载的NHibernate包，将NHibernate-2.0.1.GA-bin\\bin\\net-2.0目录下的dll文件复制到web项目中的DLL文件夹中。DLL文件夹用来存放一些公用的dll文件。</p>\n<p>4 在Model项目中创建两个目录:Entities和Mappings。分别存放实体类和映射文件。</p>\n<p>在Entities目录下创建类UserInfo.cs</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserInfo</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">virtual</span> <span class=\"keyword\">int</span> UserInfoID &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">virtual</span> <span class=\"keyword\">string</span> UserName &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">virtual</span> <span class=\"keyword\">string</span> Email &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>需要注意到是实体类中的属性必须加virtual修饰符。</p>\n<p>在Mappings目录下创建映射文件UserInfo.hbm.xml</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml <span class=\"built_in\">version</span>=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span> ?&gt;</div><div class=\"line\">&lt;hibernate-mapping   xmlns=<span class=\"string\">\"urn:nhibernate-mapping-2.2\"</span></div><div class=\"line\">   assembly=<span class=\"string\">\"Model\"</span> namespace=<span class=\"string\">\"Model\"</span>&gt;</div><div class=\"line\">  &lt;<span class=\"built_in\">class</span> <span class=\"built_in\">name</span> =<span class=\"string\">\"Model.Entities.UserInfo,Model\"</span> table=<span class=\"string\">\"UserInfo\"</span>&gt;</div><div class=\"line\">    &lt;<span class=\"built_in\">id</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"UserInfoID\"</span> column=<span class=\"string\">\"UserInfoID\"</span> type=<span class=\"string\">\"Int32\"</span> unsaved-value=<span class=\"string\">\"0\"</span>&gt;</div><div class=\"line\">      &lt;generator <span class=\"built_in\">class</span> =<span class=\"string\">\"native\"</span>&gt;&lt;/generator&gt;</div><div class=\"line\">    &lt;/<span class=\"built_in\">id</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"UserName\"</span> column =<span class=\"string\">\"UserName\"</span> type=<span class=\"string\">\"string\"</span> <span class=\"built_in\">length</span>=<span class=\"string\">\"20\"</span> <span class=\"keyword\">not</span>-null=<span class=\"string\">\"false\"</span>/&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"Email\"</span> column=<span class=\"string\">\"Email\"</span> type=<span class=\"string\">\"string\"</span></div><div class=\"line\">         <span class=\"built_in\">length</span>=<span class=\"string\">\"100\"</span> <span class=\"keyword\">not</span>-null=<span class=\"string\">\"false\"</span> &gt;&lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">  &lt;/<span class=\"built_in\">class</span>&gt;</div><div class=\"line\">&lt;/hibernate-mapping&gt;</div></pre></td></tr></table></figure>\n<p>映射文件创建好后，要修改该文件的输入操作为“嵌入式资源”，默认情况下为内容，在映射文件上右击属性,修改如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_115523.gif\" alt=\"2010-12-30_115523\"></p>\n<p>5 在BLL项目中创建类UserInfoBLL.cs 用来实现对UserInfo表的增删改操作。在BLL项目中添加对Model和NHibernate的引用</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_115603.gif\" alt=\"2010-12-30_115603\"></p>\n<p>UserInfoBLL.csl类的代码如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserInfoBLL</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> path = HttpContext.Current.Server.MapPath(<span class=\"string\">\"~/hibernate.cfg.xml\"</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">Insert</span>(<span class=\"params\">UserInfo userInfo</span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        Configuration cfg = <span class=\"keyword\">new</span> Configuration().Configure(path);</div><div class=\"line\"></div><div class=\"line\">        ISession session = cfg.BuildSessionFactory().OpenSession();</div><div class=\"line\">        ITransaction transaction = session.BeginTransaction();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">try</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            session.Save(userInfo);</div><div class=\"line\">            transaction.Commit();</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">catch</span> (Exception e)</div><div class=\"line\">        &#123;</div><div class=\"line\">            transaction.Rollback();</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">finally</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            session.Close();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> IList&lt;UserInfo&gt; <span class=\"title\">GetUsers</span>(<span class=\"params\"></span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        Configuration cfg = <span class=\"keyword\">new</span> Configuration().Configure(path);</div><div class=\"line\">        ISession session = cfg.BuildSessionFactory().OpenSession();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//使用HQL</span></div><div class=\"line\">        IList&lt;UserInfo&gt; list = session.CreateQuery(<span class=\"string\">\" from UserInfo\"</span>)</div><div class=\"line\">            .List&lt;UserInfo&gt;();</div><div class=\"line\">        <span class=\"keyword\">return</span> list;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">Update</span>(<span class=\"params\">UserInfo userInfo</span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        Configuration cfg = <span class=\"keyword\">new</span> Configuration().Configure(path);</div><div class=\"line\"></div><div class=\"line\">        ISession session = cfg.BuildSessionFactory().OpenSession();</div><div class=\"line\">        ITransaction transaction = session.BeginTransaction();</div><div class=\"line\">        <span class=\"keyword\">try</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            session.Update(userInfo);</div><div class=\"line\">            transaction.Commit();</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">catch</span> (Exception e)</div><div class=\"line\">        &#123;</div><div class=\"line\">            transaction.Rollback();</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">finally</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            session.Close();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">Delete</span>(<span class=\"params\">UserInfo userInfo</span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        Configuration cfg = <span class=\"keyword\">new</span> Configuration().Configure(path);</div><div class=\"line\"></div><div class=\"line\">        ISession session = cfg.BuildSessionFactory().OpenSession();</div><div class=\"line\">        ITransaction transaction = session.BeginTransaction();</div><div class=\"line\">        <span class=\"keyword\">try</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            session.Delete(userInfo);</div><div class=\"line\">            transaction.Commit();</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">catch</span> (Exception e)</div><div class=\"line\">        &#123;</div><div class=\"line\">            transaction.Rollback();</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">finally</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            session.Close();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> UserInfo <span class=\"title\">GetUserInfoById</span>(<span class=\"params\"><span class=\"keyword\">int</span> userId</span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        Configuration cfg = <span class=\"keyword\">new</span> Configuration().Configure(path);</div><div class=\"line\">        ISession session = cfg.BuildSessionFactory().OpenSession();</div><div class=\"line\">        <span class=\"keyword\">return</span> session.Get&lt;UserInfo&gt;(userId);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的GetUsers方法中用的是HQL查询的数据，NHibernate查询数据的方式有三种，具体参见<a href=\"http://files.cnblogs.com/oec2003/NH2Doc.rar\" target=\"_blank\" rel=\"external\">NHibernate文档</a>。</p>\n<p>6 在web项目的根目录下添加hibernate.cfg.xml文件，该文件用于配置一些数据库连接方面的信息。</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml <span class=\"built_in\">version</span>=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span>?&gt;</div><div class=\"line\">&lt;hibernate-configuration  xmlns=<span class=\"string\">\"urn:nhibernate-configuration-2.2\"</span> &gt;</div><div class=\"line\">  &lt;session-factory <span class=\"built_in\">name</span>=<span class=\"string\">\"NHibernateDemo\"</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"connection.driver_class\"</span>&gt;NHibernate.Driver.SqlClientDriver&lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"connection.connection_string\"</span>&gt;</div><div class=\"line\">      Data Source=.\\SQLEXPRESS;Initial Catalog=NHibernateSample;</div><div class=\"line\">      Integrated Security=True;Pooling=False;uid=sa;pwd=sa123</div><div class=\"line\">    &lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"adonet.batch_size\"</span>&gt;<span class=\"number\">10</span>&lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"show_sql\"</span>&gt;<span class=\"literal\">false</span>&lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"dialect\"</span>&gt;NHibernate.Dialect.MsSql2005Dialect&lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"use_outer_join\"</span>&gt;<span class=\"literal\">true</span>&lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"command_timeout\"</span>&gt;<span class=\"number\">10</span>&lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"query.substitutions\"</span>&gt;<span class=\"literal\">true</span> <span class=\"number\">1</span>, <span class=\"literal\">false</span> <span class=\"number\">0</span>, yes 'Y', no 'N'&lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">    &lt;mapping assembly=<span class=\"string\">\"Model\"</span>/&gt;</div><div class=\"line\">  &lt;/session-factory&gt;</div><div class=\"line\">&lt;/hibernate-configuration&gt;</div></pre></td></tr></table></figure>\n<p>7 在web项目中添加Model和BLL的引用。</p>\n<p>接着添加页面User.aspx，前台的现实我们使用repeater控件</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">asp:Repeater</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"rptUserInfo\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">HeaderTemplate</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">id</span>=<span class=\"string\">\"tblUserInfo\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">cellpadding</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"1\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"chkAll\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"chkAll\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"checkbox\"</span> </span></div><div class=\"line\">                      <span class=\"attr\">onclick</span>=<span class=\"string\">\"checkAll('chkAll',this);\"</span> /&gt;</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    用户ID</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    用户名</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    电子邮箱</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">HeaderTemplate</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"chkSelect\"</span> </span></div><div class=\"line\">      <span class=\"attr\">value</span>=<span class=\"string\">'&lt;%</span><span class=\"perl\"><span class=\"comment\"># (Container.DataItem as Model.Entities.UserInfo).UserInfoID </span></span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">%&gt;'</span></span></span></div><div class=\"line\">                    <span class=\"attr\">onclick</span>=<span class=\"string\">\"checkAll('chkAll',this);\"</span> /&gt;</div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"perl\"><span class=\"comment\"># (Container.DataItem as Model.Entities.UserInfo).UserInfoID</span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"perl\"><span class=\"comment\"># (Container.DataItem as Model.Entities.UserInfo).UserName</span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"perl\"><span class=\"comment\"># (Container.DataItem as Model.Entities.UserInfo).Email</span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">FooterTemplate</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">FooterTemplate</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">asp:Repeater</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>后台绑定方法</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">BindInfo</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">     UserInfoBLL u = <span class=\"keyword\">new</span> UserInfoBLL();</div><div class=\"line\">     IList&lt;Model.Entities.UserInfo&gt; <span class=\"built_in\">list</span> = u.GetUsers();</div><div class=\"line\">     rptUserInfo.DataSource = <span class=\"built_in\">list</span>;</div><div class=\"line\">     rptUserInfo.DataBind();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>新增，修改和删除的代码就不一一贴出了，因为比较简单 就是调用UserInfoBLL类中的方法而已，大家可以在下面下载本实例的源码看。</p>\n<p>最后的运行结果</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_115714.gif\" alt=\"2010-12-30_115714\"></p>\n<p>需要注意的地方：</p>\n<ul>\n<li>实体类中的属性要加virtual修饰符。</li>\n<li>实体类的映射文件UserInfo.hbm.xml 的生成操作默认为为“Content(内容)”，要将之改为“Embedded Resource（嵌入式资源）”</li>\n<li>hibernate.cfg.xml配置文件的connection.connection_string 要修改为自己的连接串。</li>\n<li>终于写完，由于刚接触NHibernate，不好的地方希望大家批评指正，希望对初学NHibernate的朋友有所帮助。</li>\n</ul>\n<p><a href=\"http://files.cnblogs.com/oec2003/NHibernateDemo.rar\" target=\"_blank\" rel=\"external\">NHibernateDemo示例下载</a></p>\n","excerpt":"<p>NHibernate相信大家都已非常熟悉，园子里有很多高手写了相关的系列文章，不过我还是NHibernate的一名初学者，在此将一个晚上学习成果分享一下，一个很简单的利用NHibernate实现增删改的例子。<br>","more":"</p>\n<p>本例中使用的NHibernate版本为版本为官方2008年9月29日最新发布的NHibernate-2.0.1.GA版本，<a href=\"http://sourceforge.net/projects/nhibernate/\">点击下载</a></p>\n<p>1 首先创建一个数据库NHibernateSample，使用的数据库版本为sqlserver2005。在该数据库中创建表UserInfo。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> [dbo].[UserInfo]</div><div class=\"line\">(</div><div class=\"line\">    [UserInfoID] [<span class=\"built_in\">int</span>] <span class=\"keyword\">IDENTITY</span>(<span class=\"number\">1</span>,<span class=\"number\">1</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</div><div class=\"line\">    [UserName] [<span class=\"built_in\">varchar</span>](<span class=\"number\">20</span>) <span class=\"keyword\">COLLATE</span> Chinese_PRC_CI_AS <span class=\"literal\">NULL</span>,</div><div class=\"line\">    [Email] [<span class=\"built_in\">varchar</span>](<span class=\"number\">100</span>) <span class=\"keyword\">COLLATE</span> Chinese_PRC_CI_AS <span class=\"literal\">NULL</span></div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<p>2 打开vs2008，创建web application 命名为Web，解决方案的名称设为NHibernateDemo，然后在此解决方案下添加两个类库项目BLL和Model。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_115417.gif\" alt=\"2010-12-30_115417\"></p>\n<p>3 解压下载的NHibernate包，将NHibernate-2.0.1.GA-bin\\bin\\net-2.0目录下的dll文件复制到web项目中的DLL文件夹中。DLL文件夹用来存放一些公用的dll文件。</p>\n<p>4 在Model项目中创建两个目录:Entities和Mappings。分别存放实体类和映射文件。</p>\n<p>在Entities目录下创建类UserInfo.cs</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserInfo</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">virtual</span> <span class=\"keyword\">int</span> UserInfoID &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">virtual</span> <span class=\"keyword\">string</span> UserName &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">virtual</span> <span class=\"keyword\">string</span> Email &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>需要注意到是实体类中的属性必须加virtual修饰符。</p>\n<p>在Mappings目录下创建映射文件UserInfo.hbm.xml</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml <span class=\"built_in\">version</span>=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span> ?&gt;</div><div class=\"line\">&lt;hibernate-mapping   xmlns=<span class=\"string\">\"urn:nhibernate-mapping-2.2\"</span></div><div class=\"line\">   assembly=<span class=\"string\">\"Model\"</span> namespace=<span class=\"string\">\"Model\"</span>&gt;</div><div class=\"line\">  &lt;<span class=\"built_in\">class</span> <span class=\"built_in\">name</span> =<span class=\"string\">\"Model.Entities.UserInfo,Model\"</span> table=<span class=\"string\">\"UserInfo\"</span>&gt;</div><div class=\"line\">    &lt;<span class=\"built_in\">id</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"UserInfoID\"</span> column=<span class=\"string\">\"UserInfoID\"</span> type=<span class=\"string\">\"Int32\"</span> unsaved-value=<span class=\"string\">\"0\"</span>&gt;</div><div class=\"line\">      &lt;generator <span class=\"built_in\">class</span> =<span class=\"string\">\"native\"</span>&gt;&lt;/generator&gt;</div><div class=\"line\">    &lt;/<span class=\"built_in\">id</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"UserName\"</span> column =<span class=\"string\">\"UserName\"</span> type=<span class=\"string\">\"string\"</span> <span class=\"built_in\">length</span>=<span class=\"string\">\"20\"</span> <span class=\"keyword\">not</span>-null=<span class=\"string\">\"false\"</span>/&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"Email\"</span> column=<span class=\"string\">\"Email\"</span> type=<span class=\"string\">\"string\"</span></div><div class=\"line\">         <span class=\"built_in\">length</span>=<span class=\"string\">\"100\"</span> <span class=\"keyword\">not</span>-null=<span class=\"string\">\"false\"</span> &gt;&lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">  &lt;/<span class=\"built_in\">class</span>&gt;</div><div class=\"line\">&lt;/hibernate-mapping&gt;</div></pre></td></tr></table></figure>\n<p>映射文件创建好后，要修改该文件的输入操作为“嵌入式资源”，默认情况下为内容，在映射文件上右击属性,修改如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_115523.gif\" alt=\"2010-12-30_115523\"></p>\n<p>5 在BLL项目中创建类UserInfoBLL.cs 用来实现对UserInfo表的增删改操作。在BLL项目中添加对Model和NHibernate的引用</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_115603.gif\" alt=\"2010-12-30_115603\"></p>\n<p>UserInfoBLL.csl类的代码如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserInfoBLL</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> path = HttpContext.Current.Server.MapPath(<span class=\"string\">\"~/hibernate.cfg.xml\"</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">Insert</span>(<span class=\"params\">UserInfo userInfo</span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        Configuration cfg = <span class=\"keyword\">new</span> Configuration().Configure(path);</div><div class=\"line\"></div><div class=\"line\">        ISession session = cfg.BuildSessionFactory().OpenSession();</div><div class=\"line\">        ITransaction transaction = session.BeginTransaction();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">try</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            session.Save(userInfo);</div><div class=\"line\">            transaction.Commit();</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">catch</span> (Exception e)</div><div class=\"line\">        &#123;</div><div class=\"line\">            transaction.Rollback();</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">finally</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            session.Close();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> IList&lt;UserInfo&gt; <span class=\"title\">GetUsers</span>(<span class=\"params\"></span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        Configuration cfg = <span class=\"keyword\">new</span> Configuration().Configure(path);</div><div class=\"line\">        ISession session = cfg.BuildSessionFactory().OpenSession();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//使用HQL</span></div><div class=\"line\">        IList&lt;UserInfo&gt; list = session.CreateQuery(<span class=\"string\">\" from UserInfo\"</span>)</div><div class=\"line\">            .List&lt;UserInfo&gt;();</div><div class=\"line\">        <span class=\"keyword\">return</span> list;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">Update</span>(<span class=\"params\">UserInfo userInfo</span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        Configuration cfg = <span class=\"keyword\">new</span> Configuration().Configure(path);</div><div class=\"line\"></div><div class=\"line\">        ISession session = cfg.BuildSessionFactory().OpenSession();</div><div class=\"line\">        ITransaction transaction = session.BeginTransaction();</div><div class=\"line\">        <span class=\"keyword\">try</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            session.Update(userInfo);</div><div class=\"line\">            transaction.Commit();</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">catch</span> (Exception e)</div><div class=\"line\">        &#123;</div><div class=\"line\">            transaction.Rollback();</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">finally</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            session.Close();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">Delete</span>(<span class=\"params\">UserInfo userInfo</span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        Configuration cfg = <span class=\"keyword\">new</span> Configuration().Configure(path);</div><div class=\"line\"></div><div class=\"line\">        ISession session = cfg.BuildSessionFactory().OpenSession();</div><div class=\"line\">        ITransaction transaction = session.BeginTransaction();</div><div class=\"line\">        <span class=\"keyword\">try</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            session.Delete(userInfo);</div><div class=\"line\">            transaction.Commit();</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">catch</span> (Exception e)</div><div class=\"line\">        &#123;</div><div class=\"line\">            transaction.Rollback();</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">finally</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            session.Close();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> UserInfo <span class=\"title\">GetUserInfoById</span>(<span class=\"params\"><span class=\"keyword\">int</span> userId</span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        Configuration cfg = <span class=\"keyword\">new</span> Configuration().Configure(path);</div><div class=\"line\">        ISession session = cfg.BuildSessionFactory().OpenSession();</div><div class=\"line\">        <span class=\"keyword\">return</span> session.Get&lt;UserInfo&gt;(userId);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的GetUsers方法中用的是HQL查询的数据，NHibernate查询数据的方式有三种，具体参见<a href=\"http://files.cnblogs.com/oec2003/NH2Doc.rar\">NHibernate文档</a>。</p>\n<p>6 在web项目的根目录下添加hibernate.cfg.xml文件，该文件用于配置一些数据库连接方面的信息。</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml <span class=\"built_in\">version</span>=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span>?&gt;</div><div class=\"line\">&lt;hibernate-configuration  xmlns=<span class=\"string\">\"urn:nhibernate-configuration-2.2\"</span> &gt;</div><div class=\"line\">  &lt;session-factory <span class=\"built_in\">name</span>=<span class=\"string\">\"NHibernateDemo\"</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"connection.driver_class\"</span>&gt;NHibernate.Driver.SqlClientDriver&lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"connection.connection_string\"</span>&gt;</div><div class=\"line\">      Data Source=.\\SQLEXPRESS;Initial Catalog=NHibernateSample;</div><div class=\"line\">      Integrated Security=True;Pooling=False;uid=sa;pwd=sa123</div><div class=\"line\">    &lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"adonet.batch_size\"</span>&gt;<span class=\"number\">10</span>&lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"show_sql\"</span>&gt;<span class=\"literal\">false</span>&lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"dialect\"</span>&gt;NHibernate.Dialect.MsSql2005Dialect&lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"use_outer_join\"</span>&gt;<span class=\"literal\">true</span>&lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"command_timeout\"</span>&gt;<span class=\"number\">10</span>&lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"query.substitutions\"</span>&gt;<span class=\"literal\">true</span> <span class=\"number\">1</span>, <span class=\"literal\">false</span> <span class=\"number\">0</span>, yes 'Y', no 'N'&lt;/<span class=\"keyword\">property</span>&gt;</div><div class=\"line\">    &lt;mapping assembly=<span class=\"string\">\"Model\"</span>/&gt;</div><div class=\"line\">  &lt;/session-factory&gt;</div><div class=\"line\">&lt;/hibernate-configuration&gt;</div></pre></td></tr></table></figure>\n<p>7 在web项目中添加Model和BLL的引用。</p>\n<p>接着添加页面User.aspx，前台的现实我们使用repeater控件</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">asp:Repeater</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"rptUserInfo\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">HeaderTemplate</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">id</span>=<span class=\"string\">\"tblUserInfo\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">cellpadding</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"1\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"chkAll\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"chkAll\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"checkbox\"</span> </div><div class=\"line\">                      <span class=\"attr\">onclick</span>=<span class=\"string\">\"checkAll('chkAll',this);\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    用户ID</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    用户名</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    电子邮箱</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">HeaderTemplate</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"chkSelect\"</span> </div><div class=\"line\">      <span class=\"attr\">value</span>=<span class=\"string\">'&lt;%</span></span></span><span class=\"perl\"><span class=\"comment\"># (Container.DataItem as Model.Entities.UserInfo).UserInfoID </span></span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">%&gt;'</span></div><div class=\"line\">                    <span class=\"attr\">onclick</span>=<span class=\"string\">\"checkAll('chkAll',this);\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"perl\"><span class=\"comment\"># (Container.DataItem as Model.Entities.UserInfo).UserInfoID</span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"perl\"><span class=\"comment\"># (Container.DataItem as Model.Entities.UserInfo).UserName</span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"perl\"><span class=\"comment\"># (Container.DataItem as Model.Entities.UserInfo).Email</span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">FooterTemplate</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">FooterTemplate</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">asp:Repeater</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>后台绑定方法</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">BindInfo</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">     UserInfoBLL u = <span class=\"keyword\">new</span> UserInfoBLL();</div><div class=\"line\">     IList&lt;Model.Entities.UserInfo&gt; <span class=\"built_in\">list</span> = u.GetUsers();</div><div class=\"line\">     rptUserInfo.DataSource = <span class=\"built_in\">list</span>;</div><div class=\"line\">     rptUserInfo.DataBind();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>新增，修改和删除的代码就不一一贴出了，因为比较简单 就是调用UserInfoBLL类中的方法而已，大家可以在下面下载本实例的源码看。</p>\n<p>最后的运行结果</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_115714.gif\" alt=\"2010-12-30_115714\"></p>\n<p>需要注意的地方：</p>\n<ul>\n<li>实体类中的属性要加virtual修饰符。</li>\n<li>实体类的映射文件UserInfo.hbm.xml 的生成操作默认为为“Content(内容)”，要将之改为“Embedded Resource（嵌入式资源）”</li>\n<li>hibernate.cfg.xml配置文件的connection.connection_string 要修改为自己的连接串。</li>\n<li>终于写完，由于刚接触NHibernate，不好的地方希望大家批评指正，希望对初学NHibernate的朋友有所帮助。</li>\n</ul>\n<p><a href=\"http://files.cnblogs.com/oec2003/NHibernateDemo.rar\">NHibernateDemo示例下载</a></p>"},{"title":"纪念日--领证","date":"2011-05-19T16:00:00.000Z","url":"/2011/05/anniversary/","_content":"\n今天是2011年5月20日，我和老婆领证了。\n\n原计划早早的去排头一个，但最终还是到9点多才到的婚姻登记处，人还挺多，也许是这个日子的原因。搞清楚流程后我们就排队等待审核，好不容易等到我们了，谁知我的户口本竟然不合格，因为上面的相关信息不是机打的而是手写了，说是按照相关对顶必须是机打的，当时心里那个急啊，我忙说我们那里比较落后没有电脑都是手写的，那人说你别骗我，我办过你们那个地方的就是机打的，我直接无语了。后来说了半天的好话，才同意给我们办但证先不能给我们，等我把户口本拿回去更新后才能给我们证。尽管如此，我和老婆还是感到很高兴。\n<!--more-->\n接着就是填写一些表单，填写好后和户口本、身份证放在一起排队，大约等了一个多小时我们的证已经办好，工作人员跟我们道喜然后将证给了我们，我们心里暗喜，心想肯定是工作人员将那事给忘了，不料刚走到门口就被叫了回去，说是复印的户口本上的姓名和结婚证上的不相符，原来是他们复印错了，只得把户口本给他们重新复印，当他们一看到那手写的户口本时马上就想起前面那事了，结果我们依然是空手而归。\n\n中午和老婆一起去找原来的同事吃饭，吃饭的小餐馆就是一年多前我向老婆表白的餐馆，也算是从一个起点走向了另一个起点。\n\n\n","source":"_posts/anniversary.md","raw":"title:   纪念日--领证\ndate:  2011-05-20\nurl:  /2011/05/anniversary/\ncategories: [心情日记]\ntags:  [纪念日]\n---\n\n今天是2011年5月20日，我和老婆领证了。\n\n原计划早早的去排头一个，但最终还是到9点多才到的婚姻登记处，人还挺多，也许是这个日子的原因。搞清楚流程后我们就排队等待审核，好不容易等到我们了，谁知我的户口本竟然不合格，因为上面的相关信息不是机打的而是手写了，说是按照相关对顶必须是机打的，当时心里那个急啊，我忙说我们那里比较落后没有电脑都是手写的，那人说你别骗我，我办过你们那个地方的就是机打的，我直接无语了。后来说了半天的好话，才同意给我们办但证先不能给我们，等我把户口本拿回去更新后才能给我们证。尽管如此，我和老婆还是感到很高兴。\n<!--more-->\n接着就是填写一些表单，填写好后和户口本、身份证放在一起排队，大约等了一个多小时我们的证已经办好，工作人员跟我们道喜然后将证给了我们，我们心里暗喜，心想肯定是工作人员将那事给忘了，不料刚走到门口就被叫了回去，说是复印的户口本上的姓名和结婚证上的不相符，原来是他们复印错了，只得把户口本给他们重新复印，当他们一看到那手写的户口本时马上就想起前面那事了，结果我们依然是空手而归。\n\n中午和老婆一起去找原来的同事吃饭，吃饭的小餐馆就是一年多前我向老婆表白的餐馆，也算是从一个起点走向了另一个起点。\n\n\n","slug":"anniversary","published":1,"updated":"2016-08-11T14:36:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz909001uxfynr2cj3kng","content":"<p>今天是2011年5月20日，我和老婆领证了。</p>\n<p>原计划早早的去排头一个，但最终还是到9点多才到的婚姻登记处，人还挺多，也许是这个日子的原因。搞清楚流程后我们就排队等待审核，好不容易等到我们了，谁知我的户口本竟然不合格，因为上面的相关信息不是机打的而是手写了，说是按照相关对顶必须是机打的，当时心里那个急啊，我忙说我们那里比较落后没有电脑都是手写的，那人说你别骗我，我办过你们那个地方的就是机打的，我直接无语了。后来说了半天的好话，才同意给我们办但证先不能给我们，等我把户口本拿回去更新后才能给我们证。尽管如此，我和老婆还是感到很高兴。<br><a id=\"more\"></a><br>接着就是填写一些表单，填写好后和户口本、身份证放在一起排队，大约等了一个多小时我们的证已经办好，工作人员跟我们道喜然后将证给了我们，我们心里暗喜，心想肯定是工作人员将那事给忘了，不料刚走到门口就被叫了回去，说是复印的户口本上的姓名和结婚证上的不相符，原来是他们复印错了，只得把户口本给他们重新复印，当他们一看到那手写的户口本时马上就想起前面那事了，结果我们依然是空手而归。</p>\n<p>中午和老婆一起去找原来的同事吃饭，吃饭的小餐馆就是一年多前我向老婆表白的餐馆，也算是从一个起点走向了另一个起点。</p>\n","excerpt":"<p>今天是2011年5月20日，我和老婆领证了。</p>\n<p>原计划早早的去排头一个，但最终还是到9点多才到的婚姻登记处，人还挺多，也许是这个日子的原因。搞清楚流程后我们就排队等待审核，好不容易等到我们了，谁知我的户口本竟然不合格，因为上面的相关信息不是机打的而是手写了，说是按照相关对顶必须是机打的，当时心里那个急啊，我忙说我们那里比较落后没有电脑都是手写的，那人说你别骗我，我办过你们那个地方的就是机打的，我直接无语了。后来说了半天的好话，才同意给我们办但证先不能给我们，等我把户口本拿回去更新后才能给我们证。尽管如此，我和老婆还是感到很高兴。<br>","more":"<br>接着就是填写一些表单，填写好后和户口本、身份证放在一起排队，大约等了一个多小时我们的证已经办好，工作人员跟我们道喜然后将证给了我们，我们心里暗喜，心想肯定是工作人员将那事给忘了，不料刚走到门口就被叫了回去，说是复印的户口本上的姓名和结婚证上的不相符，原来是他们复印错了，只得把户口本给他们重新复印，当他们一看到那手写的户口本时马上就想起前面那事了，结果我们依然是空手而归。</p>\n<p>中午和老婆一起去找原来的同事吃饭，吃饭的小餐馆就是一年多前我向老婆表白的餐馆，也算是从一个起点走向了另一个起点。</p>"},{"title":"Asp.Net Ajax—FilteredTextBox控件使用","date":"2007-08-20T16:00:00.000Z","_content":"\n## 简介\n\nFilterTextBox控件是一种文本框的过滤控件，可以阻止用户进行不准确的输入，相比较vs里提供的验证控件显得更为严格，验证控件是在用户输入了不准确的输入后，给出相应的提示，而现在要介绍的FilterTextBox都不给用户输入错误数据的机会。\n<!--more-->\n\n## 重要属性\n\n* TargetControlID：用来设置要控制的文本框 \n* FilterType:设置被过滤的类型，提供四种 \n* Custom:如果选择这个选项，就可以在另外的一个属性中自定义不被过滤的字符 \n* Numbers：让关联的文本框只能输入数字\n* UppercaseLetters:让关联的文本框只能输入大写字母\n* LowercaseLetters:让关联的文本框只能输入小写字母\n* ValidChars:当FilterType设置为Custom时，用来设置有效的字符\n\n## 示例\n\n1 打开vs2005，新建一个AjaxControlToolKit网站，命名为oec2003_FilteredTextBox;\n2 打开默认生成的Default.aspx页面，切换到设计视图;\n3 在页面中拖拽4个TextBox和4个FilterTextBoxExtender控件。控件的源码如下:\n\n```\n<ajaxtoolkit:filteredtextboxextender id=\"FilteredTextBoxExtender1\" runat=\"server\"\n    targetcontrolid=\"TextBox1\" filtertype=\"UppercaseLetters\">\n  </ajaxtoolkit:filteredtextboxextender>\n<ajaxtoolkit:filteredtextboxextender id=\"FilteredTextBoxExtender2\" runat=\"server\"\n    targetcontrolid=\"TextBox2\" filtertype=\"LowercaseLetters\">\n  </ajaxtoolkit:filteredtextboxextender>\n<ajaxtoolkit:filteredtextboxextender id=\"FilteredTextBoxExtender3\" runat=\"server\"\n    targetcontrolid=\"TextBox3\" filtertype=\"Numbers\">\n  </ajaxtoolkit:filteredtextboxextender>\n<ajaxtoolkit:filteredtextboxextender id=\"FilteredTextBoxExtender4\" runat=\"server\"\n    targetcontrolid=\"TextBox4\" validchars=\"oec2003\" filtertype=\"Custom\">\n </ajaxtoolkit:filteredtextboxextender>\n ```\n \n4 保存所有的设计，运行网站，试试看，第四个文本框中就只能输入oec2003了，输入其他的字符时就会发现文本框是没有反应的。\n\n在页面上如果有一个GridView用来显示数据库的一些数据，而且数据库中有一些数值型的字段，在GridView中可以编辑获取的数据，在这儿用FilterTextBox控件是再合适不过了，可以避免用户在更新时输入不正确的数据。\n\n1 新建一个web页面，在页面中添加ScriptManager和UpdatePanel控件;\n\n2 在UpdatePanel控件中添加一个GridView控件，并配置数据源，按照向导进行，当出现下图时，点击高级按钮;\n\n![2010-12-30_191105](http://oec2003.qiniudn.com/2010-12-30_191105.gif)\n\n3 在高级对话框中钩选[生成insert update delete语句] 项只有选了此项，GridView才能实现编辑功能;\n\n4 数据源配置好后，将GridView的数值的字段转换为模板列;\n\n5 编辑GridView的模板列，在模板列中添加FilterTextBox控件，并设置过滤属性为numbers，TargetControlID关联上模板列中的文本框，模板列代码如下：\n\n```\n<edititemtemplate>\n    <asp:TextBox ID=\"TextBox1\" runat=\"server\" \n                                   Text='<%# Bind(\"min_lvl\") %>'></asp:TextBox>\n    <ajaxToolkit:FilteredTextBoxExtender ID=\"FilteredTextBoxExtender1\" runat=\"server\"\n        TargetControlID=\"TextBox1\" FilterType=\"Numbers\">\n    </ajaxToolkit:FilteredTextBoxExtender>\n</edititemtemplate>\n  <edititemtemplate>\n    <asp:TextBox ID=\"TextBox2\" runat=\"server\" \n                                      Text='<%# Bind(\"max_lvl\") %>'></asp:TextBox>\n   <ajaxToolkit:FilteredTextBoxExtender ID=\"FilteredTextBoxExtender2\" runat=\"server\"\n       TargetControlID=\"TextBox2\" FilterType=\"Numbers\">\n   </ajaxToolkit:FilteredTextBoxExtender>\n</edititemtemplate>\n```\n\n保存设计，按f5运行，编辑Gridview就会发现，数值型字段的文本框就只能输入数字了。\n\n","source":"_posts/asp-net-ajax-filteredtextbox.md","raw":"---\ntitle: Asp.Net Ajax—FilteredTextBox控件使用\ndate: 2007-08-21\ncategories: [Asp.Net Ajax]\ntags: [Ajax,AspNet]\n---\n\n## 简介\n\nFilterTextBox控件是一种文本框的过滤控件，可以阻止用户进行不准确的输入，相比较vs里提供的验证控件显得更为严格，验证控件是在用户输入了不准确的输入后，给出相应的提示，而现在要介绍的FilterTextBox都不给用户输入错误数据的机会。\n<!--more-->\n\n## 重要属性\n\n* TargetControlID：用来设置要控制的文本框 \n* FilterType:设置被过滤的类型，提供四种 \n* Custom:如果选择这个选项，就可以在另外的一个属性中自定义不被过滤的字符 \n* Numbers：让关联的文本框只能输入数字\n* UppercaseLetters:让关联的文本框只能输入大写字母\n* LowercaseLetters:让关联的文本框只能输入小写字母\n* ValidChars:当FilterType设置为Custom时，用来设置有效的字符\n\n## 示例\n\n1 打开vs2005，新建一个AjaxControlToolKit网站，命名为oec2003_FilteredTextBox;\n2 打开默认生成的Default.aspx页面，切换到设计视图;\n3 在页面中拖拽4个TextBox和4个FilterTextBoxExtender控件。控件的源码如下:\n\n```\n<ajaxtoolkit:filteredtextboxextender id=\"FilteredTextBoxExtender1\" runat=\"server\"\n    targetcontrolid=\"TextBox1\" filtertype=\"UppercaseLetters\">\n  </ajaxtoolkit:filteredtextboxextender>\n<ajaxtoolkit:filteredtextboxextender id=\"FilteredTextBoxExtender2\" runat=\"server\"\n    targetcontrolid=\"TextBox2\" filtertype=\"LowercaseLetters\">\n  </ajaxtoolkit:filteredtextboxextender>\n<ajaxtoolkit:filteredtextboxextender id=\"FilteredTextBoxExtender3\" runat=\"server\"\n    targetcontrolid=\"TextBox3\" filtertype=\"Numbers\">\n  </ajaxtoolkit:filteredtextboxextender>\n<ajaxtoolkit:filteredtextboxextender id=\"FilteredTextBoxExtender4\" runat=\"server\"\n    targetcontrolid=\"TextBox4\" validchars=\"oec2003\" filtertype=\"Custom\">\n </ajaxtoolkit:filteredtextboxextender>\n ```\n \n4 保存所有的设计，运行网站，试试看，第四个文本框中就只能输入oec2003了，输入其他的字符时就会发现文本框是没有反应的。\n\n在页面上如果有一个GridView用来显示数据库的一些数据，而且数据库中有一些数值型的字段，在GridView中可以编辑获取的数据，在这儿用FilterTextBox控件是再合适不过了，可以避免用户在更新时输入不正确的数据。\n\n1 新建一个web页面，在页面中添加ScriptManager和UpdatePanel控件;\n\n2 在UpdatePanel控件中添加一个GridView控件，并配置数据源，按照向导进行，当出现下图时，点击高级按钮;\n\n![2010-12-30_191105](http://oec2003.qiniudn.com/2010-12-30_191105.gif)\n\n3 在高级对话框中钩选[生成insert update delete语句] 项只有选了此项，GridView才能实现编辑功能;\n\n4 数据源配置好后，将GridView的数值的字段转换为模板列;\n\n5 编辑GridView的模板列，在模板列中添加FilterTextBox控件，并设置过滤属性为numbers，TargetControlID关联上模板列中的文本框，模板列代码如下：\n\n```\n<edititemtemplate>\n    <asp:TextBox ID=\"TextBox1\" runat=\"server\" \n                                   Text='<%# Bind(\"min_lvl\") %>'></asp:TextBox>\n    <ajaxToolkit:FilteredTextBoxExtender ID=\"FilteredTextBoxExtender1\" runat=\"server\"\n        TargetControlID=\"TextBox1\" FilterType=\"Numbers\">\n    </ajaxToolkit:FilteredTextBoxExtender>\n</edititemtemplate>\n  <edititemtemplate>\n    <asp:TextBox ID=\"TextBox2\" runat=\"server\" \n                                      Text='<%# Bind(\"max_lvl\") %>'></asp:TextBox>\n   <ajaxToolkit:FilteredTextBoxExtender ID=\"FilteredTextBoxExtender2\" runat=\"server\"\n       TargetControlID=\"TextBox2\" FilterType=\"Numbers\">\n   </ajaxToolkit:FilteredTextBoxExtender>\n</edititemtemplate>\n```\n\n保存设计，按f5运行，编辑Gridview就会发现，数值型字段的文本框就只能输入数字了。\n\n","slug":"asp-net-ajax-filteredtextbox","published":1,"updated":"2016-08-13T08:37:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz90b001xxfynn5ma8s9o","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>FilterTextBox控件是一种文本框的过滤控件，可以阻止用户进行不准确的输入，相比较vs里提供的验证控件显得更为严格，验证控件是在用户输入了不准确的输入后，给出相应的提示，而现在要介绍的FilterTextBox都不给用户输入错误数据的机会。<br><a id=\"more\"></a></p>\n<h2 id=\"重要属性\"><a href=\"#重要属性\" class=\"headerlink\" title=\"重要属性\"></a>重要属性</h2><ul>\n<li>TargetControlID：用来设置要控制的文本框 </li>\n<li>FilterType:设置被过滤的类型，提供四种 </li>\n<li>Custom:如果选择这个选项，就可以在另外的一个属性中自定义不被过滤的字符 </li>\n<li>Numbers：让关联的文本框只能输入数字</li>\n<li>UppercaseLetters:让关联的文本框只能输入大写字母</li>\n<li>LowercaseLetters:让关联的文本框只能输入小写字母</li>\n<li>ValidChars:当FilterType设置为Custom时，用来设置有效的字符</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>1 打开vs2005，新建一个AjaxControlToolKit网站，命名为oec2003_FilteredTextBox;<br>2 打开默认生成的Default.aspx页面，切换到设计视图;<br>3 在页面中拖拽4个TextBox和4个FilterTextBoxExtender控件。控件的源码如下:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ajaxtoolkit:filteredtextboxextender</span> <span class=\"attr\">id</span>=<span class=\"string\">\"FilteredTextBoxExtender1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></span></div><div class=\"line\">    <span class=\"attr\">targetcontrolid</span>=<span class=\"string\">\"TextBox1\"</span> <span class=\"attr\">filtertype</span>=<span class=\"string\">\"UppercaseLetters\"</span>&gt;</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ajaxtoolkit:filteredtextboxextender</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ajaxtoolkit:filteredtextboxextender</span> <span class=\"attr\">id</span>=<span class=\"string\">\"FilteredTextBoxExtender2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></span></div><div class=\"line\">    <span class=\"attr\">targetcontrolid</span>=<span class=\"string\">\"TextBox2\"</span> <span class=\"attr\">filtertype</span>=<span class=\"string\">\"LowercaseLetters\"</span>&gt;</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ajaxtoolkit:filteredtextboxextender</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ajaxtoolkit:filteredtextboxextender</span> <span class=\"attr\">id</span>=<span class=\"string\">\"FilteredTextBoxExtender3\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></span></div><div class=\"line\">    <span class=\"attr\">targetcontrolid</span>=<span class=\"string\">\"TextBox3\"</span> <span class=\"attr\">filtertype</span>=<span class=\"string\">\"Numbers\"</span>&gt;</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ajaxtoolkit:filteredtextboxextender</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ajaxtoolkit:filteredtextboxextender</span> <span class=\"attr\">id</span>=<span class=\"string\">\"FilteredTextBoxExtender4\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></span></div><div class=\"line\">    <span class=\"attr\">targetcontrolid</span>=<span class=\"string\">\"TextBox4\"</span> <span class=\"attr\">validchars</span>=<span class=\"string\">\"oec2003\"</span> <span class=\"attr\">filtertype</span>=<span class=\"string\">\"Custom\"</span>&gt;</div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">ajaxtoolkit:filteredtextboxextender</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>4 保存所有的设计，运行网站，试试看，第四个文本框中就只能输入oec2003了，输入其他的字符时就会发现文本框是没有反应的。</p>\n<p>在页面上如果有一个GridView用来显示数据库的一些数据，而且数据库中有一些数值型的字段，在GridView中可以编辑获取的数据，在这儿用FilterTextBox控件是再合适不过了，可以避免用户在更新时输入不正确的数据。</p>\n<p>1 新建一个web页面，在页面中添加ScriptManager和UpdatePanel控件;</p>\n<p>2 在UpdatePanel控件中添加一个GridView控件，并配置数据源，按照向导进行，当出现下图时，点击高级按钮;</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_191105.gif\" alt=\"2010-12-30_191105\"></p>\n<p>3 在高级对话框中钩选[生成insert update delete语句] 项只有选了此项，GridView才能实现编辑功能;</p>\n<p>4 数据源配置好后，将GridView的数值的字段转换为模板列;</p>\n<p>5 编辑GridView的模板列，在模板列中添加FilterTextBox控件，并设置过滤属性为numbers，TargetControlID关联上模板列中的文本框，模板列代码如下：</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">edititemtemplate</span>&gt;</span></span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:TextBox</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"TextBox1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> </span></div><div class=\"line\">                                   <span class=\"attr\">Text</span>=<span class=\"string\">'&lt;%</span><span class=\"perl\"><span class=\"comment\"># Bind(\"min_lvl\") </span></span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">%&gt;'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:TextBox</span>&gt;</span></span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ajaxToolkit:FilteredTextBoxExtender</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"FilteredTextBoxExtender1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></span></div><div class=\"line\">        <span class=\"attr\">TargetControlID</span>=<span class=\"string\">\"TextBox1\"</span> <span class=\"attr\">FilterType</span>=<span class=\"string\">\"Numbers\"</span>&gt;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ajaxToolkit:FilteredTextBoxExtender</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">edititemtemplate</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">edititemtemplate</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:TextBox</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"TextBox2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> </span></div><div class=\"line\">                                      <span class=\"attr\">Text</span>=<span class=\"string\">'&lt;%</span><span class=\"perl\"><span class=\"comment\"># Bind(\"max_lvl\") </span></span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">%&gt;'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:TextBox</span>&gt;</span></span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">ajaxToolkit:FilteredTextBoxExtender</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"FilteredTextBoxExtender2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></span></div><div class=\"line\">       <span class=\"attr\">TargetControlID</span>=<span class=\"string\">\"TextBox2\"</span> <span class=\"attr\">FilterType</span>=<span class=\"string\">\"Numbers\"</span>&gt;</div><div class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">ajaxToolkit:FilteredTextBoxExtender</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">edititemtemplate</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>保存设计，按f5运行，编辑Gridview就会发现，数值型字段的文本框就只能输入数字了。</p>\n","excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>FilterTextBox控件是一种文本框的过滤控件，可以阻止用户进行不准确的输入，相比较vs里提供的验证控件显得更为严格，验证控件是在用户输入了不准确的输入后，给出相应的提示，而现在要介绍的FilterTextBox都不给用户输入错误数据的机会。<br>","more":"</p>\n<h2 id=\"重要属性\"><a href=\"#重要属性\" class=\"headerlink\" title=\"重要属性\"></a>重要属性</h2><ul>\n<li>TargetControlID：用来设置要控制的文本框 </li>\n<li>FilterType:设置被过滤的类型，提供四种 </li>\n<li>Custom:如果选择这个选项，就可以在另外的一个属性中自定义不被过滤的字符 </li>\n<li>Numbers：让关联的文本框只能输入数字</li>\n<li>UppercaseLetters:让关联的文本框只能输入大写字母</li>\n<li>LowercaseLetters:让关联的文本框只能输入小写字母</li>\n<li>ValidChars:当FilterType设置为Custom时，用来设置有效的字符</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>1 打开vs2005，新建一个AjaxControlToolKit网站，命名为oec2003_FilteredTextBox;<br>2 打开默认生成的Default.aspx页面，切换到设计视图;<br>3 在页面中拖拽4个TextBox和4个FilterTextBoxExtender控件。控件的源码如下:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ajaxtoolkit:filteredtextboxextender</span> <span class=\"attr\">id</span>=<span class=\"string\">\"FilteredTextBoxExtender1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></div><div class=\"line\">    <span class=\"attr\">targetcontrolid</span>=<span class=\"string\">\"TextBox1\"</span> <span class=\"attr\">filtertype</span>=<span class=\"string\">\"UppercaseLetters\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ajaxtoolkit:filteredtextboxextender</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ajaxtoolkit:filteredtextboxextender</span> <span class=\"attr\">id</span>=<span class=\"string\">\"FilteredTextBoxExtender2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></div><div class=\"line\">    <span class=\"attr\">targetcontrolid</span>=<span class=\"string\">\"TextBox2\"</span> <span class=\"attr\">filtertype</span>=<span class=\"string\">\"LowercaseLetters\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ajaxtoolkit:filteredtextboxextender</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ajaxtoolkit:filteredtextboxextender</span> <span class=\"attr\">id</span>=<span class=\"string\">\"FilteredTextBoxExtender3\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></div><div class=\"line\">    <span class=\"attr\">targetcontrolid</span>=<span class=\"string\">\"TextBox3\"</span> <span class=\"attr\">filtertype</span>=<span class=\"string\">\"Numbers\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ajaxtoolkit:filteredtextboxextender</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ajaxtoolkit:filteredtextboxextender</span> <span class=\"attr\">id</span>=<span class=\"string\">\"FilteredTextBoxExtender4\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></div><div class=\"line\">    <span class=\"attr\">targetcontrolid</span>=<span class=\"string\">\"TextBox4\"</span> <span class=\"attr\">validchars</span>=<span class=\"string\">\"oec2003\"</span> <span class=\"attr\">filtertype</span>=<span class=\"string\">\"Custom\"</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">ajaxtoolkit:filteredtextboxextender</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>4 保存所有的设计，运行网站，试试看，第四个文本框中就只能输入oec2003了，输入其他的字符时就会发现文本框是没有反应的。</p>\n<p>在页面上如果有一个GridView用来显示数据库的一些数据，而且数据库中有一些数值型的字段，在GridView中可以编辑获取的数据，在这儿用FilterTextBox控件是再合适不过了，可以避免用户在更新时输入不正确的数据。</p>\n<p>1 新建一个web页面，在页面中添加ScriptManager和UpdatePanel控件;</p>\n<p>2 在UpdatePanel控件中添加一个GridView控件，并配置数据源，按照向导进行，当出现下图时，点击高级按钮;</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_191105.gif\" alt=\"2010-12-30_191105\"></p>\n<p>3 在高级对话框中钩选[生成insert update delete语句] 项只有选了此项，GridView才能实现编辑功能;</p>\n<p>4 数据源配置好后，将GridView的数值的字段转换为模板列;</p>\n<p>5 编辑GridView的模板列，在模板列中添加FilterTextBox控件，并设置过滤属性为numbers，TargetControlID关联上模板列中的文本框，模板列代码如下：</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">edititemtemplate</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:TextBox</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"TextBox1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> </div><div class=\"line\">                                   <span class=\"attr\">Text</span>=<span class=\"string\">'&lt;%</span></span></span><span class=\"perl\"><span class=\"comment\"># Bind(\"min_lvl\") </span></span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">%&gt;'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:TextBox</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ajaxToolkit:FilteredTextBoxExtender</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"FilteredTextBoxExtender1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></div><div class=\"line\">        <span class=\"attr\">TargetControlID</span>=<span class=\"string\">\"TextBox1\"</span> <span class=\"attr\">FilterType</span>=<span class=\"string\">\"Numbers\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ajaxToolkit:FilteredTextBoxExtender</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">edititemtemplate</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">edititemtemplate</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:TextBox</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"TextBox2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> </div><div class=\"line\">                                      <span class=\"attr\">Text</span>=<span class=\"string\">'&lt;%</span></span></span><span class=\"perl\"><span class=\"comment\"># Bind(\"max_lvl\") </span></span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">%&gt;'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:TextBox</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">ajaxToolkit:FilteredTextBoxExtender</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"FilteredTextBoxExtender2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></div><div class=\"line\">       <span class=\"attr\">TargetControlID</span>=<span class=\"string\">\"TextBox2\"</span> <span class=\"attr\">FilterType</span>=<span class=\"string\">\"Numbers\"</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">ajaxToolkit:FilteredTextBoxExtender</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">edititemtemplate</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>保存设计，按f5运行，编辑Gridview就会发现，数值型字段的文本框就只能输入数字了。</p>"},{"title":"Asp.Net Ajax-Passwordstrength控件使用","date":"2007-08-24T16:00:00.000Z","_content":"\n## 简介\n\nPasswordStrength控件是用来提示用户输入密码的情况,用户在密码框中输入密码时,在文本框的后面会有一个提示,显示密码的强度,这种提示有两种方式:文本和进度条,提示信息的位置也可以由我们来自己设置,样式可以写CSS来定义。当密码框失去焦点时提示信息会自动消失。下面就来看看该控件的重要属性吧。\n<!--more-->\n\n## 重要属性\n\n*   TargetControlID:密码框的I\n*   DisplayPosition:提示信息显示的位置，一共有6个值分别是：RightSide AboveRight AboveLeft LeftSide BelowRight BelowLef\n*   StrengthIndicatorType:设置显示的方式,文本或是进度\n*   Text:文本方式显\n*   BarIndicator:以进度条方式显\n*   PreferredPasswordLength:最合适的密码长\n*   TextCssClass:提示信息的样\n*   MinimumNumericCharacters:密码中至少要包含的数字的个\n*   MinimumSymbolCharacters:密码中至少要包含特殊字符的个\n*   BarBorderCssClass:提示进度条的边框样\n*   BarIndicatorCssClass:提示进度条的样式 &lt;\n\n## 示例\n\n1 打开vs2005,新建一个AjaxControlToolKit网站，命名为oec2003_PasswordStrength.\n\n2 打开默认的Default.aspx页面，切换到设计视图\n\n3 在页面中添加一个文本框控件和一个PasswordStrength控件，设置PasswordStrength空间的属性，如下：\n\n```\n&lt;ajaxtoolkit:passwordstrength id=\"PasswordStrength1\" runat=\"server\" targetcontrolid=\"TextBox1\"\n\n       strengthindicatortype=\"BarIndicator\" preferredpasswordlength=\"12\" mini mumnumericcharacters=\"3\"\n\n       minimumsymbolcharacters=\"1\" barindicatorcssclass=\"bartype\" barbordercssclass=\"barborder\"&gt;\n\n       &lt;/ajaxtoolkit:passwordstrength&gt;\n```\n\n4 在head标记中添加CSS样式，如下\n\n```\n&lt;style type=\"text/css\"&gt;\n     .bartype\n     {\n         color:blue;\n         background-color:green;\n\n     }\n     .barborder\n     {\n        border-style:solid;\n        border-width:1px;\n        width:200px;\n        vertical-align:middle;\n    }\n&lt;/style&gt;\n```\n\n5 保存设计，按F5运行就OK了。\n\n这个控件虽然很方便，但感觉还是不是很灵活，也许是我还没有把这个控件研究透彻吧，待以后慢慢深入。\n\n此控件还有 preFixTexts属性（用来显示提示信息的前缀）和TextStrengthDescriptions（密码强度的提示信息的内容，如弱，强）属性，但是这两个控件的设置只有在StrengthIndicatorType属性设置成Text时才有效，设置成进度条样式时看不见前缀和强度提示消息，不知道是此控件原本如此还有我有的地方设置不对 ，迷惑...........\n\n\n","source":"_posts/asp-net-ajax-passwordstrength.md","raw":"title:   Asp.Net Ajax-Passwordstrength控件使用\ndate:  2007-08-25\ncategories: [Asp.Net Ajax]\ntags:  [Ajax,AspNet]\n---\n\n## 简介\n\nPasswordStrength控件是用来提示用户输入密码的情况,用户在密码框中输入密码时,在文本框的后面会有一个提示,显示密码的强度,这种提示有两种方式:文本和进度条,提示信息的位置也可以由我们来自己设置,样式可以写CSS来定义。当密码框失去焦点时提示信息会自动消失。下面就来看看该控件的重要属性吧。\n<!--more-->\n\n## 重要属性\n\n*   TargetControlID:密码框的I\n*   DisplayPosition:提示信息显示的位置，一共有6个值分别是：RightSide AboveRight AboveLeft LeftSide BelowRight BelowLef\n*   StrengthIndicatorType:设置显示的方式,文本或是进度\n*   Text:文本方式显\n*   BarIndicator:以进度条方式显\n*   PreferredPasswordLength:最合适的密码长\n*   TextCssClass:提示信息的样\n*   MinimumNumericCharacters:密码中至少要包含的数字的个\n*   MinimumSymbolCharacters:密码中至少要包含特殊字符的个\n*   BarBorderCssClass:提示进度条的边框样\n*   BarIndicatorCssClass:提示进度条的样式 &lt;\n\n## 示例\n\n1 打开vs2005,新建一个AjaxControlToolKit网站，命名为oec2003_PasswordStrength.\n\n2 打开默认的Default.aspx页面，切换到设计视图\n\n3 在页面中添加一个文本框控件和一个PasswordStrength控件，设置PasswordStrength空间的属性，如下：\n\n```\n&lt;ajaxtoolkit:passwordstrength id=\"PasswordStrength1\" runat=\"server\" targetcontrolid=\"TextBox1\"\n\n       strengthindicatortype=\"BarIndicator\" preferredpasswordlength=\"12\" mini mumnumericcharacters=\"3\"\n\n       minimumsymbolcharacters=\"1\" barindicatorcssclass=\"bartype\" barbordercssclass=\"barborder\"&gt;\n\n       &lt;/ajaxtoolkit:passwordstrength&gt;\n```\n\n4 在head标记中添加CSS样式，如下\n\n```\n&lt;style type=\"text/css\"&gt;\n     .bartype\n     {\n         color:blue;\n         background-color:green;\n\n     }\n     .barborder\n     {\n        border-style:solid;\n        border-width:1px;\n        width:200px;\n        vertical-align:middle;\n    }\n&lt;/style&gt;\n```\n\n5 保存设计，按F5运行就OK了。\n\n这个控件虽然很方便，但感觉还是不是很灵活，也许是我还没有把这个控件研究透彻吧，待以后慢慢深入。\n\n此控件还有 preFixTexts属性（用来显示提示信息的前缀）和TextStrengthDescriptions（密码强度的提示信息的内容，如弱，强）属性，但是这两个控件的设置只有在StrengthIndicatorType属性设置成Text时才有效，设置成进度条样式时看不见前缀和强度提示消息，不知道是此控件原本如此还有我有的地方设置不对 ，迷惑...........\n\n\n","slug":"asp-net-ajax-passwordstrength","published":1,"updated":"2016-08-13T08:36:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz90e0022xfyn8nydtq43","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>PasswordStrength控件是用来提示用户输入密码的情况,用户在密码框中输入密码时,在文本框的后面会有一个提示,显示密码的强度,这种提示有两种方式:文本和进度条,提示信息的位置也可以由我们来自己设置,样式可以写CSS来定义。当密码框失去焦点时提示信息会自动消失。下面就来看看该控件的重要属性吧。<br><a id=\"more\"></a></p>\n<h2 id=\"重要属性\"><a href=\"#重要属性\" class=\"headerlink\" title=\"重要属性\"></a>重要属性</h2><ul>\n<li>TargetControlID:密码框的I</li>\n<li>DisplayPosition:提示信息显示的位置，一共有6个值分别是：RightSide AboveRight AboveLeft LeftSide BelowRight BelowLef</li>\n<li>StrengthIndicatorType:设置显示的方式,文本或是进度</li>\n<li>Text:文本方式显</li>\n<li>BarIndicator:以进度条方式显</li>\n<li>PreferredPasswordLength:最合适的密码长</li>\n<li>TextCssClass:提示信息的样</li>\n<li>MinimumNumericCharacters:密码中至少要包含的数字的个</li>\n<li>MinimumSymbolCharacters:密码中至少要包含特殊字符的个</li>\n<li>BarBorderCssClass:提示进度条的边框样</li>\n<li>BarIndicatorCssClass:提示进度条的样式 &lt;</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>1 打开vs2005,新建一个AjaxControlToolKit网站，命名为oec2003_PasswordStrength.</p>\n<p>2 打开默认的Default.aspx页面，切换到设计视图</p>\n<p>3 在页面中添加一个文本框控件和一个PasswordStrength控件，设置PasswordStrength空间的属性，如下：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&amp;<span class=\"keyword\">lt</span>;ajaxtoolkit:passwordstrength <span class=\"attr\">id=</span><span class=\"string\">\"PasswordStrength1\"</span> <span class=\"attr\">runat=</span><span class=\"string\">\"server\"</span> <span class=\"attr\">targetcontrolid=</span><span class=\"string\">\"TextBox1\"</span></div><div class=\"line\"></div><div class=\"line\">       <span class=\"attr\">strengthindicatortype=</span><span class=\"string\">\"BarIndicator\"</span> <span class=\"attr\">preferredpasswordlength=</span><span class=\"string\">\"12\"</span> mini <span class=\"attr\">mumnumericcharacters=</span><span class=\"string\">\"3\"</span></div><div class=\"line\"></div><div class=\"line\">       <span class=\"attr\">minimumsymbolcharacters=</span><span class=\"string\">\"1\"</span> <span class=\"attr\">barindicatorcssclass=</span><span class=\"string\">\"bartype\"</span> <span class=\"attr\">barbordercssclass=</span><span class=\"string\">\"barborder\"</span>&amp;<span class=\"keyword\">gt</span>;</div><div class=\"line\"></div><div class=\"line\">       &amp;<span class=\"keyword\">lt</span>;/ajaxtoolkit:passwordstrength&amp;<span class=\"keyword\">gt</span>;</div></pre></td></tr></table></figure>\n<p>4 在head标记中添加CSS样式，如下</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&amp;lt;<span class=\"built_in\">style</span> type=<span class=\"string\">\"text/css\"</span>&amp;gt;</div><div class=\"line\">     .bartype</div><div class=\"line\">     &#123;</div><div class=\"line\">         <span class=\"built_in\">color</span>:blue;</div><div class=\"line\">         <span class=\"built_in\">background</span>-<span class=\"built_in\">color</span>:green;</div><div class=\"line\"></div><div class=\"line\">     &#125;</div><div class=\"line\">     .barborder</div><div class=\"line\">     &#123;</div><div class=\"line\">        <span class=\"built_in\">border</span>-<span class=\"built_in\">style</span>:solid;</div><div class=\"line\">        <span class=\"built_in\">border</span>-<span class=\"built_in\">width</span>:1px;</div><div class=\"line\">        <span class=\"built_in\">width</span>:200px;</div><div class=\"line\">        vertical-align:middle;</div><div class=\"line\">    &#125;</div><div class=\"line\">&amp;lt;/<span class=\"built_in\">style</span>&amp;gt;</div></pre></td></tr></table></figure>\n<p>5 保存设计，按F5运行就OK了。</p>\n<p>这个控件虽然很方便，但感觉还是不是很灵活，也许是我还没有把这个控件研究透彻吧，待以后慢慢深入。</p>\n<p>此控件还有 preFixTexts属性（用来显示提示信息的前缀）和TextStrengthDescriptions（密码强度的提示信息的内容，如弱，强）属性，但是这两个控件的设置只有在StrengthIndicatorType属性设置成Text时才有效，设置成进度条样式时看不见前缀和强度提示消息，不知道是此控件原本如此还有我有的地方设置不对 ，迷惑………..</p>\n","excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>PasswordStrength控件是用来提示用户输入密码的情况,用户在密码框中输入密码时,在文本框的后面会有一个提示,显示密码的强度,这种提示有两种方式:文本和进度条,提示信息的位置也可以由我们来自己设置,样式可以写CSS来定义。当密码框失去焦点时提示信息会自动消失。下面就来看看该控件的重要属性吧。<br>","more":"</p>\n<h2 id=\"重要属性\"><a href=\"#重要属性\" class=\"headerlink\" title=\"重要属性\"></a>重要属性</h2><ul>\n<li>TargetControlID:密码框的I</li>\n<li>DisplayPosition:提示信息显示的位置，一共有6个值分别是：RightSide AboveRight AboveLeft LeftSide BelowRight BelowLef</li>\n<li>StrengthIndicatorType:设置显示的方式,文本或是进度</li>\n<li>Text:文本方式显</li>\n<li>BarIndicator:以进度条方式显</li>\n<li>PreferredPasswordLength:最合适的密码长</li>\n<li>TextCssClass:提示信息的样</li>\n<li>MinimumNumericCharacters:密码中至少要包含的数字的个</li>\n<li>MinimumSymbolCharacters:密码中至少要包含特殊字符的个</li>\n<li>BarBorderCssClass:提示进度条的边框样</li>\n<li>BarIndicatorCssClass:提示进度条的样式 &lt;</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>1 打开vs2005,新建一个AjaxControlToolKit网站，命名为oec2003_PasswordStrength.</p>\n<p>2 打开默认的Default.aspx页面，切换到设计视图</p>\n<p>3 在页面中添加一个文本框控件和一个PasswordStrength控件，设置PasswordStrength空间的属性，如下：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&amp;<span class=\"keyword\">lt</span>;ajaxtoolkit:passwordstrength <span class=\"attr\">id=</span><span class=\"string\">\"PasswordStrength1\"</span> <span class=\"attr\">runat=</span><span class=\"string\">\"server\"</span> <span class=\"attr\">targetcontrolid=</span><span class=\"string\">\"TextBox1\"</span></div><div class=\"line\"></div><div class=\"line\">       <span class=\"attr\">strengthindicatortype=</span><span class=\"string\">\"BarIndicator\"</span> <span class=\"attr\">preferredpasswordlength=</span><span class=\"string\">\"12\"</span> mini <span class=\"attr\">mumnumericcharacters=</span><span class=\"string\">\"3\"</span></div><div class=\"line\"></div><div class=\"line\">       <span class=\"attr\">minimumsymbolcharacters=</span><span class=\"string\">\"1\"</span> <span class=\"attr\">barindicatorcssclass=</span><span class=\"string\">\"bartype\"</span> <span class=\"attr\">barbordercssclass=</span><span class=\"string\">\"barborder\"</span>&amp;<span class=\"keyword\">gt</span>;</div><div class=\"line\"></div><div class=\"line\">       &amp;<span class=\"keyword\">lt</span>;/ajaxtoolkit:passwordstrength&amp;<span class=\"keyword\">gt</span>;</div></pre></td></tr></table></figure>\n<p>4 在head标记中添加CSS样式，如下</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&amp;lt;<span class=\"built_in\">style</span> type=<span class=\"string\">\"text/css\"</span>&amp;gt;</div><div class=\"line\">     .bartype</div><div class=\"line\">     &#123;</div><div class=\"line\">         <span class=\"built_in\">color</span>:blue;</div><div class=\"line\">         <span class=\"built_in\">background</span>-<span class=\"built_in\">color</span>:green;</div><div class=\"line\"></div><div class=\"line\">     &#125;</div><div class=\"line\">     .barborder</div><div class=\"line\">     &#123;</div><div class=\"line\">        <span class=\"built_in\">border</span>-<span class=\"built_in\">style</span>:solid;</div><div class=\"line\">        <span class=\"built_in\">border</span>-<span class=\"built_in\">width</span>:1px;</div><div class=\"line\">        <span class=\"built_in\">width</span>:200px;</div><div class=\"line\">        vertical-align:middle;</div><div class=\"line\">    &#125;</div><div class=\"line\">&amp;lt;/<span class=\"built_in\">style</span>&amp;gt;</div></pre></td></tr></table></figure>\n<p>5 保存设计，按F5运行就OK了。</p>\n<p>这个控件虽然很方便，但感觉还是不是很灵活，也许是我还没有把这个控件研究透彻吧，待以后慢慢深入。</p>\n<p>此控件还有 preFixTexts属性（用来显示提示信息的前缀）和TextStrengthDescriptions（密码强度的提示信息的内容，如弱，强）属性，但是这两个控件的设置只有在StrengthIndicatorType属性设置成Text时才有效，设置成进度条样式时看不见前缀和强度提示消息，不知道是此控件原本如此还有我有的地方设置不对 ，迷惑………..</p>"},{"title":"Asp.Net Ajax —AutoComplete控件使用","date":"2007-08-17T16:00:00.000Z","_content":"\n以前见到google和迅雷等网站在搜索文本框中输入文字后能自动提示,感觉这种功能很炫也很实用.现在在学习asp.net ajax 发现AjaxControlToolKit工具包中的AutoComplete控件就能实现这种功能,而且非常简单.\n<!--more-->\n\n## 简介\n\nAutoComplete控件就是在用户在文本框输入前几个字母或是汉字的时候,该控件就能从存放数据的文或是数据库里将所有以这些字母开头的数据提示给用户,供用户选择,提供方便.\n\n## 重要属性\n\n* TargetControlID:指定要实现提示功能的控件。\n* ServicePath:WebService的路径，提取数据的方法是写在一个WebService中的。\n* ServeiceMethod:写在WebService中的用于提取数据的方法的名字。\n* MinimumPrefixLength:用来设置用户输入多少字母才出现提示效果。\n* CompletionSetCount:设置提示数据的行数。\n* CompletionInterval:从服务器获取书的时间间隔，单位是毫秒。\n\n## 示例\n\n打开vs2005创建一个AjaxControlToolKit网站。\n在网站的App_Data文件夹下添加文本文件TextFile.txt,并在其中添加数据，如下\n\n![2010-12-30_191105](http://oec2003.qiniudn.com/2010-12-30_191105.gif)\n\n在网站的根目录下添加一个Web服务，命名为oec2003_AutoComplete，系统自动将Web服务两个部分，设计部分oec2003_AutoComplete.asmx和代码部分oec2003_AutoComplete.cs，其中oec2003_AutoComplete.cs文件自动放入到App_Code目录下。打开oec2003_AutoComplete.cs文件，添加获取数据的方法GetCompleteList,代码如下：\n\n```\nusing System;\nusing System.Web;\nusing System.Collections;\nusing System.Web.Services;\nusing System.Web.Services.Protocols;\nusing System.IO;\n\n/// <summary>\n/// AutoComplete 的摘要说明\n/// </summary>\n[WebService(Namespace = \"http://tempuri.org/\")]\n[WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)]\n[System.Web.Script.Services.ScriptService]\npublic class AutoComplete : System.Web.Services.WebService\n{\n    public AutoComplete()\n    {\n        //如果使用设计的组件，请取消注释以下行\n        //InitializeComponent();\n    }\n\n    [WebMethod]\n    public string HelloWorld()\n    {\n        return \"Hello World\";\n    }\n    /// <summary>\n    /// 获取数据的方法GetCompleteList\n    /// </summary>\n    //定义静态数组用于保存获取的数据\n    private static string[] autoCompleteWordList = null;\n    [WebMethod]\n    public String[] GetCompleteList(string prefixText, int count)\n    {\n        if (autoCompleteWordList == null)\n        {\n            string[] temp = File.ReadAllLines(Server.MapPath(\"~/App_Data/TextFile.txt\"));\n            Array.Sort(temp, new CaseInsensitiveComparer());\n            autoCompleteWordList = temp;\n        }\n\n        int index = Array.BinarySearch(autoCompleteWordList, prefixText, new CaseInsensitiveComparer());\n        if (index < 0)\n        {\n            index = ~index;\n        }\n\n        int matchingCount;\n        for (matchingCount = 0; matchingCount < count &&\n                        index + matchingCount < autoCompleteWordList.Length; matchingCount++)\n        {\n            if (!autoCompleteWordList[index + matchingCount].StartsWith(prefixText,\n                                               StringComparison.CurrentCultureIgnoreCase))\n            {\n                break;\n            }\n        }\n        String[] returnValue = new string[matchingCount];\n        if (matchingCount > 0)\n        {\n            Array.Copy(autoCompleteWordList, index, returnValue, 0, matchingCount);\n        }\n        return returnValue;\n    }\n}\n```\n\n由于在上面的代码中使用了File类，所以应该添加如下代码：\n\n```\nusing System.IO;\n```\n\n因为需要在客户端调用Web服务，还需要添加如下代码\n\n```\n[System.Web.Script.Services.ScriptService]\n```\n\n保存Web 服务的代码\n\n打开根目录下默认生成的Default.aspx\n\n在页面中拖拽一个TextBox控件和一个AutoCompleteExtender控件。\n\n在属性窗口设置AutoCompleteExtender控件的属性，如下\n\n```\n<ajaxToolkit:AutoCompleteExtender\n            ID=\"AutoCompleteExtender1\"\n            runat=\"server\"\n            ServiceMethod=\"GetCompleteList\"\n            ServicePath=\"oec2003_AutoComplete.asmx\"\n            Enabled=\"true\"\n            MinimumPrefixLength=\"2\"\n               CompletionSetCount=\"10\"\n            TargetControlID=\"TextBox1\">\n</ajaxToolkit:AutoCompleteExtender>\n```\n\n在Web服务中的count参数的值是取CompletionSetCount属性的值。\n\n保存设计的页面，将默认页面设置为起始页，按F5运行后在文本框中输入oe,就能看到想要的结果。\n\n[代码下载](http://files.cnblogs.com/oec2003/AutoComplete_rar.zip)\n\n\n","source":"_posts/asp-net-ajax-autocomplete.md","raw":"---\ntitle: Asp.Net Ajax —AutoComplete控件使用\ndate: 2007-08-18\ncategories: [Asp.Net Ajax]\ntags: [Ajax,AspNet,Autocomplete]\n---\n\n以前见到google和迅雷等网站在搜索文本框中输入文字后能自动提示,感觉这种功能很炫也很实用.现在在学习asp.net ajax 发现AjaxControlToolKit工具包中的AutoComplete控件就能实现这种功能,而且非常简单.\n<!--more-->\n\n## 简介\n\nAutoComplete控件就是在用户在文本框输入前几个字母或是汉字的时候,该控件就能从存放数据的文或是数据库里将所有以这些字母开头的数据提示给用户,供用户选择,提供方便.\n\n## 重要属性\n\n* TargetControlID:指定要实现提示功能的控件。\n* ServicePath:WebService的路径，提取数据的方法是写在一个WebService中的。\n* ServeiceMethod:写在WebService中的用于提取数据的方法的名字。\n* MinimumPrefixLength:用来设置用户输入多少字母才出现提示效果。\n* CompletionSetCount:设置提示数据的行数。\n* CompletionInterval:从服务器获取书的时间间隔，单位是毫秒。\n\n## 示例\n\n打开vs2005创建一个AjaxControlToolKit网站。\n在网站的App_Data文件夹下添加文本文件TextFile.txt,并在其中添加数据，如下\n\n![2010-12-30_191105](http://oec2003.qiniudn.com/2010-12-30_191105.gif)\n\n在网站的根目录下添加一个Web服务，命名为oec2003_AutoComplete，系统自动将Web服务两个部分，设计部分oec2003_AutoComplete.asmx和代码部分oec2003_AutoComplete.cs，其中oec2003_AutoComplete.cs文件自动放入到App_Code目录下。打开oec2003_AutoComplete.cs文件，添加获取数据的方法GetCompleteList,代码如下：\n\n```\nusing System;\nusing System.Web;\nusing System.Collections;\nusing System.Web.Services;\nusing System.Web.Services.Protocols;\nusing System.IO;\n\n/// <summary>\n/// AutoComplete 的摘要说明\n/// </summary>\n[WebService(Namespace = \"http://tempuri.org/\")]\n[WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)]\n[System.Web.Script.Services.ScriptService]\npublic class AutoComplete : System.Web.Services.WebService\n{\n    public AutoComplete()\n    {\n        //如果使用设计的组件，请取消注释以下行\n        //InitializeComponent();\n    }\n\n    [WebMethod]\n    public string HelloWorld()\n    {\n        return \"Hello World\";\n    }\n    /// <summary>\n    /// 获取数据的方法GetCompleteList\n    /// </summary>\n    //定义静态数组用于保存获取的数据\n    private static string[] autoCompleteWordList = null;\n    [WebMethod]\n    public String[] GetCompleteList(string prefixText, int count)\n    {\n        if (autoCompleteWordList == null)\n        {\n            string[] temp = File.ReadAllLines(Server.MapPath(\"~/App_Data/TextFile.txt\"));\n            Array.Sort(temp, new CaseInsensitiveComparer());\n            autoCompleteWordList = temp;\n        }\n\n        int index = Array.BinarySearch(autoCompleteWordList, prefixText, new CaseInsensitiveComparer());\n        if (index < 0)\n        {\n            index = ~index;\n        }\n\n        int matchingCount;\n        for (matchingCount = 0; matchingCount < count &&\n                        index + matchingCount < autoCompleteWordList.Length; matchingCount++)\n        {\n            if (!autoCompleteWordList[index + matchingCount].StartsWith(prefixText,\n                                               StringComparison.CurrentCultureIgnoreCase))\n            {\n                break;\n            }\n        }\n        String[] returnValue = new string[matchingCount];\n        if (matchingCount > 0)\n        {\n            Array.Copy(autoCompleteWordList, index, returnValue, 0, matchingCount);\n        }\n        return returnValue;\n    }\n}\n```\n\n由于在上面的代码中使用了File类，所以应该添加如下代码：\n\n```\nusing System.IO;\n```\n\n因为需要在客户端调用Web服务，还需要添加如下代码\n\n```\n[System.Web.Script.Services.ScriptService]\n```\n\n保存Web 服务的代码\n\n打开根目录下默认生成的Default.aspx\n\n在页面中拖拽一个TextBox控件和一个AutoCompleteExtender控件。\n\n在属性窗口设置AutoCompleteExtender控件的属性，如下\n\n```\n<ajaxToolkit:AutoCompleteExtender\n            ID=\"AutoCompleteExtender1\"\n            runat=\"server\"\n            ServiceMethod=\"GetCompleteList\"\n            ServicePath=\"oec2003_AutoComplete.asmx\"\n            Enabled=\"true\"\n            MinimumPrefixLength=\"2\"\n               CompletionSetCount=\"10\"\n            TargetControlID=\"TextBox1\">\n</ajaxToolkit:AutoCompleteExtender>\n```\n\n在Web服务中的count参数的值是取CompletionSetCount属性的值。\n\n保存设计的页面，将默认页面设置为起始页，按F5运行后在文本框中输入oe,就能看到想要的结果。\n\n[代码下载](http://files.cnblogs.com/oec2003/AutoComplete_rar.zip)\n\n\n","slug":"asp-net-ajax-autocomplete","published":1,"updated":"2016-08-13T08:37:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz90f0025xfynb5f2h6i7","content":"<p>以前见到google和迅雷等网站在搜索文本框中输入文字后能自动提示,感觉这种功能很炫也很实用.现在在学习asp.net ajax 发现AjaxControlToolKit工具包中的AutoComplete控件就能实现这种功能,而且非常简单.<br><a id=\"more\"></a></p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>AutoComplete控件就是在用户在文本框输入前几个字母或是汉字的时候,该控件就能从存放数据的文或是数据库里将所有以这些字母开头的数据提示给用户,供用户选择,提供方便.</p>\n<h2 id=\"重要属性\"><a href=\"#重要属性\" class=\"headerlink\" title=\"重要属性\"></a>重要属性</h2><ul>\n<li>TargetControlID:指定要实现提示功能的控件。</li>\n<li>ServicePath:WebService的路径，提取数据的方法是写在一个WebService中的。</li>\n<li>ServeiceMethod:写在WebService中的用于提取数据的方法的名字。</li>\n<li>MinimumPrefixLength:用来设置用户输入多少字母才出现提示效果。</li>\n<li>CompletionSetCount:设置提示数据的行数。</li>\n<li>CompletionInterval:从服务器获取书的时间间隔，单位是毫秒。</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>打开vs2005创建一个AjaxControlToolKit网站。<br>在网站的App_Data文件夹下添加文本文件TextFile.txt,并在其中添加数据，如下</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_191105.gif\" alt=\"2010-12-30_191105\"></p>\n<p>在网站的根目录下添加一个Web服务，命名为oec2003_AutoComplete，系统自动将Web服务两个部分，设计部分oec2003_AutoComplete.asmx和代码部分oec2003_AutoComplete.cs，其中oec2003_AutoComplete.cs文件自动放入到App_Code目录下。打开oec2003_AutoComplete.cs文件，添加获取数据的方法GetCompleteList,代码如下：</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Services;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Services.Protocols;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\"><span class=\"comment\">/// AutoComplete 的摘要说明</span></div><div class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">[WebService(Namespace = <span class=\"string\">\"http://tempuri.org/\"</span>)]</div><div class=\"line\">[WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)]</div><div class=\"line\">[System.Web.Script.Services.ScriptService]</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> AutoComplete : System.Web.Services.WebService</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> AutoComplete()</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">//如果使用设计的组件，请取消注释以下行</span></div><div class=\"line\">        <span class=\"comment\">//InitializeComponent();</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    [WebMethod]</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> HelloWorld()</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">return</span> <span class=\"string\">\"Hello World\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 获取数据的方法GetCompleteList</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">//定义静态数组用于保存获取的数据</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">string</span>[] autoCompleteWordList = null;</div><div class=\"line\">    [WebMethod]</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span>[] GetCompleteList(<span class=\"keyword\">string</span> prefixText, <span class=\"keyword\">int</span> count)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">if</span> (autoCompleteWordList == null)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">string</span>[] temp = <span class=\"built_in\">File</span>.ReadAllLines(<span class=\"built_in\">Server</span>.MapPath(<span class=\"string\">\"~/App_Data/TextFile.txt\"</span>));</div><div class=\"line\">            Array.Sort(temp, <span class=\"keyword\">new</span> CaseInsensitiveComparer());</div><div class=\"line\">            autoCompleteWordList = temp;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">int</span> index = Array.BinarySearch(autoCompleteWordList, prefixText, <span class=\"keyword\">new</span> CaseInsensitiveComparer());</div><div class=\"line\">        <span class=\"built_in\">if</span> (index &lt; <span class=\"number\">0</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            index = ~index;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">int</span> matchingCount;</div><div class=\"line\">        <span class=\"built_in\">for</span> (matchingCount = <span class=\"number\">0</span>; matchingCount &lt; count &amp;&amp;</div><div class=\"line\">                        index + matchingCount &lt; autoCompleteWordList.Length; matchingCount++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">if</span> (!autoCompleteWordList[index + matchingCount].StartsWith(prefixText,</div><div class=\"line\">                                               StringComparison.CurrentCultureIgnoreCase))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"built_in\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">String</span>[] returnValue = <span class=\"keyword\">new</span> <span class=\"keyword\">string</span>[matchingCount];</div><div class=\"line\">        <span class=\"built_in\">if</span> (matchingCount &gt; <span class=\"number\">0</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            Array.Copy(autoCompleteWordList, index, returnValue, <span class=\"number\">0</span>, matchingCount);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"built_in\">return</span> returnValue;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>由于在上面的代码中使用了File类，所以应该添加如下代码：</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.IO;</div></pre></td></tr></table></figure>\n<p>因为需要在客户端调用Web服务，还需要添加如下代码</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[System<span class=\"selector-class\">.Web</span><span class=\"selector-class\">.Script</span><span class=\"selector-class\">.Services</span><span class=\"selector-class\">.ScriptService</span>]</div></pre></td></tr></table></figure>\n<p>保存Web 服务的代码</p>\n<p>打开根目录下默认生成的Default.aspx</p>\n<p>在页面中拖拽一个TextBox控件和一个AutoCompleteExtender控件。</p>\n<p>在属性窗口设置AutoCompleteExtender控件的属性，如下</p>\n<figure class=\"highlight protobuf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;ajaxToolkit:AutoCompleteExtender</div><div class=\"line\">            ID=<span class=\"string\">\"AutoCompleteExtender1\"</span></div><div class=\"line\">            runat=<span class=\"string\">\"server\"</span></div><div class=\"line\">            ServiceMethod=<span class=\"string\">\"GetCompleteList\"</span></div><div class=\"line\">            ServicePath=<span class=\"string\">\"oec2003_AutoComplete.asmx\"</span></div><div class=\"line\">            Enabled=<span class=\"string\">\"true\"</span></div><div class=\"line\">            MinimumPrefixLength=<span class=\"string\">\"2\"</span></div><div class=\"line\">               CompletionSetCount=<span class=\"string\">\"10\"</span></div><div class=\"line\">            TargetControlID=<span class=\"string\">\"TextBox1\"</span>&gt;</div><div class=\"line\">&lt;/ajaxToolkit:AutoCompleteExtender&gt;</div></pre></td></tr></table></figure>\n<p>在Web服务中的count参数的值是取CompletionSetCount属性的值。</p>\n<p>保存设计的页面，将默认页面设置为起始页，按F5运行后在文本框中输入oe,就能看到想要的结果。</p>\n<p><a href=\"http://files.cnblogs.com/oec2003/AutoComplete_rar.zip\" target=\"_blank\" rel=\"external\">代码下载</a></p>\n","excerpt":"<p>以前见到google和迅雷等网站在搜索文本框中输入文字后能自动提示,感觉这种功能很炫也很实用.现在在学习asp.net ajax 发现AjaxControlToolKit工具包中的AutoComplete控件就能实现这种功能,而且非常简单.<br>","more":"</p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>AutoComplete控件就是在用户在文本框输入前几个字母或是汉字的时候,该控件就能从存放数据的文或是数据库里将所有以这些字母开头的数据提示给用户,供用户选择,提供方便.</p>\n<h2 id=\"重要属性\"><a href=\"#重要属性\" class=\"headerlink\" title=\"重要属性\"></a>重要属性</h2><ul>\n<li>TargetControlID:指定要实现提示功能的控件。</li>\n<li>ServicePath:WebService的路径，提取数据的方法是写在一个WebService中的。</li>\n<li>ServeiceMethod:写在WebService中的用于提取数据的方法的名字。</li>\n<li>MinimumPrefixLength:用来设置用户输入多少字母才出现提示效果。</li>\n<li>CompletionSetCount:设置提示数据的行数。</li>\n<li>CompletionInterval:从服务器获取书的时间间隔，单位是毫秒。</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>打开vs2005创建一个AjaxControlToolKit网站。<br>在网站的App_Data文件夹下添加文本文件TextFile.txt,并在其中添加数据，如下</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_191105.gif\" alt=\"2010-12-30_191105\"></p>\n<p>在网站的根目录下添加一个Web服务，命名为oec2003_AutoComplete，系统自动将Web服务两个部分，设计部分oec2003_AutoComplete.asmx和代码部分oec2003_AutoComplete.cs，其中oec2003_AutoComplete.cs文件自动放入到App_Code目录下。打开oec2003_AutoComplete.cs文件，添加获取数据的方法GetCompleteList,代码如下：</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Services;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Services.Protocols;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\"><span class=\"comment\">/// AutoComplete 的摘要说明</span></div><div class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">[WebService(Namespace = <span class=\"string\">\"http://tempuri.org/\"</span>)]</div><div class=\"line\">[WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)]</div><div class=\"line\">[System.Web.Script.Services.ScriptService]</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> AutoComplete : System.Web.Services.WebService</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> AutoComplete()</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">//如果使用设计的组件，请取消注释以下行</span></div><div class=\"line\">        <span class=\"comment\">//InitializeComponent();</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    [WebMethod]</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> HelloWorld()</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">return</span> <span class=\"string\">\"Hello World\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 获取数据的方法GetCompleteList</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">//定义静态数组用于保存获取的数据</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">string</span>[] autoCompleteWordList = null;</div><div class=\"line\">    [WebMethod]</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span>[] GetCompleteList(<span class=\"keyword\">string</span> prefixText, <span class=\"keyword\">int</span> count)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">if</span> (autoCompleteWordList == null)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">string</span>[] temp = <span class=\"built_in\">File</span>.ReadAllLines(<span class=\"built_in\">Server</span>.MapPath(<span class=\"string\">\"~/App_Data/TextFile.txt\"</span>));</div><div class=\"line\">            Array.Sort(temp, <span class=\"keyword\">new</span> CaseInsensitiveComparer());</div><div class=\"line\">            autoCompleteWordList = temp;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">int</span> index = Array.BinarySearch(autoCompleteWordList, prefixText, <span class=\"keyword\">new</span> CaseInsensitiveComparer());</div><div class=\"line\">        <span class=\"built_in\">if</span> (index &lt; <span class=\"number\">0</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            index = ~index;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">int</span> matchingCount;</div><div class=\"line\">        <span class=\"built_in\">for</span> (matchingCount = <span class=\"number\">0</span>; matchingCount &lt; count &amp;&amp;</div><div class=\"line\">                        index + matchingCount &lt; autoCompleteWordList.Length; matchingCount++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">if</span> (!autoCompleteWordList[index + matchingCount].StartsWith(prefixText,</div><div class=\"line\">                                               StringComparison.CurrentCultureIgnoreCase))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"built_in\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">String</span>[] returnValue = <span class=\"keyword\">new</span> <span class=\"keyword\">string</span>[matchingCount];</div><div class=\"line\">        <span class=\"built_in\">if</span> (matchingCount &gt; <span class=\"number\">0</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            Array.Copy(autoCompleteWordList, index, returnValue, <span class=\"number\">0</span>, matchingCount);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"built_in\">return</span> returnValue;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>由于在上面的代码中使用了File类，所以应该添加如下代码：</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.IO;</div></pre></td></tr></table></figure>\n<p>因为需要在客户端调用Web服务，还需要添加如下代码</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[System<span class=\"selector-class\">.Web</span><span class=\"selector-class\">.Script</span><span class=\"selector-class\">.Services</span><span class=\"selector-class\">.ScriptService</span>]</div></pre></td></tr></table></figure>\n<p>保存Web 服务的代码</p>\n<p>打开根目录下默认生成的Default.aspx</p>\n<p>在页面中拖拽一个TextBox控件和一个AutoCompleteExtender控件。</p>\n<p>在属性窗口设置AutoCompleteExtender控件的属性，如下</p>\n<figure class=\"highlight protobuf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;ajaxToolkit:AutoCompleteExtender</div><div class=\"line\">            ID=<span class=\"string\">\"AutoCompleteExtender1\"</span></div><div class=\"line\">            runat=<span class=\"string\">\"server\"</span></div><div class=\"line\">            ServiceMethod=<span class=\"string\">\"GetCompleteList\"</span></div><div class=\"line\">            ServicePath=<span class=\"string\">\"oec2003_AutoComplete.asmx\"</span></div><div class=\"line\">            Enabled=<span class=\"string\">\"true\"</span></div><div class=\"line\">            MinimumPrefixLength=<span class=\"string\">\"2\"</span></div><div class=\"line\">               CompletionSetCount=<span class=\"string\">\"10\"</span></div><div class=\"line\">            TargetControlID=<span class=\"string\">\"TextBox1\"</span>&gt;</div><div class=\"line\">&lt;/ajaxToolkit:AutoCompleteExtender&gt;</div></pre></td></tr></table></figure>\n<p>在Web服务中的count参数的值是取CompletionSetCount属性的值。</p>\n<p>保存设计的页面，将默认页面设置为起始页，按F5运行后在文本框中输入oe,就能看到想要的结果。</p>\n<p><a href=\"http://files.cnblogs.com/oec2003/AutoComplete_rar.zip\">代码下载</a></p>"},{"title":"Asp.Net Ajax-HoverMenu控件使用","date":"2007-09-05T16:00:00.000Z","_content":"\n## 简介\n\n通过名字我们可以看出这是一个菜单控件，当鼠标移动到指定的位置时，在不影响其他的元素的情况下出现一个菜单，并允许用户进行一些操作。\n<!--more-->\n## 重要属性\n\n*   TargetControlID:要显示菜单的目标控件的I\n*   PopupControlID:作为弹出菜单的控件的I\n*   HoverCssClass:鼠标移动到目标控件时目标控件的样\n*   PopupPosition:弹出菜单所在的位置，共有五个值(bottom,top,left,right,center\n*   OffsetX:菜单距离目标控件的位置--横坐\n*   OffsetY:菜单距离目标控件的位置--纵坐\n*   PopDelay:弹出菜单的延迟时间\n\n## 示例1\n\n1 打开vs2005，创建一个AjaxControlToolKit网站，命名为oec2003_HoverMenu\n2 打开默认Default.aspx页，切换到设计视图\n3 在页面中添加一个TextBox和一个Panel控件，并在Panel控件中添加三个LinkButton控件，如下\n\n```\n<asp:panel id=\"Panel1\" runat=\"server\" height=\"50px\" width=\"125px\"> \n<asp:LinkButton ID=\"LinkButton1\" runat=\"server\" OnClick=\"LinkButton1_Click\">日期</asp:LinkButton> \n<asp:LinkButton ID=\"LinkButton3\" runat=\"server\" OnClick=\"LinkButton3_Click\">时间</asp:LinkButton>\n<asp:LinkButton ID=\"LinkButton2\" runat=\"server\" OnClick=\"LinkButton2_Click\">姓名</asp:LinkButton> \n</asp:panel>\n```\n\n4 在页面中添加HoverMenu控件，并设置其属性，代码如下\n\n```\n<ajaxToolkit:HoverMenuExtender ID=\"HoverMenuExtender1\" runat=\"server\" TargetControlID=\"TextBox1\" \n            OffsetX=\"-1\" OffsetY=\"-1\" HoverCssClass=\"hover\" PopupControlID=\"Panel1\" PopupPosition=\"bottom\">\n</ajaxToolkit:HoverMenuExtender>\n```\n\n5 切换到代码视图，在head元素间添加css样式，用来实现鼠标移动到目标控件时的样式，如下\n\n```\n<style type=\"text/css\">\n    .hover\n    {\n       background-color:blue;\n       background-repeat:repeat-x;\n       background-position:left top;\n    }\n </style>\n```\n\n6 前面在Panel中放置了三个LinkButton控件，点击了LinkButton控件后会在文本框中出现相应的内容，LinkButton的单击事件代码如下\n\n```\nprotected void LinkButton1_Click(object sender, EventArgs e)\n{\n    TextBox1.Text = DateTime.Now.ToShortDateString();\n}\nprotected void LinkButton3_Click(object sender, EventArgs e)\n{\n    TextBox1.Text = DateTime.Now.TimeOfDay.ToString();\n}\nprotected void LinkButton2_Click(object sender, EventArgs e)\n{\n    TextBox1.Text = \"oec2003\";\n}\n\n```\n\n7 保存设计，运行程序，将鼠标移动文本框上时，会发现，文本框的样式变成了我们自定义的样式了，而且还会弹出一个菜单，就是Panel控件\n\n点击菜单中的按钮在文本框中就会出现相应的内容\n\n## 示例2\n\n上面做了一个HoverMenu控件的简单应用，其实HoverMenu控件也可以用于GridView 控件中来替换编辑功能，让编辑列可以出现在我们自定义的菜单中，下面就来看看是怎么实现的吧\n\n1 在网站中新建一个web 页，命名为oec2003_GridViewHoverMenu.aspx\n2 切换到设计视图，在页面中添加ScriptManager和UpdatePanel控件\n3 在UpdatePanel控件中添加GridView和SqlDataSource控件，并配置数据源，如下\n\n```\n<asp:sqldatasource id=\"SqlDataSource1\" runat=\"server\" conflictdetection=\"CompareAllValues\"\n    connectionstring=\"<%$ ConnectionStrings:studentConnectionString %>\" \n    deletecommand=\"DELETE FROM [studentInfo] WHERE [stuID] = @original_stuID AND \n      [stuName] = @original_stuName\"\n    insertcommand=\"INSERT INTO [studentInfo] ([stuID], [stuName]) VALUES (@stuID, @stuName)\"\n    oldvaluesparameterformatstring=\"original_{0}\" selectcommand=\"SELECT * FROM [studentInfo]\"\n    updatecommand=\"UPDATE [studentInfo] SET [stuName] = \n       @stuName WHERE [stuID] = @original_stuID AND [stuName] = @original_stuName\">\n<DeleteParameters>\n    <asp:Parameter Name=\"original_stuID\" Type=\"String\" />\n    <asp:Parameter Name=\"original_stuName\" Type=\"String\" />\n</DeleteParameters>\n<UpdateParameters>\n    <asp:Parameter Name=\"stuName\" Type=\"String\" />\n    <asp:Parameter Name=\"original_stuID\" Type=\"String\" />\n    <asp:Parameter Name=\"original_stuName\" Type=\"String\" />\n</UpdateParameters>\n<InsertParameters>\n    <asp:Parameter Name=\"stuID\" Type=\"String\" />\n    <asp:Parameter Name=\"stuName\" Type=\"String\" />\n</InsertParameters>\n</asp:sqldatasource>\n```\n\n4 打开GridView控件的编辑列窗口，将stuName 字段设置成模板列\n\n5 我们要在GridView控件中实现两个菜单，一个是在普通模式下的“编辑”和“删除”，一个是在编辑状态下的“更新”和“取消”\n\n6 编辑模板列，会发现在窗口中有ItemTemplate和EditItemTemplate两项，分别在这两项下添加HoverMenu和Panl控件，每个Panel控件中放置两个LinkButton控件，属性设置如下\n\n```\n<edititemtemplate>\n    &nbsp;<asp:TextBox ID=\"TextBox1\" runat=\"server\" \nText='<%# Bind(\"stuName\") %>'></asp:TextBox>\n    <ajaxToolkit:HoverMenuExtender ID=\"HoverMenuExtender2\" runat=\"server\" \nTargetControlID=\"TextBox1\" \nPopupControlID=\"Panel2\" OffsetX=\"10\" OffsetY=\"-1\" PopupPosition=\"right\">\n    </ajaxToolkit:HoverMenuExtender>\n    <asp:Panel ID=\"Panel2\" runat=\"server\" Height=\"50px\" Width=\"125px\">\n    <asp:LinkButton ID=\"LinkButton3\" runat=\"server\" CommandArgument=\"Update\" \nCommandName=\"Update\">更新</asp:LinkButton>\n    <asp:LinkButton ID=\"LinkButton4\" runat=\"server\" CommandArgument=\"Cacel\" \nCommandName=\"Cancel\">取消</asp:LinkButton></asp:Panel>\n</edititemtemplate>\n<itemtemplate>\n    <asp:Label ID=\"Label1\" runat=\"server\" Text='<%# Bind(\"stuName\") %>'></asp:Label>\n    <ajaxToolkit:HoverMenuExtender ID=\"HoverMenuExtender1\" runat=\"server\" \nTargetControlID=\"Label1\" PopupControlID=\"Panel1\" OffsetX=\"10\" OffsetY=\"-1\" \nPopupPosition=\"right\">\n    </ajaxToolkit:HoverMenuExtender>\n    <asp:Panel ID=\"Panel1\" runat=\"server\" Height=\"50px\" Width=\"125px\">\n    <asp:LinkButton ID=\"LinkButton1\" runat=\"server\" CommandArgument=\"Edit\" \nCommandName=\"Edit\">编辑</asp:LinkButton>\n    <asp:LinkButton ID=\"LinkButton2\" runat=\"server\" CommandArgument=\"Delete\" \nCommandName=\"Delete\">删除</asp:LinkButton></asp:Panel>\n</itemtemplate>\n```\n\n在这儿要注意，因为LinkButton要实现对GridView的数据行的编辑功能，所以LinkButton的CommandArgument和CommandName属性要设置成对应的GridView 的方法的名字，如编辑功能对应的CommandName应该设置成Edit.\n\n7 保存设计，运行程序，当鼠标移动到stuName列的数据行上时，就会出现自定义的菜单，可以实现编辑功能。功能和在GridView中启用编辑的功能一样\n\n\n","source":"_posts/asp-net-ajax-hovermenu.md","raw":"title:   Asp.Net Ajax-HoverMenu控件使用\ndate:  2007-09-06\ncategories: [Asp.Net Ajax]\ntags:  [Ajax,AspNet]\n---\n\n## 简介\n\n通过名字我们可以看出这是一个菜单控件，当鼠标移动到指定的位置时，在不影响其他的元素的情况下出现一个菜单，并允许用户进行一些操作。\n<!--more-->\n## 重要属性\n\n*   TargetControlID:要显示菜单的目标控件的I\n*   PopupControlID:作为弹出菜单的控件的I\n*   HoverCssClass:鼠标移动到目标控件时目标控件的样\n*   PopupPosition:弹出菜单所在的位置，共有五个值(bottom,top,left,right,center\n*   OffsetX:菜单距离目标控件的位置--横坐\n*   OffsetY:菜单距离目标控件的位置--纵坐\n*   PopDelay:弹出菜单的延迟时间\n\n## 示例1\n\n1 打开vs2005，创建一个AjaxControlToolKit网站，命名为oec2003_HoverMenu\n2 打开默认Default.aspx页，切换到设计视图\n3 在页面中添加一个TextBox和一个Panel控件，并在Panel控件中添加三个LinkButton控件，如下\n\n```\n<asp:panel id=\"Panel1\" runat=\"server\" height=\"50px\" width=\"125px\"> \n<asp:LinkButton ID=\"LinkButton1\" runat=\"server\" OnClick=\"LinkButton1_Click\">日期</asp:LinkButton> \n<asp:LinkButton ID=\"LinkButton3\" runat=\"server\" OnClick=\"LinkButton3_Click\">时间</asp:LinkButton>\n<asp:LinkButton ID=\"LinkButton2\" runat=\"server\" OnClick=\"LinkButton2_Click\">姓名</asp:LinkButton> \n</asp:panel>\n```\n\n4 在页面中添加HoverMenu控件，并设置其属性，代码如下\n\n```\n<ajaxToolkit:HoverMenuExtender ID=\"HoverMenuExtender1\" runat=\"server\" TargetControlID=\"TextBox1\" \n            OffsetX=\"-1\" OffsetY=\"-1\" HoverCssClass=\"hover\" PopupControlID=\"Panel1\" PopupPosition=\"bottom\">\n</ajaxToolkit:HoverMenuExtender>\n```\n\n5 切换到代码视图，在head元素间添加css样式，用来实现鼠标移动到目标控件时的样式，如下\n\n```\n<style type=\"text/css\">\n    .hover\n    {\n       background-color:blue;\n       background-repeat:repeat-x;\n       background-position:left top;\n    }\n </style>\n```\n\n6 前面在Panel中放置了三个LinkButton控件，点击了LinkButton控件后会在文本框中出现相应的内容，LinkButton的单击事件代码如下\n\n```\nprotected void LinkButton1_Click(object sender, EventArgs e)\n{\n    TextBox1.Text = DateTime.Now.ToShortDateString();\n}\nprotected void LinkButton3_Click(object sender, EventArgs e)\n{\n    TextBox1.Text = DateTime.Now.TimeOfDay.ToString();\n}\nprotected void LinkButton2_Click(object sender, EventArgs e)\n{\n    TextBox1.Text = \"oec2003\";\n}\n\n```\n\n7 保存设计，运行程序，将鼠标移动文本框上时，会发现，文本框的样式变成了我们自定义的样式了，而且还会弹出一个菜单，就是Panel控件\n\n点击菜单中的按钮在文本框中就会出现相应的内容\n\n## 示例2\n\n上面做了一个HoverMenu控件的简单应用，其实HoverMenu控件也可以用于GridView 控件中来替换编辑功能，让编辑列可以出现在我们自定义的菜单中，下面就来看看是怎么实现的吧\n\n1 在网站中新建一个web 页，命名为oec2003_GridViewHoverMenu.aspx\n2 切换到设计视图，在页面中添加ScriptManager和UpdatePanel控件\n3 在UpdatePanel控件中添加GridView和SqlDataSource控件，并配置数据源，如下\n\n```\n<asp:sqldatasource id=\"SqlDataSource1\" runat=\"server\" conflictdetection=\"CompareAllValues\"\n    connectionstring=\"<%$ ConnectionStrings:studentConnectionString %>\" \n    deletecommand=\"DELETE FROM [studentInfo] WHERE [stuID] = @original_stuID AND \n      [stuName] = @original_stuName\"\n    insertcommand=\"INSERT INTO [studentInfo] ([stuID], [stuName]) VALUES (@stuID, @stuName)\"\n    oldvaluesparameterformatstring=\"original_{0}\" selectcommand=\"SELECT * FROM [studentInfo]\"\n    updatecommand=\"UPDATE [studentInfo] SET [stuName] = \n       @stuName WHERE [stuID] = @original_stuID AND [stuName] = @original_stuName\">\n<DeleteParameters>\n    <asp:Parameter Name=\"original_stuID\" Type=\"String\" />\n    <asp:Parameter Name=\"original_stuName\" Type=\"String\" />\n</DeleteParameters>\n<UpdateParameters>\n    <asp:Parameter Name=\"stuName\" Type=\"String\" />\n    <asp:Parameter Name=\"original_stuID\" Type=\"String\" />\n    <asp:Parameter Name=\"original_stuName\" Type=\"String\" />\n</UpdateParameters>\n<InsertParameters>\n    <asp:Parameter Name=\"stuID\" Type=\"String\" />\n    <asp:Parameter Name=\"stuName\" Type=\"String\" />\n</InsertParameters>\n</asp:sqldatasource>\n```\n\n4 打开GridView控件的编辑列窗口，将stuName 字段设置成模板列\n\n5 我们要在GridView控件中实现两个菜单，一个是在普通模式下的“编辑”和“删除”，一个是在编辑状态下的“更新”和“取消”\n\n6 编辑模板列，会发现在窗口中有ItemTemplate和EditItemTemplate两项，分别在这两项下添加HoverMenu和Panl控件，每个Panel控件中放置两个LinkButton控件，属性设置如下\n\n```\n<edititemtemplate>\n    &nbsp;<asp:TextBox ID=\"TextBox1\" runat=\"server\" \nText='<%# Bind(\"stuName\") %>'></asp:TextBox>\n    <ajaxToolkit:HoverMenuExtender ID=\"HoverMenuExtender2\" runat=\"server\" \nTargetControlID=\"TextBox1\" \nPopupControlID=\"Panel2\" OffsetX=\"10\" OffsetY=\"-1\" PopupPosition=\"right\">\n    </ajaxToolkit:HoverMenuExtender>\n    <asp:Panel ID=\"Panel2\" runat=\"server\" Height=\"50px\" Width=\"125px\">\n    <asp:LinkButton ID=\"LinkButton3\" runat=\"server\" CommandArgument=\"Update\" \nCommandName=\"Update\">更新</asp:LinkButton>\n    <asp:LinkButton ID=\"LinkButton4\" runat=\"server\" CommandArgument=\"Cacel\" \nCommandName=\"Cancel\">取消</asp:LinkButton></asp:Panel>\n</edititemtemplate>\n<itemtemplate>\n    <asp:Label ID=\"Label1\" runat=\"server\" Text='<%# Bind(\"stuName\") %>'></asp:Label>\n    <ajaxToolkit:HoverMenuExtender ID=\"HoverMenuExtender1\" runat=\"server\" \nTargetControlID=\"Label1\" PopupControlID=\"Panel1\" OffsetX=\"10\" OffsetY=\"-1\" \nPopupPosition=\"right\">\n    </ajaxToolkit:HoverMenuExtender>\n    <asp:Panel ID=\"Panel1\" runat=\"server\" Height=\"50px\" Width=\"125px\">\n    <asp:LinkButton ID=\"LinkButton1\" runat=\"server\" CommandArgument=\"Edit\" \nCommandName=\"Edit\">编辑</asp:LinkButton>\n    <asp:LinkButton ID=\"LinkButton2\" runat=\"server\" CommandArgument=\"Delete\" \nCommandName=\"Delete\">删除</asp:LinkButton></asp:Panel>\n</itemtemplate>\n```\n\n在这儿要注意，因为LinkButton要实现对GridView的数据行的编辑功能，所以LinkButton的CommandArgument和CommandName属性要设置成对应的GridView 的方法的名字，如编辑功能对应的CommandName应该设置成Edit.\n\n7 保存设计，运行程序，当鼠标移动到stuName列的数据行上时，就会出现自定义的菜单，可以实现编辑功能。功能和在GridView中启用编辑的功能一样\n\n\n","slug":"asp-net-ajax-hovermenu","published":1,"updated":"2016-08-13T13:21:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz90g002axfynjreaxwba","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>通过名字我们可以看出这是一个菜单控件，当鼠标移动到指定的位置时，在不影响其他的元素的情况下出现一个菜单，并允许用户进行一些操作。<br><a id=\"more\"></a></p>\n<h2 id=\"重要属性\"><a href=\"#重要属性\" class=\"headerlink\" title=\"重要属性\"></a>重要属性</h2><ul>\n<li>TargetControlID:要显示菜单的目标控件的I</li>\n<li>PopupControlID:作为弹出菜单的控件的I</li>\n<li>HoverCssClass:鼠标移动到目标控件时目标控件的样</li>\n<li>PopupPosition:弹出菜单所在的位置，共有五个值(bottom,top,left,right,center</li>\n<li>OffsetX:菜单距离目标控件的位置–横坐</li>\n<li>OffsetY:菜单距离目标控件的位置–纵坐</li>\n<li>PopDelay:弹出菜单的延迟时间</li>\n</ul>\n<h2 id=\"示例1\"><a href=\"#示例1\" class=\"headerlink\" title=\"示例1\"></a>示例1</h2><p>1 打开vs2005，创建一个AjaxControlToolKit网站，命名为oec2003_HoverMenu<br>2 打开默认Default.aspx页，切换到设计视图<br>3 在页面中添加一个TextBox和一个Panel控件，并在Panel控件中添加三个LinkButton控件，如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:panel</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Panel1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"50px\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"125px\"</span>&gt;</span> </div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:LinkButton</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"LinkButton1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">OnClick</span>=<span class=\"string\">\"LinkButton1_Click\"</span>&gt;</span>日期<span class=\"tag\">&lt;/<span class=\"name\">asp:LinkButton</span>&gt;</span> </div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:LinkButton</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"LinkButton3\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">OnClick</span>=<span class=\"string\">\"LinkButton3_Click\"</span>&gt;</span>时间<span class=\"tag\">&lt;/<span class=\"name\">asp:LinkButton</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:LinkButton</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"LinkButton2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">OnClick</span>=<span class=\"string\">\"LinkButton2_Click\"</span>&gt;</span>姓名<span class=\"tag\">&lt;/<span class=\"name\">asp:LinkButton</span>&gt;</span> </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">asp:panel</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>4 在页面中添加HoverMenu控件，并设置其属性，代码如下</p>\n<figure class=\"highlight tp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;ajaxToolkit:HoverMenuExtender ID=<span class=\"string\">\"HoverMenuExtender1\"</span> runat=<span class=\"string\">\"server\"</span> TargetControlID=<span class=\"string\">\"TextBox1\"</span> </div><div class=\"line\">            <span class=\"keyword\">Offset</span><span class=\"keyword\">X</span>=<span class=\"string\">\"-1\"</span> <span class=\"keyword\">Offset</span><span class=\"keyword\">Y</span>=<span class=\"string\">\"-1\"</span> HoverCssClass=<span class=\"string\">\"hover\"</span> PopupControlID=<span class=\"string\">\"Panel1\"</span> PopupPosition=<span class=\"string\">\"bottom\"</span>&gt;</div><div class=\"line\">&lt;/ajaxToolkit:HoverMenuExtender&gt;</div></pre></td></tr></table></figure>\n<p>5 切换到代码视图，在head元素间添加css样式，用来实现鼠标移动到目标控件时的样式，如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"css\"></span></div><div class=\"line\">    <span class=\"selector-class\">.hover</span></div><div class=\"line\">    &#123;</div><div class=\"line\">       <span class=\"attribute\">background-color</span>:blue;</div><div class=\"line\">       <span class=\"attribute\">background-repeat</span>:repeat-x;</div><div class=\"line\">       <span class=\"attribute\">background-position</span>:left top;</div><div class=\"line\">    &#125;</div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>6 前面在Panel中放置了三个LinkButton控件，点击了LinkButton控件后会在文本框中出现相应的内容，LinkButton的单击事件代码如下</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">LinkButton1_Click</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    TextBox1.Text = DateTime.Now.ToShortDateString();</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">LinkButton3_Click</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    TextBox1.Text = DateTime.Now.TimeOfDay.ToString();</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">LinkButton2_Click</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    TextBox1.Text = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>7 保存设计，运行程序，将鼠标移动文本框上时，会发现，文本框的样式变成了我们自定义的样式了，而且还会弹出一个菜单，就是Panel控件</p>\n<p>点击菜单中的按钮在文本框中就会出现相应的内容</p>\n<h2 id=\"示例2\"><a href=\"#示例2\" class=\"headerlink\" title=\"示例2\"></a>示例2</h2><p>上面做了一个HoverMenu控件的简单应用，其实HoverMenu控件也可以用于GridView 控件中来替换编辑功能，让编辑列可以出现在我们自定义的菜单中，下面就来看看是怎么实现的吧</p>\n<p>1 在网站中新建一个web 页，命名为oec2003_GridViewHoverMenu.aspx<br>2 切换到设计视图，在页面中添加ScriptManager和UpdatePanel控件<br>3 在UpdatePanel控件中添加GridView和SqlDataSource控件，并配置数据源，如下</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">asp:sqldatasource</span> <span class=\"attr\">id</span>=<span class=\"string\">\"SqlDataSource1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">conflictdetection</span>=<span class=\"string\">\"CompareAllValues\"</span></span></span></div><div class=\"line\">    <span class=\"attr\">connectionstring</span>=<span class=\"string\">\"&lt;%</span><span class=\"ruby\">$ <span class=\"symbol\">ConnectionStrings:</span>studentConnectionString </span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">%&gt;\"</span> </span></span></div><div class=\"line\">    <span class=\"attr\">deletecommand</span>=<span class=\"string\">\"DELETE FROM [studentInfo] WHERE [stuID] = @original_stuID AND </span></div><div class=\"line\">      [stuName] = @original_stuName\"</div><div class=\"line\">    <span class=\"attr\">insertcommand</span>=<span class=\"string\">\"INSERT INTO [studentInfo] ([stuID], [stuName]) VALUES (@stuID, @stuName)\"</span></div><div class=\"line\">    <span class=\"attr\">oldvaluesparameterformatstring</span>=<span class=\"string\">\"original_&#123;0&#125;\"</span> <span class=\"attr\">selectcommand</span>=<span class=\"string\">\"SELECT * FROM [studentInfo]\"</span></div><div class=\"line\">    <span class=\"attr\">updatecommand</span>=<span class=\"string\">\"UPDATE [studentInfo] SET [stuName] = </span></div><div class=\"line\">       @stuName WHERE [stuID] = @original_stuID AND [stuName] = @original_stuName\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">DeleteParameters</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Parameter</span> <span class=\"attr\">Name</span>=<span class=\"string\">\"original_stuID\"</span> <span class=\"attr\">Type</span>=<span class=\"string\">\"String\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Parameter</span> <span class=\"attr\">Name</span>=<span class=\"string\">\"original_stuName\"</span> <span class=\"attr\">Type</span>=<span class=\"string\">\"String\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">DeleteParameters</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">UpdateParameters</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Parameter</span> <span class=\"attr\">Name</span>=<span class=\"string\">\"stuName\"</span> <span class=\"attr\">Type</span>=<span class=\"string\">\"String\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Parameter</span> <span class=\"attr\">Name</span>=<span class=\"string\">\"original_stuID\"</span> <span class=\"attr\">Type</span>=<span class=\"string\">\"String\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Parameter</span> <span class=\"attr\">Name</span>=<span class=\"string\">\"original_stuName\"</span> <span class=\"attr\">Type</span>=<span class=\"string\">\"String\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">UpdateParameters</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">InsertParameters</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Parameter</span> <span class=\"attr\">Name</span>=<span class=\"string\">\"stuID\"</span> <span class=\"attr\">Type</span>=<span class=\"string\">\"String\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Parameter</span> <span class=\"attr\">Name</span>=<span class=\"string\">\"stuName\"</span> <span class=\"attr\">Type</span>=<span class=\"string\">\"String\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">InsertParameters</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">asp:sqldatasource</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>4 打开GridView控件的编辑列窗口，将stuName 字段设置成模板列</p>\n<p>5 我们要在GridView控件中实现两个菜单，一个是在普通模式下的“编辑”和“删除”，一个是在编辑状态下的“更新”和“取消”</p>\n<p>6 编辑模板列，会发现在窗口中有ItemTemplate和EditItemTemplate两项，分别在这两项下添加HoverMenu和Panl控件，每个Panel控件中放置两个LinkButton控件，属性设置如下</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">edititemtemplate</span>&gt;</span></span></div><div class=\"line\">    &amp;nbsp;<span class=\"tag\">&lt;<span class=\"name\">asp:TextBox</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"TextBox1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> </span></div><div class=\"line\"><span class=\"attr\">Text</span>=<span class=\"string\">'&lt;%</span><span class=\"perl\"><span class=\"comment\"># Bind(\"stuName\") </span></span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">%&gt;'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:TextBox</span>&gt;</span></span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ajaxToolkit:HoverMenuExtender</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"HoverMenuExtender2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> </span></div><div class=\"line\"><span class=\"attr\">TargetControlID</span>=<span class=\"string\">\"TextBox1\"</span> </div><div class=\"line\"><span class=\"attr\">PopupControlID</span>=<span class=\"string\">\"Panel2\"</span> <span class=\"attr\">OffsetX</span>=<span class=\"string\">\"10\"</span> <span class=\"attr\">OffsetY</span>=<span class=\"string\">\"-1\"</span> <span class=\"attr\">PopupPosition</span>=<span class=\"string\">\"right\"</span>&gt;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ajaxToolkit:HoverMenuExtender</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Panel</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Panel2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"50px\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"125px\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:LinkButton</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"LinkButton3\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">CommandArgument</span>=<span class=\"string\">\"Update\"</span> </span></div><div class=\"line\"><span class=\"attr\">CommandName</span>=<span class=\"string\">\"Update\"</span>&gt;更新<span class=\"tag\">&lt;/<span class=\"name\">asp:LinkButton</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:LinkButton</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"LinkButton4\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">CommandArgument</span>=<span class=\"string\">\"Cacel\"</span> </span></div><div class=\"line\"><span class=\"attr\">CommandName</span>=<span class=\"string\">\"Cancel\"</span>&gt;取消<span class=\"tag\">&lt;/<span class=\"name\">asp:LinkButton</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:Panel</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">edititemtemplate</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">itemtemplate</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Label</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Label1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Text</span>=<span class=\"string\">'&lt;%</span></span><span class=\"perl\"><span class=\"comment\"># Bind(\"stuName\") </span></span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">%&gt;'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:Label</span>&gt;</span></span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ajaxToolkit:HoverMenuExtender</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"HoverMenuExtender1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> </span></div><div class=\"line\"><span class=\"attr\">TargetControlID</span>=<span class=\"string\">\"Label1\"</span> <span class=\"attr\">PopupControlID</span>=<span class=\"string\">\"Panel1\"</span> <span class=\"attr\">OffsetX</span>=<span class=\"string\">\"10\"</span> <span class=\"attr\">OffsetY</span>=<span class=\"string\">\"-1\"</span> </div><div class=\"line\"><span class=\"attr\">PopupPosition</span>=<span class=\"string\">\"right\"</span>&gt;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ajaxToolkit:HoverMenuExtender</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Panel</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Panel1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"50px\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"125px\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:LinkButton</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"LinkButton1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">CommandArgument</span>=<span class=\"string\">\"Edit\"</span> </span></div><div class=\"line\"><span class=\"attr\">CommandName</span>=<span class=\"string\">\"Edit\"</span>&gt;编辑<span class=\"tag\">&lt;/<span class=\"name\">asp:LinkButton</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:LinkButton</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"LinkButton2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">CommandArgument</span>=<span class=\"string\">\"Delete\"</span> </span></div><div class=\"line\"><span class=\"attr\">CommandName</span>=<span class=\"string\">\"Delete\"</span>&gt;删除<span class=\"tag\">&lt;/<span class=\"name\">asp:LinkButton</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:Panel</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">itemtemplate</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>在这儿要注意，因为LinkButton要实现对GridView的数据行的编辑功能，所以LinkButton的CommandArgument和CommandName属性要设置成对应的GridView 的方法的名字，如编辑功能对应的CommandName应该设置成Edit.</p>\n<p>7 保存设计，运行程序，当鼠标移动到stuName列的数据行上时，就会出现自定义的菜单，可以实现编辑功能。功能和在GridView中启用编辑的功能一样</p>\n","excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>通过名字我们可以看出这是一个菜单控件，当鼠标移动到指定的位置时，在不影响其他的元素的情况下出现一个菜单，并允许用户进行一些操作。<br>","more":"</p>\n<h2 id=\"重要属性\"><a href=\"#重要属性\" class=\"headerlink\" title=\"重要属性\"></a>重要属性</h2><ul>\n<li>TargetControlID:要显示菜单的目标控件的I</li>\n<li>PopupControlID:作为弹出菜单的控件的I</li>\n<li>HoverCssClass:鼠标移动到目标控件时目标控件的样</li>\n<li>PopupPosition:弹出菜单所在的位置，共有五个值(bottom,top,left,right,center</li>\n<li>OffsetX:菜单距离目标控件的位置–横坐</li>\n<li>OffsetY:菜单距离目标控件的位置–纵坐</li>\n<li>PopDelay:弹出菜单的延迟时间</li>\n</ul>\n<h2 id=\"示例1\"><a href=\"#示例1\" class=\"headerlink\" title=\"示例1\"></a>示例1</h2><p>1 打开vs2005，创建一个AjaxControlToolKit网站，命名为oec2003_HoverMenu<br>2 打开默认Default.aspx页，切换到设计视图<br>3 在页面中添加一个TextBox和一个Panel控件，并在Panel控件中添加三个LinkButton控件，如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:panel</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Panel1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"50px\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"125px\"</span>&gt;</span> </div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:LinkButton</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"LinkButton1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">OnClick</span>=<span class=\"string\">\"LinkButton1_Click\"</span>&gt;</span>日期<span class=\"tag\">&lt;/<span class=\"name\">asp:LinkButton</span>&gt;</span> </div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:LinkButton</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"LinkButton3\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">OnClick</span>=<span class=\"string\">\"LinkButton3_Click\"</span>&gt;</span>时间<span class=\"tag\">&lt;/<span class=\"name\">asp:LinkButton</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:LinkButton</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"LinkButton2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">OnClick</span>=<span class=\"string\">\"LinkButton2_Click\"</span>&gt;</span>姓名<span class=\"tag\">&lt;/<span class=\"name\">asp:LinkButton</span>&gt;</span> </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">asp:panel</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>4 在页面中添加HoverMenu控件，并设置其属性，代码如下</p>\n<figure class=\"highlight tp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;ajaxToolkit:HoverMenuExtender ID=<span class=\"string\">\"HoverMenuExtender1\"</span> runat=<span class=\"string\">\"server\"</span> TargetControlID=<span class=\"string\">\"TextBox1\"</span> </div><div class=\"line\">            <span class=\"keyword\">Offset</span><span class=\"keyword\">X</span>=<span class=\"string\">\"-1\"</span> <span class=\"keyword\">Offset</span><span class=\"keyword\">Y</span>=<span class=\"string\">\"-1\"</span> HoverCssClass=<span class=\"string\">\"hover\"</span> PopupControlID=<span class=\"string\">\"Panel1\"</span> PopupPosition=<span class=\"string\">\"bottom\"</span>&gt;</div><div class=\"line\">&lt;/ajaxToolkit:HoverMenuExtender&gt;</div></pre></td></tr></table></figure>\n<p>5 切换到代码视图，在head元素间添加css样式，用来实现鼠标移动到目标控件时的样式，如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"css\"></div><div class=\"line\">    <span class=\"selector-class\">.hover</span></div><div class=\"line\">    &#123;</div><div class=\"line\">       <span class=\"attribute\">background-color</span>:blue;</div><div class=\"line\">       <span class=\"attribute\">background-repeat</span>:repeat-x;</div><div class=\"line\">       <span class=\"attribute\">background-position</span>:left top;</div><div class=\"line\">    &#125;</div><div class=\"line\"> </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>6 前面在Panel中放置了三个LinkButton控件，点击了LinkButton控件后会在文本框中出现相应的内容，LinkButton的单击事件代码如下</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">LinkButton1_Click</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    TextBox1.Text = DateTime.Now.ToShortDateString();</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">LinkButton3_Click</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    TextBox1.Text = DateTime.Now.TimeOfDay.ToString();</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">LinkButton2_Click</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    TextBox1.Text = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>7 保存设计，运行程序，将鼠标移动文本框上时，会发现，文本框的样式变成了我们自定义的样式了，而且还会弹出一个菜单，就是Panel控件</p>\n<p>点击菜单中的按钮在文本框中就会出现相应的内容</p>\n<h2 id=\"示例2\"><a href=\"#示例2\" class=\"headerlink\" title=\"示例2\"></a>示例2</h2><p>上面做了一个HoverMenu控件的简单应用，其实HoverMenu控件也可以用于GridView 控件中来替换编辑功能，让编辑列可以出现在我们自定义的菜单中，下面就来看看是怎么实现的吧</p>\n<p>1 在网站中新建一个web 页，命名为oec2003_GridViewHoverMenu.aspx<br>2 切换到设计视图，在页面中添加ScriptManager和UpdatePanel控件<br>3 在UpdatePanel控件中添加GridView和SqlDataSource控件，并配置数据源，如下</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">asp:sqldatasource</span> <span class=\"attr\">id</span>=<span class=\"string\">\"SqlDataSource1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">conflictdetection</span>=<span class=\"string\">\"CompareAllValues\"</span></div><div class=\"line\">    <span class=\"attr\">connectionstring</span>=<span class=\"string\">\"&lt;%</span></span></span><span class=\"ruby\">$ <span class=\"symbol\">ConnectionStrings:</span>studentConnectionString </span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">%&gt;\"</span> </div><div class=\"line\">    <span class=\"attr\">deletecommand</span>=<span class=\"string\">\"DELETE FROM [studentInfo] WHERE [stuID] = @original_stuID AND </div><div class=\"line\">      [stuName] = @original_stuName\"</span></div><div class=\"line\">    <span class=\"attr\">insertcommand</span>=<span class=\"string\">\"INSERT INTO [studentInfo] ([stuID], [stuName]) VALUES (@stuID, @stuName)\"</span></div><div class=\"line\">    <span class=\"attr\">oldvaluesparameterformatstring</span>=<span class=\"string\">\"original_&#123;0&#125;\"</span> <span class=\"attr\">selectcommand</span>=<span class=\"string\">\"SELECT * FROM [studentInfo]\"</span></div><div class=\"line\">    <span class=\"attr\">updatecommand</span>=<span class=\"string\">\"UPDATE [studentInfo] SET [stuName] = </div><div class=\"line\">       @stuName WHERE [stuID] = @original_stuID AND [stuName] = @original_stuName\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">DeleteParameters</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Parameter</span> <span class=\"attr\">Name</span>=<span class=\"string\">\"original_stuID\"</span> <span class=\"attr\">Type</span>=<span class=\"string\">\"String\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Parameter</span> <span class=\"attr\">Name</span>=<span class=\"string\">\"original_stuName\"</span> <span class=\"attr\">Type</span>=<span class=\"string\">\"String\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">DeleteParameters</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">UpdateParameters</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Parameter</span> <span class=\"attr\">Name</span>=<span class=\"string\">\"stuName\"</span> <span class=\"attr\">Type</span>=<span class=\"string\">\"String\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Parameter</span> <span class=\"attr\">Name</span>=<span class=\"string\">\"original_stuID\"</span> <span class=\"attr\">Type</span>=<span class=\"string\">\"String\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Parameter</span> <span class=\"attr\">Name</span>=<span class=\"string\">\"original_stuName\"</span> <span class=\"attr\">Type</span>=<span class=\"string\">\"String\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">UpdateParameters</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">InsertParameters</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Parameter</span> <span class=\"attr\">Name</span>=<span class=\"string\">\"stuID\"</span> <span class=\"attr\">Type</span>=<span class=\"string\">\"String\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Parameter</span> <span class=\"attr\">Name</span>=<span class=\"string\">\"stuName\"</span> <span class=\"attr\">Type</span>=<span class=\"string\">\"String\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">InsertParameters</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">asp:sqldatasource</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>4 打开GridView控件的编辑列窗口，将stuName 字段设置成模板列</p>\n<p>5 我们要在GridView控件中实现两个菜单，一个是在普通模式下的“编辑”和“删除”，一个是在编辑状态下的“更新”和“取消”</p>\n<p>6 编辑模板列，会发现在窗口中有ItemTemplate和EditItemTemplate两项，分别在这两项下添加HoverMenu和Panl控件，每个Panel控件中放置两个LinkButton控件，属性设置如下</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">edititemtemplate</span>&gt;</span></div><div class=\"line\">    &amp;nbsp;<span class=\"tag\">&lt;<span class=\"name\">asp:TextBox</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"TextBox1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> </div><div class=\"line\"><span class=\"attr\">Text</span>=<span class=\"string\">'&lt;%</span></span></span><span class=\"perl\"><span class=\"comment\"># Bind(\"stuName\") </span></span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">%&gt;'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:TextBox</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ajaxToolkit:HoverMenuExtender</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"HoverMenuExtender2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> </div><div class=\"line\"><span class=\"attr\">TargetControlID</span>=<span class=\"string\">\"TextBox1\"</span> </div><div class=\"line\"><span class=\"attr\">PopupControlID</span>=<span class=\"string\">\"Panel2\"</span> <span class=\"attr\">OffsetX</span>=<span class=\"string\">\"10\"</span> <span class=\"attr\">OffsetY</span>=<span class=\"string\">\"-1\"</span> <span class=\"attr\">PopupPosition</span>=<span class=\"string\">\"right\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ajaxToolkit:HoverMenuExtender</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Panel</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Panel2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"50px\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"125px\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:LinkButton</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"LinkButton3\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">CommandArgument</span>=<span class=\"string\">\"Update\"</span> </div><div class=\"line\"><span class=\"attr\">CommandName</span>=<span class=\"string\">\"Update\"</span>&gt;</span>更新<span class=\"tag\">&lt;/<span class=\"name\">asp:LinkButton</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:LinkButton</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"LinkButton4\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">CommandArgument</span>=<span class=\"string\">\"Cacel\"</span> </div><div class=\"line\"><span class=\"attr\">CommandName</span>=<span class=\"string\">\"Cancel\"</span>&gt;</span>取消<span class=\"tag\">&lt;/<span class=\"name\">asp:LinkButton</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:Panel</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">edititemtemplate</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">itemtemplate</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Label</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Label1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Text</span>=<span class=\"string\">'&lt;%</span></span></span><span class=\"perl\"><span class=\"comment\"># Bind(\"stuName\") </span></span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">%&gt;'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:Label</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ajaxToolkit:HoverMenuExtender</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"HoverMenuExtender1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> </div><div class=\"line\"><span class=\"attr\">TargetControlID</span>=<span class=\"string\">\"Label1\"</span> <span class=\"attr\">PopupControlID</span>=<span class=\"string\">\"Panel1\"</span> <span class=\"attr\">OffsetX</span>=<span class=\"string\">\"10\"</span> <span class=\"attr\">OffsetY</span>=<span class=\"string\">\"-1\"</span> </div><div class=\"line\"><span class=\"attr\">PopupPosition</span>=<span class=\"string\">\"right\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ajaxToolkit:HoverMenuExtender</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:Panel</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Panel1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"50px\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"125px\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:LinkButton</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"LinkButton1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">CommandArgument</span>=<span class=\"string\">\"Edit\"</span> </div><div class=\"line\"><span class=\"attr\">CommandName</span>=<span class=\"string\">\"Edit\"</span>&gt;</span>编辑<span class=\"tag\">&lt;/<span class=\"name\">asp:LinkButton</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:LinkButton</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"LinkButton2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">CommandArgument</span>=<span class=\"string\">\"Delete\"</span> </div><div class=\"line\"><span class=\"attr\">CommandName</span>=<span class=\"string\">\"Delete\"</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">asp:LinkButton</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:Panel</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">itemtemplate</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>在这儿要注意，因为LinkButton要实现对GridView的数据行的编辑功能，所以LinkButton的CommandArgument和CommandName属性要设置成对应的GridView 的方法的名字，如编辑功能对应的CommandName应该设置成Edit.</p>\n<p>7 保存设计，运行程序，当鼠标移动到stuName列的数据行上时，就会出现自定义的菜单，可以实现编辑功能。功能和在GridView中启用编辑的功能一样</p>"},{"title":"asp-net-ajax-popupcontrol","date":"2007-09-18T16:00:00.000Z","_content":"\n## 简介\n\nPopupcontrol可以弹出任意类型的控件，不管是在服务器控件还是html控件。就是在某控件获取焦点时弹出另外一个控件，进行一些操作后，隐藏弹出的控件。\n<!--more-->\n## 重要属性\n\n* TargetControlID:需要弹出的控件的id\n* PopupControlID:作为弹出控件的id\n* Position:弹出控件的位置\n* OffsetX/OffsetY:弹出控件的位置与默认位置的相对坐标\n\n## 实例\n\n1 打开vs2005，新建一个AjaxControlToolKit网站，命名为AjaxPopupControl\n2 打开默认生成的Default.aspx页面，切换到窗体的设计视图\n3 在页面中拽一个UpdatePanel,一个PopupControlExtender,一个TextBox和一个Calendar控件\n4 设置PopupcontrolExtender控件的属性，要求当文本框获得焦点时再其右侧弹出Calendar控件，如下\n\n```\n<ajaxToolkit:PopupControlExtender ID=\"PopupControlExtender1\" runat=\"server\"\n                 TargetControlID=\"TextBox1\" PopupControlID=\"Calendar1\" Position=\"right\">\n</ajaxToolkit:PopupControlExtender>\n```\n\n5 在Calendar控件的SelectionChanged事件中添加代码，让选择日期后能将选择的日期显示在文本框中，如下\n\n```\nprotected void Calendar1_SelectionChanged(object sender, EventArgs e)\n{\n    this.TextBox1.Text = this.Calendar1.SelectedDate.ToShortDateString();\n}\n```\n\n6 保存设计，运行程序，当鼠标单击文本框时就会在文本框的右边显示日历控件，选择一个日期，该日期就会显示在文本框中\n\n","source":"_posts/asp-net-ajax-popupcontrol.md","raw":"---\ntitle: asp-net-ajax-popupcontrol\ndate: 2007-09-19\ncategories: [Asp.Net Ajax]\ntags: [Ajax,AspNet]\n---\n\n## 简介\n\nPopupcontrol可以弹出任意类型的控件，不管是在服务器控件还是html控件。就是在某控件获取焦点时弹出另外一个控件，进行一些操作后，隐藏弹出的控件。\n<!--more-->\n## 重要属性\n\n* TargetControlID:需要弹出的控件的id\n* PopupControlID:作为弹出控件的id\n* Position:弹出控件的位置\n* OffsetX/OffsetY:弹出控件的位置与默认位置的相对坐标\n\n## 实例\n\n1 打开vs2005，新建一个AjaxControlToolKit网站，命名为AjaxPopupControl\n2 打开默认生成的Default.aspx页面，切换到窗体的设计视图\n3 在页面中拽一个UpdatePanel,一个PopupControlExtender,一个TextBox和一个Calendar控件\n4 设置PopupcontrolExtender控件的属性，要求当文本框获得焦点时再其右侧弹出Calendar控件，如下\n\n```\n<ajaxToolkit:PopupControlExtender ID=\"PopupControlExtender1\" runat=\"server\"\n                 TargetControlID=\"TextBox1\" PopupControlID=\"Calendar1\" Position=\"right\">\n</ajaxToolkit:PopupControlExtender>\n```\n\n5 在Calendar控件的SelectionChanged事件中添加代码，让选择日期后能将选择的日期显示在文本框中，如下\n\n```\nprotected void Calendar1_SelectionChanged(object sender, EventArgs e)\n{\n    this.TextBox1.Text = this.Calendar1.SelectedDate.ToShortDateString();\n}\n```\n\n6 保存设计，运行程序，当鼠标单击文本框时就会在文本框的右边显示日历控件，选择一个日期，该日期就会显示在文本框中\n\n","slug":"asp-net-ajax-popupcontrol","published":1,"updated":"2016-08-13T13:33:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz90i002bxfyn096fwv2l","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Popupcontrol可以弹出任意类型的控件，不管是在服务器控件还是html控件。就是在某控件获取焦点时弹出另外一个控件，进行一些操作后，隐藏弹出的控件。<br><a id=\"more\"></a></p>\n<h2 id=\"重要属性\"><a href=\"#重要属性\" class=\"headerlink\" title=\"重要属性\"></a>重要属性</h2><ul>\n<li>TargetControlID:需要弹出的控件的id</li>\n<li>PopupControlID:作为弹出控件的id</li>\n<li>Position:弹出控件的位置</li>\n<li>OffsetX/OffsetY:弹出控件的位置与默认位置的相对坐标</li>\n</ul>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><p>1 打开vs2005，新建一个AjaxControlToolKit网站，命名为AjaxPopupControl<br>2 打开默认生成的Default.aspx页面，切换到窗体的设计视图<br>3 在页面中拽一个UpdatePanel,一个PopupControlExtender,一个TextBox和一个Calendar控件<br>4 设置PopupcontrolExtender控件的属性，要求当文本框获得焦点时再其右侧弹出Calendar控件，如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ajaxToolkit:PopupControlExtender</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"PopupControlExtender1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></span></div><div class=\"line\">                 <span class=\"attr\">TargetControlID</span>=<span class=\"string\">\"TextBox1\"</span> <span class=\"attr\">PopupControlID</span>=<span class=\"string\">\"Calendar1\"</span> <span class=\"attr\">Position</span>=<span class=\"string\">\"right\"</span>&gt;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ajaxToolkit:PopupControlExtender</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>5 在Calendar控件的SelectionChanged事件中添加代码，让选择日期后能将选择的日期显示在文本框中，如下</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Calendar1_SelectionChanged</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.TextBox1.Text = <span class=\"keyword\">this</span>.Calendar1.SelectedDate.ToShortDateString();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>6 保存设计，运行程序，当鼠标单击文本框时就会在文本框的右边显示日历控件，选择一个日期，该日期就会显示在文本框中</p>\n","excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Popupcontrol可以弹出任意类型的控件，不管是在服务器控件还是html控件。就是在某控件获取焦点时弹出另外一个控件，进行一些操作后，隐藏弹出的控件。<br>","more":"</p>\n<h2 id=\"重要属性\"><a href=\"#重要属性\" class=\"headerlink\" title=\"重要属性\"></a>重要属性</h2><ul>\n<li>TargetControlID:需要弹出的控件的id</li>\n<li>PopupControlID:作为弹出控件的id</li>\n<li>Position:弹出控件的位置</li>\n<li>OffsetX/OffsetY:弹出控件的位置与默认位置的相对坐标</li>\n</ul>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><p>1 打开vs2005，新建一个AjaxControlToolKit网站，命名为AjaxPopupControl<br>2 打开默认生成的Default.aspx页面，切换到窗体的设计视图<br>3 在页面中拽一个UpdatePanel,一个PopupControlExtender,一个TextBox和一个Calendar控件<br>4 设置PopupcontrolExtender控件的属性，要求当文本框获得焦点时再其右侧弹出Calendar控件，如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ajaxToolkit:PopupControlExtender</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"PopupControlExtender1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></div><div class=\"line\">                 <span class=\"attr\">TargetControlID</span>=<span class=\"string\">\"TextBox1\"</span> <span class=\"attr\">PopupControlID</span>=<span class=\"string\">\"Calendar1\"</span> <span class=\"attr\">Position</span>=<span class=\"string\">\"right\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ajaxToolkit:PopupControlExtender</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>5 在Calendar控件的SelectionChanged事件中添加代码，让选择日期后能将选择的日期显示在文本框中，如下</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Calendar1_SelectionChanged</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.TextBox1.Text = <span class=\"keyword\">this</span>.Calendar1.SelectedDate.ToShortDateString();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>6 保存设计，运行程序，当鼠标单击文本框时就会在文本框的右边显示日历控件，选择一个日期，该日期就会显示在文本框中</p>"},{"title":"Asp.Net Ajax—TextBoxWateramrk","date":"2007-08-22T16:00:00.000Z","_content":"\n## 简介\n\nTextBoxWatermark控件是一个用于TextBox的水印控件,就是在文本框输入文字之前,文本框中有一些提示性的文字,并可以自定义css控制它的样式,实际用处我感觉不是很大,但给用户带来了操作上的方便,也有很好的视觉效果.\n<!--more-->\n\n## 重要属性\n\nTargetControlID:要应用水印效果的文本框的ID\nWatermarkText:水印效果的提示文本\nWatermarkCssClass:水印效果所采用的CSS样式\n示例\n\n1 打开vs2005创建一个AjaxControlToolKit网站,命名为oec2003_TextBoxWatermark\n2 打开默认的Default.aspx页,切换到设计视图\n3 添加两个文本框和两个TextBoxWatermark控件,如下图\n\n![2010-12-30_185000](http://oec2003.qiniudn.com/2010-12-30_185000.gif)\n\n4 切换到代码视图,设置TextBoxWatermark控件的属性,代码如下\n\n```\n<ajaxtoolkit:textboxwatermarkextender id=\"TextBoxWatermarkExtender1\" runat=\"server\"\n    targetcontrolid=\"TextBox2\" watermarktext=\"请输入用户名\" watermarkcssclass=\"water1\">\n    </ajaxtoolkit:textboxwatermarkextender>\n\n<ajaxtoolkit:textboxwatermarkextender id=\"TextBoxWatermarkExtender2\" runat=\"server\"\n    watermarktext=\"请输入密码\" targetcontrolid=\"TextBox1\" watermarkcssclass=\"water2\">\n    </ajaxtoolkit:textboxwatermarkextender>\n```\n    \n5 添加css 如下\n\n```\n<style type=\"text/css\">\n .water1\n {\n     height:20px;\n     width:150px;\n     padding:2px 0 0 2px;\n     border:1px solid #BEBEBE;\n     background-color:#F0F8FF;\n     color:red;\n}\n\n.water2\n{\n    height:20px;\n    width:150px;\n    border:1px none #ffffcc;\n    background-color:#ccccff;\n    color:green;\n}\n</style>\n```\n\n这儿只是简单地写了点css ,大家也可以通过css写出很漂亮的水印\n\n保存设计,运行程序就能看到效果,当鼠标点击文本框时水印消失,文本框中出现光标,鼠标离开后,水印再次出现.\n\n","source":"_posts/asp-net-ajax-textboxwateramrk.md","raw":"---\ntitle: Asp.Net Ajax—TextBoxWateramrk\ndate: 2007-08-23\ncategories: [Asp.Net Ajax]\ntags: [Ajax,spNet]\n---\n\n## 简介\n\nTextBoxWatermark控件是一个用于TextBox的水印控件,就是在文本框输入文字之前,文本框中有一些提示性的文字,并可以自定义css控制它的样式,实际用处我感觉不是很大,但给用户带来了操作上的方便,也有很好的视觉效果.\n<!--more-->\n\n## 重要属性\n\nTargetControlID:要应用水印效果的文本框的ID\nWatermarkText:水印效果的提示文本\nWatermarkCssClass:水印效果所采用的CSS样式\n示例\n\n1 打开vs2005创建一个AjaxControlToolKit网站,命名为oec2003_TextBoxWatermark\n2 打开默认的Default.aspx页,切换到设计视图\n3 添加两个文本框和两个TextBoxWatermark控件,如下图\n\n![2010-12-30_185000](http://oec2003.qiniudn.com/2010-12-30_185000.gif)\n\n4 切换到代码视图,设置TextBoxWatermark控件的属性,代码如下\n\n```\n<ajaxtoolkit:textboxwatermarkextender id=\"TextBoxWatermarkExtender1\" runat=\"server\"\n    targetcontrolid=\"TextBox2\" watermarktext=\"请输入用户名\" watermarkcssclass=\"water1\">\n    </ajaxtoolkit:textboxwatermarkextender>\n\n<ajaxtoolkit:textboxwatermarkextender id=\"TextBoxWatermarkExtender2\" runat=\"server\"\n    watermarktext=\"请输入密码\" targetcontrolid=\"TextBox1\" watermarkcssclass=\"water2\">\n    </ajaxtoolkit:textboxwatermarkextender>\n```\n    \n5 添加css 如下\n\n```\n<style type=\"text/css\">\n .water1\n {\n     height:20px;\n     width:150px;\n     padding:2px 0 0 2px;\n     border:1px solid #BEBEBE;\n     background-color:#F0F8FF;\n     color:red;\n}\n\n.water2\n{\n    height:20px;\n    width:150px;\n    border:1px none #ffffcc;\n    background-color:#ccccff;\n    color:green;\n}\n</style>\n```\n\n这儿只是简单地写了点css ,大家也可以通过css写出很漂亮的水印\n\n保存设计,运行程序就能看到效果,当鼠标点击文本框时水印消失,文本框中出现光标,鼠标离开后,水印再次出现.\n\n","slug":"asp-net-ajax-textboxwateramrk","published":1,"updated":"2016-08-13T08:36:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz90k002dxfyneahtj59w","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>TextBoxWatermark控件是一个用于TextBox的水印控件,就是在文本框输入文字之前,文本框中有一些提示性的文字,并可以自定义css控制它的样式,实际用处我感觉不是很大,但给用户带来了操作上的方便,也有很好的视觉效果.<br><a id=\"more\"></a></p>\n<h2 id=\"重要属性\"><a href=\"#重要属性\" class=\"headerlink\" title=\"重要属性\"></a>重要属性</h2><p>TargetControlID:要应用水印效果的文本框的ID<br>WatermarkText:水印效果的提示文本<br>WatermarkCssClass:水印效果所采用的CSS样式<br>示例</p>\n<p>1 打开vs2005创建一个AjaxControlToolKit网站,命名为oec2003_TextBoxWatermark<br>2 打开默认的Default.aspx页,切换到设计视图<br>3 添加两个文本框和两个TextBoxWatermark控件,如下图</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_185000.gif\" alt=\"2010-12-30_185000\"></p>\n<p>4 切换到代码视图,设置TextBoxWatermark控件的属性,代码如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ajaxtoolkit:textboxwatermarkextender</span> <span class=\"attr\">id</span>=<span class=\"string\">\"TextBoxWatermarkExtender1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></span></div><div class=\"line\">    <span class=\"attr\">targetcontrolid</span>=<span class=\"string\">\"TextBox2\"</span> <span class=\"attr\">watermarktext</span>=<span class=\"string\">\"请输入用户名\"</span> <span class=\"attr\">watermarkcssclass</span>=<span class=\"string\">\"water1\"</span>&gt;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ajaxtoolkit:textboxwatermarkextender</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ajaxtoolkit:textboxwatermarkextender</span> <span class=\"attr\">id</span>=<span class=\"string\">\"TextBoxWatermarkExtender2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></span></div><div class=\"line\">    <span class=\"attr\">watermarktext</span>=<span class=\"string\">\"请输入密码\"</span> <span class=\"attr\">targetcontrolid</span>=<span class=\"string\">\"TextBox1\"</span> <span class=\"attr\">watermarkcssclass</span>=<span class=\"string\">\"water2\"</span>&gt;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ajaxtoolkit:textboxwatermarkextender</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>5 添加css 如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"css\"></span></div><div class=\"line\"> <span class=\"selector-class\">.water1</span></div><div class=\"line\"> &#123;</div><div class=\"line\">     <span class=\"attribute\">height</span>:<span class=\"number\">20px</span>;</div><div class=\"line\">     <span class=\"attribute\">width</span>:<span class=\"number\">150px</span>;</div><div class=\"line\">     <span class=\"attribute\">padding</span>:<span class=\"number\">2px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">2px</span>;</div><div class=\"line\">     <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#BEBEBE</span>;</div><div class=\"line\">     <span class=\"attribute\">background-color</span>:<span class=\"number\">#F0F8FF</span>;</div><div class=\"line\">     <span class=\"attribute\">color</span>:red;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.water2</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">20px</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">150px</span>;</div><div class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> none <span class=\"number\">#ffffcc</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>:<span class=\"number\">#ccccff</span>;</div><div class=\"line\">    <span class=\"attribute\">color</span>:green;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>这儿只是简单地写了点css ,大家也可以通过css写出很漂亮的水印</p>\n<p>保存设计,运行程序就能看到效果,当鼠标点击文本框时水印消失,文本框中出现光标,鼠标离开后,水印再次出现.</p>\n","excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>TextBoxWatermark控件是一个用于TextBox的水印控件,就是在文本框输入文字之前,文本框中有一些提示性的文字,并可以自定义css控制它的样式,实际用处我感觉不是很大,但给用户带来了操作上的方便,也有很好的视觉效果.<br>","more":"</p>\n<h2 id=\"重要属性\"><a href=\"#重要属性\" class=\"headerlink\" title=\"重要属性\"></a>重要属性</h2><p>TargetControlID:要应用水印效果的文本框的ID<br>WatermarkText:水印效果的提示文本<br>WatermarkCssClass:水印效果所采用的CSS样式<br>示例</p>\n<p>1 打开vs2005创建一个AjaxControlToolKit网站,命名为oec2003_TextBoxWatermark<br>2 打开默认的Default.aspx页,切换到设计视图<br>3 添加两个文本框和两个TextBoxWatermark控件,如下图</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_185000.gif\" alt=\"2010-12-30_185000\"></p>\n<p>4 切换到代码视图,设置TextBoxWatermark控件的属性,代码如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ajaxtoolkit:textboxwatermarkextender</span> <span class=\"attr\">id</span>=<span class=\"string\">\"TextBoxWatermarkExtender1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></div><div class=\"line\">    <span class=\"attr\">targetcontrolid</span>=<span class=\"string\">\"TextBox2\"</span> <span class=\"attr\">watermarktext</span>=<span class=\"string\">\"请输入用户名\"</span> <span class=\"attr\">watermarkcssclass</span>=<span class=\"string\">\"water1\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ajaxtoolkit:textboxwatermarkextender</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ajaxtoolkit:textboxwatermarkextender</span> <span class=\"attr\">id</span>=<span class=\"string\">\"TextBoxWatermarkExtender2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></div><div class=\"line\">    <span class=\"attr\">watermarktext</span>=<span class=\"string\">\"请输入密码\"</span> <span class=\"attr\">targetcontrolid</span>=<span class=\"string\">\"TextBox1\"</span> <span class=\"attr\">watermarkcssclass</span>=<span class=\"string\">\"water2\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ajaxtoolkit:textboxwatermarkextender</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>5 添加css 如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"css\"></div><div class=\"line\"> <span class=\"selector-class\">.water1</span></div><div class=\"line\"> &#123;</div><div class=\"line\">     <span class=\"attribute\">height</span>:<span class=\"number\">20px</span>;</div><div class=\"line\">     <span class=\"attribute\">width</span>:<span class=\"number\">150px</span>;</div><div class=\"line\">     <span class=\"attribute\">padding</span>:<span class=\"number\">2px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">2px</span>;</div><div class=\"line\">     <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#BEBEBE</span>;</div><div class=\"line\">     <span class=\"attribute\">background-color</span>:<span class=\"number\">#F0F8FF</span>;</div><div class=\"line\">     <span class=\"attribute\">color</span>:red;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.water2</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">20px</span>;</div><div class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">150px</span>;</div><div class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> none <span class=\"number\">#ffffcc</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>:<span class=\"number\">#ccccff</span>;</div><div class=\"line\">    <span class=\"attribute\">color</span>:green;</div><div class=\"line\">&#125;</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>这儿只是简单地写了点css ,大家也可以通过css写出很漂亮的水印</p>\n<p>保存设计,运行程序就能看到效果,当鼠标点击文本框时水印消失,文本框中出现光标,鼠标离开后,水印再次出现.</p>"},{"title":"Asp.Net中列表数据绑定控件浅析","date":"2007-01-02T16:00:00.000Z","_content":"\n在Asp.Net中用来显示列表数据的控件有`Repeater`，`DataList`,`DataGrid`三种.\n\nDataGrid的灵活性很强，内置了丰富的事件，提供分页，编辑，排序等一些特性，对表格的操作也是非常方便的，而且还有很多种的风格可选，由于自带了很多的功能和特性，所以开发速度很快，容易部署。但它的性能不是很高，每次的操作都会返回到服务器。主要用在对有排序、分页、编辑和多列的显示，而且对性能的要求不是很高，一般情况下数据源是一个DateSet。\n<!--more-->\nDataList和DataGrid一样也有强大的模版特性，支持数据的编辑，性能比DataGrid好，不足之处在于开发周期相对与DataGrid较长，没有DataGrid中的编辑器，实现分页和排序比较困难。主要应用在单列的数据列表，高性能的自定义数据表。\n\nRepeater是完全以HTML的方式呈现，更加自由灵活，性能是三种显示控件中最高的。但不支持编辑、分页、排序，几乎没有什么特性。开发周期是最长的。主要用在一些对性能和灵活性比较高的数据的显示。\n\n在使用DataGrid时应该注意的一些问题\n\nDataGrid控件有一个很重的属性AutoGenerateColumns，默认的时候该属性的值是true，当他为true的时候，会将绑定的表中所有的字段都显示出来，而我们在实际应用的时候往往只需要把我们想要的字段显示，这时候我们要将AutoGenerateColumns属性的值设置为false，可以自定义地选择显示那些列在控件上。如果我们设置成了自动生成列，就不要再再DataGrid中指定显示列，否则就会产生重复列。\n\n在DataGrid中的非模版列找一个控件可以用datagriditem.Cells[第几个单元格].Controls[第几个控件] 这时候下标是从0开始的，但是在使用模版列时，Control的index必须都要加一，因为Control[0]是LiteralControl,值为空相当于一个空格。这时最好是采datagriditem.findcontrol[“控件名称”]来获得。\n\n当我们在DataGrid中添加了按钮列的删除时，我们要去判断要删除了数据项是否为最后一项，如果是最后一项，还应判断当前页是否为第一页，如果不是第一页，应该将当前的索引减1。在DataGrid中的deleteCommand事件中添加以下代码可以实现。\n\n```\nif(this.datagrid.items.count= =1)\n{\n     if(this.DataGrid.CurrentPageIndex!=0)\n     {\n        This.DataGrid.CurrentPageIndex=this.DataGrid.CurrentPageIndex-1;\n     }\n}\n```\n\n在删除一条记录时为了更人性化，应该在我们点击删除按钮时，会弹出一个对话框来让我们确定是否要删除记录，在DataGrid控件的ItemDataBound事件中添加以下代码可以实现这个功能，并且是在客户端执行。\n\n```\nSwitch(e.Item.ItemType)\n{\n    Case ListItemType.Item;\n    Case ListIetmType.EditItem;\n    Case ListItemType.AlternatingItem;\n    LinkButton lb=(LinkButton)e.Item.Cells[].Controls[0];\n    Lb.Attributs.Add(“onclick”,”return confirm(‘确定删除这条记录吗？’)”);\n    Break;\n}\n```\n\n上面的代码倒数第二行中的return很重要，一定不能去掉了，否则当弹出对话框后，不管你点的是“确定”还是“取消”都会删除选中记录。\n\n","source":"_posts/asp-net-lists-data-bound-controls.md","raw":"---\ntitle: Asp.Net中列表数据绑定控件浅析\ndate: 2007-01-03\ncategories: [Asp.Net]\ntags: [AspNet]\n---\n\n在Asp.Net中用来显示列表数据的控件有`Repeater`，`DataList`,`DataGrid`三种.\n\nDataGrid的灵活性很强，内置了丰富的事件，提供分页，编辑，排序等一些特性，对表格的操作也是非常方便的，而且还有很多种的风格可选，由于自带了很多的功能和特性，所以开发速度很快，容易部署。但它的性能不是很高，每次的操作都会返回到服务器。主要用在对有排序、分页、编辑和多列的显示，而且对性能的要求不是很高，一般情况下数据源是一个DateSet。\n<!--more-->\nDataList和DataGrid一样也有强大的模版特性，支持数据的编辑，性能比DataGrid好，不足之处在于开发周期相对与DataGrid较长，没有DataGrid中的编辑器，实现分页和排序比较困难。主要应用在单列的数据列表，高性能的自定义数据表。\n\nRepeater是完全以HTML的方式呈现，更加自由灵活，性能是三种显示控件中最高的。但不支持编辑、分页、排序，几乎没有什么特性。开发周期是最长的。主要用在一些对性能和灵活性比较高的数据的显示。\n\n在使用DataGrid时应该注意的一些问题\n\nDataGrid控件有一个很重的属性AutoGenerateColumns，默认的时候该属性的值是true，当他为true的时候，会将绑定的表中所有的字段都显示出来，而我们在实际应用的时候往往只需要把我们想要的字段显示，这时候我们要将AutoGenerateColumns属性的值设置为false，可以自定义地选择显示那些列在控件上。如果我们设置成了自动生成列，就不要再再DataGrid中指定显示列，否则就会产生重复列。\n\n在DataGrid中的非模版列找一个控件可以用datagriditem.Cells[第几个单元格].Controls[第几个控件] 这时候下标是从0开始的，但是在使用模版列时，Control的index必须都要加一，因为Control[0]是LiteralControl,值为空相当于一个空格。这时最好是采datagriditem.findcontrol[“控件名称”]来获得。\n\n当我们在DataGrid中添加了按钮列的删除时，我们要去判断要删除了数据项是否为最后一项，如果是最后一项，还应判断当前页是否为第一页，如果不是第一页，应该将当前的索引减1。在DataGrid中的deleteCommand事件中添加以下代码可以实现。\n\n```\nif(this.datagrid.items.count= =1)\n{\n     if(this.DataGrid.CurrentPageIndex!=0)\n     {\n        This.DataGrid.CurrentPageIndex=this.DataGrid.CurrentPageIndex-1;\n     }\n}\n```\n\n在删除一条记录时为了更人性化，应该在我们点击删除按钮时，会弹出一个对话框来让我们确定是否要删除记录，在DataGrid控件的ItemDataBound事件中添加以下代码可以实现这个功能，并且是在客户端执行。\n\n```\nSwitch(e.Item.ItemType)\n{\n    Case ListItemType.Item;\n    Case ListIetmType.EditItem;\n    Case ListItemType.AlternatingItem;\n    LinkButton lb=(LinkButton)e.Item.Cells[].Controls[0];\n    Lb.Attributs.Add(“onclick”,”return confirm(‘确定删除这条记录吗？’)”);\n    Break;\n}\n```\n\n上面的代码倒数第二行中的return很重要，一定不能去掉了，否则当弹出对话框后，不管你点的是“确定”还是“取消”都会删除选中记录。\n\n","slug":"asp-net-lists-data-bound-controls","published":1,"updated":"2016-08-12T15:33:50.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz90n002hxfynloqupuvd","content":"<p>在Asp.Net中用来显示列表数据的控件有<code>Repeater</code>，<code>DataList</code>,<code>DataGrid</code>三种.</p>\n<p>DataGrid的灵活性很强，内置了丰富的事件，提供分页，编辑，排序等一些特性，对表格的操作也是非常方便的，而且还有很多种的风格可选，由于自带了很多的功能和特性，所以开发速度很快，容易部署。但它的性能不是很高，每次的操作都会返回到服务器。主要用在对有排序、分页、编辑和多列的显示，而且对性能的要求不是很高，一般情况下数据源是一个DateSet。<br><a id=\"more\"></a><br>DataList和DataGrid一样也有强大的模版特性，支持数据的编辑，性能比DataGrid好，不足之处在于开发周期相对与DataGrid较长，没有DataGrid中的编辑器，实现分页和排序比较困难。主要应用在单列的数据列表，高性能的自定义数据表。</p>\n<p>Repeater是完全以HTML的方式呈现，更加自由灵活，性能是三种显示控件中最高的。但不支持编辑、分页、排序，几乎没有什么特性。开发周期是最长的。主要用在一些对性能和灵活性比较高的数据的显示。</p>\n<p>在使用DataGrid时应该注意的一些问题</p>\n<p>DataGrid控件有一个很重的属性AutoGenerateColumns，默认的时候该属性的值是true，当他为true的时候，会将绑定的表中所有的字段都显示出来，而我们在实际应用的时候往往只需要把我们想要的字段显示，这时候我们要将AutoGenerateColumns属性的值设置为false，可以自定义地选择显示那些列在控件上。如果我们设置成了自动生成列，就不要再再DataGrid中指定显示列，否则就会产生重复列。</p>\n<p>在DataGrid中的非模版列找一个控件可以用datagriditem.Cells[第几个单元格].Controls[第几个控件] 这时候下标是从0开始的，但是在使用模版列时，Control的index必须都要加一，因为Control[0]是LiteralControl,值为空相当于一个空格。这时最好是采datagriditem.findcontrol[“控件名称”]来获得。</p>\n<p>当我们在DataGrid中添加了按钮列的删除时，我们要去判断要删除了数据项是否为最后一项，如果是最后一项，还应判断当前页是否为第一页，如果不是第一页，应该将当前的索引减1。在DataGrid中的deleteCommand事件中添加以下代码可以实现。</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.datagrid.items.count= =<span class=\"number\">1</span>)</div><div class=\"line\">&#123;</div><div class=\"line\">     <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.DataGrid.CurrentPageIndex!=<span class=\"number\">0</span>)</div><div class=\"line\">     &#123;</div><div class=\"line\">        This.DataGrid.CurrentPageIndex=<span class=\"keyword\">this</span>.DataGrid.CurrentPageIndex<span class=\"number\">-1</span>;</div><div class=\"line\">     &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在删除一条记录时为了更人性化，应该在我们点击删除按钮时，会弹出一个对话框来让我们确定是否要删除记录，在DataGrid控件的ItemDataBound事件中添加以下代码可以实现这个功能，并且是在客户端执行。</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">Switch(e.Item.ItemType)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    Case ListItemType.Item<span class=\"comment\">;</span></div><div class=\"line\">    Case ListIetmType.EditItem<span class=\"comment\">;</span></div><div class=\"line\">    Case ListItemType.AlternatingItem<span class=\"comment\">;</span></div><div class=\"line\">    LinkButton <span class=\"keyword\">lb=(LinkButton)e.Item.Cells[].Controls[0];</span></div><div class=\"line\">    <span class=\"keyword\">Lb.Attributs.Add(“onclick”,”return </span>confirm(‘确定删除这条记录吗？’)”)<span class=\"comment\">;</span></div><div class=\"line\">    <span class=\"keyword\">Break;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的代码倒数第二行中的return很重要，一定不能去掉了，否则当弹出对话框后，不管你点的是“确定”还是“取消”都会删除选中记录。</p>\n","excerpt":"<p>在Asp.Net中用来显示列表数据的控件有<code>Repeater</code>，<code>DataList</code>,<code>DataGrid</code>三种.</p>\n<p>DataGrid的灵活性很强，内置了丰富的事件，提供分页，编辑，排序等一些特性，对表格的操作也是非常方便的，而且还有很多种的风格可选，由于自带了很多的功能和特性，所以开发速度很快，容易部署。但它的性能不是很高，每次的操作都会返回到服务器。主要用在对有排序、分页、编辑和多列的显示，而且对性能的要求不是很高，一般情况下数据源是一个DateSet。<br>","more":"<br>DataList和DataGrid一样也有强大的模版特性，支持数据的编辑，性能比DataGrid好，不足之处在于开发周期相对与DataGrid较长，没有DataGrid中的编辑器，实现分页和排序比较困难。主要应用在单列的数据列表，高性能的自定义数据表。</p>\n<p>Repeater是完全以HTML的方式呈现，更加自由灵活，性能是三种显示控件中最高的。但不支持编辑、分页、排序，几乎没有什么特性。开发周期是最长的。主要用在一些对性能和灵活性比较高的数据的显示。</p>\n<p>在使用DataGrid时应该注意的一些问题</p>\n<p>DataGrid控件有一个很重的属性AutoGenerateColumns，默认的时候该属性的值是true，当他为true的时候，会将绑定的表中所有的字段都显示出来，而我们在实际应用的时候往往只需要把我们想要的字段显示，这时候我们要将AutoGenerateColumns属性的值设置为false，可以自定义地选择显示那些列在控件上。如果我们设置成了自动生成列，就不要再再DataGrid中指定显示列，否则就会产生重复列。</p>\n<p>在DataGrid中的非模版列找一个控件可以用datagriditem.Cells[第几个单元格].Controls[第几个控件] 这时候下标是从0开始的，但是在使用模版列时，Control的index必须都要加一，因为Control[0]是LiteralControl,值为空相当于一个空格。这时最好是采datagriditem.findcontrol[“控件名称”]来获得。</p>\n<p>当我们在DataGrid中添加了按钮列的删除时，我们要去判断要删除了数据项是否为最后一项，如果是最后一项，还应判断当前页是否为第一页，如果不是第一页，应该将当前的索引减1。在DataGrid中的deleteCommand事件中添加以下代码可以实现。</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.datagrid.items.count= =<span class=\"number\">1</span>)</div><div class=\"line\">&#123;</div><div class=\"line\">     <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.DataGrid.CurrentPageIndex!=<span class=\"number\">0</span>)</div><div class=\"line\">     &#123;</div><div class=\"line\">        This.DataGrid.CurrentPageIndex=<span class=\"keyword\">this</span>.DataGrid.CurrentPageIndex<span class=\"number\">-1</span>;</div><div class=\"line\">     &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在删除一条记录时为了更人性化，应该在我们点击删除按钮时，会弹出一个对话框来让我们确定是否要删除记录，在DataGrid控件的ItemDataBound事件中添加以下代码可以实现这个功能，并且是在客户端执行。</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">Switch(e.Item.ItemType)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    Case ListItemType.Item<span class=\"comment\">;</span></div><div class=\"line\">    Case ListIetmType.EditItem<span class=\"comment\">;</span></div><div class=\"line\">    Case ListItemType.AlternatingItem<span class=\"comment\">;</span></div><div class=\"line\">    LinkButton <span class=\"keyword\">lb=(LinkButton)e.Item.Cells[].Controls[0];</div><div class=\"line\"></span>    <span class=\"keyword\">Lb.Attributs.Add(“onclick”,”return </span>confirm(‘确定删除这条记录吗？’)”)<span class=\"comment\">;</span></div><div class=\"line\">    <span class=\"keyword\">Break;</div><div class=\"line\"></span>&#125;</div></pre></td></tr></table></figure>\n<p>上面的代码倒数第二行中的return很重要，一定不能去掉了，否则当弹出对话框后，不管你点的是“确定”还是“取消”都会删除选中记录。</p>"},{"title":"Asp.Net Ajax—ValidatorCallout控件使用","date":"2007-09-05T16:00:00.000Z","_content":"\n## 简介\n\nValidatorCallout控件是一个用来绑定验证控件的提示控件,让验证的信息的显示可以更加地直观. 如下\n<!--more-->\n\n## 重要属性\n\n* TargetControlID:要绑定的验证控件的ID\n* Width:弹出的提示信息的宽度\n* HighlightCssClass:弹出的提示信息所应用的样式\n* WarningIconImageUrl:弹出信息中的警示图片的地址\n\n## 示例\n\n1 打开vs2005,新建一个AjaxControlToolKit网站,命名为oec2003_ValidatorCallout 。\n\n2 打开默认生成的Default.aspx页面,切换到窗体视图 。\n\n3 在页面中拖拽两个TextBox,两个RequiredFieldValidator和两个ValidatorCallout控件 。\n\n4两个RequiredFieldValidator控件对应两个TextBox,来验证两个文本框不能为空,同时定义错误提示信息,这些错误信息将会通过ValidatorCallout来显示,将RequiredFieldValidator的Display属性设置为none,否则错误提示信息就会在两个地方同时显示,这是我们不想看到的,代码如下\n\n```\n<asp:requiredfieldvalidator id=\"RequiredFieldValidator1\" runat=\"server\" controltovalidate=\"TextBox1\"\n       display=\"None\" errormessage=\"姓名不能为空<br>请输入姓名\"></asp:requiredfieldvalidator>\n   <br />\n   密 &nbsp;&nbsp; 码：<asp:textbox id=\"TextBox2\" runat=\"server\" textmode=\"Password\" width=\"148px\"></asp:textbox>\n   <asp:requiredfieldvalidator id=\"RequiredFieldValidator2\" runat=\"server\" controltovalidate=\"TextBox2\"\n       display=\"None\" errormessage=\"密码不能为空，请输入密码\"></asp:requiredfieldvalidator>\n```\n\n5 设置两个ValidatorCallout控件对应两个RequiredFieldValidator控件,代码如下\n\n```\n<ajaxtoolkit:validatorcalloutextender id=\"ValidatorCalloutExtender1\" runat=\"server\"\n     targetcontrolid=\"RequiredFieldValidator1\">\n     </ajaxtoolkit:validatorcalloutextender>\n <ajaxtoolkit:validatorcalloutextender id=\"ValidatorCalloutExtender2\" runat=\"server\"\n     targetcontrolid=\"RequiredFieldValidator2\">\n     </ajaxtoolkit:validatorcalloutextender>\n```\n\n6 保存设计,运行程序,当没有在文本框中输入文字而提交表单时,就会在文本框后面出现一个错误提示框,如下图所示\n\n![2010-12-30_165947](http://oec2003.qiniudn.com/2010-12-30_165947.gif)\n\n\n\n","source":"_posts/asp-net-ajax-validatorcallout.md","raw":"---\ntitle: Asp.Net Ajax—ValidatorCallout控件使用\ndate: 2007-09-06\ncategories: [Asp.Net Ajax]\ntags: [Ajax,AspNet]\n---\n\n## 简介\n\nValidatorCallout控件是一个用来绑定验证控件的提示控件,让验证的信息的显示可以更加地直观. 如下\n<!--more-->\n\n## 重要属性\n\n* TargetControlID:要绑定的验证控件的ID\n* Width:弹出的提示信息的宽度\n* HighlightCssClass:弹出的提示信息所应用的样式\n* WarningIconImageUrl:弹出信息中的警示图片的地址\n\n## 示例\n\n1 打开vs2005,新建一个AjaxControlToolKit网站,命名为oec2003_ValidatorCallout 。\n\n2 打开默认生成的Default.aspx页面,切换到窗体视图 。\n\n3 在页面中拖拽两个TextBox,两个RequiredFieldValidator和两个ValidatorCallout控件 。\n\n4两个RequiredFieldValidator控件对应两个TextBox,来验证两个文本框不能为空,同时定义错误提示信息,这些错误信息将会通过ValidatorCallout来显示,将RequiredFieldValidator的Display属性设置为none,否则错误提示信息就会在两个地方同时显示,这是我们不想看到的,代码如下\n\n```\n<asp:requiredfieldvalidator id=\"RequiredFieldValidator1\" runat=\"server\" controltovalidate=\"TextBox1\"\n       display=\"None\" errormessage=\"姓名不能为空<br>请输入姓名\"></asp:requiredfieldvalidator>\n   <br />\n   密 &nbsp;&nbsp; 码：<asp:textbox id=\"TextBox2\" runat=\"server\" textmode=\"Password\" width=\"148px\"></asp:textbox>\n   <asp:requiredfieldvalidator id=\"RequiredFieldValidator2\" runat=\"server\" controltovalidate=\"TextBox2\"\n       display=\"None\" errormessage=\"密码不能为空，请输入密码\"></asp:requiredfieldvalidator>\n```\n\n5 设置两个ValidatorCallout控件对应两个RequiredFieldValidator控件,代码如下\n\n```\n<ajaxtoolkit:validatorcalloutextender id=\"ValidatorCalloutExtender1\" runat=\"server\"\n     targetcontrolid=\"RequiredFieldValidator1\">\n     </ajaxtoolkit:validatorcalloutextender>\n <ajaxtoolkit:validatorcalloutextender id=\"ValidatorCalloutExtender2\" runat=\"server\"\n     targetcontrolid=\"RequiredFieldValidator2\">\n     </ajaxtoolkit:validatorcalloutextender>\n```\n\n6 保存设计,运行程序,当没有在文本框中输入文字而提交表单时,就会在文本框后面出现一个错误提示框,如下图所示\n\n![2010-12-30_165947](http://oec2003.qiniudn.com/2010-12-30_165947.gif)\n\n\n\n","slug":"asp-net-ajax-validatorcallout","published":1,"updated":"2016-08-13T13:29:10.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz90q002kxfyn5qkiq9s8","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>ValidatorCallout控件是一个用来绑定验证控件的提示控件,让验证的信息的显示可以更加地直观. 如下<br><a id=\"more\"></a></p>\n<h2 id=\"重要属性\"><a href=\"#重要属性\" class=\"headerlink\" title=\"重要属性\"></a>重要属性</h2><ul>\n<li>TargetControlID:要绑定的验证控件的ID</li>\n<li>Width:弹出的提示信息的宽度</li>\n<li>HighlightCssClass:弹出的提示信息所应用的样式</li>\n<li>WarningIconImageUrl:弹出信息中的警示图片的地址</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>1 打开vs2005,新建一个AjaxControlToolKit网站,命名为oec2003_ValidatorCallout 。</p>\n<p>2 打开默认生成的Default.aspx页面,切换到窗体视图 。</p>\n<p>3 在页面中拖拽两个TextBox,两个RequiredFieldValidator和两个ValidatorCallout控件 。</p>\n<p>4两个RequiredFieldValidator控件对应两个TextBox,来验证两个文本框不能为空,同时定义错误提示信息,这些错误信息将会通过ValidatorCallout来显示,将RequiredFieldValidator的Display属性设置为none,否则错误提示信息就会在两个地方同时显示,这是我们不想看到的,代码如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:requiredfieldvalidator</span> <span class=\"attr\">id</span>=<span class=\"string\">\"RequiredFieldValidator1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">controltovalidate</span>=<span class=\"string\">\"TextBox1\"</span></span></div><div class=\"line\">       <span class=\"attr\">display</span>=<span class=\"string\">\"None\"</span> <span class=\"attr\">errormessage</span>=<span class=\"string\">\"姓名不能为空&lt;br&gt;请输入姓名\"</span>&gt;<span class=\"tag\">&lt;/<span class=\"name\">asp:requiredfieldvalidator</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">   密 &amp;nbsp;&amp;nbsp; 码：<span class=\"tag\">&lt;<span class=\"name\">asp:textbox</span> <span class=\"attr\">id</span>=<span class=\"string\">\"TextBox2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">textmode</span>=<span class=\"string\">\"Password\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"148px\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:textbox</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">asp:requiredfieldvalidator</span> <span class=\"attr\">id</span>=<span class=\"string\">\"RequiredFieldValidator2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">controltovalidate</span>=<span class=\"string\">\"TextBox2\"</span></span></div><div class=\"line\">       <span class=\"attr\">display</span>=<span class=\"string\">\"None\"</span> <span class=\"attr\">errormessage</span>=<span class=\"string\">\"密码不能为空，请输入密码\"</span>&gt;<span class=\"tag\">&lt;/<span class=\"name\">asp:requiredfieldvalidator</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>5 设置两个ValidatorCallout控件对应两个RequiredFieldValidator控件,代码如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ajaxtoolkit:validatorcalloutextender</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ValidatorCalloutExtender1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></span></div><div class=\"line\">     <span class=\"attr\">targetcontrolid</span>=<span class=\"string\">\"RequiredFieldValidator1\"</span>&gt;</div><div class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">ajaxtoolkit:validatorcalloutextender</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">ajaxtoolkit:validatorcalloutextender</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ValidatorCalloutExtender2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></span></div><div class=\"line\">     <span class=\"attr\">targetcontrolid</span>=<span class=\"string\">\"RequiredFieldValidator2\"</span>&gt;</div><div class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">ajaxtoolkit:validatorcalloutextender</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>6 保存设计,运行程序,当没有在文本框中输入文字而提交表单时,就会在文本框后面出现一个错误提示框,如下图所示</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_165947.gif\" alt=\"2010-12-30_165947\"></p>\n","excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>ValidatorCallout控件是一个用来绑定验证控件的提示控件,让验证的信息的显示可以更加地直观. 如下<br>","more":"</p>\n<h2 id=\"重要属性\"><a href=\"#重要属性\" class=\"headerlink\" title=\"重要属性\"></a>重要属性</h2><ul>\n<li>TargetControlID:要绑定的验证控件的ID</li>\n<li>Width:弹出的提示信息的宽度</li>\n<li>HighlightCssClass:弹出的提示信息所应用的样式</li>\n<li>WarningIconImageUrl:弹出信息中的警示图片的地址</li>\n</ul>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>1 打开vs2005,新建一个AjaxControlToolKit网站,命名为oec2003_ValidatorCallout 。</p>\n<p>2 打开默认生成的Default.aspx页面,切换到窗体视图 。</p>\n<p>3 在页面中拖拽两个TextBox,两个RequiredFieldValidator和两个ValidatorCallout控件 。</p>\n<p>4两个RequiredFieldValidator控件对应两个TextBox,来验证两个文本框不能为空,同时定义错误提示信息,这些错误信息将会通过ValidatorCallout来显示,将RequiredFieldValidator的Display属性设置为none,否则错误提示信息就会在两个地方同时显示,这是我们不想看到的,代码如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:requiredfieldvalidator</span> <span class=\"attr\">id</span>=<span class=\"string\">\"RequiredFieldValidator1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">controltovalidate</span>=<span class=\"string\">\"TextBox1\"</span></div><div class=\"line\">       <span class=\"attr\">display</span>=<span class=\"string\">\"None\"</span> <span class=\"attr\">errormessage</span>=<span class=\"string\">\"姓名不能为空&lt;br&gt;请输入姓名\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:requiredfieldvalidator</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">   密 &amp;nbsp;&amp;nbsp; 码：<span class=\"tag\">&lt;<span class=\"name\">asp:textbox</span> <span class=\"attr\">id</span>=<span class=\"string\">\"TextBox2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">textmode</span>=<span class=\"string\">\"Password\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"148px\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:textbox</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">asp:requiredfieldvalidator</span> <span class=\"attr\">id</span>=<span class=\"string\">\"RequiredFieldValidator2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">controltovalidate</span>=<span class=\"string\">\"TextBox2\"</span></div><div class=\"line\">       <span class=\"attr\">display</span>=<span class=\"string\">\"None\"</span> <span class=\"attr\">errormessage</span>=<span class=\"string\">\"密码不能为空，请输入密码\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:requiredfieldvalidator</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>5 设置两个ValidatorCallout控件对应两个RequiredFieldValidator控件,代码如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ajaxtoolkit:validatorcalloutextender</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ValidatorCalloutExtender1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></div><div class=\"line\">     <span class=\"attr\">targetcontrolid</span>=<span class=\"string\">\"RequiredFieldValidator1\"</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">ajaxtoolkit:validatorcalloutextender</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">ajaxtoolkit:validatorcalloutextender</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ValidatorCalloutExtender2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></div><div class=\"line\">     <span class=\"attr\">targetcontrolid</span>=<span class=\"string\">\"RequiredFieldValidator2\"</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">ajaxtoolkit:validatorcalloutextender</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>6 保存设计,运行程序,当没有在文本框中输入文字而提交表单时,就会在文本框后面出现一个错误提示框,如下图所示</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_165947.gif\" alt=\"2010-12-30_165947\"></p>"},{"title":"Asp.net 2.0的Eval方法详解","date":"2009-01-13T16:00:00.000Z","_content":"\n实际上Eval方法是TemplateControl的，而System.Web.UI.Page和System.Web.UI.UserControl都继承于TemplateControl，所以我们可以在Page和UserControl上直接调用个方法。\nPage.Eval方法可以帮助我们更好的撰写数据绑定表达式，在ASP.NET   1.x时代，数据绑定表达式的一般形式是：\n<!--more-->\n\n```\n<%# DataBinder.Eval(Container,“DataItem.Name”)   %>\n```\n\n而在ASP.NET   2.0中，同样的代码，我们可以这样写：\n\n```\n<%# Eval(“Name”)%>\n```\n\nASP.NET 2.0是怎么实现的呢？我们先从Eval方法来研究，通过反射.NET  fromwork   2.0类库的源代码，我们可以看到这个方法是这样实现的：\n\n```\nprotected internal object   Eval(string   expression)\n{\n    this.CheckPageExists();\n    return   DataBinder.Eval(this.Page.GetDataItem(),   expression);\n}\n```\n\n第一行我们不必管，这是检查调用的时候有没有Page对象的，如果没有则会抛出一个异常。关键是第二行：\n\n```\nreturn   DataBinder.Eval(this.Page.GetDataItem(),   expression);\n```\n\nPage.GetDataItem()也是2.0中新增的一个方法，用途是正是取代ASP.NET 1.x中的Container.DataItem。\n看来不摸清楚GetDataItem()方法，我们也很难明白Eval的原理。GetDataItem的实现也很简单：\n\n```\npublic object GetDataItem()\n{\n    if ((this._dataBindingContext == null) || (this._dataBindingContext.Count == 0))\n    {\n        throw new InvalidOperationException(SR.GetString(\"Page_MissingDataBindingContext\"));\n    }\n    return this._dataBindingContext.Peek();\n}\n```\n\n我们注意到了有一个内部对象_dataBindingContext，通过查源代码发现这是一个Stack类型的东西。所以他有Peek方法。而这一段代码很容易看懂，先判断这个Stack是否被实例化，然后，判断这个Stack里面是不是有任何元素，如果Stack没有被实例化或者没有元素则抛出一个异常。最后是将这个堆栈顶部的元素返回。\nASP.NET  2.0用了一个Stack来保存所谓的DataItem，我们很快就查到了为这个堆栈压元素和弹出元素的方法：Control.DataBind方法：\n\n```\nprotected virtual void DataBind(bool raiseOnDataBinding)\n{\n    //这个标志的用处在上下文中很容易推出来，如果有DataItem压栈，则在后面出栈。\n    bool flag1 = false;\n    //判断控件是不是数据绑定容器，实际上就是判断控件类是不是实现了INamingContainer\n    if (this.IsBindingContainer)\n    {\n        bool flag2;\n        //这个方法是判断控件是不是有DataItem属性，并把它取出来。\n        object obj1 = DataBinder.GetDataItem(this, out   flag2);\n        if (flag2 && (this.Page != null))//如果控件有DataItem\n        {\n            //把DataItem压栈，PushDataBindingContext就是调用_dataBindingContext的Push方法\n            this.Page.PushDataBindingContext(obj1);\n            flag1 = true;\n        }\n    }\n    try\n    {\n        //这里是判断是不是触发DataBinding事件的。\n        if (raiseOnDataBinding)\n        {\n            this.OnDataBinding(EventArgs.Empty);\n        }\n        //对子控件进行数据绑定，如果这个控件有DataItem，则上面会将DataItem压入栈顶，这样，\n        //在子控件里面调用Eval或者GetDataItem方法，就会把刚刚压进去的DataItem给取出来。\n        this.DataBindChildren();\n    }\n    finally\n    {\n        //如果刚才有压栈，则现在弹出来。\n        if (flag1)\n        {\n            //PopDataBindingContext就是调用_dataBindingContext的Pop方法\n            this.Page.PopDataBindingContext();\n        }\n    }\n}\n```\n\n至此，我们已经可以完全了解ASP.NET   2.0中GetDataIten和Eval方法运作的原理了\n\n关于效率：\n\n毋庸置疑的是强类型转换Container的效率是最高的，Eval最终是调用DataBinder.Eval方法，DataBinder.Eval是采用反射来获取数据的，这显然不如强类型数据转换。\n\n我们可以比较一下各种方法：\n\n```\n((Type)Container.DataItem).Property\n```\n\n这种方法效率是最高的，因为不存在任何反射。其次是：\n\n```\n((Type)GetDataItem()).Property\n```\n\n这种方法效率差的原因在于多了一个Stack的Peek操作，当然，实际上这点儿差别可以忽略。\n最后是：Eval或者DataBinder.Eval，这两种方法都使用反射来查找属性或者索引器成员，效率大打折扣。\n另外一个值得注意的问题是，所有实现了INamingContainer接口的Control，都应该实现IDataItemContainer接口，因为在Control.DataBind的时候，如果发现控件实现了INamingContainer接口，就会试图去寻找它的DataItem，如果这个控件没有实现IDataItemContainer，则DataBinder.GetDataItem方法会使用反射看看控件有没有一个叫做DataItem的属性成员，显然这不是我们希望看到的。\n\n其实ASP.NET还有一个标记接口：INonBindingContainer，实现了INamingContainer接口的控件可以选择同时实现这个来命令ASP.NET不去寻找DataItem，可是很可惜，不知道微软出于什么目的，这个接口是internal的……\n其实效率方面不必太重视了，Eval表达式很好看的，即使有那么极端的重视效率，GeDataItem也是不错的选择。毋庸置疑的是强类型转换Container的效率是最高的，Eval最终是调用DataBinder.Eval方法，DataBinder.Eval是采用反射来获取数据的，这显然不如强类型数据转换。\n\n\n\n","source":"_posts/aspnet-2-0-the-eval-method-of-explanation.md","raw":"---\ntitle: Asp.net 2.0的Eval方法详解\ndate: 2009-01-14\ncategories: [Asp.Net]\ntags: [AspNet, Eval]\n---\n\n实际上Eval方法是TemplateControl的，而System.Web.UI.Page和System.Web.UI.UserControl都继承于TemplateControl，所以我们可以在Page和UserControl上直接调用个方法。\nPage.Eval方法可以帮助我们更好的撰写数据绑定表达式，在ASP.NET   1.x时代，数据绑定表达式的一般形式是：\n<!--more-->\n\n```\n<%# DataBinder.Eval(Container,“DataItem.Name”)   %>\n```\n\n而在ASP.NET   2.0中，同样的代码，我们可以这样写：\n\n```\n<%# Eval(“Name”)%>\n```\n\nASP.NET 2.0是怎么实现的呢？我们先从Eval方法来研究，通过反射.NET  fromwork   2.0类库的源代码，我们可以看到这个方法是这样实现的：\n\n```\nprotected internal object   Eval(string   expression)\n{\n    this.CheckPageExists();\n    return   DataBinder.Eval(this.Page.GetDataItem(),   expression);\n}\n```\n\n第一行我们不必管，这是检查调用的时候有没有Page对象的，如果没有则会抛出一个异常。关键是第二行：\n\n```\nreturn   DataBinder.Eval(this.Page.GetDataItem(),   expression);\n```\n\nPage.GetDataItem()也是2.0中新增的一个方法，用途是正是取代ASP.NET 1.x中的Container.DataItem。\n看来不摸清楚GetDataItem()方法，我们也很难明白Eval的原理。GetDataItem的实现也很简单：\n\n```\npublic object GetDataItem()\n{\n    if ((this._dataBindingContext == null) || (this._dataBindingContext.Count == 0))\n    {\n        throw new InvalidOperationException(SR.GetString(\"Page_MissingDataBindingContext\"));\n    }\n    return this._dataBindingContext.Peek();\n}\n```\n\n我们注意到了有一个内部对象_dataBindingContext，通过查源代码发现这是一个Stack类型的东西。所以他有Peek方法。而这一段代码很容易看懂，先判断这个Stack是否被实例化，然后，判断这个Stack里面是不是有任何元素，如果Stack没有被实例化或者没有元素则抛出一个异常。最后是将这个堆栈顶部的元素返回。\nASP.NET  2.0用了一个Stack来保存所谓的DataItem，我们很快就查到了为这个堆栈压元素和弹出元素的方法：Control.DataBind方法：\n\n```\nprotected virtual void DataBind(bool raiseOnDataBinding)\n{\n    //这个标志的用处在上下文中很容易推出来，如果有DataItem压栈，则在后面出栈。\n    bool flag1 = false;\n    //判断控件是不是数据绑定容器，实际上就是判断控件类是不是实现了INamingContainer\n    if (this.IsBindingContainer)\n    {\n        bool flag2;\n        //这个方法是判断控件是不是有DataItem属性，并把它取出来。\n        object obj1 = DataBinder.GetDataItem(this, out   flag2);\n        if (flag2 && (this.Page != null))//如果控件有DataItem\n        {\n            //把DataItem压栈，PushDataBindingContext就是调用_dataBindingContext的Push方法\n            this.Page.PushDataBindingContext(obj1);\n            flag1 = true;\n        }\n    }\n    try\n    {\n        //这里是判断是不是触发DataBinding事件的。\n        if (raiseOnDataBinding)\n        {\n            this.OnDataBinding(EventArgs.Empty);\n        }\n        //对子控件进行数据绑定，如果这个控件有DataItem，则上面会将DataItem压入栈顶，这样，\n        //在子控件里面调用Eval或者GetDataItem方法，就会把刚刚压进去的DataItem给取出来。\n        this.DataBindChildren();\n    }\n    finally\n    {\n        //如果刚才有压栈，则现在弹出来。\n        if (flag1)\n        {\n            //PopDataBindingContext就是调用_dataBindingContext的Pop方法\n            this.Page.PopDataBindingContext();\n        }\n    }\n}\n```\n\n至此，我们已经可以完全了解ASP.NET   2.0中GetDataIten和Eval方法运作的原理了\n\n关于效率：\n\n毋庸置疑的是强类型转换Container的效率是最高的，Eval最终是调用DataBinder.Eval方法，DataBinder.Eval是采用反射来获取数据的，这显然不如强类型数据转换。\n\n我们可以比较一下各种方法：\n\n```\n((Type)Container.DataItem).Property\n```\n\n这种方法效率是最高的，因为不存在任何反射。其次是：\n\n```\n((Type)GetDataItem()).Property\n```\n\n这种方法效率差的原因在于多了一个Stack的Peek操作，当然，实际上这点儿差别可以忽略。\n最后是：Eval或者DataBinder.Eval，这两种方法都使用反射来查找属性或者索引器成员，效率大打折扣。\n另外一个值得注意的问题是，所有实现了INamingContainer接口的Control，都应该实现IDataItemContainer接口，因为在Control.DataBind的时候，如果发现控件实现了INamingContainer接口，就会试图去寻找它的DataItem，如果这个控件没有实现IDataItemContainer，则DataBinder.GetDataItem方法会使用反射看看控件有没有一个叫做DataItem的属性成员，显然这不是我们希望看到的。\n\n其实ASP.NET还有一个标记接口：INonBindingContainer，实现了INamingContainer接口的控件可以选择同时实现这个来命令ASP.NET不去寻找DataItem，可是很可惜，不知道微软出于什么目的，这个接口是internal的……\n其实效率方面不必太重视了，Eval表达式很好看的，即使有那么极端的重视效率，GeDataItem也是不错的选择。毋庸置疑的是强类型转换Container的效率是最高的，Eval最终是调用DataBinder.Eval方法，DataBinder.Eval是采用反射来获取数据的，这显然不如强类型数据转换。\n\n\n\n","slug":"aspnet-2-0-the-eval-method-of-explanation","published":1,"updated":"2016-08-14T07:47:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz90s002pxfyntieq30ku","content":"<p>实际上Eval方法是TemplateControl的，而System.Web.UI.Page和System.Web.UI.UserControl都继承于TemplateControl，所以我们可以在Page和UserControl上直接调用个方法。<br>Page.Eval方法可以帮助我们更好的撰写数据绑定表达式，在ASP.NET   1.x时代，数据绑定表达式的一般形式是：<br><a id=\"more\"></a></p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"perl\"><span class=\"comment\"># DataBinder.Eval(Container,“DataItem.Name”)   </span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div></pre></td></tr></table></figure>\n<p>而在ASP.NET   2.0中，同样的代码，我们可以这样写：</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"perl\"><span class=\"comment\"># Eval(“Name”)</span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div></pre></td></tr></table></figure>\n<p>ASP.NET 2.0是怎么实现的呢？我们先从Eval方法来研究，通过反射.NET  fromwork   2.0类库的源代码，我们可以看到这个方法是这样实现的：</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">protected</span> <span class=\"keyword\">internal</span> <span class=\"keyword\">object</span>   Eval(string   expression)</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.CheckPageExists();</div><div class=\"line\">    <span class=\"keyword\">return</span>   DataBinder.Eval(<span class=\"keyword\">this</span>.Page.GetDataItem(),   expression);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>第一行我们不必管，这是检查调用的时候有没有Page对象的，如果没有则会抛出一个异常。关键是第二行：</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">return</span>   DataBinder.Eval(<span class=\"keyword\">this</span>.Page.GetDataItem(),   expression);</div></pre></td></tr></table></figure>\n<p>Page.GetDataItem()也是2.0中新增的一个方法，用途是正是取代ASP.NET 1.x中的Container.DataItem。<br>看来不摸清楚GetDataItem()方法，我们也很难明白Eval的原理。GetDataItem的实现也很简单：</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">object</span> GetDataItem()</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> ((<span class=\"keyword\">this</span>._dataBindingContext == <span class=\"literal\">null</span>) || (<span class=\"keyword\">this</span>._dataBindingContext.Count == <span class=\"number\">0</span>))</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">throw</span> new InvalidOperationException(SR.GetString(<span class=\"string\">\"Page_MissingDataBindingContext\"</span>));</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._dataBindingContext.Peek();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>我们注意到了有一个内部对象_dataBindingContext，通过查源代码发现这是一个Stack类型的东西。所以他有Peek方法。而这一段代码很容易看懂，先判断这个Stack是否被实例化，然后，判断这个Stack里面是不是有任何元素，如果Stack没有被实例化或者没有元素则抛出一个异常。最后是将这个堆栈顶部的元素返回。<br>ASP.NET  2.0用了一个Stack来保存所谓的DataItem，我们很快就查到了为这个堆栈压元素和弹出元素的方法：Control.DataBind方法：</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">protected</span> virtual void DataBind(bool raiseOnDataBinding)</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">//这个标志的用处在上下文中很容易推出来，如果有DataItem压栈，则在后面出栈。</span></div><div class=\"line\">    bool flag1 = <span class=\"literal\">false</span>;</div><div class=\"line\">    <span class=\"comment\">//判断控件是不是数据绑定容器，实际上就是判断控件类是不是实现了INamingContainer</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.IsBindingContainer)</div><div class=\"line\">    &#123;</div><div class=\"line\">        bool flag2;</div><div class=\"line\">        <span class=\"comment\">//这个方法是判断控件是不是有DataItem属性，并把它取出来。</span></div><div class=\"line\">        <span class=\"keyword\">object</span> obj1 = DataBinder.GetDataItem(<span class=\"keyword\">this</span>, <span class=\"keyword\">out</span>   flag2);</div><div class=\"line\">        <span class=\"keyword\">if</span> (flag2 &amp;&amp; (<span class=\"keyword\">this</span>.Page != <span class=\"literal\">null</span>))<span class=\"comment\">//如果控件有DataItem</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//把DataItem压栈，PushDataBindingContext就是调用_dataBindingContext的Push方法</span></div><div class=\"line\">            <span class=\"keyword\">this</span>.Page.PushDataBindingContext(obj1);</div><div class=\"line\">            flag1 = <span class=\"literal\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">try</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">//这里是判断是不是触发DataBinding事件的。</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (raiseOnDataBinding)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.OnDataBinding(EventArgs.Empty);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">//对子控件进行数据绑定，如果这个控件有DataItem，则上面会将DataItem压入栈顶，这样，</span></div><div class=\"line\">        <span class=\"comment\">//在子控件里面调用Eval或者GetDataItem方法，就会把刚刚压进去的DataItem给取出来。</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.DataBindChildren();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">finally</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">//如果刚才有压栈，则现在弹出来。</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (flag1)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//PopDataBindingContext就是调用_dataBindingContext的Pop方法</span></div><div class=\"line\">            <span class=\"keyword\">this</span>.Page.PopDataBindingContext();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>至此，我们已经可以完全了解ASP.NET   2.0中GetDataIten和Eval方法运作的原理了</p>\n<p>关于效率：</p>\n<p>毋庸置疑的是强类型转换Container的效率是最高的，Eval最终是调用DataBinder.Eval方法，DataBinder.Eval是采用反射来获取数据的，这显然不如强类型数据转换。</p>\n<p>我们可以比较一下各种方法：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">((<span class=\"selector-tag\">Type</span>)<span class=\"selector-tag\">Container</span><span class=\"selector-class\">.DataItem</span>)<span class=\"selector-class\">.Property</span></div></pre></td></tr></table></figure>\n<p>这种方法效率是最高的，因为不存在任何反射。其次是：</p>\n<figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">((<span class=\"keyword\">Type</span>)GetDataItem()).<span class=\"keyword\">Property</span></div></pre></td></tr></table></figure>\n<p>这种方法效率差的原因在于多了一个Stack的Peek操作，当然，实际上这点儿差别可以忽略。<br>最后是：Eval或者DataBinder.Eval，这两种方法都使用反射来查找属性或者索引器成员，效率大打折扣。<br>另外一个值得注意的问题是，所有实现了INamingContainer接口的Control，都应该实现IDataItemContainer接口，因为在Control.DataBind的时候，如果发现控件实现了INamingContainer接口，就会试图去寻找它的DataItem，如果这个控件没有实现IDataItemContainer，则DataBinder.GetDataItem方法会使用反射看看控件有没有一个叫做DataItem的属性成员，显然这不是我们希望看到的。</p>\n<p>其实ASP.NET还有一个标记接口：INonBindingContainer，实现了INamingContainer接口的控件可以选择同时实现这个来命令ASP.NET不去寻找DataItem，可是很可惜，不知道微软出于什么目的，这个接口是internal的……<br>其实效率方面不必太重视了，Eval表达式很好看的，即使有那么极端的重视效率，GeDataItem也是不错的选择。毋庸置疑的是强类型转换Container的效率是最高的，Eval最终是调用DataBinder.Eval方法，DataBinder.Eval是采用反射来获取数据的，这显然不如强类型数据转换。</p>\n","excerpt":"<p>实际上Eval方法是TemplateControl的，而System.Web.UI.Page和System.Web.UI.UserControl都继承于TemplateControl，所以我们可以在Page和UserControl上直接调用个方法。<br>Page.Eval方法可以帮助我们更好的撰写数据绑定表达式，在ASP.NET   1.x时代，数据绑定表达式的一般形式是：<br>","more":"</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"perl\"><span class=\"comment\"># DataBinder.Eval(Container,“DataItem.Name”)   </span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div></pre></td></tr></table></figure>\n<p>而在ASP.NET   2.0中，同样的代码，我们可以这样写：</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"perl\"><span class=\"comment\"># Eval(“Name”)</span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div></pre></td></tr></table></figure>\n<p>ASP.NET 2.0是怎么实现的呢？我们先从Eval方法来研究，通过反射.NET  fromwork   2.0类库的源代码，我们可以看到这个方法是这样实现的：</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">protected</span> <span class=\"keyword\">internal</span> <span class=\"keyword\">object</span>   Eval(string   expression)</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.CheckPageExists();</div><div class=\"line\">    <span class=\"keyword\">return</span>   DataBinder.Eval(<span class=\"keyword\">this</span>.Page.GetDataItem(),   expression);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>第一行我们不必管，这是检查调用的时候有没有Page对象的，如果没有则会抛出一个异常。关键是第二行：</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">return</span>   DataBinder.Eval(<span class=\"keyword\">this</span>.Page.GetDataItem(),   expression);</div></pre></td></tr></table></figure>\n<p>Page.GetDataItem()也是2.0中新增的一个方法，用途是正是取代ASP.NET 1.x中的Container.DataItem。<br>看来不摸清楚GetDataItem()方法，我们也很难明白Eval的原理。GetDataItem的实现也很简单：</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">object</span> GetDataItem()</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> ((<span class=\"keyword\">this</span>._dataBindingContext == <span class=\"literal\">null</span>) || (<span class=\"keyword\">this</span>._dataBindingContext.Count == <span class=\"number\">0</span>))</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">throw</span> new InvalidOperationException(SR.GetString(<span class=\"string\">\"Page_MissingDataBindingContext\"</span>));</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._dataBindingContext.Peek();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>我们注意到了有一个内部对象_dataBindingContext，通过查源代码发现这是一个Stack类型的东西。所以他有Peek方法。而这一段代码很容易看懂，先判断这个Stack是否被实例化，然后，判断这个Stack里面是不是有任何元素，如果Stack没有被实例化或者没有元素则抛出一个异常。最后是将这个堆栈顶部的元素返回。<br>ASP.NET  2.0用了一个Stack来保存所谓的DataItem，我们很快就查到了为这个堆栈压元素和弹出元素的方法：Control.DataBind方法：</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">protected</span> virtual void DataBind(bool raiseOnDataBinding)</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">//这个标志的用处在上下文中很容易推出来，如果有DataItem压栈，则在后面出栈。</span></div><div class=\"line\">    bool flag1 = <span class=\"literal\">false</span>;</div><div class=\"line\">    <span class=\"comment\">//判断控件是不是数据绑定容器，实际上就是判断控件类是不是实现了INamingContainer</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.IsBindingContainer)</div><div class=\"line\">    &#123;</div><div class=\"line\">        bool flag2;</div><div class=\"line\">        <span class=\"comment\">//这个方法是判断控件是不是有DataItem属性，并把它取出来。</span></div><div class=\"line\">        <span class=\"keyword\">object</span> obj1 = DataBinder.GetDataItem(<span class=\"keyword\">this</span>, <span class=\"keyword\">out</span>   flag2);</div><div class=\"line\">        <span class=\"keyword\">if</span> (flag2 &amp;&amp; (<span class=\"keyword\">this</span>.Page != <span class=\"literal\">null</span>))<span class=\"comment\">//如果控件有DataItem</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//把DataItem压栈，PushDataBindingContext就是调用_dataBindingContext的Push方法</span></div><div class=\"line\">            <span class=\"keyword\">this</span>.Page.PushDataBindingContext(obj1);</div><div class=\"line\">            flag1 = <span class=\"literal\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">try</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">//这里是判断是不是触发DataBinding事件的。</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (raiseOnDataBinding)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.OnDataBinding(EventArgs.Empty);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">//对子控件进行数据绑定，如果这个控件有DataItem，则上面会将DataItem压入栈顶，这样，</span></div><div class=\"line\">        <span class=\"comment\">//在子控件里面调用Eval或者GetDataItem方法，就会把刚刚压进去的DataItem给取出来。</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.DataBindChildren();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">finally</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">//如果刚才有压栈，则现在弹出来。</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (flag1)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//PopDataBindingContext就是调用_dataBindingContext的Pop方法</span></div><div class=\"line\">            <span class=\"keyword\">this</span>.Page.PopDataBindingContext();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>至此，我们已经可以完全了解ASP.NET   2.0中GetDataIten和Eval方法运作的原理了</p>\n<p>关于效率：</p>\n<p>毋庸置疑的是强类型转换Container的效率是最高的，Eval最终是调用DataBinder.Eval方法，DataBinder.Eval是采用反射来获取数据的，这显然不如强类型数据转换。</p>\n<p>我们可以比较一下各种方法：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">((<span class=\"selector-tag\">Type</span>)<span class=\"selector-tag\">Container</span><span class=\"selector-class\">.DataItem</span>)<span class=\"selector-class\">.Property</span></div></pre></td></tr></table></figure>\n<p>这种方法效率是最高的，因为不存在任何反射。其次是：</p>\n<figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">((<span class=\"keyword\">Type</span>)GetDataItem()).<span class=\"keyword\">Property</span></div></pre></td></tr></table></figure>\n<p>这种方法效率差的原因在于多了一个Stack的Peek操作，当然，实际上这点儿差别可以忽略。<br>最后是：Eval或者DataBinder.Eval，这两种方法都使用反射来查找属性或者索引器成员，效率大打折扣。<br>另外一个值得注意的问题是，所有实现了INamingContainer接口的Control，都应该实现IDataItemContainer接口，因为在Control.DataBind的时候，如果发现控件实现了INamingContainer接口，就会试图去寻找它的DataItem，如果这个控件没有实现IDataItemContainer，则DataBinder.GetDataItem方法会使用反射看看控件有没有一个叫做DataItem的属性成员，显然这不是我们希望看到的。</p>\n<p>其实ASP.NET还有一个标记接口：INonBindingContainer，实现了INamingContainer接口的控件可以选择同时实现这个来命令ASP.NET不去寻找DataItem，可是很可惜，不知道微软出于什么目的，这个接口是internal的……<br>其实效率方面不必太重视了，Eval表达式很好看的，即使有那么极端的重视效率，GeDataItem也是不错的选择。毋庸置疑的是强类型转换Container的效率是最高的，Eval最终是调用DataBinder.Eval方法，DataBinder.Eval是采用反射来获取数据的，这显然不如强类型数据转换。</p>"},{"title":"Asp.Net的性能问题","date":"2006-12-22T16:00:00.000Z","_content":"\n性能对于一个应用程序来说是一个很重要的问题，在web的开发中也是一样，相信没有人愿意在电脑屏幕前花8秒钟来等待一个也面的打开，这就是常说的在web上的8秒钟原则。对于一个应用程序的性能我们应该把它当作是应用程序的一项功能，在设计的时候就应该处理好性能的问题，而不应该在整个程序开发完了以后再来进行优化，因为这样会付出更多的代价。\n<!--more-->\n下面来讨论一下在asp.net中的性能问题。\n\nasp.net相对于以前的版本asp通过引擎的改变，从而提高了性能。Asp是一种脚本解释引擎，有很多的代码是运行时接受用户请求后编译的，这样在很多的用户都发生同一请求时会造成服务器端的压力很重，而asp.net是采用一次编译的策略，只有当某一个页面第一次被请求时服务器才通过整个的编译过程，这样就大大提高了运行效率。但只是靠引擎的优化并不能完全解决asp.net的性能问题，代码的优化是另一个很重要的方面。\n\n用Asp.net创建web应用程序时应该使用三层结构模型，三层就够是近几年来比较流行的一种模型。三层结构的三层分别为表示层（用户可以看到的页面）、业务层（实现应用程序的业务功能，一般称为组件，由.vb或.cs等文件编译而成的.dll控件）、数据层（主要涉及到用ado.net访问数据库）。三层结构可以使程序具有更好的可扩展性、灵活性、安全性、平台无关性以及可维护性。\n\nAsp.net可以使用C＃或vb.net这些面向对象的高级语言来编写逻辑代码，我们使用这些语言定义变量时要求显式地定义所有变量的类型，避免使用object类型的晚绑定方法，应该早绑定，早绑定有利于代码的执行有利于提高性能。我们可以在page指令中加上Explicit＝”true”,如：`<%@ Page Language=”VB” Explicit=”true”%>`这样我们每次在声明变量时都应该指定类型。还可以在Page指令中加上Strict属性如：`<%@ Page Language=”VB” Strict=”true” %>`来避免晚绑定。\n\nViewState是asp.net的新功能。使用ViewState可以很容易地在往返服务器的过程中保持控件状态。但使用ViewState会使文件的大小明显增大而且还会影响性能。所以建议如果不是万不得已就应该关闭ViewState如：`<%@ Page EnableViewState=”false” %> `或者是单独停掉某一个控件的ViewState。除此之外，对于Session我们还应该选择合适的方式存放，有三种方式：Inproc（在进程中存放）、StateServer（放在状态服务器）、database（在数据库中存放）。在Inproc中性能最好，但扩展性相对来说较差，其它的两种方式性能没Inproc好，但具有良好的扩展性，所以我们应该根据具体的情况来作选择。如果不需要使用Sesion也应该禁用如：`<%@ Page EnableSession=”false” %>` 这样有助于也面的请求。如果只是读取Session不做修改可以这样做：`<%@ Page EnableSession=”ReadOnly” %>` 也可以提高性能。\n\n还有一个很重要的提高性能的方法就是使用缓存技术，asp.net中有三种缓存机制页面缓存、片段缓存和数据缓存。页面缓存是将频繁访问的页面放入缓存，当用户再次请求该页面时就不需要重新生成页面而是直接将缓存中的页面发送到客户端，节省了响应时间，极大提高了性能。具体做法是在页面代码中加上OutputCache指令，如：`<%@ OutputCache Duration=”60” VaryByParam=”none” %>` 在上面的代码中Duration是指缓存的时间，根据程序的实际情况自行设定，VaryByparam是指缓存的内容根据一个参数来发生变化。比方说已个页面上有一个查询天气的功能，当一个用户输入北京查询了后，页面被缓存了，另一个用户马上查询上海的天气，为了产生输出的结果还是被缓存的北京这样的错误，VaryByparam就起到作用了，`<%@ OutputCache Duration=”60” VaryByParam=”TextBox1” %>` 其中TextBox1是指输入地址的文本框的ID号。片段页面缓存主要是用于缓存用户控件中的内容，在用户控件的页面代码中添加OutputCache指令，然后在页面中加入用户控件就可以了。有些时候，用户会请求大量相同的数据，如果频繁地读取这些数据就会浪费很多的时间，这时就可以应用数据缓存技术来提高性能。可以通过编程的方式来缓存任何对象。在asp.net中是通过Cache类来实现的。如：\n\n```\nCache[“myName”]=myName;  \nmyName=Cache[“myName”];\n```\n\n做web开发离不开数据库，在操作数据库的时候应尽量使用存储过程，这样可以消除数据库的往返访问。在使用DataSet和DataReader时也要注意，如果从数据库中查询出的数据只是在前端显示而不需要修改就应该使用DataReader,因为DataReader的性能比DataSet好。\n\n","source":"_posts/asp-net-performance-issues.md","raw":"---\ntitle: Asp.Net的性能问题\ndate: 2006-12-23\ncategories: [Asp.Net]\ntags: [AspNet,性能]\n---\n\n性能对于一个应用程序来说是一个很重要的问题，在web的开发中也是一样，相信没有人愿意在电脑屏幕前花8秒钟来等待一个也面的打开，这就是常说的在web上的8秒钟原则。对于一个应用程序的性能我们应该把它当作是应用程序的一项功能，在设计的时候就应该处理好性能的问题，而不应该在整个程序开发完了以后再来进行优化，因为这样会付出更多的代价。\n<!--more-->\n下面来讨论一下在asp.net中的性能问题。\n\nasp.net相对于以前的版本asp通过引擎的改变，从而提高了性能。Asp是一种脚本解释引擎，有很多的代码是运行时接受用户请求后编译的，这样在很多的用户都发生同一请求时会造成服务器端的压力很重，而asp.net是采用一次编译的策略，只有当某一个页面第一次被请求时服务器才通过整个的编译过程，这样就大大提高了运行效率。但只是靠引擎的优化并不能完全解决asp.net的性能问题，代码的优化是另一个很重要的方面。\n\n用Asp.net创建web应用程序时应该使用三层结构模型，三层就够是近几年来比较流行的一种模型。三层结构的三层分别为表示层（用户可以看到的页面）、业务层（实现应用程序的业务功能，一般称为组件，由.vb或.cs等文件编译而成的.dll控件）、数据层（主要涉及到用ado.net访问数据库）。三层结构可以使程序具有更好的可扩展性、灵活性、安全性、平台无关性以及可维护性。\n\nAsp.net可以使用C＃或vb.net这些面向对象的高级语言来编写逻辑代码，我们使用这些语言定义变量时要求显式地定义所有变量的类型，避免使用object类型的晚绑定方法，应该早绑定，早绑定有利于代码的执行有利于提高性能。我们可以在page指令中加上Explicit＝”true”,如：`<%@ Page Language=”VB” Explicit=”true”%>`这样我们每次在声明变量时都应该指定类型。还可以在Page指令中加上Strict属性如：`<%@ Page Language=”VB” Strict=”true” %>`来避免晚绑定。\n\nViewState是asp.net的新功能。使用ViewState可以很容易地在往返服务器的过程中保持控件状态。但使用ViewState会使文件的大小明显增大而且还会影响性能。所以建议如果不是万不得已就应该关闭ViewState如：`<%@ Page EnableViewState=”false” %> `或者是单独停掉某一个控件的ViewState。除此之外，对于Session我们还应该选择合适的方式存放，有三种方式：Inproc（在进程中存放）、StateServer（放在状态服务器）、database（在数据库中存放）。在Inproc中性能最好，但扩展性相对来说较差，其它的两种方式性能没Inproc好，但具有良好的扩展性，所以我们应该根据具体的情况来作选择。如果不需要使用Sesion也应该禁用如：`<%@ Page EnableSession=”false” %>` 这样有助于也面的请求。如果只是读取Session不做修改可以这样做：`<%@ Page EnableSession=”ReadOnly” %>` 也可以提高性能。\n\n还有一个很重要的提高性能的方法就是使用缓存技术，asp.net中有三种缓存机制页面缓存、片段缓存和数据缓存。页面缓存是将频繁访问的页面放入缓存，当用户再次请求该页面时就不需要重新生成页面而是直接将缓存中的页面发送到客户端，节省了响应时间，极大提高了性能。具体做法是在页面代码中加上OutputCache指令，如：`<%@ OutputCache Duration=”60” VaryByParam=”none” %>` 在上面的代码中Duration是指缓存的时间，根据程序的实际情况自行设定，VaryByparam是指缓存的内容根据一个参数来发生变化。比方说已个页面上有一个查询天气的功能，当一个用户输入北京查询了后，页面被缓存了，另一个用户马上查询上海的天气，为了产生输出的结果还是被缓存的北京这样的错误，VaryByparam就起到作用了，`<%@ OutputCache Duration=”60” VaryByParam=”TextBox1” %>` 其中TextBox1是指输入地址的文本框的ID号。片段页面缓存主要是用于缓存用户控件中的内容，在用户控件的页面代码中添加OutputCache指令，然后在页面中加入用户控件就可以了。有些时候，用户会请求大量相同的数据，如果频繁地读取这些数据就会浪费很多的时间，这时就可以应用数据缓存技术来提高性能。可以通过编程的方式来缓存任何对象。在asp.net中是通过Cache类来实现的。如：\n\n```\nCache[“myName”]=myName;  \nmyName=Cache[“myName”];\n```\n\n做web开发离不开数据库，在操作数据库的时候应尽量使用存储过程，这样可以消除数据库的往返访问。在使用DataSet和DataReader时也要注意，如果从数据库中查询出的数据只是在前端显示而不需要修改就应该使用DataReader,因为DataReader的性能比DataSet好。\n\n","slug":"asp-net-performance-issues","published":1,"updated":"2016-08-12T15:28:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz90t002sxfynn066cv6c","content":"<p>性能对于一个应用程序来说是一个很重要的问题，在web的开发中也是一样，相信没有人愿意在电脑屏幕前花8秒钟来等待一个也面的打开，这就是常说的在web上的8秒钟原则。对于一个应用程序的性能我们应该把它当作是应用程序的一项功能，在设计的时候就应该处理好性能的问题，而不应该在整个程序开发完了以后再来进行优化，因为这样会付出更多的代价。<br><a id=\"more\"></a><br>下面来讨论一下在asp.net中的性能问题。</p>\n<p>asp.net相对于以前的版本asp通过引擎的改变，从而提高了性能。Asp是一种脚本解释引擎，有很多的代码是运行时接受用户请求后编译的，这样在很多的用户都发生同一请求时会造成服务器端的压力很重，而asp.net是采用一次编译的策略，只有当某一个页面第一次被请求时服务器才通过整个的编译过程，这样就大大提高了运行效率。但只是靠引擎的优化并不能完全解决asp.net的性能问题，代码的优化是另一个很重要的方面。</p>\n<p>用Asp.net创建web应用程序时应该使用三层结构模型，三层就够是近几年来比较流行的一种模型。三层结构的三层分别为表示层（用户可以看到的页面）、业务层（实现应用程序的业务功能，一般称为组件，由.vb或.cs等文件编译而成的.dll控件）、数据层（主要涉及到用ado.net访问数据库）。三层结构可以使程序具有更好的可扩展性、灵活性、安全性、平台无关性以及可维护性。</p>\n<p>Asp.net可以使用C＃或vb.net这些面向对象的高级语言来编写逻辑代码，我们使用这些语言定义变量时要求显式地定义所有变量的类型，避免使用object类型的晚绑定方法，应该早绑定，早绑定有利于代码的执行有利于提高性能。我们可以在page指令中加上Explicit＝”true”,如：<code>&lt;%@ Page Language=”VB” Explicit=”true”%&gt;</code>这样我们每次在声明变量时都应该指定类型。还可以在Page指令中加上Strict属性如：<code>&lt;%@ Page Language=”VB” Strict=”true” %&gt;</code>来避免晚绑定。</p>\n<p>ViewState是asp.net的新功能。使用ViewState可以很容易地在往返服务器的过程中保持控件状态。但使用ViewState会使文件的大小明显增大而且还会影响性能。所以建议如果不是万不得已就应该关闭ViewState如：<code>&lt;%@ Page EnableViewState=”false” %&gt;</code>或者是单独停掉某一个控件的ViewState。除此之外，对于Session我们还应该选择合适的方式存放，有三种方式：Inproc（在进程中存放）、StateServer（放在状态服务器）、database（在数据库中存放）。在Inproc中性能最好，但扩展性相对来说较差，其它的两种方式性能没Inproc好，但具有良好的扩展性，所以我们应该根据具体的情况来作选择。如果不需要使用Sesion也应该禁用如：<code>&lt;%@ Page EnableSession=”false” %&gt;</code> 这样有助于也面的请求。如果只是读取Session不做修改可以这样做：<code>&lt;%@ Page EnableSession=”ReadOnly” %&gt;</code> 也可以提高性能。</p>\n<p>还有一个很重要的提高性能的方法就是使用缓存技术，asp.net中有三种缓存机制页面缓存、片段缓存和数据缓存。页面缓存是将频繁访问的页面放入缓存，当用户再次请求该页面时就不需要重新生成页面而是直接将缓存中的页面发送到客户端，节省了响应时间，极大提高了性能。具体做法是在页面代码中加上OutputCache指令，如：<code>&lt;%@ OutputCache Duration=”60” VaryByParam=”none” %&gt;</code> 在上面的代码中Duration是指缓存的时间，根据程序的实际情况自行设定，VaryByparam是指缓存的内容根据一个参数来发生变化。比方说已个页面上有一个查询天气的功能，当一个用户输入北京查询了后，页面被缓存了，另一个用户马上查询上海的天气，为了产生输出的结果还是被缓存的北京这样的错误，VaryByparam就起到作用了，<code>&lt;%@ OutputCache Duration=”60” VaryByParam=”TextBox1” %&gt;</code> 其中TextBox1是指输入地址的文本框的ID号。片段页面缓存主要是用于缓存用户控件中的内容，在用户控件的页面代码中添加OutputCache指令，然后在页面中加入用户控件就可以了。有些时候，用户会请求大量相同的数据，如果频繁地读取这些数据就会浪费很多的时间，这时就可以应用数据缓存技术来提高性能。可以通过编程的方式来缓存任何对象。在asp.net中是通过Cache类来实现的。如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">Cache</span>[“myName”]=myName;  </div><div class=\"line\">myName=<span class=\"keyword\">Cache</span>[“myName”];</div></pre></td></tr></table></figure>\n<p>做web开发离不开数据库，在操作数据库的时候应尽量使用存储过程，这样可以消除数据库的往返访问。在使用DataSet和DataReader时也要注意，如果从数据库中查询出的数据只是在前端显示而不需要修改就应该使用DataReader,因为DataReader的性能比DataSet好。</p>\n","excerpt":"<p>性能对于一个应用程序来说是一个很重要的问题，在web的开发中也是一样，相信没有人愿意在电脑屏幕前花8秒钟来等待一个也面的打开，这就是常说的在web上的8秒钟原则。对于一个应用程序的性能我们应该把它当作是应用程序的一项功能，在设计的时候就应该处理好性能的问题，而不应该在整个程序开发完了以后再来进行优化，因为这样会付出更多的代价。<br>","more":"<br>下面来讨论一下在asp.net中的性能问题。</p>\n<p>asp.net相对于以前的版本asp通过引擎的改变，从而提高了性能。Asp是一种脚本解释引擎，有很多的代码是运行时接受用户请求后编译的，这样在很多的用户都发生同一请求时会造成服务器端的压力很重，而asp.net是采用一次编译的策略，只有当某一个页面第一次被请求时服务器才通过整个的编译过程，这样就大大提高了运行效率。但只是靠引擎的优化并不能完全解决asp.net的性能问题，代码的优化是另一个很重要的方面。</p>\n<p>用Asp.net创建web应用程序时应该使用三层结构模型，三层就够是近几年来比较流行的一种模型。三层结构的三层分别为表示层（用户可以看到的页面）、业务层（实现应用程序的业务功能，一般称为组件，由.vb或.cs等文件编译而成的.dll控件）、数据层（主要涉及到用ado.net访问数据库）。三层结构可以使程序具有更好的可扩展性、灵活性、安全性、平台无关性以及可维护性。</p>\n<p>Asp.net可以使用C＃或vb.net这些面向对象的高级语言来编写逻辑代码，我们使用这些语言定义变量时要求显式地定义所有变量的类型，避免使用object类型的晚绑定方法，应该早绑定，早绑定有利于代码的执行有利于提高性能。我们可以在page指令中加上Explicit＝”true”,如：<code>&lt;%@ Page Language=”VB” Explicit=”true”%&gt;</code>这样我们每次在声明变量时都应该指定类型。还可以在Page指令中加上Strict属性如：<code>&lt;%@ Page Language=”VB” Strict=”true” %&gt;</code>来避免晚绑定。</p>\n<p>ViewState是asp.net的新功能。使用ViewState可以很容易地在往返服务器的过程中保持控件状态。但使用ViewState会使文件的大小明显增大而且还会影响性能。所以建议如果不是万不得已就应该关闭ViewState如：<code>&lt;%@ Page EnableViewState=”false” %&gt;</code>或者是单独停掉某一个控件的ViewState。除此之外，对于Session我们还应该选择合适的方式存放，有三种方式：Inproc（在进程中存放）、StateServer（放在状态服务器）、database（在数据库中存放）。在Inproc中性能最好，但扩展性相对来说较差，其它的两种方式性能没Inproc好，但具有良好的扩展性，所以我们应该根据具体的情况来作选择。如果不需要使用Sesion也应该禁用如：<code>&lt;%@ Page EnableSession=”false” %&gt;</code> 这样有助于也面的请求。如果只是读取Session不做修改可以这样做：<code>&lt;%@ Page EnableSession=”ReadOnly” %&gt;</code> 也可以提高性能。</p>\n<p>还有一个很重要的提高性能的方法就是使用缓存技术，asp.net中有三种缓存机制页面缓存、片段缓存和数据缓存。页面缓存是将频繁访问的页面放入缓存，当用户再次请求该页面时就不需要重新生成页面而是直接将缓存中的页面发送到客户端，节省了响应时间，极大提高了性能。具体做法是在页面代码中加上OutputCache指令，如：<code>&lt;%@ OutputCache Duration=”60” VaryByParam=”none” %&gt;</code> 在上面的代码中Duration是指缓存的时间，根据程序的实际情况自行设定，VaryByparam是指缓存的内容根据一个参数来发生变化。比方说已个页面上有一个查询天气的功能，当一个用户输入北京查询了后，页面被缓存了，另一个用户马上查询上海的天气，为了产生输出的结果还是被缓存的北京这样的错误，VaryByparam就起到作用了，<code>&lt;%@ OutputCache Duration=”60” VaryByParam=”TextBox1” %&gt;</code> 其中TextBox1是指输入地址的文本框的ID号。片段页面缓存主要是用于缓存用户控件中的内容，在用户控件的页面代码中添加OutputCache指令，然后在页面中加入用户控件就可以了。有些时候，用户会请求大量相同的数据，如果频繁地读取这些数据就会浪费很多的时间，这时就可以应用数据缓存技术来提高性能。可以通过编程的方式来缓存任何对象。在asp.net中是通过Cache类来实现的。如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">Cache</span>[“myName”]=myName;  </div><div class=\"line\">myName=<span class=\"keyword\">Cache</span>[“myName”];</div></pre></td></tr></table></figure>\n<p>做web开发离不开数据库，在操作数据库的时候应尽量使用存储过程，这样可以消除数据库的往返访问。在使用DataSet和DataReader时也要注意，如果从数据库中查询出的数据只是在前端显示而不需要修改就应该使用DataReader,因为DataReader的性能比DataSet好。</p>"},{"title":"Asp.Net 连接Access数据库","date":"2009-01-09T16:00:00.000Z","_content":"\n自学程序以来，一直使用的都是sqlserver数据库，最近帮一朋友做一个access的demo，发现在数据库的连接方面就存在很大差异，在web.config中配置好连接字符串，然后在后台取，在此我的做法是存两个值，将Provider和assess数据库文件的路径分开存，如下：\n<!--more-->\n\n```\n<connectionStrings>\n  <add name=\"access_con\" connectionString=\"Provider=Microsoft.Jet.Oledb.4.0;data source=\"/>\n  <add name=\"access_path\" connectionString=\"~/App_Data/db.mdb\"/>\n</connectionStrings>\n```\n\n因为在配置文件中存放的为相对路径，所以在后台读取出来后要将其转换为绝对路径，如下:\n\n```\nprivate string con_str = ConfigurationManager.ConnectionStrings[\"access_con\"].ConnectionString\n+HttpContext.Current.Server.MapPath( ConfigurationManager.ConnectionStrings[\"access_path\"].ConnectionString);\n```\n\n主要的区别就在连接字符串方面，其他的操作和sqlserver基本相同，将命名空间和类换成olddb的就行。在webconfig中写连接字符串时有一点需要注意：\n\n```\n<add name=\"access_con\" connectionString=\"Provider=Microsoft.Jet.Oledb.4.0;data source=\"/>\n```\n\n上面代码中的data source 中间一定要有空格，不能写成了datasource ，否则在执行程序的时候就会报错，如下：\n\n![2010-12-30_124238](http://oec2003.qiniudn.com/2010-12-30_124238.gif)\n\n只要稍微细心点，这种错误就能够避免。\n\n","source":"_posts/aspnet-access-database-connection.md","raw":"---\ntitle: Asp.Net 连接Access数据库\ndate: 2009-01-10\ncategories: [Asp.Net]\ntags:\n---\n\n自学程序以来，一直使用的都是sqlserver数据库，最近帮一朋友做一个access的demo，发现在数据库的连接方面就存在很大差异，在web.config中配置好连接字符串，然后在后台取，在此我的做法是存两个值，将Provider和assess数据库文件的路径分开存，如下：\n<!--more-->\n\n```\n<connectionStrings>\n  <add name=\"access_con\" connectionString=\"Provider=Microsoft.Jet.Oledb.4.0;data source=\"/>\n  <add name=\"access_path\" connectionString=\"~/App_Data/db.mdb\"/>\n</connectionStrings>\n```\n\n因为在配置文件中存放的为相对路径，所以在后台读取出来后要将其转换为绝对路径，如下:\n\n```\nprivate string con_str = ConfigurationManager.ConnectionStrings[\"access_con\"].ConnectionString\n+HttpContext.Current.Server.MapPath( ConfigurationManager.ConnectionStrings[\"access_path\"].ConnectionString);\n```\n\n主要的区别就在连接字符串方面，其他的操作和sqlserver基本相同，将命名空间和类换成olddb的就行。在webconfig中写连接字符串时有一点需要注意：\n\n```\n<add name=\"access_con\" connectionString=\"Provider=Microsoft.Jet.Oledb.4.0;data source=\"/>\n```\n\n上面代码中的data source 中间一定要有空格，不能写成了datasource ，否则在执行程序的时候就会报错，如下：\n\n![2010-12-30_124238](http://oec2003.qiniudn.com/2010-12-30_124238.gif)\n\n只要稍微细心点，这种错误就能够避免。\n\n","slug":"aspnet-access-database-connection","published":1,"updated":"2016-08-14T07:44:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz90v002wxfynpvw0atqu","content":"<p>自学程序以来，一直使用的都是sqlserver数据库，最近帮一朋友做一个access的demo，发现在数据库的连接方面就存在很大差异，在web.config中配置好连接字符串，然后在后台取，在此我的做法是存两个值，将Provider和assess数据库文件的路径分开存，如下：<br><a id=\"more\"></a></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">connectionStrings</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">add</span> <span class=\"attr\">name</span>=<span class=\"string\">\"access_con\"</span> <span class=\"attr\">connectionString</span>=<span class=\"string\">\"Provider=Microsoft.Jet.Oledb.4.0;data source=\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">add</span> <span class=\"attr\">name</span>=<span class=\"string\">\"access_path\"</span> <span class=\"attr\">connectionString</span>=<span class=\"string\">\"~/App_Data/db.mdb\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">connectionStrings</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>因为在配置文件中存放的为相对路径，所以在后台读取出来后要将其转换为绝对路径，如下:</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">string</span> con_str = ConfigurationManager.ConnectionStrings[<span class=\"string\">\"access_con\"</span>].ConnectionString</div><div class=\"line\">+HttpContext.Current.<span class=\"built_in\">Server</span>.MapPath( ConfigurationManager.ConnectionStrings[<span class=\"string\">\"access_path\"</span>].ConnectionString);</div></pre></td></tr></table></figure>\n<p>主要的区别就在连接字符串方面，其他的操作和sqlserver基本相同，将命名空间和类换成olddb的就行。在webconfig中写连接字符串时有一点需要注意：</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;add <span class=\"built_in\">name</span>=<span class=\"string\">\"access_con\"</span> connectionString=<span class=\"string\">\"Provider=Microsoft.Jet.Oledb.4.0;data source=\"</span>/&gt;</div></pre></td></tr></table></figure>\n<p>上面代码中的data source 中间一定要有空格，不能写成了datasource ，否则在执行程序的时候就会报错，如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_124238.gif\" alt=\"2010-12-30_124238\"></p>\n<p>只要稍微细心点，这种错误就能够避免。</p>\n","excerpt":"<p>自学程序以来，一直使用的都是sqlserver数据库，最近帮一朋友做一个access的demo，发现在数据库的连接方面就存在很大差异，在web.config中配置好连接字符串，然后在后台取，在此我的做法是存两个值，将Provider和assess数据库文件的路径分开存，如下：<br>","more":"</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">connectionStrings</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">add</span> <span class=\"attr\">name</span>=<span class=\"string\">\"access_con\"</span> <span class=\"attr\">connectionString</span>=<span class=\"string\">\"Provider=Microsoft.Jet.Oledb.4.0;data source=\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">add</span> <span class=\"attr\">name</span>=<span class=\"string\">\"access_path\"</span> <span class=\"attr\">connectionString</span>=<span class=\"string\">\"~/App_Data/db.mdb\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">connectionStrings</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>因为在配置文件中存放的为相对路径，所以在后台读取出来后要将其转换为绝对路径，如下:</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">string</span> con_str = ConfigurationManager.ConnectionStrings[<span class=\"string\">\"access_con\"</span>].ConnectionString</div><div class=\"line\">+HttpContext.Current.<span class=\"built_in\">Server</span>.MapPath( ConfigurationManager.ConnectionStrings[<span class=\"string\">\"access_path\"</span>].ConnectionString);</div></pre></td></tr></table></figure>\n<p>主要的区别就在连接字符串方面，其他的操作和sqlserver基本相同，将命名空间和类换成olddb的就行。在webconfig中写连接字符串时有一点需要注意：</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;add <span class=\"built_in\">name</span>=<span class=\"string\">\"access_con\"</span> connectionString=<span class=\"string\">\"Provider=Microsoft.Jet.Oledb.4.0;data source=\"</span>/&gt;</div></pre></td></tr></table></figure>\n<p>上面代码中的data source 中间一定要有空格，不能写成了datasource ，否则在执行程序的时候就会报错，如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_124238.gif\" alt=\"2010-12-30_124238\"></p>\n<p>只要稍微细心点，这种错误就能够避免。</p>"},{"title":"Asp.Net Ajax—Calendar控件使用","date":"2007-11-04T16:00:00.000Z","_content":"\n## 简介\n\nCalendar控件是一个很简单的控件，主要用来在页面中提供日历的选择，其实现在已经有很多用javascript写的[日历控件](http://blog.csdn.net/21aspnet/archive/2007/05/14/1607712.aspx)，但是Canlendar日历控件能够让我们更快速地来实现这种效果，只需要进行一些简单的设置即可。\n<!--more-->\n## 重要属性\n\n* TargetControlID：用来显示选择日期的控件，改控件必需为TextBox\n* CssClass：设置日历的样式\n* Format：显示日期的格式，如yyMMdd,会显示071105\n* PopupButtonID：当日期是通过选定某个按钮弹出的时候，为改按钮的ID，一般为一个日历图片\n\n## 示例1\n\n1.打开visual studio2005，新建一个AjaxControlToolkit网站。\n\n2.在网站根目录下添加一个窗体，命名为Calendar1.aspx。\n\n3.切换到设计视图，在页面上添加ScriptManger，一个TextBox和一个CalendarEntender控件。\n\n4.设置CalendarExtender控件的属性如下：\n\n```\n<cc1:CalendarExtender TargetControlID=\"txtDate\" runat=\"server\"\nFormat=\"yyMMdd\" ID=\"calDate\"   CssClass=\"MyCalendar\"/>\n```\n\n下面是样式代码，对应上面的CssClass，关于改样式的解释在后面讲到：\n\n```\n<style type=\"text/css\">\n       .MyCalendar .ajax__calendar_container\n      {\n          border:1px solid #646464;\n          background-color:#faac38;\n\n      }\n      .MyCalendar .ajax__calendar_other .ajax__calendar_day,\n      .MyCalendar .ajax__calendar_other .ajax__calendar_year\n      {\n          color:#ffffff;\n      }\n      .MyCalendar .ajax__calendar_hover .ajax__calendar_day\n      {\n          color:red;\n          background-color:#e8e8e8;\n      }\n      .MyCalendar .ajax__calendar_active .ajax__calendar_day\n      {\n          color:blue;\n          font-weight:bolder;\n          background-color:#e8e8e8;\n      }\n  </style>\n  ```\n  \n5.保存设计，F5运行，当文本框控件获得焦点时就会弹出日历控件，选择日期后所选日期会按照所设定的格式显示在文本框中，然后日历控件会自动隐藏。\n\n## 示例2\n\n这个例子是单击一个图片按钮后会弹出日历控件，这个在网站中也是经常用到的\n\n1.在网站的根目录下新建一个web窗体，命名为Calendar2.aspx.\n\n2.步骤和上面的一样，只是在页面中多了一个image控件，Calendar控件的设置如下：\n\n```\n<cc1:CalendarExtender TargetControlID=\"txtDate\" runat=\"server\" Format=\"yyMMdd\"\nID=\"calDate\"  PopupButtonID=\"imgDate\" CssClass=\"MyCalendar\"/>\n```\n\n设置基本上和上一个示例一样，多了一个PopupButtonID，用来制定点击的图片。\n\n3.保存设计，按F5运行，当单击日历图片时会弹出日历控件，选择了日期，控件会隐藏，选择的日期会显示在文本框中。\n\n注：属性Format用来控制日期显示的格式，但要注意代表月的M一定要大写，如：yyyy－MM－dd，yyyy/M/d,yyyy年MM月dd日\n\nCssClass说明：\n\n* .ajax_calendar_container:日历控件的整体内容部分\n* .ajax_calendar_footer:日历控件的页脚部分\n* .ajax_calendar_header:日历控件的页眉部分\n* .ajax_calendar_activa .ajax_calendar_day:选中日期时的样式，一般选择过的日期会以另一种颜色显示。\n* .ajax_calendar_hover .ajax_calendar_day:鼠标划过日期时的样式，一般改变悬停在的日期的前景色和背景色。\n* .ajax_calendar_other .ajax_calendar_day:非本月日期的样式名\n\n\n","source":"_posts/aspnet-ajax-calendar-control.md","raw":"---\ntitle: Asp.Net Ajax—Calendar控件使用\ndate: 2007-11-05\ncategories: [Asp.Net Ajax]\ntags: [Ajax,AspNet]\n---\n\n## 简介\n\nCalendar控件是一个很简单的控件，主要用来在页面中提供日历的选择，其实现在已经有很多用javascript写的[日历控件](http://blog.csdn.net/21aspnet/archive/2007/05/14/1607712.aspx)，但是Canlendar日历控件能够让我们更快速地来实现这种效果，只需要进行一些简单的设置即可。\n<!--more-->\n## 重要属性\n\n* TargetControlID：用来显示选择日期的控件，改控件必需为TextBox\n* CssClass：设置日历的样式\n* Format：显示日期的格式，如yyMMdd,会显示071105\n* PopupButtonID：当日期是通过选定某个按钮弹出的时候，为改按钮的ID，一般为一个日历图片\n\n## 示例1\n\n1.打开visual studio2005，新建一个AjaxControlToolkit网站。\n\n2.在网站根目录下添加一个窗体，命名为Calendar1.aspx。\n\n3.切换到设计视图，在页面上添加ScriptManger，一个TextBox和一个CalendarEntender控件。\n\n4.设置CalendarExtender控件的属性如下：\n\n```\n<cc1:CalendarExtender TargetControlID=\"txtDate\" runat=\"server\"\nFormat=\"yyMMdd\" ID=\"calDate\"   CssClass=\"MyCalendar\"/>\n```\n\n下面是样式代码，对应上面的CssClass，关于改样式的解释在后面讲到：\n\n```\n<style type=\"text/css\">\n       .MyCalendar .ajax__calendar_container\n      {\n          border:1px solid #646464;\n          background-color:#faac38;\n\n      }\n      .MyCalendar .ajax__calendar_other .ajax__calendar_day,\n      .MyCalendar .ajax__calendar_other .ajax__calendar_year\n      {\n          color:#ffffff;\n      }\n      .MyCalendar .ajax__calendar_hover .ajax__calendar_day\n      {\n          color:red;\n          background-color:#e8e8e8;\n      }\n      .MyCalendar .ajax__calendar_active .ajax__calendar_day\n      {\n          color:blue;\n          font-weight:bolder;\n          background-color:#e8e8e8;\n      }\n  </style>\n  ```\n  \n5.保存设计，F5运行，当文本框控件获得焦点时就会弹出日历控件，选择日期后所选日期会按照所设定的格式显示在文本框中，然后日历控件会自动隐藏。\n\n## 示例2\n\n这个例子是单击一个图片按钮后会弹出日历控件，这个在网站中也是经常用到的\n\n1.在网站的根目录下新建一个web窗体，命名为Calendar2.aspx.\n\n2.步骤和上面的一样，只是在页面中多了一个image控件，Calendar控件的设置如下：\n\n```\n<cc1:CalendarExtender TargetControlID=\"txtDate\" runat=\"server\" Format=\"yyMMdd\"\nID=\"calDate\"  PopupButtonID=\"imgDate\" CssClass=\"MyCalendar\"/>\n```\n\n设置基本上和上一个示例一样，多了一个PopupButtonID，用来制定点击的图片。\n\n3.保存设计，按F5运行，当单击日历图片时会弹出日历控件，选择了日期，控件会隐藏，选择的日期会显示在文本框中。\n\n注：属性Format用来控制日期显示的格式，但要注意代表月的M一定要大写，如：yyyy－MM－dd，yyyy/M/d,yyyy年MM月dd日\n\nCssClass说明：\n\n* .ajax_calendar_container:日历控件的整体内容部分\n* .ajax_calendar_footer:日历控件的页脚部分\n* .ajax_calendar_header:日历控件的页眉部分\n* .ajax_calendar_activa .ajax_calendar_day:选中日期时的样式，一般选择过的日期会以另一种颜色显示。\n* .ajax_calendar_hover .ajax_calendar_day:鼠标划过日期时的样式，一般改变悬停在的日期的前景色和背景色。\n* .ajax_calendar_other .ajax_calendar_day:非本月日期的样式名\n\n\n","slug":"aspnet-ajax-calendar-control","published":1,"updated":"2016-08-13T13:43:26.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz90w002zxfyn2irz1ary","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Calendar控件是一个很简单的控件，主要用来在页面中提供日历的选择，其实现在已经有很多用javascript写的<a href=\"http://blog.csdn.net/21aspnet/archive/2007/05/14/1607712.aspx\" target=\"_blank\" rel=\"external\">日历控件</a>，但是Canlendar日历控件能够让我们更快速地来实现这种效果，只需要进行一些简单的设置即可。<br><a id=\"more\"></a></p>\n<h2 id=\"重要属性\"><a href=\"#重要属性\" class=\"headerlink\" title=\"重要属性\"></a>重要属性</h2><ul>\n<li>TargetControlID：用来显示选择日期的控件，改控件必需为TextBox</li>\n<li>CssClass：设置日历的样式</li>\n<li>Format：显示日期的格式，如yyMMdd,会显示071105</li>\n<li>PopupButtonID：当日期是通过选定某个按钮弹出的时候，为改按钮的ID，一般为一个日历图片</li>\n</ul>\n<h2 id=\"示例1\"><a href=\"#示例1\" class=\"headerlink\" title=\"示例1\"></a>示例1</h2><p>1.打开visual studio2005，新建一个AjaxControlToolkit网站。</p>\n<p>2.在网站根目录下添加一个窗体，命名为Calendar1.aspx。</p>\n<p>3.切换到设计视图，在页面上添加ScriptManger，一个TextBox和一个CalendarEntender控件。</p>\n<p>4.设置CalendarExtender控件的属性如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">cc1:CalendarExtender</span> <span class=\"attr\">TargetControlID</span>=<span class=\"string\">\"txtDate\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></span></div><div class=\"line\"><span class=\"attr\">Format</span>=<span class=\"string\">\"yyMMdd\"</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"calDate\"</span>   <span class=\"attr\">CssClass</span>=<span class=\"string\">\"MyCalendar\"</span>/&gt;</div></pre></td></tr></table></figure>\n<p>下面是样式代码，对应上面的CssClass，关于改样式的解释在后面讲到：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"css\"></span></div><div class=\"line\">       <span class=\"selector-class\">.MyCalendar</span> <span class=\"selector-class\">.ajax__calendar_container</span></div><div class=\"line\">      &#123;</div><div class=\"line\">          <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#646464</span>;</div><div class=\"line\">          <span class=\"attribute\">background-color</span>:<span class=\"number\">#faac38</span>;</div><div class=\"line\"></div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-class\">.MyCalendar</span> <span class=\"selector-class\">.ajax__calendar_other</span> <span class=\"selector-class\">.ajax__calendar_day</span>,</div><div class=\"line\">      <span class=\"selector-class\">.MyCalendar</span> <span class=\"selector-class\">.ajax__calendar_other</span> <span class=\"selector-class\">.ajax__calendar_year</span></div><div class=\"line\">      &#123;</div><div class=\"line\">          <span class=\"attribute\">color</span>:<span class=\"number\">#ffffff</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-class\">.MyCalendar</span> <span class=\"selector-class\">.ajax__calendar_hover</span> <span class=\"selector-class\">.ajax__calendar_day</span></div><div class=\"line\">      &#123;</div><div class=\"line\">          <span class=\"attribute\">color</span>:red;</div><div class=\"line\">          <span class=\"attribute\">background-color</span>:<span class=\"number\">#e8e8e8</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-class\">.MyCalendar</span> <span class=\"selector-class\">.ajax__calendar_active</span> <span class=\"selector-class\">.ajax__calendar_day</span></div><div class=\"line\">      &#123;</div><div class=\"line\">          <span class=\"attribute\">color</span>:blue;</div><div class=\"line\">          <span class=\"attribute\">font-weight</span>:bolder;</div><div class=\"line\">          <span class=\"attribute\">background-color</span>:<span class=\"number\">#e8e8e8</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>5.保存设计，F5运行，当文本框控件获得焦点时就会弹出日历控件，选择日期后所选日期会按照所设定的格式显示在文本框中，然后日历控件会自动隐藏。</p>\n<h2 id=\"示例2\"><a href=\"#示例2\" class=\"headerlink\" title=\"示例2\"></a>示例2</h2><p>这个例子是单击一个图片按钮后会弹出日历控件，这个在网站中也是经常用到的</p>\n<p>1.在网站的根目录下新建一个web窗体，命名为Calendar2.aspx.</p>\n<p>2.步骤和上面的一样，只是在页面中多了一个image控件，Calendar控件的设置如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">cc1:CalendarExtender</span> <span class=\"attr\">TargetControlID</span>=<span class=\"string\">\"txtDate\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Format</span>=<span class=\"string\">\"yyMMdd\"</span></span></div><div class=\"line\"><span class=\"attr\">ID</span>=<span class=\"string\">\"calDate\"</span>  <span class=\"attr\">PopupButtonID</span>=<span class=\"string\">\"imgDate\"</span> <span class=\"attr\">CssClass</span>=<span class=\"string\">\"MyCalendar\"</span>/&gt;</div></pre></td></tr></table></figure>\n<p>设置基本上和上一个示例一样，多了一个PopupButtonID，用来制定点击的图片。</p>\n<p>3.保存设计，按F5运行，当单击日历图片时会弹出日历控件，选择了日期，控件会隐藏，选择的日期会显示在文本框中。</p>\n<p>注：属性Format用来控制日期显示的格式，但要注意代表月的M一定要大写，如：yyyy－MM－dd，yyyy/M/d,yyyy年MM月dd日</p>\n<p>CssClass说明：</p>\n<ul>\n<li>.ajax_calendar_container:日历控件的整体内容部分</li>\n<li>.ajax_calendar_footer:日历控件的页脚部分</li>\n<li>.ajax_calendar_header:日历控件的页眉部分</li>\n<li>.ajax_calendar_activa .ajax_calendar_day:选中日期时的样式，一般选择过的日期会以另一种颜色显示。</li>\n<li>.ajax_calendar_hover .ajax_calendar_day:鼠标划过日期时的样式，一般改变悬停在的日期的前景色和背景色。</li>\n<li>.ajax_calendar_other .ajax_calendar_day:非本月日期的样式名</li>\n</ul>\n","excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Calendar控件是一个很简单的控件，主要用来在页面中提供日历的选择，其实现在已经有很多用javascript写的<a href=\"http://blog.csdn.net/21aspnet/archive/2007/05/14/1607712.aspx\">日历控件</a>，但是Canlendar日历控件能够让我们更快速地来实现这种效果，只需要进行一些简单的设置即可。<br>","more":"</p>\n<h2 id=\"重要属性\"><a href=\"#重要属性\" class=\"headerlink\" title=\"重要属性\"></a>重要属性</h2><ul>\n<li>TargetControlID：用来显示选择日期的控件，改控件必需为TextBox</li>\n<li>CssClass：设置日历的样式</li>\n<li>Format：显示日期的格式，如yyMMdd,会显示071105</li>\n<li>PopupButtonID：当日期是通过选定某个按钮弹出的时候，为改按钮的ID，一般为一个日历图片</li>\n</ul>\n<h2 id=\"示例1\"><a href=\"#示例1\" class=\"headerlink\" title=\"示例1\"></a>示例1</h2><p>1.打开visual studio2005，新建一个AjaxControlToolkit网站。</p>\n<p>2.在网站根目录下添加一个窗体，命名为Calendar1.aspx。</p>\n<p>3.切换到设计视图，在页面上添加ScriptManger，一个TextBox和一个CalendarEntender控件。</p>\n<p>4.设置CalendarExtender控件的属性如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">cc1:CalendarExtender</span> <span class=\"attr\">TargetControlID</span>=<span class=\"string\">\"txtDate\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span></div><div class=\"line\"><span class=\"attr\">Format</span>=<span class=\"string\">\"yyMMdd\"</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"calDate\"</span>   <span class=\"attr\">CssClass</span>=<span class=\"string\">\"MyCalendar\"</span>/&gt;</span></div></pre></td></tr></table></figure>\n<p>下面是样式代码，对应上面的CssClass，关于改样式的解释在后面讲到：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"css\"></div><div class=\"line\">       <span class=\"selector-class\">.MyCalendar</span> <span class=\"selector-class\">.ajax__calendar_container</span></div><div class=\"line\">      &#123;</div><div class=\"line\">          <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#646464</span>;</div><div class=\"line\">          <span class=\"attribute\">background-color</span>:<span class=\"number\">#faac38</span>;</div><div class=\"line\"></div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-class\">.MyCalendar</span> <span class=\"selector-class\">.ajax__calendar_other</span> <span class=\"selector-class\">.ajax__calendar_day</span>,</div><div class=\"line\">      <span class=\"selector-class\">.MyCalendar</span> <span class=\"selector-class\">.ajax__calendar_other</span> <span class=\"selector-class\">.ajax__calendar_year</span></div><div class=\"line\">      &#123;</div><div class=\"line\">          <span class=\"attribute\">color</span>:<span class=\"number\">#ffffff</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-class\">.MyCalendar</span> <span class=\"selector-class\">.ajax__calendar_hover</span> <span class=\"selector-class\">.ajax__calendar_day</span></div><div class=\"line\">      &#123;</div><div class=\"line\">          <span class=\"attribute\">color</span>:red;</div><div class=\"line\">          <span class=\"attribute\">background-color</span>:<span class=\"number\">#e8e8e8</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"selector-class\">.MyCalendar</span> <span class=\"selector-class\">.ajax__calendar_active</span> <span class=\"selector-class\">.ajax__calendar_day</span></div><div class=\"line\">      &#123;</div><div class=\"line\">          <span class=\"attribute\">color</span>:blue;</div><div class=\"line\">          <span class=\"attribute\">font-weight</span>:bolder;</div><div class=\"line\">          <span class=\"attribute\">background-color</span>:<span class=\"number\">#e8e8e8</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">  </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>5.保存设计，F5运行，当文本框控件获得焦点时就会弹出日历控件，选择日期后所选日期会按照所设定的格式显示在文本框中，然后日历控件会自动隐藏。</p>\n<h2 id=\"示例2\"><a href=\"#示例2\" class=\"headerlink\" title=\"示例2\"></a>示例2</h2><p>这个例子是单击一个图片按钮后会弹出日历控件，这个在网站中也是经常用到的</p>\n<p>1.在网站的根目录下新建一个web窗体，命名为Calendar2.aspx.</p>\n<p>2.步骤和上面的一样，只是在页面中多了一个image控件，Calendar控件的设置如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">cc1:CalendarExtender</span> <span class=\"attr\">TargetControlID</span>=<span class=\"string\">\"txtDate\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Format</span>=<span class=\"string\">\"yyMMdd\"</span></div><div class=\"line\"><span class=\"attr\">ID</span>=<span class=\"string\">\"calDate\"</span>  <span class=\"attr\">PopupButtonID</span>=<span class=\"string\">\"imgDate\"</span> <span class=\"attr\">CssClass</span>=<span class=\"string\">\"MyCalendar\"</span>/&gt;</span></div></pre></td></tr></table></figure>\n<p>设置基本上和上一个示例一样，多了一个PopupButtonID，用来制定点击的图片。</p>\n<p>3.保存设计，按F5运行，当单击日历图片时会弹出日历控件，选择了日期，控件会隐藏，选择的日期会显示在文本框中。</p>\n<p>注：属性Format用来控制日期显示的格式，但要注意代表月的M一定要大写，如：yyyy－MM－dd，yyyy/M/d,yyyy年MM月dd日</p>\n<p>CssClass说明：</p>\n<ul>\n<li>.ajax_calendar_container:日历控件的整体内容部分</li>\n<li>.ajax_calendar_footer:日历控件的页脚部分</li>\n<li>.ajax_calendar_header:日历控件的页眉部分</li>\n<li>.ajax_calendar_activa .ajax_calendar_day:选中日期时的样式，一般选择过的日期会以另一种颜色显示。</li>\n<li>.ajax_calendar_hover .ajax_calendar_day:鼠标划过日期时的样式，一般改变悬停在的日期的前景色和背景色。</li>\n<li>.ajax_calendar_other .ajax_calendar_day:非本月日期的样式名</li>\n</ul>"},{"title":"Asp.Net中替代Eval的两种方式","date":"2009-06-25T16:00:00.000Z","_content":"\n在asp.net中的数据绑定中，我们经常会用到Eval，不过大家都知道Eval绑定是通过反射来实现的， 而反射势必会对性能造成一定的影响。不过有两种替代的方式来实现绑定数据，对性能略有提高。\n\n1 当数据源为DataTable时，用下面的方式:\n\n后台代码\n\n```\nprotected void Page_Load(object sender, EventArgs e)\n{\n    DataTable dt = new DataTable();\n    dt.Columns.Add(\"Name\", typeof(System.String));\n    dt.Columns.Add(\"Age\", typeof(System.Int32));\n    for (int i = 0; i <= 20; i++)\n    {\n        DataRow dr = dt.NewRow();\n        dr[0] = \"oec2003_\" + i.ToString();\n        dr[1] = i + 20;\n        dt.Rows.Add(dr);\n    }\n\n    rptUser.DataSource = dt;\n    rptUser.DataBind();\n}\n```\n\n前台代码\n\n```\n<asp:Repeater ID=\"rptUser\" runat=\"server\">\n    <ItemTemplate>\n        姓名：<%# ((DataRowView)(Container.DataItem))[\"Name\"]  %>\n                年龄：<%# ((DataRowView)(Container.DataItem))[\"Age\"]%><br />\n    </ItemTemplate>\n</asp:Repeater>\n```\n\n2 当数据源为泛型类时，用下面的方式。\n\n后台代码\n\n```\nprotected void Page_Load(object sender, EventArgs e)\n{\n    List<User> user = new List<User>();\n    for (int i = 0; i < 10; i++)\n    {\n        user.Add(new User(i, \"oec2003\"));\n    }\n    rptUser.DataSource = user;\n    rptUser.DataBind();\n}\n```\n\n前台代码\n\n```\n<asp:Repeater ID=\"rptUser\" runat=\"server\">\n    <ItemTemplate>\n        姓名：<%# (Container.DataItem as User).Name  %>\n                年龄：<%# (Container.DataItem as User).Age%><br />\n    </ItemTemplate>\n</asp:Repeater>\n```\n\n经过测试在10w以上数据量的时候性能差别才比较明显，而我们平时做数据绑定的时候通常都是用的分页存储过程或其他的分页方式，每页最多几十条数据，所以我认为Eval在性能上的损耗并不构成性能瓶颈。\n\n\n","source":"_posts/aspnet-instead-of-eval-in-two-ways.md","raw":"---\ntitle: Asp.Net中替代Eval的两种方式\ndate: 2009-06-26\ncategories: [Asp.Net]\ntags: [AspNet, Eval]\n---\n\n在asp.net中的数据绑定中，我们经常会用到Eval，不过大家都知道Eval绑定是通过反射来实现的， 而反射势必会对性能造成一定的影响。不过有两种替代的方式来实现绑定数据，对性能略有提高。\n\n1 当数据源为DataTable时，用下面的方式:\n\n后台代码\n\n```\nprotected void Page_Load(object sender, EventArgs e)\n{\n    DataTable dt = new DataTable();\n    dt.Columns.Add(\"Name\", typeof(System.String));\n    dt.Columns.Add(\"Age\", typeof(System.Int32));\n    for (int i = 0; i <= 20; i++)\n    {\n        DataRow dr = dt.NewRow();\n        dr[0] = \"oec2003_\" + i.ToString();\n        dr[1] = i + 20;\n        dt.Rows.Add(dr);\n    }\n\n    rptUser.DataSource = dt;\n    rptUser.DataBind();\n}\n```\n\n前台代码\n\n```\n<asp:Repeater ID=\"rptUser\" runat=\"server\">\n    <ItemTemplate>\n        姓名：<%# ((DataRowView)(Container.DataItem))[\"Name\"]  %>\n                年龄：<%# ((DataRowView)(Container.DataItem))[\"Age\"]%><br />\n    </ItemTemplate>\n</asp:Repeater>\n```\n\n2 当数据源为泛型类时，用下面的方式。\n\n后台代码\n\n```\nprotected void Page_Load(object sender, EventArgs e)\n{\n    List<User> user = new List<User>();\n    for (int i = 0; i < 10; i++)\n    {\n        user.Add(new User(i, \"oec2003\"));\n    }\n    rptUser.DataSource = user;\n    rptUser.DataBind();\n}\n```\n\n前台代码\n\n```\n<asp:Repeater ID=\"rptUser\" runat=\"server\">\n    <ItemTemplate>\n        姓名：<%# (Container.DataItem as User).Name  %>\n                年龄：<%# (Container.DataItem as User).Age%><br />\n    </ItemTemplate>\n</asp:Repeater>\n```\n\n经过测试在10w以上数据量的时候性能差别才比较明显，而我们平时做数据绑定的时候通常都是用的分页存储过程或其他的分页方式，每页最多几十条数据，所以我认为Eval在性能上的损耗并不构成性能瓶颈。\n\n\n","slug":"aspnet-instead-of-eval-in-two-ways","published":1,"updated":"2016-08-15T14:42:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz90z0034xfynl8law5ua","content":"<p>在asp.net中的数据绑定中，我们经常会用到Eval，不过大家都知道Eval绑定是通过反射来实现的， 而反射势必会对性能造成一定的影响。不过有两种替代的方式来实现绑定数据，对性能略有提高。</p>\n<p>1 当数据源为DataTable时，用下面的方式:</p>\n<p>后台代码</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">protected void Page_Load(object sender, EventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">    DataTable dt = new DataTable()<span class=\"comment\">;</span></div><div class=\"line\">    dt.Columns.<span class=\"keyword\">Add(\"Name\", </span>typeof(System.String))<span class=\"comment\">;</span></div><div class=\"line\">    dt.Columns.<span class=\"keyword\">Add(\"Age\", </span>typeof(System.Int32))<span class=\"comment\">;</span></div><div class=\"line\">    for (int i = <span class=\"number\">0</span><span class=\"comment\">; i &lt;= 20; i++)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        DataRow dr = dt.NewRow()<span class=\"comment\">;</span></div><div class=\"line\">        dr[<span class=\"number\">0</span>] = <span class=\"string\">\"oec2003_\"</span> + i.ToString()<span class=\"comment\">;</span></div><div class=\"line\">        dr[<span class=\"number\">1</span>] = i + <span class=\"number\">20</span><span class=\"comment\">;</span></div><div class=\"line\">        dt.Rows.<span class=\"keyword\">Add(dr);</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    rptUser.DataSource = dt<span class=\"comment\">;</span></div><div class=\"line\">    rptUser.DataBind()<span class=\"comment\">;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>前台代码</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">asp:Repeater</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"rptUser\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">        姓名：<span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"perl\"><span class=\"comment\"># ((DataRowView)(Container.DataItem))[\"Name\"]  </span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">                年龄：<span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"perl\"><span class=\"comment\"># ((DataRowView)(Container.DataItem))[\"Age\"]</span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">asp:Repeater</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>2 当数据源为泛型类时，用下面的方式。</p>\n<p>后台代码</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    List&lt;User&gt; user = <span class=\"keyword\">new</span> List&lt;User&gt;();</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</div><div class=\"line\">    &#123;</div><div class=\"line\">        user.Add(<span class=\"keyword\">new</span> User(i, <span class=\"string\">\"oec2003\"</span>));</div><div class=\"line\">    &#125;</div><div class=\"line\">    rptUser.DataSource = user;</div><div class=\"line\">    rptUser.DataBind();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>前台代码</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">asp:Repeater</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"rptUser\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">        姓名：<span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"perl\"><span class=\"comment\"># (Container.DataItem as User).Name  </span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">                年龄：<span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"perl\"><span class=\"comment\"># (Container.DataItem as User).Age</span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">asp:Repeater</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>经过测试在10w以上数据量的时候性能差别才比较明显，而我们平时做数据绑定的时候通常都是用的分页存储过程或其他的分页方式，每页最多几十条数据，所以我认为Eval在性能上的损耗并不构成性能瓶颈。</p>\n","excerpt":"","more":"<p>在asp.net中的数据绑定中，我们经常会用到Eval，不过大家都知道Eval绑定是通过反射来实现的， 而反射势必会对性能造成一定的影响。不过有两种替代的方式来实现绑定数据，对性能略有提高。</p>\n<p>1 当数据源为DataTable时，用下面的方式:</p>\n<p>后台代码</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">protected void Page_Load(object sender, EventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">    DataTable dt = new DataTable()<span class=\"comment\">;</span></div><div class=\"line\">    dt.Columns.<span class=\"keyword\">Add(\"Name\", </span>typeof(System.String))<span class=\"comment\">;</span></div><div class=\"line\">    dt.Columns.<span class=\"keyword\">Add(\"Age\", </span>typeof(System.Int32))<span class=\"comment\">;</span></div><div class=\"line\">    for (int i = <span class=\"number\">0</span><span class=\"comment\">; i &lt;= 20; i++)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        DataRow dr = dt.NewRow()<span class=\"comment\">;</span></div><div class=\"line\">        dr[<span class=\"number\">0</span>] = <span class=\"string\">\"oec2003_\"</span> + i.ToString()<span class=\"comment\">;</span></div><div class=\"line\">        dr[<span class=\"number\">1</span>] = i + <span class=\"number\">20</span><span class=\"comment\">;</span></div><div class=\"line\">        dt.Rows.<span class=\"keyword\">Add(dr);</div><div class=\"line\"></span>    &#125;</div><div class=\"line\"></div><div class=\"line\">    rptUser.DataSource = dt<span class=\"comment\">;</span></div><div class=\"line\">    rptUser.DataBind()<span class=\"comment\">;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>前台代码</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">asp:Repeater</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"rptUser\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">        姓名：<span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"perl\"><span class=\"comment\"># ((DataRowView)(Container.DataItem))[\"Name\"]  </span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">                年龄：<span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"perl\"><span class=\"comment\"># ((DataRowView)(Container.DataItem))[\"Age\"]</span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">asp:Repeater</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>2 当数据源为泛型类时，用下面的方式。</p>\n<p>后台代码</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    List&lt;User&gt; user = <span class=\"keyword\">new</span> List&lt;User&gt;();</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</div><div class=\"line\">    &#123;</div><div class=\"line\">        user.Add(<span class=\"keyword\">new</span> User(i, <span class=\"string\">\"oec2003\"</span>));</div><div class=\"line\">    &#125;</div><div class=\"line\">    rptUser.DataSource = user;</div><div class=\"line\">    rptUser.DataBind();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>前台代码</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">asp:Repeater</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"rptUser\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">        姓名：<span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"perl\"><span class=\"comment\"># (Container.DataItem as User).Name  </span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">                年龄：<span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"perl\"><span class=\"comment\"># (Container.DataItem as User).Age</span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">asp:Repeater</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>经过测试在10w以上数据量的时候性能差别才比较明显，而我们平时做数据绑定的时候通常都是用的分页存储过程或其他的分页方式，每页最多几十条数据，所以我认为Eval在性能上的损耗并不构成性能瓶颈。</p>\n"},{"title":"Asp.net MVC V2 Preview 1 初探","date":"2009-08-05T16:00:00.000Z","_content":"\nAsp.net MVC1.0正式版刚刚出来才几个月，ASP.NET MVC ASP.NET MVC2 Preview 1 Released 就跟我们见面了 ，您可以点击[这儿](http://www.microsoft.com/downloads/details.aspx?displaylang=en&FamilyID=d34f9eaa-fcbe-4e20-b2fd-a9a03de7d6dd#tm)下载。该版本可以和以前的Asp.net MVC1.0 兼容，安装了ASP.NET MVC2后，打开vs2008 ，新建项目，可以看到同时存在1.0和2的模板，如下图：\n\n![2010-12-29_161754](http://oec2003.qiniudn.com/2010-12-29_161754.gif)\n\n在ASP.NET MVC2版中，包含了区域（Area）、数据标记验证（Data Annotation Validation）、强类型UI辅助方法和模板化辅助方法（TemplatedHelper）四个特性，下面就分别来看下这个四个特性。\n\n## 区域（Areas）\n\n区域（Areas）可以将Asp.net MVC应用的功能进行分割和组合，它可以将Controller和View进行分组管理。如下图中就是将博客（blogs）和相册（Albums）的部分通过Areas提出来单独管理。遗憾的是在预览版1中还没有任何工具的支持，所以Areas项目必须通过手动添加和配置。\n\n![2010-12-29_161937](http://oec2003.qiniudn.com/2010-12-29_161937.gif)\n\n## 数据标记验证（Data Annotation Validation）\n\nDataAnnotation提供了一个简单的方式，在应用中的Model（模型）和ViewModel（视图模型）类中添加验证规则，在ASP.NET MVC中有自动的绑定和UI辅助方法验证支持。首先创建一个实体类Users，代码如下:\n\n```\nnamespace Mvc2Demo.Models\n{\n    public class Users\n    {\n        [Required(ErrorMessage = \"用户名不能为空！\")]\n        public String UserName { get; set; }\n\n        [Range(0, 150, ErrorMessage = \"年龄必须在0-150之间！\")]\n        [Required(ErrorMessage = \"年龄不能为空！\")]\n        public Int32 Age { get; set; }\n\n        [Required(ErrorMessage = \"邮箱地址不能为空！\")]\n        [RegularExpression(\"\\\\w+([-+.']\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*\",\n            ErrorMessage = \"邮箱格式不正确，请重新填写！\")]\n        public String Email { get; set; }\n    }\n}\n```\n\n使用Required 、RegularExpression 等属性需要引用命名空间\n\n```\nusing System.ComponentModel.DataAnnotations;\n```\n\n在Controllers目录下创建UserController.cs，代码如下：\n\n```\nnamespace Mvc2Demo.Controllers\n{\n    public class UserController : Controller\n    {\n        public ActionResult Index()\n        {\n            return View();\n        }\n        public ActionResult Create()\n        {\n            Users user = new Users();\n            return View(user);\n        }\n        //在ASP.NET MVC2预览一版中使用[HttpPost]\n        //1.0版中使用[AcceptVerbs(HttpVerbs.Post)]\n        [HttpPost]\n        public ActionResult Create(Users user)\n        {\n            if (!ModelState.IsValid)\n            {\n                return View(user);\n            }\n            return View(\"Success\");\n        }\n    }\n}\n```\n\n在上面的任意一个Create方法上右击，选择Add View … ，在弹出的对话框中做相应的设置，然后点击Add，就会在View下添加相应的目录和页面文件，如下图：\n\n![2010-12-29_163007](http://oec2003.qiniudn.com/2010-12-29_163007.gif)\n\n添加完后，系统会自动为Create视图生成如下代码：\n\n```\n <%@ Page Title=\"\" Language=\"C#\" MasterPageFile=\"~/Views/Shared/Site.Master\"\n Inherits=\"System.Web.Mvc.ViewPage<Mvc2Demo.Models.Users>\" %>\n <asp:Content ID=\"Content1\" ContentPlaceHolderID=\"TitleContent\" runat=\"server\">\n      Create\n  </asp:Content>\n\n  <asp:Content ID=\"Content2\" ContentPlaceHolderID=\"MainContent\" runat=\"server\">\n      <h2>Create </h2>\n     <%= Html.ValidationSummary(\"Create was unsuccessful.\n         Please correct the errors and try again.\") %>\n     <% using (Html.BeginForm()) {%>\n         <fieldset>\n             <legend>Fields</legend>\n             <p>\n                 <label for=\"UserName\">UserName:</label>\n                 <%= Html.TextBox(\"UserName\") %>\n                 <%= Html.ValidationMessage(\"UserName\", \"*\") %>\n             </p>\n             <p>\n                 <label for=\"Age\">Age:</label>\n                 <%= Html.TextBox(\"Age\") %>\n                 <%= Html.ValidationMessage(\"Age\", \"*\") %>\n             </p>\n             <p>\n                 <label for=\"Email\">Email:</label>\n                 <%= Html.TextBox(\"Email\") %>\n                 <%= Html.ValidationMessage(\"Email\", \"*\") %>\n             </p>\n             <p>\n                 <input type=\"submit\" value=\"Create\" />\n             </p>\n         </fieldset>\n\n     <% } %>\n     <div>\n         <%=Html.ActionLink(\"Back to List\", \"Index\") %>\n     </div>\n </asp:Content>\n```\n\n运行后的界面如下图：\n\n![2010-12-29_163242](http://oec2003.qiniudn.com/2010-12-29_163242.gif)\n\n在文本框中填入一些非法数据后，点击“创建用户”后 非法数据不能通过验证，将在页面中显示错误提示信息，如下图：\n\n![2010-12-29_163336](http://oec2003.qiniudn.com/2010-12-29_163336.gif)\n\n## 强类型UI辅助方法\n\n在ASP.NET MVC2预览1版中提供了新的Html辅助方法，这些辅助方法允许你在引用视图模板的模型对象时使用强类型的lambda表达式，如<%=Html.EditorFor(u=>u.UserName) %> ,而且lambda表达式也提供了良好的智能提示功能，如下图：\n\n![2010-12-29_163517](http://oec2003.qiniudn.com/2010-12-29_163517.gif)\n\n在ASP.NET MVC2的预览版1中提供了Html.EditorFor、Html.LabelFor(),和 Html.DisplayFor() 辅助方法的内置支持。在以后的版本中将会提供更多这种辅助方法的支持。下面的代码是使用了辅助方法的“Create”视图模版。\n\n```\n<%@ Page Title=\"\" Language=\"C#\" MasterPageFile=\"~/Views/Shared/Site.Master\"\nInherits=\"System.Web.Mvc.ViewPage<Mvc2Demo.Models.Users>\" %>\n <asp:Content ID=\"Content1\" ContentPlaceHolderID=\"TitleContent\" runat=\"server\">\n     Create\n </asp:Content>\n <asp:Content ID=\"Content2\" ContentPlaceHolderID=\"MainContent\" runat=\"server\">\n     <h2>Create </h2>\n     <%= Html.ValidationSummary(\"Create was unsuccessful.\n     Please correct the errors and try again.\") %>\n     <% using (Html.BeginForm()) {%>\n         <fieldset>\n             <legend>Fields</legend>\n             <p>\n                 <%= Html.LabelFor(u=>u.UserName) %>\n                 <%= Html.EditorFor(u=>u.UserName) %>\n                 <%= Html.ValidationMessage(\"UserName\", \"*\") %>\n             </p>\n             <p>\n                 <%= Html.LabelFor(u=>u.Age) %>\n                 <%= Html.EditorFor(u=>u.Age) %>\n                 <%= Html.ValidationMessage(\"Age\", \"*\") %>\n             </p>\n             <p>\n                 <%= Html.LabelFor(u=>u.Email) %>\n                 <%= Html.EditorFor(u=>u.Email) %>\n                 <%= Html.ValidationMessage(\"Email\", \"*\") %>\n             </p>\n             <p>\n                 <input type=\"submit\" value=\"Create\" />\n             </p>\n         </fieldset>\n     <% } %>\n    <div>\n         <%=Html.ActionLink(\"Back to List\", \"Index\") %>\n     </div>\n </asp:Content>\n```\n\nHtml.EditorFor()支持任何的数据类型，而且会根据数据类型做出判断来生成不同的html代码，现在在实体类Users中添加一个bool类型的属性IsOnLine，如下图：\n\n![2010-12-29_163619](http://oec2003.qiniudn.com/2010-12-29_163619.gif)\n\n在“Create”视图模板中添加相应代码，运行后会看到Html.EditorFor()会将string类型的显示为文本框，bool类型的显示为复选框。除了对这些简单类型的支持外，Html.EditorFor()还可以将传递给他的拥有多个公有属性的复杂对象的属性自动进行循环，根据数据类型生成相应的html代码，并且能识别属性上定义的验证信息，下面的代码就是重写后的“Create”视图模板。\n\n```\n<h2>Create </h2>\n    <%= Html.ValidationSummary(\"Create was unsuccessful.\n    Please correct the errors and try again.\") %>\n      <% using (Html.BeginForm()) {%>\n          <fieldset>\n            <legend>Fields</legend>\n            <%= Html.EditorFor(u=>u) %>\n              <p>\n                <input type=\"submit\" value=\"Create\" />\n            </p>\n       </fieldset>\n\n   <% } %>\n```\n\n## UI 辅助方法模板化\n\nUI辅助方法模板机制可以自定义模板文件来控制显示的输出，具体操作看下面的例子 。\n\n1 在\\Views\\Shared目录下添加EditorTemplates子目录，然后在该目录下添加名为“UserNameDropDown.ascx”的模板文件。\n\n![2010-12-29_163655](http://oec2003.qiniudn.com/2010-12-29_163655.gif)\n\n2在UserNameDropDown.aspx文件中添加如下代码。\n\n```\n<%@ Control Language=\"C#\" Inherits=\"System.Web.Mvc.ViewUserControl<String>\" %>\n <%= Html.DropDownList(\"\",new SelectList(new[]{\"oec2003\",\"oec2004\",\"水杯\"})) %>\n```\n\n3 在实体类User中添加UserNameSelect属性，在属性上面用UIHint特性来指定UserNameDropDown模板 如下：\n\n![2010-12-29_163730](http://oec2003.qiniudn.com/2010-12-29_163730.gif)\n\n4 如果Create视图模板中是用的<%= Html.EditorFor(u=>u) %> 的写法，就不用做任何更改，否则可以使用<%=Html.EditorFor(u=>u.UserNameSelect,”UserNameDropDown” %> 将刚才定义的模板显示输出，运行后显示结果如下：\n\n![2010-12-29_163813](http://oec2003.qiniudn.com/2010-12-29_163813.gif)\n\n参考：[http://weblogs.asp.net/scottgu/archive/2009/07/31/asp-net-mvc-v2-preview-1-released.aspx](http://weblogs.asp.net/scottgu/archive/2009/07/31/asp-net-mvc-v2-preview-1-released.aspx)\n\n[示例下载](http://files.cnblogs.com/oec2003/Mvc2Demo.rar)\n\n\n","source":"_posts/aspnet-mvc-v2-preview-1.md","raw":"---\ntitle: Asp.net MVC V2 Preview 1 初探\ndate: 2009-08-06\ncategories: [Asp.Net MVC]\ntags: [AspNet, MVC]\n---\n\nAsp.net MVC1.0正式版刚刚出来才几个月，ASP.NET MVC ASP.NET MVC2 Preview 1 Released 就跟我们见面了 ，您可以点击[这儿](http://www.microsoft.com/downloads/details.aspx?displaylang=en&FamilyID=d34f9eaa-fcbe-4e20-b2fd-a9a03de7d6dd#tm)下载。该版本可以和以前的Asp.net MVC1.0 兼容，安装了ASP.NET MVC2后，打开vs2008 ，新建项目，可以看到同时存在1.0和2的模板，如下图：\n\n![2010-12-29_161754](http://oec2003.qiniudn.com/2010-12-29_161754.gif)\n\n在ASP.NET MVC2版中，包含了区域（Area）、数据标记验证（Data Annotation Validation）、强类型UI辅助方法和模板化辅助方法（TemplatedHelper）四个特性，下面就分别来看下这个四个特性。\n\n## 区域（Areas）\n\n区域（Areas）可以将Asp.net MVC应用的功能进行分割和组合，它可以将Controller和View进行分组管理。如下图中就是将博客（blogs）和相册（Albums）的部分通过Areas提出来单独管理。遗憾的是在预览版1中还没有任何工具的支持，所以Areas项目必须通过手动添加和配置。\n\n![2010-12-29_161937](http://oec2003.qiniudn.com/2010-12-29_161937.gif)\n\n## 数据标记验证（Data Annotation Validation）\n\nDataAnnotation提供了一个简单的方式，在应用中的Model（模型）和ViewModel（视图模型）类中添加验证规则，在ASP.NET MVC中有自动的绑定和UI辅助方法验证支持。首先创建一个实体类Users，代码如下:\n\n```\nnamespace Mvc2Demo.Models\n{\n    public class Users\n    {\n        [Required(ErrorMessage = \"用户名不能为空！\")]\n        public String UserName { get; set; }\n\n        [Range(0, 150, ErrorMessage = \"年龄必须在0-150之间！\")]\n        [Required(ErrorMessage = \"年龄不能为空！\")]\n        public Int32 Age { get; set; }\n\n        [Required(ErrorMessage = \"邮箱地址不能为空！\")]\n        [RegularExpression(\"\\\\w+([-+.']\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*\",\n            ErrorMessage = \"邮箱格式不正确，请重新填写！\")]\n        public String Email { get; set; }\n    }\n}\n```\n\n使用Required 、RegularExpression 等属性需要引用命名空间\n\n```\nusing System.ComponentModel.DataAnnotations;\n```\n\n在Controllers目录下创建UserController.cs，代码如下：\n\n```\nnamespace Mvc2Demo.Controllers\n{\n    public class UserController : Controller\n    {\n        public ActionResult Index()\n        {\n            return View();\n        }\n        public ActionResult Create()\n        {\n            Users user = new Users();\n            return View(user);\n        }\n        //在ASP.NET MVC2预览一版中使用[HttpPost]\n        //1.0版中使用[AcceptVerbs(HttpVerbs.Post)]\n        [HttpPost]\n        public ActionResult Create(Users user)\n        {\n            if (!ModelState.IsValid)\n            {\n                return View(user);\n            }\n            return View(\"Success\");\n        }\n    }\n}\n```\n\n在上面的任意一个Create方法上右击，选择Add View … ，在弹出的对话框中做相应的设置，然后点击Add，就会在View下添加相应的目录和页面文件，如下图：\n\n![2010-12-29_163007](http://oec2003.qiniudn.com/2010-12-29_163007.gif)\n\n添加完后，系统会自动为Create视图生成如下代码：\n\n```\n <%@ Page Title=\"\" Language=\"C#\" MasterPageFile=\"~/Views/Shared/Site.Master\"\n Inherits=\"System.Web.Mvc.ViewPage<Mvc2Demo.Models.Users>\" %>\n <asp:Content ID=\"Content1\" ContentPlaceHolderID=\"TitleContent\" runat=\"server\">\n      Create\n  </asp:Content>\n\n  <asp:Content ID=\"Content2\" ContentPlaceHolderID=\"MainContent\" runat=\"server\">\n      <h2>Create </h2>\n     <%= Html.ValidationSummary(\"Create was unsuccessful.\n         Please correct the errors and try again.\") %>\n     <% using (Html.BeginForm()) {%>\n         <fieldset>\n             <legend>Fields</legend>\n             <p>\n                 <label for=\"UserName\">UserName:</label>\n                 <%= Html.TextBox(\"UserName\") %>\n                 <%= Html.ValidationMessage(\"UserName\", \"*\") %>\n             </p>\n             <p>\n                 <label for=\"Age\">Age:</label>\n                 <%= Html.TextBox(\"Age\") %>\n                 <%= Html.ValidationMessage(\"Age\", \"*\") %>\n             </p>\n             <p>\n                 <label for=\"Email\">Email:</label>\n                 <%= Html.TextBox(\"Email\") %>\n                 <%= Html.ValidationMessage(\"Email\", \"*\") %>\n             </p>\n             <p>\n                 <input type=\"submit\" value=\"Create\" />\n             </p>\n         </fieldset>\n\n     <% } %>\n     <div>\n         <%=Html.ActionLink(\"Back to List\", \"Index\") %>\n     </div>\n </asp:Content>\n```\n\n运行后的界面如下图：\n\n![2010-12-29_163242](http://oec2003.qiniudn.com/2010-12-29_163242.gif)\n\n在文本框中填入一些非法数据后，点击“创建用户”后 非法数据不能通过验证，将在页面中显示错误提示信息，如下图：\n\n![2010-12-29_163336](http://oec2003.qiniudn.com/2010-12-29_163336.gif)\n\n## 强类型UI辅助方法\n\n在ASP.NET MVC2预览1版中提供了新的Html辅助方法，这些辅助方法允许你在引用视图模板的模型对象时使用强类型的lambda表达式，如<%=Html.EditorFor(u=>u.UserName) %> ,而且lambda表达式也提供了良好的智能提示功能，如下图：\n\n![2010-12-29_163517](http://oec2003.qiniudn.com/2010-12-29_163517.gif)\n\n在ASP.NET MVC2的预览版1中提供了Html.EditorFor、Html.LabelFor(),和 Html.DisplayFor() 辅助方法的内置支持。在以后的版本中将会提供更多这种辅助方法的支持。下面的代码是使用了辅助方法的“Create”视图模版。\n\n```\n<%@ Page Title=\"\" Language=\"C#\" MasterPageFile=\"~/Views/Shared/Site.Master\"\nInherits=\"System.Web.Mvc.ViewPage<Mvc2Demo.Models.Users>\" %>\n <asp:Content ID=\"Content1\" ContentPlaceHolderID=\"TitleContent\" runat=\"server\">\n     Create\n </asp:Content>\n <asp:Content ID=\"Content2\" ContentPlaceHolderID=\"MainContent\" runat=\"server\">\n     <h2>Create </h2>\n     <%= Html.ValidationSummary(\"Create was unsuccessful.\n     Please correct the errors and try again.\") %>\n     <% using (Html.BeginForm()) {%>\n         <fieldset>\n             <legend>Fields</legend>\n             <p>\n                 <%= Html.LabelFor(u=>u.UserName) %>\n                 <%= Html.EditorFor(u=>u.UserName) %>\n                 <%= Html.ValidationMessage(\"UserName\", \"*\") %>\n             </p>\n             <p>\n                 <%= Html.LabelFor(u=>u.Age) %>\n                 <%= Html.EditorFor(u=>u.Age) %>\n                 <%= Html.ValidationMessage(\"Age\", \"*\") %>\n             </p>\n             <p>\n                 <%= Html.LabelFor(u=>u.Email) %>\n                 <%= Html.EditorFor(u=>u.Email) %>\n                 <%= Html.ValidationMessage(\"Email\", \"*\") %>\n             </p>\n             <p>\n                 <input type=\"submit\" value=\"Create\" />\n             </p>\n         </fieldset>\n     <% } %>\n    <div>\n         <%=Html.ActionLink(\"Back to List\", \"Index\") %>\n     </div>\n </asp:Content>\n```\n\nHtml.EditorFor()支持任何的数据类型，而且会根据数据类型做出判断来生成不同的html代码，现在在实体类Users中添加一个bool类型的属性IsOnLine，如下图：\n\n![2010-12-29_163619](http://oec2003.qiniudn.com/2010-12-29_163619.gif)\n\n在“Create”视图模板中添加相应代码，运行后会看到Html.EditorFor()会将string类型的显示为文本框，bool类型的显示为复选框。除了对这些简单类型的支持外，Html.EditorFor()还可以将传递给他的拥有多个公有属性的复杂对象的属性自动进行循环，根据数据类型生成相应的html代码，并且能识别属性上定义的验证信息，下面的代码就是重写后的“Create”视图模板。\n\n```\n<h2>Create </h2>\n    <%= Html.ValidationSummary(\"Create was unsuccessful.\n    Please correct the errors and try again.\") %>\n      <% using (Html.BeginForm()) {%>\n          <fieldset>\n            <legend>Fields</legend>\n            <%= Html.EditorFor(u=>u) %>\n              <p>\n                <input type=\"submit\" value=\"Create\" />\n            </p>\n       </fieldset>\n\n   <% } %>\n```\n\n## UI 辅助方法模板化\n\nUI辅助方法模板机制可以自定义模板文件来控制显示的输出，具体操作看下面的例子 。\n\n1 在\\Views\\Shared目录下添加EditorTemplates子目录，然后在该目录下添加名为“UserNameDropDown.ascx”的模板文件。\n\n![2010-12-29_163655](http://oec2003.qiniudn.com/2010-12-29_163655.gif)\n\n2在UserNameDropDown.aspx文件中添加如下代码。\n\n```\n<%@ Control Language=\"C#\" Inherits=\"System.Web.Mvc.ViewUserControl<String>\" %>\n <%= Html.DropDownList(\"\",new SelectList(new[]{\"oec2003\",\"oec2004\",\"水杯\"})) %>\n```\n\n3 在实体类User中添加UserNameSelect属性，在属性上面用UIHint特性来指定UserNameDropDown模板 如下：\n\n![2010-12-29_163730](http://oec2003.qiniudn.com/2010-12-29_163730.gif)\n\n4 如果Create视图模板中是用的<%= Html.EditorFor(u=>u) %> 的写法，就不用做任何更改，否则可以使用<%=Html.EditorFor(u=>u.UserNameSelect,”UserNameDropDown” %> 将刚才定义的模板显示输出，运行后显示结果如下：\n\n![2010-12-29_163813](http://oec2003.qiniudn.com/2010-12-29_163813.gif)\n\n参考：[http://weblogs.asp.net/scottgu/archive/2009/07/31/asp-net-mvc-v2-preview-1-released.aspx](http://weblogs.asp.net/scottgu/archive/2009/07/31/asp-net-mvc-v2-preview-1-released.aspx)\n\n[示例下载](http://files.cnblogs.com/oec2003/Mvc2Demo.rar)\n\n\n","slug":"aspnet-mvc-v2-preview-1","published":1,"updated":"2016-08-16T14:01:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz9110037xfynn5ya051p","content":"<p>Asp.net MVC1.0正式版刚刚出来才几个月，ASP.NET MVC ASP.NET MVC2 Preview 1 Released 就跟我们见面了 ，您可以点击<a href=\"http://www.microsoft.com/downloads/details.aspx?displaylang=en&amp;FamilyID=d34f9eaa-fcbe-4e20-b2fd-a9a03de7d6dd#tm\" target=\"_blank\" rel=\"external\">这儿</a>下载。该版本可以和以前的Asp.net MVC1.0 兼容，安装了ASP.NET MVC2后，打开vs2008 ，新建项目，可以看到同时存在1.0和2的模板，如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_161754.gif\" alt=\"2010-12-29_161754\"></p>\n<p>在ASP.NET MVC2版中，包含了区域（Area）、数据标记验证（Data Annotation Validation）、强类型UI辅助方法和模板化辅助方法（TemplatedHelper）四个特性，下面就分别来看下这个四个特性。</p>\n<h2 id=\"区域（Areas）\"><a href=\"#区域（Areas）\" class=\"headerlink\" title=\"区域（Areas）\"></a>区域（Areas）</h2><p>区域（Areas）可以将Asp.net MVC应用的功能进行分割和组合，它可以将Controller和View进行分组管理。如下图中就是将博客（blogs）和相册（Albums）的部分通过Areas提出来单独管理。遗憾的是在预览版1中还没有任何工具的支持，所以Areas项目必须通过手动添加和配置。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_161937.gif\" alt=\"2010-12-29_161937\"></p>\n<h2 id=\"数据标记验证（Data-Annotation-Validation）\"><a href=\"#数据标记验证（Data-Annotation-Validation）\" class=\"headerlink\" title=\"数据标记验证（Data Annotation Validation）\"></a>数据标记验证（Data Annotation Validation）</h2><p>DataAnnotation提供了一个简单的方式，在应用中的Model（模型）和ViewModel（视图模型）类中添加验证规则，在ASP.NET MVC中有自动的绑定和UI辅助方法验证支持。首先创建一个实体类Users，代码如下:</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Mvc2Demo.Models</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Users</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        [Required(ErrorMessage = <span class=\"string\">\"用户名不能为空！\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> String UserName &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">        [Range(<span class=\"number\">0</span>, <span class=\"number\">150</span>, ErrorMessage = <span class=\"string\">\"年龄必须在0-150之间！\"</span>)]</div><div class=\"line\">        [Required(ErrorMessage = <span class=\"string\">\"年龄不能为空！\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> Int32 Age &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">        [Required(ErrorMessage = <span class=\"string\">\"邮箱地址不能为空！\"</span>)]</div><div class=\"line\">        [RegularExpression(<span class=\"string\">\"\\\\w+([-+.']\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*\"</span>,</div><div class=\"line\">            ErrorMessage = <span class=\"string\">\"邮箱格式不正确，请重新填写！\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> String Email &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>使用Required 、RegularExpression 等属性需要引用命名空间</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">using</span> <span class=\"selector-tag\">System</span><span class=\"selector-class\">.ComponentModel</span><span class=\"selector-class\">.DataAnnotations</span>;</div></pre></td></tr></table></figure>\n<p>在Controllers目录下创建UserController.cs，代码如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Mvc2Demo.Controllers</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserController</span> : <span class=\"title\">Controller</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> ActionResult <span class=\"title\">Index</span>(<span class=\"params\"></span>)</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> View();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> ActionResult <span class=\"title\">Create</span>(<span class=\"params\"></span>)</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Users user = <span class=\"keyword\">new</span> Users();</div><div class=\"line\">            <span class=\"keyword\">return</span> View(user);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">//在ASP.NET MVC2预览一版中使用[HttpPost]</span></div><div class=\"line\">        <span class=\"comment\">//1.0版中使用[AcceptVerbs(HttpVerbs.Post)]</span></div><div class=\"line\">        [HttpPost]</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> ActionResult <span class=\"title\">Create</span>(<span class=\"params\">Users user</span>)</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (!ModelState.IsValid)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> View(user);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> View(<span class=\"string\">\"Success\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在上面的任意一个Create方法上右击，选择Add View … ，在弹出的对话框中做相应的设置，然后点击Add，就会在View下添加相应的目录和页面文件，如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_163007.gif\" alt=\"2010-12-29_163007\"></p>\n<p>添加完后，系统会自动为Create视图生成如下代码：</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Title=<span class=\"string\">\"\"</span> Language=<span class=\"string\">\"C#\"</span> MasterPageFile=<span class=\"string\">\"~/Views/Shared/Site.Master\"</span></span></div><div class=\"line\">Inherits=<span class=\"string\">\"System.Web.Mvc.ViewPage&lt;Mvc2Demo.Models.Users&gt;\"</span> <span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:Content</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Content1\"</span> <span class=\"attr\">ContentPlaceHolderID</span>=<span class=\"string\">\"TitleContent\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">     Create</div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">asp:Content</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">asp:Content</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Content2\"</span> <span class=\"attr\">ContentPlaceHolderID</span>=<span class=\"string\">\"MainContent\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Create <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.ValidationSummary(<span class=\"string\">\"Create was unsuccessful.</span></span></div><div class=\"line\">        Please correct the errors and try again.\") <span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"ruby\"> using (Html.BeginForm()) &#123;</span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">fieldset</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">legend</span>&gt;</span>Fields<span class=\"tag\">&lt;/<span class=\"name\">legend</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"UserName\"</span>&gt;</span>UserName:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.TextBox(<span class=\"string\">\"UserName\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.ValidationMessage(<span class=\"string\">\"UserName\"</span>, <span class=\"string\">\"*\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"Age\"</span>&gt;</span>Age:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.TextBox(<span class=\"string\">\"Age\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.ValidationMessage(<span class=\"string\">\"Age\"</span>, <span class=\"string\">\"*\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"Email\"</span>&gt;</span>Email:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.TextBox(<span class=\"string\">\"Email\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.ValidationMessage(<span class=\"string\">\"Email\"</span>, <span class=\"string\">\"*\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Create\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">fieldset</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"ruby\"> &#125; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\">Html.ActionLink(<span class=\"string\">\"Back to List\"</span>, <span class=\"string\">\"Index\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">asp:Content</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>运行后的界面如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_163242.gif\" alt=\"2010-12-29_163242\"></p>\n<p>在文本框中填入一些非法数据后，点击“创建用户”后 非法数据不能通过验证，将在页面中显示错误提示信息，如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_163336.gif\" alt=\"2010-12-29_163336\"></p>\n<h2 id=\"强类型UI辅助方法\"><a href=\"#强类型UI辅助方法\" class=\"headerlink\" title=\"强类型UI辅助方法\"></a>强类型UI辅助方法</h2><p>在ASP.NET MVC2预览1版中提供了新的Html辅助方法，这些辅助方法允许你在引用视图模板的模型对象时使用强类型的lambda表达式，如&lt;%=Html.EditorFor(u=&gt;u.UserName) %&gt; ,而且lambda表达式也提供了良好的智能提示功能，如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_163517.gif\" alt=\"2010-12-29_163517\"></p>\n<p>在ASP.NET MVC2的预览版1中提供了Html.EditorFor、Html.LabelFor(),和 Html.DisplayFor() 辅助方法的内置支持。在以后的版本中将会提供更多这种辅助方法的支持。下面的代码是使用了辅助方法的“Create”视图模版。</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Title=<span class=\"string\">\"\"</span> Language=<span class=\"string\">\"C#\"</span> MasterPageFile=<span class=\"string\">\"~/Views/Shared/Site.Master\"</span></span></div><div class=\"line\">Inherits=<span class=\"string\">\"System.Web.Mvc.ViewPage&lt;Mvc2Demo.Models.Users&gt;\"</span> <span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">asp:Content</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Content1\"</span> <span class=\"attr\">ContentPlaceHolderID</span>=<span class=\"string\">\"TitleContent\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">     Create</div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">asp:Content</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">asp:Content</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Content2\"</span> <span class=\"attr\">ContentPlaceHolderID</span>=<span class=\"string\">\"MainContent\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Create <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.ValidationSummary(<span class=\"string\">\"Create was unsuccessful.</span></span></div><div class=\"line\">     Please correct the errors and try again.\") <span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"ruby\"> using (Html.BeginForm()) &#123;</span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">fieldset</span>&gt;</span></div><div class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">legend</span>&gt;</span>Fields<span class=\"tag\">&lt;/<span class=\"name\">legend</span>&gt;</span></div><div class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.LabelFor(u=&gt;u.UserName) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.EditorFor(u=&gt;u.UserName) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.ValidationMessage(<span class=\"string\">\"UserName\"</span>, <span class=\"string\">\"*\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">             <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.LabelFor(u=&gt;u.Age) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.EditorFor(u=&gt;u.Age) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.ValidationMessage(<span class=\"string\">\"Age\"</span>, <span class=\"string\">\"*\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">             <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.LabelFor(u=&gt;u.Email) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.EditorFor(u=&gt;u.Email) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.ValidationMessage(<span class=\"string\">\"Email\"</span>, <span class=\"string\">\"*\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">             <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Create\"</span> /&gt;</span></div><div class=\"line\">             <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">         <span class=\"tag\">&lt;/<span class=\"name\">fieldset</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"ruby\"> &#125; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\">Html.ActionLink(<span class=\"string\">\"Back to List\"</span>, <span class=\"string\">\"Index\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">asp:Content</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Html.EditorFor()支持任何的数据类型，而且会根据数据类型做出判断来生成不同的html代码，现在在实体类Users中添加一个bool类型的属性IsOnLine，如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_163619.gif\" alt=\"2010-12-29_163619\"></p>\n<p>在“Create”视图模板中添加相应代码，运行后会看到Html.EditorFor()会将string类型的显示为文本框，bool类型的显示为复选框。除了对这些简单类型的支持外，Html.EditorFor()还可以将传递给他的拥有多个公有属性的复杂对象的属性自动进行循环，根据数据类型生成相应的html代码，并且能识别属性上定义的验证信息，下面的代码就是重写后的“Create”视图模板。</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Create <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.ValidationSummary(<span class=\"string\">\"Create was unsuccessful.</span></span></div><div class=\"line\">    Please correct the errors and try again.\") <span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"ruby\"> using (Html.BeginForm()) &#123;</span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">fieldset</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">legend</span>&gt;</span>Fields<span class=\"tag\">&lt;/<span class=\"name\">legend</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.EditorFor(u=&gt;u) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Create\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">fieldset</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"ruby\"> &#125; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div></pre></td></tr></table></figure>\n<h2 id=\"UI-辅助方法模板化\"><a href=\"#UI-辅助方法模板化\" class=\"headerlink\" title=\"UI 辅助方法模板化\"></a>UI 辅助方法模板化</h2><p>UI辅助方法模板机制可以自定义模板文件来控制显示的输出，具体操作看下面的例子 。</p>\n<p>1 在\\Views\\Shared目录下添加EditorTemplates子目录，然后在该目录下添加名为“UserNameDropDown.ascx”的模板文件。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_163655.gif\" alt=\"2010-12-29_163655\"></p>\n<p>2在UserNameDropDown.aspx文件中添加如下代码。</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Control Language=<span class=\"string\">\"C#\"</span> Inherits=<span class=\"string\">\"System.Web.Mvc.ViewUserControl&lt;String&gt;\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> Html.DropDownList(<span class=\"string\">\"\"</span>,new SelectList(new[]&#123;<span class=\"string\">\"oec2003\"</span>,<span class=\"string\">\"oec2004\"</span>,<span class=\"string\">\"水杯\"</span>&#125;)) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div></pre></td></tr></table></figure>\n<p>3 在实体类User中添加UserNameSelect属性，在属性上面用UIHint特性来指定UserNameDropDown模板 如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_163730.gif\" alt=\"2010-12-29_163730\"></p>\n<p>4 如果Create视图模板中是用的&lt;%= Html.EditorFor(u=&gt;u) %&gt; 的写法，就不用做任何更改，否则可以使用&lt;%=Html.EditorFor(u=&gt;u.UserNameSelect,”UserNameDropDown” %&gt; 将刚才定义的模板显示输出，运行后显示结果如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_163813.gif\" alt=\"2010-12-29_163813\"></p>\n<p>参考：<a href=\"http://weblogs.asp.net/scottgu/archive/2009/07/31/asp-net-mvc-v2-preview-1-released.aspx\" target=\"_blank\" rel=\"external\">http://weblogs.asp.net/scottgu/archive/2009/07/31/asp-net-mvc-v2-preview-1-released.aspx</a></p>\n<p><a href=\"http://files.cnblogs.com/oec2003/Mvc2Demo.rar\" target=\"_blank\" rel=\"external\">示例下载</a></p>\n","excerpt":"","more":"<p>Asp.net MVC1.0正式版刚刚出来才几个月，ASP.NET MVC ASP.NET MVC2 Preview 1 Released 就跟我们见面了 ，您可以点击<a href=\"http://www.microsoft.com/downloads/details.aspx?displaylang=en&amp;FamilyID=d34f9eaa-fcbe-4e20-b2fd-a9a03de7d6dd#tm\">这儿</a>下载。该版本可以和以前的Asp.net MVC1.0 兼容，安装了ASP.NET MVC2后，打开vs2008 ，新建项目，可以看到同时存在1.0和2的模板，如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_161754.gif\" alt=\"2010-12-29_161754\"></p>\n<p>在ASP.NET MVC2版中，包含了区域（Area）、数据标记验证（Data Annotation Validation）、强类型UI辅助方法和模板化辅助方法（TemplatedHelper）四个特性，下面就分别来看下这个四个特性。</p>\n<h2 id=\"区域（Areas）\"><a href=\"#区域（Areas）\" class=\"headerlink\" title=\"区域（Areas）\"></a>区域（Areas）</h2><p>区域（Areas）可以将Asp.net MVC应用的功能进行分割和组合，它可以将Controller和View进行分组管理。如下图中就是将博客（blogs）和相册（Albums）的部分通过Areas提出来单独管理。遗憾的是在预览版1中还没有任何工具的支持，所以Areas项目必须通过手动添加和配置。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_161937.gif\" alt=\"2010-12-29_161937\"></p>\n<h2 id=\"数据标记验证（Data-Annotation-Validation）\"><a href=\"#数据标记验证（Data-Annotation-Validation）\" class=\"headerlink\" title=\"数据标记验证（Data Annotation Validation）\"></a>数据标记验证（Data Annotation Validation）</h2><p>DataAnnotation提供了一个简单的方式，在应用中的Model（模型）和ViewModel（视图模型）类中添加验证规则，在ASP.NET MVC中有自动的绑定和UI辅助方法验证支持。首先创建一个实体类Users，代码如下:</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Mvc2Demo.Models</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Users</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        [Required(ErrorMessage = <span class=\"string\">\"用户名不能为空！\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> String UserName &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">        [Range(<span class=\"number\">0</span>, <span class=\"number\">150</span>, ErrorMessage = <span class=\"string\">\"年龄必须在0-150之间！\"</span>)]</div><div class=\"line\">        [Required(ErrorMessage = <span class=\"string\">\"年龄不能为空！\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> Int32 Age &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">        [Required(ErrorMessage = <span class=\"string\">\"邮箱地址不能为空！\"</span>)]</div><div class=\"line\">        [RegularExpression(<span class=\"string\">\"\\\\w+([-+.']\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*\"</span>,</div><div class=\"line\">            ErrorMessage = <span class=\"string\">\"邮箱格式不正确，请重新填写！\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> String Email &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>使用Required 、RegularExpression 等属性需要引用命名空间</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">using</span> <span class=\"selector-tag\">System</span><span class=\"selector-class\">.ComponentModel</span><span class=\"selector-class\">.DataAnnotations</span>;</div></pre></td></tr></table></figure>\n<p>在Controllers目录下创建UserController.cs，代码如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Mvc2Demo.Controllers</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserController</span> : <span class=\"title\">Controller</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> ActionResult <span class=\"title\">Index</span>(<span class=\"params\"></span>)</div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> View();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> ActionResult <span class=\"title\">Create</span>(<span class=\"params\"></span>)</div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Users user = <span class=\"keyword\">new</span> Users();</div><div class=\"line\">            <span class=\"keyword\">return</span> View(user);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">//在ASP.NET MVC2预览一版中使用[HttpPost]</span></div><div class=\"line\">        <span class=\"comment\">//1.0版中使用[AcceptVerbs(HttpVerbs.Post)]</span></div><div class=\"line\">        [HttpPost]</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> ActionResult <span class=\"title\">Create</span>(<span class=\"params\">Users user</span>)</div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (!ModelState.IsValid)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> View(user);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> View(<span class=\"string\">\"Success\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在上面的任意一个Create方法上右击，选择Add View … ，在弹出的对话框中做相应的设置，然后点击Add，就会在View下添加相应的目录和页面文件，如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_163007.gif\" alt=\"2010-12-29_163007\"></p>\n<p>添加完后，系统会自动为Create视图生成如下代码：</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Title=<span class=\"string\">\"\"</span> Language=<span class=\"string\">\"C#\"</span> MasterPageFile=<span class=\"string\">\"~/Views/Shared/Site.Master\"</span></div><div class=\"line\">Inherits=<span class=\"string\">\"System.Web.Mvc.ViewPage&lt;Mvc2Demo.Models.Users&gt;\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:Content</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Content1\"</span> <span class=\"attr\">ContentPlaceHolderID</span>=<span class=\"string\">\"TitleContent\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">     Create</div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">asp:Content</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">asp:Content</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Content2\"</span> <span class=\"attr\">ContentPlaceHolderID</span>=<span class=\"string\">\"MainContent\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Create <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.ValidationSummary(<span class=\"string\">\"Create was unsuccessful.</div><div class=\"line\">        Please correct the errors and try again.\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> using (Html.BeginForm()) &#123;</span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">fieldset</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">legend</span>&gt;</span>Fields<span class=\"tag\">&lt;/<span class=\"name\">legend</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"UserName\"</span>&gt;</span>UserName:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.TextBox(<span class=\"string\">\"UserName\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.ValidationMessage(<span class=\"string\">\"UserName\"</span>, <span class=\"string\">\"*\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"Age\"</span>&gt;</span>Age:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.TextBox(<span class=\"string\">\"Age\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.ValidationMessage(<span class=\"string\">\"Age\"</span>, <span class=\"string\">\"*\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"Email\"</span>&gt;</span>Email:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.TextBox(<span class=\"string\">\"Email\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.ValidationMessage(<span class=\"string\">\"Email\"</span>, <span class=\"string\">\"*\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Create\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">fieldset</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> &#125; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\">Html.ActionLink(<span class=\"string\">\"Back to List\"</span>, <span class=\"string\">\"Index\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">asp:Content</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>运行后的界面如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_163242.gif\" alt=\"2010-12-29_163242\"></p>\n<p>在文本框中填入一些非法数据后，点击“创建用户”后 非法数据不能通过验证，将在页面中显示错误提示信息，如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_163336.gif\" alt=\"2010-12-29_163336\"></p>\n<h2 id=\"强类型UI辅助方法\"><a href=\"#强类型UI辅助方法\" class=\"headerlink\" title=\"强类型UI辅助方法\"></a>强类型UI辅助方法</h2><p>在ASP.NET MVC2预览1版中提供了新的Html辅助方法，这些辅助方法允许你在引用视图模板的模型对象时使用强类型的lambda表达式，如&lt;%=Html.EditorFor(u=&gt;u.UserName) %&gt; ,而且lambda表达式也提供了良好的智能提示功能，如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_163517.gif\" alt=\"2010-12-29_163517\"></p>\n<p>在ASP.NET MVC2的预览版1中提供了Html.EditorFor、Html.LabelFor(),和 Html.DisplayFor() 辅助方法的内置支持。在以后的版本中将会提供更多这种辅助方法的支持。下面的代码是使用了辅助方法的“Create”视图模版。</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Title=<span class=\"string\">\"\"</span> Language=<span class=\"string\">\"C#\"</span> MasterPageFile=<span class=\"string\">\"~/Views/Shared/Site.Master\"</span></div><div class=\"line\">Inherits=<span class=\"string\">\"System.Web.Mvc.ViewPage&lt;Mvc2Demo.Models.Users&gt;\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">asp:Content</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Content1\"</span> <span class=\"attr\">ContentPlaceHolderID</span>=<span class=\"string\">\"TitleContent\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">     Create</div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">asp:Content</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">asp:Content</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Content2\"</span> <span class=\"attr\">ContentPlaceHolderID</span>=<span class=\"string\">\"MainContent\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Create <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.ValidationSummary(<span class=\"string\">\"Create was unsuccessful.</div><div class=\"line\">     Please correct the errors and try again.\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> using (Html.BeginForm()) &#123;</span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">fieldset</span>&gt;</span></div><div class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">legend</span>&gt;</span>Fields<span class=\"tag\">&lt;/<span class=\"name\">legend</span>&gt;</span></div><div class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.LabelFor(u=&gt;u.UserName) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.EditorFor(u=&gt;u.UserName) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.ValidationMessage(<span class=\"string\">\"UserName\"</span>, <span class=\"string\">\"*\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">             <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.LabelFor(u=&gt;u.Age) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.EditorFor(u=&gt;u.Age) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.ValidationMessage(<span class=\"string\">\"Age\"</span>, <span class=\"string\">\"*\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">             <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.LabelFor(u=&gt;u.Email) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.EditorFor(u=&gt;u.Email) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.ValidationMessage(<span class=\"string\">\"Email\"</span>, <span class=\"string\">\"*\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">             <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Create\"</span> /&gt;</span></div><div class=\"line\">             <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">         <span class=\"tag\">&lt;/<span class=\"name\">fieldset</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> &#125; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\">Html.ActionLink(<span class=\"string\">\"Back to List\"</span>, <span class=\"string\">\"Index\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">asp:Content</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>Html.EditorFor()支持任何的数据类型，而且会根据数据类型做出判断来生成不同的html代码，现在在实体类Users中添加一个bool类型的属性IsOnLine，如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_163619.gif\" alt=\"2010-12-29_163619\"></p>\n<p>在“Create”视图模板中添加相应代码，运行后会看到Html.EditorFor()会将string类型的显示为文本框，bool类型的显示为复选框。除了对这些简单类型的支持外，Html.EditorFor()还可以将传递给他的拥有多个公有属性的复杂对象的属性自动进行循环，根据数据类型生成相应的html代码，并且能识别属性上定义的验证信息，下面的代码就是重写后的“Create”视图模板。</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Create <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.ValidationSummary(<span class=\"string\">\"Create was unsuccessful.</div><div class=\"line\">    Please correct the errors and try again.\"</span>) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> using (Html.BeginForm()) &#123;</span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">fieldset</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">legend</span>&gt;</span>Fields<span class=\"tag\">&lt;/<span class=\"name\">legend</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.EditorFor(u=&gt;u) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Create\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">fieldset</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> &#125; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div></pre></td></tr></table></figure>\n<h2 id=\"UI-辅助方法模板化\"><a href=\"#UI-辅助方法模板化\" class=\"headerlink\" title=\"UI 辅助方法模板化\"></a>UI 辅助方法模板化</h2><p>UI辅助方法模板机制可以自定义模板文件来控制显示的输出，具体操作看下面的例子 。</p>\n<p>1 在\\Views\\Shared目录下添加EditorTemplates子目录，然后在该目录下添加名为“UserNameDropDown.ascx”的模板文件。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_163655.gif\" alt=\"2010-12-29_163655\"></p>\n<p>2在UserNameDropDown.aspx文件中添加如下代码。</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Control Language=<span class=\"string\">\"C#\"</span> Inherits=<span class=\"string\">\"System.Web.Mvc.ViewUserControl&lt;String&gt;\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> Html.DropDownList(<span class=\"string\">\"\"</span>,new SelectList(new[]&#123;<span class=\"string\">\"oec2003\"</span>,<span class=\"string\">\"oec2004\"</span>,<span class=\"string\">\"水杯\"</span>&#125;)) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div></pre></td></tr></table></figure>\n<p>3 在实体类User中添加UserNameSelect属性，在属性上面用UIHint特性来指定UserNameDropDown模板 如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_163730.gif\" alt=\"2010-12-29_163730\"></p>\n<p>4 如果Create视图模板中是用的&lt;%= Html.EditorFor(u=&gt;u) %&gt; 的写法，就不用做任何更改，否则可以使用&lt;%=Html.EditorFor(u=&gt;u.UserNameSelect,”UserNameDropDown” %&gt; 将刚才定义的模板显示输出，运行后显示结果如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_163813.gif\" alt=\"2010-12-29_163813\"></p>\n<p>参考：<a href=\"http://weblogs.asp.net/scottgu/archive/2009/07/31/asp-net-mvc-v2-preview-1-released.aspx\">http://weblogs.asp.net/scottgu/archive/2009/07/31/asp-net-mvc-v2-preview-1-released.aspx</a></p>\n<p><a href=\"http://files.cnblogs.com/oec2003/Mvc2Demo.rar\">示例下载</a></p>\n"},{"title":"Asp.net中递归实现CSS菜单","date":"2009-04-17T16:00:00.000Z","_content":"\n现在网络上有各种各样的非常漂亮的css菜单，不过大多都是静态的，菜单项都是在页面中写死的，这样就不是很灵活，每次要修改菜单都要去修改页面，下面就介绍一个从数据库中读取菜单项的动态css菜单的例子。\n<!--more-->\n\n1 首先创建数据表Menu，添加三个基本字段id pid menu\n\n![2010-12-30_112106](http://oec2003.qiniudn.com/2010-12-30_112106.gif)\n\n表建好后，添加一些测试数据\n\n![2010-12-30_112140](http://oec2003.qiniudn.com/2010-12-30_112140.gif)\n\n2 在项目中创建用户控件LeftMenu，菜单一般可以做成用户控件或是放在Masterpage中。LeftMenu中代码如下。\n\n```\n<%@ Control Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"LeftMenu.ascx.cs\"\n Inherits=\"LeftMenu\" %>\n<style type=\"text/css\">\nbody { margin: 0; padding: 30px; background: #FFF; color: #666; }\nh1 { font: bold 16px Arial, Helvetica, sans-serif; }\np { font: 11px Arial, Helvetica, sans-serif; }\na { color: #900; text-decoration: none; }\na:hover { background: #900; color: #FFF; }\n/*CSS Code for Menu Begin:*/\n/* Root = Vertical, Secondary = Vertical */\nul#navmenu,\nul#navmenu li,\nul#navmenu ul { margin: 0; border: 0 none; padding: 0; width: 160px;  list-style: none; }\nul#navmenu li { display: block !important; /*For GOOD browsers*/\ndisplay: inline; /*For IE*/ position: relative; }\n/* Root Menu */\nul#navmenu a { border: 1px solid #FFF; border-right-color: #CCC;\nborder-bottom-color: #CCC; padding: 0 6px; display: block;\nbackground: #EEE; color: #666; font: bold 10px/22px Verdana, Arial, Helvetica, sans-serif;\ntext-decoration: none; height: auto !important; height: 1%; /*For IE*/\n}\n/* Root Menu Hover Persistence */\nul#navmenu a:hover,\nul#navmenu li:hover a,\nul#navmenu li.iehover a { background: #CCC; color: #FFF; }\n/* 2nd Menu */\nul#navmenu li:hover li a,\nul#navmenu li.iehover li a { background: #EEE; color: #666; }\n/* 2nd Menu Hover Persistence */\nul#navmenu li:hover li a:hover,\nul#navmenu li:hover li:hover a,\nul#navmenu li.iehover li a:hover,\nul#navmenu li.iehover li.iehover a { background: #CCC; color: #FFF; }\n/* 3rd Menu */\nul#navmenu li:hover li:hover li a,\nul#navmenu li.iehover li.iehover li a { background: #EEE; color: #666; }\n/* 3rd Menu Hover Persistence */\nul#navmenu li:hover li:hover li a:hover,\nul#navmenu li:hover li:hover li:hover a,\nul#navmenu li.iehover li.iehover li a:hover,\nul#navmenu li.iehover li.iehover li.iehover a { background: #CCC; color: #FFF; }\n/* 4th Menu */\nul#navmenu li:hover li:hover li:hover li a,\nul#navmenu li.iehover li.iehover li.iehover li a { background: #EEE; color: #666; }\n/* 4th Menu Hover */\nul#navmenu li:hover li:hover li:hover li a:hover,\nul#navmenu li.iehover li.iehover li.iehover li a:hover { background: #CCC; color: #FFF; }\nul#navmenu ul,\nul#navmenu ul ul,\nul#navmenu ul ul ul { display: none; position: absolute; top: 0; left: 160px; }\n/* Do Not Move - Must Come Before display:block for Gecko */\nul#navmenu li:hover ul ul,\nul#navmenu li:hover ul ul ul,\nul#navmenu li.iehover ul ul,\nul#navmenu li.iehover ul ul ul { display: none; }\nul#navmenu li:hover ul,\nul#navmenu ul li:hover ul,\nul#navmenu ul ul li:hover ul,\nul#navmenu li.iehover ul,\nul#navmenu ul li.iehover ul,\nul#navmenu ul ul li.iehover ul { display: block; }\n</style>\n<script type=\"text/javascript\">\n<!--\n    navHover = function() {\n        var lis = document.getElementById(\"navmenu\").getElementsByTagName(\"LI\");\n        for (var i = 0; i < lis.length; i++) {\n            lis[i].onmouseover = function() {\n                this.className += \" iehover\";\n            }\n            lis[i].onmouseout = function() {\n                this.className = this.className.replace(new RegExp(\" iehover\\\\b\"), \"\");\n            }\n        }\n    }\n    if (window.attachEvent) window.attachEvent(\"onload\", navHover);\n-->\n</script> \n\n<ul id=\"navmenu\">\n    <%= _menu %>\n</ul>\n```\n\n3 编写后台代码，主要思路是使用递归来实现菜单的层级关系。\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n//new using\nusing System.Data;\nusing System.Data.Sql;\nusing System.Text;\n\npublic partial class LeftMenu : System.Web.UI.UserControl\n{\n    protected string _menu = string.Empty;\n\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        if (!IsPostBack)\n        {\n            BindMenu();\n        }\n    }\n\n    private void BindMenu()\n    {\n        StringBuilder sb = new StringBuilder();\n        OledbHelper helper = new OledbHelper();\n        DataSet ds = helper.GetDs(\"select * from [Menu]\");\n        if (ds != null && ds.Tables.Count > 0 &&\n                ds.Tables[0] != null && ds.Tables[0].Rows.Count > 0)\n        {\n            DataRow[] rows = ds.Tables[0].Select(\"ParentID=0\");\n            foreach (DataRow dr in rows)\n            {\n                string id = dr[\"ID\"].ToString();\n                string name = dr[\"Name\"].ToString();\n                sb.Append(\"<li><a href=\\\"http://blog.fwhyy.com\\\">\" + name + \"</a>\\r\\n\");\n                  sb.Append(GetSubMenu(id, ds.Tables[0]));\n                sb.Append(\"</li>\\r\\n\");\n            }\n            _menu = sb.ToString();\n        }\n    }\n\n    private string GetSubMenu(string pid, DataTable dt)\n    {\n        StringBuilder sb = new StringBuilder();\n        DataRow[] rows = dt.Select(\"ParentID=\" + pid);\n        sb.Append(\"<ul>\\r\\n\");\n        foreach (DataRow dr in rows)\n        {\n            string id = dr[\"ID\"].ToString();\n            string name = dr[\"Name\"].ToString();\n            sb.Append(\"<li><a href=\\\"http://blog.fwhyy.com\\\">\" + name + \"</a>\\r\\n\");\n            sb.Append(GetSubMenu(id, dt));  //递归\n            sb.Append(\"</li>\\r\\n\");\n        }\n        sb.Append(\"</ul>\\r\\n\");\n        return sb.ToString();\n    }\n}\n```\n\n4 创建aspx页面Menu 将用户控件拖到页面中，运行就可以看到效果。\n\n![2010-12-30_112219](http://oec2003.qiniudn.com/2010-12-30_112219.gif)\n\n注：该例子需要有一个静态的css菜单作为模板，网络上很多的css菜单都可以来套用，当然css很强的朋友自己来设计会更好。\n\n[Demo下载](http://files.cnblogs.com/oec2003/site1.rar)\n\n","source":"_posts/aspnet-recursive-implementation-of-css-menu.md","raw":"---\ntitle: Asp.net中递归实现CSS菜单\ndate: 2009-04-18\ncategories: [Asp.Net]\ntags: [AspNet]\n---\n\n现在网络上有各种各样的非常漂亮的css菜单，不过大多都是静态的，菜单项都是在页面中写死的，这样就不是很灵活，每次要修改菜单都要去修改页面，下面就介绍一个从数据库中读取菜单项的动态css菜单的例子。\n<!--more-->\n\n1 首先创建数据表Menu，添加三个基本字段id pid menu\n\n![2010-12-30_112106](http://oec2003.qiniudn.com/2010-12-30_112106.gif)\n\n表建好后，添加一些测试数据\n\n![2010-12-30_112140](http://oec2003.qiniudn.com/2010-12-30_112140.gif)\n\n2 在项目中创建用户控件LeftMenu，菜单一般可以做成用户控件或是放在Masterpage中。LeftMenu中代码如下。\n\n```\n<%@ Control Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"LeftMenu.ascx.cs\"\n Inherits=\"LeftMenu\" %>\n<style type=\"text/css\">\nbody { margin: 0; padding: 30px; background: #FFF; color: #666; }\nh1 { font: bold 16px Arial, Helvetica, sans-serif; }\np { font: 11px Arial, Helvetica, sans-serif; }\na { color: #900; text-decoration: none; }\na:hover { background: #900; color: #FFF; }\n/*CSS Code for Menu Begin:*/\n/* Root = Vertical, Secondary = Vertical */\nul#navmenu,\nul#navmenu li,\nul#navmenu ul { margin: 0; border: 0 none; padding: 0; width: 160px;  list-style: none; }\nul#navmenu li { display: block !important; /*For GOOD browsers*/\ndisplay: inline; /*For IE*/ position: relative; }\n/* Root Menu */\nul#navmenu a { border: 1px solid #FFF; border-right-color: #CCC;\nborder-bottom-color: #CCC; padding: 0 6px; display: block;\nbackground: #EEE; color: #666; font: bold 10px/22px Verdana, Arial, Helvetica, sans-serif;\ntext-decoration: none; height: auto !important; height: 1%; /*For IE*/\n}\n/* Root Menu Hover Persistence */\nul#navmenu a:hover,\nul#navmenu li:hover a,\nul#navmenu li.iehover a { background: #CCC; color: #FFF; }\n/* 2nd Menu */\nul#navmenu li:hover li a,\nul#navmenu li.iehover li a { background: #EEE; color: #666; }\n/* 2nd Menu Hover Persistence */\nul#navmenu li:hover li a:hover,\nul#navmenu li:hover li:hover a,\nul#navmenu li.iehover li a:hover,\nul#navmenu li.iehover li.iehover a { background: #CCC; color: #FFF; }\n/* 3rd Menu */\nul#navmenu li:hover li:hover li a,\nul#navmenu li.iehover li.iehover li a { background: #EEE; color: #666; }\n/* 3rd Menu Hover Persistence */\nul#navmenu li:hover li:hover li a:hover,\nul#navmenu li:hover li:hover li:hover a,\nul#navmenu li.iehover li.iehover li a:hover,\nul#navmenu li.iehover li.iehover li.iehover a { background: #CCC; color: #FFF; }\n/* 4th Menu */\nul#navmenu li:hover li:hover li:hover li a,\nul#navmenu li.iehover li.iehover li.iehover li a { background: #EEE; color: #666; }\n/* 4th Menu Hover */\nul#navmenu li:hover li:hover li:hover li a:hover,\nul#navmenu li.iehover li.iehover li.iehover li a:hover { background: #CCC; color: #FFF; }\nul#navmenu ul,\nul#navmenu ul ul,\nul#navmenu ul ul ul { display: none; position: absolute; top: 0; left: 160px; }\n/* Do Not Move - Must Come Before display:block for Gecko */\nul#navmenu li:hover ul ul,\nul#navmenu li:hover ul ul ul,\nul#navmenu li.iehover ul ul,\nul#navmenu li.iehover ul ul ul { display: none; }\nul#navmenu li:hover ul,\nul#navmenu ul li:hover ul,\nul#navmenu ul ul li:hover ul,\nul#navmenu li.iehover ul,\nul#navmenu ul li.iehover ul,\nul#navmenu ul ul li.iehover ul { display: block; }\n</style>\n<script type=\"text/javascript\">\n<!--\n    navHover = function() {\n        var lis = document.getElementById(\"navmenu\").getElementsByTagName(\"LI\");\n        for (var i = 0; i < lis.length; i++) {\n            lis[i].onmouseover = function() {\n                this.className += \" iehover\";\n            }\n            lis[i].onmouseout = function() {\n                this.className = this.className.replace(new RegExp(\" iehover\\\\b\"), \"\");\n            }\n        }\n    }\n    if (window.attachEvent) window.attachEvent(\"onload\", navHover);\n-->\n</script> \n\n<ul id=\"navmenu\">\n    <%= _menu %>\n</ul>\n```\n\n3 编写后台代码，主要思路是使用递归来实现菜单的层级关系。\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n//new using\nusing System.Data;\nusing System.Data.Sql;\nusing System.Text;\n\npublic partial class LeftMenu : System.Web.UI.UserControl\n{\n    protected string _menu = string.Empty;\n\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        if (!IsPostBack)\n        {\n            BindMenu();\n        }\n    }\n\n    private void BindMenu()\n    {\n        StringBuilder sb = new StringBuilder();\n        OledbHelper helper = new OledbHelper();\n        DataSet ds = helper.GetDs(\"select * from [Menu]\");\n        if (ds != null && ds.Tables.Count > 0 &&\n                ds.Tables[0] != null && ds.Tables[0].Rows.Count > 0)\n        {\n            DataRow[] rows = ds.Tables[0].Select(\"ParentID=0\");\n            foreach (DataRow dr in rows)\n            {\n                string id = dr[\"ID\"].ToString();\n                string name = dr[\"Name\"].ToString();\n                sb.Append(\"<li><a href=\\\"http://blog.fwhyy.com\\\">\" + name + \"</a>\\r\\n\");\n                  sb.Append(GetSubMenu(id, ds.Tables[0]));\n                sb.Append(\"</li>\\r\\n\");\n            }\n            _menu = sb.ToString();\n        }\n    }\n\n    private string GetSubMenu(string pid, DataTable dt)\n    {\n        StringBuilder sb = new StringBuilder();\n        DataRow[] rows = dt.Select(\"ParentID=\" + pid);\n        sb.Append(\"<ul>\\r\\n\");\n        foreach (DataRow dr in rows)\n        {\n            string id = dr[\"ID\"].ToString();\n            string name = dr[\"Name\"].ToString();\n            sb.Append(\"<li><a href=\\\"http://blog.fwhyy.com\\\">\" + name + \"</a>\\r\\n\");\n            sb.Append(GetSubMenu(id, dt));  //递归\n            sb.Append(\"</li>\\r\\n\");\n        }\n        sb.Append(\"</ul>\\r\\n\");\n        return sb.ToString();\n    }\n}\n```\n\n4 创建aspx页面Menu 将用户控件拖到页面中，运行就可以看到效果。\n\n![2010-12-30_112219](http://oec2003.qiniudn.com/2010-12-30_112219.gif)\n\n注：该例子需要有一个静态的css菜单作为模板，网络上很多的css菜单都可以来套用，当然css很强的朋友自己来设计会更好。\n\n[Demo下载](http://files.cnblogs.com/oec2003/site1.rar)\n\n","slug":"aspnet-recursive-implementation-of-css-menu","published":1,"updated":"2016-08-14T07:59:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz913003axfyn3hlzh6u0","content":"<p>现在网络上有各种各样的非常漂亮的css菜单，不过大多都是静态的，菜单项都是在页面中写死的，这样就不是很灵活，每次要修改菜单都要去修改页面，下面就介绍一个从数据库中读取菜单项的动态css菜单的例子。<br><a id=\"more\"></a></p>\n<p>1 首先创建数据表Menu，添加三个基本字段id pid menu</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_112106.gif\" alt=\"2010-12-30_112106\"></p>\n<p>表建好后，添加一些测试数据</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_112140.gif\" alt=\"2010-12-30_112140\"></p>\n<p>2 在项目中创建用户控件LeftMenu，菜单一般可以做成用户控件或是放在Masterpage中。LeftMenu中代码如下。</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Control Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"LeftMenu.ascx.cs\"</span></span></div><div class=\"line\"> Inherits=<span class=\"string\">\"LeftMenu\"</span> <span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"css\"></span></div><div class=\"line\"><span class=\"selector-tag\">body</span> &#123; <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>; <span class=\"attribute\">padding</span>: <span class=\"number\">30px</span>; <span class=\"attribute\">background</span>: <span class=\"number\">#FFF</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#666</span>; &#125;</div><div class=\"line\"><span class=\"selector-tag\">h1</span> &#123; <span class=\"attribute\">font</span>: bold <span class=\"number\">16px</span> Arial, Helvetica, sans-serif; &#125;</div><div class=\"line\"><span class=\"selector-tag\">p</span> &#123; <span class=\"attribute\">font</span>: <span class=\"number\">11px</span> Arial, Helvetica, sans-serif; &#125;</div><div class=\"line\"><span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">color</span>: <span class=\"number\">#900</span>; <span class=\"attribute\">text-decoration</span>: none; &#125;</div><div class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#900</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#FFF</span>; &#125;</div><div class=\"line\"><span class=\"comment\">/*CSS Code for Menu Begin:*/</span></div><div class=\"line\"><span class=\"comment\">/* Root = Vertical, Secondary = Vertical */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">ul</span> &#123; <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>; <span class=\"attribute\">border</span>: <span class=\"number\">0</span> none; <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>; <span class=\"attribute\">width</span>: <span class=\"number\">160px</span>;  <span class=\"attribute\">list-style</span>: none; &#125;</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span> &#123; <span class=\"attribute\">display</span>: block <span class=\"meta\">!important</span>; <span class=\"comment\">/*For GOOD browsers*/</span></div><div class=\"line\"><span class=\"attribute\">display</span>: inline; <span class=\"comment\">/*For IE*/</span> <span class=\"attribute\">position</span>: relative; &#125;</div><div class=\"line\"><span class=\"comment\">/* Root Menu */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#FFF</span>; <span class=\"attribute\">border-right-color</span>: <span class=\"number\">#CCC</span>;</div><div class=\"line\"><span class=\"attribute\">border-bottom-color</span>: <span class=\"number\">#CCC</span>; <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">6px</span>; <span class=\"attribute\">display</span>: block;</div><div class=\"line\"><span class=\"attribute\">background</span>: <span class=\"number\">#EEE</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#666</span>; <span class=\"attribute\">font</span>: bold <span class=\"number\">10px</span>/<span class=\"number\">22px</span> Verdana, Arial, Helvetica, sans-serif;</div><div class=\"line\"><span class=\"attribute\">text-decoration</span>: none; <span class=\"attribute\">height</span>: auto <span class=\"meta\">!important</span>; <span class=\"attribute\">height</span>: <span class=\"number\">1%</span>; <span class=\"comment\">/*For IE*/</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">/* Root Menu Hover Persistence */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">a</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#CCC</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#FFF</span>; &#125;</div><div class=\"line\"><span class=\"comment\">/* 2nd Menu */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#EEE</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#666</span>; &#125;</div><div class=\"line\"><span class=\"comment\">/* 2nd Menu Hover Persistence */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">a</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#CCC</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#FFF</span>; &#125;</div><div class=\"line\"><span class=\"comment\">/* 3rd Menu */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#EEE</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#666</span>; &#125;</div><div class=\"line\"><span class=\"comment\">/* 3rd Menu Hover Persistence */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">a</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#CCC</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#FFF</span>; &#125;</div><div class=\"line\"><span class=\"comment\">/* 4th Menu */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#EEE</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#666</span>; &#125;</div><div class=\"line\"><span class=\"comment\">/* 4th Menu Hover */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#CCC</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#FFF</span>; &#125;</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span> &#123; <span class=\"attribute\">display</span>: none; <span class=\"attribute\">position</span>: absolute; <span class=\"attribute\">top</span>: <span class=\"number\">0</span>; <span class=\"attribute\">left</span>: <span class=\"number\">160px</span>; &#125;</div><div class=\"line\"><span class=\"comment\">/* Do Not Move - Must Come Before display:block for Gecko */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span> &#123; <span class=\"attribute\">display</span>: none; &#125;</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">ul</span> &#123; <span class=\"attribute\">display</span>: block; &#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">&lt;!--</div><div class=\"line\">    navHover = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> lis = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"navmenu\"</span>).getElementsByTagName(<span class=\"string\">\"LI\"</span>);</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; lis.length; i++) &#123;</div><div class=\"line\">            lis[i].onmouseover = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">this</span>.className += <span class=\"string\">\" iehover\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            lis[i].onmouseout = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">this</span>.className = <span class=\"keyword\">this</span>.className.replace(<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\" iehover\\\\b\"</span>), <span class=\"string\">\"\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.attachEvent) <span class=\"built_in\">window</span>.attachEvent(<span class=\"string\">\"onload\"</span>, navHover);</div><div class=\"line\">--&gt;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span> </div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"navmenu\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"ruby\"> _menu </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>3 编写后台代码，主要思路是使用递归来实现菜单的层级关系。</p>\n<figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls;</div><div class=\"line\"><span class=\"comment\">//new using</span></div><div class=\"line\"><span class=\"keyword\">using</span> System.Data;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Data.Sql;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LeftMenu</span> : <span class=\"title\">System</span>.<span class=\"title\">Web</span>.<span class=\"title\">UI</span>.<span class=\"title\">UserControl</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">string</span> _menu = <span class=\"keyword\">string</span>.Empty;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> Page_Load(object sender, EventArgs e)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!IsPostBack)</div><div class=\"line\">        &#123;</div><div class=\"line\">            BindMenu();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> BindMenu()</div><div class=\"line\">    &#123;</div><div class=\"line\">        StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">        OledbHelper helper = <span class=\"keyword\">new</span> OledbHelper();</div><div class=\"line\">        DataSet ds = helper.GetDs(<span class=\"string\">\"select * from [Menu]\"</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span> (ds != <span class=\"literal\">null</span> &amp;&amp; ds.Tables.Count &gt; <span class=\"number\">0</span> &amp;&amp;</div><div class=\"line\">                ds.Tables[<span class=\"number\">0</span>] != <span class=\"literal\">null</span> &amp;&amp; ds.Tables[<span class=\"number\">0</span>].Rows.Count &gt; <span class=\"number\">0</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            DataRow[] rows = ds.Tables[<span class=\"number\">0</span>].Select(<span class=\"string\">\"ParentID=0\"</span>);</div><div class=\"line\">            <span class=\"keyword\">foreach</span> (DataRow dr in rows)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">string</span> id = dr[<span class=\"string\">\"ID\"</span>].ToString();</div><div class=\"line\">                <span class=\"keyword\">string</span> name = dr[<span class=\"string\">\"Name\"</span>].ToString();</div><div class=\"line\">                sb.Append(<span class=\"string\">\"&lt;li&gt;&lt;a href=\\\"http://blog.fwhyy.com\\\"&gt;\"</span> + name + <span class=\"string\">\"&lt;/a&gt;\\r\\n\"</span>);</div><div class=\"line\">                  sb.Append(GetSubMenu(id, ds.Tables[<span class=\"number\">0</span>]));</div><div class=\"line\">                sb.Append(<span class=\"string\">\"&lt;/li&gt;\\r\\n\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">            _menu = sb.ToString();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> GetSubMenu(<span class=\"keyword\">string</span> pid, DataTable dt)</div><div class=\"line\">    &#123;</div><div class=\"line\">        StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">        DataRow[] rows = dt.Select(<span class=\"string\">\"ParentID=\"</span> + pid);</div><div class=\"line\">        sb.Append(<span class=\"string\">\"&lt;ul&gt;\\r\\n\"</span>);</div><div class=\"line\">        <span class=\"keyword\">foreach</span> (DataRow dr in rows)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">string</span> id = dr[<span class=\"string\">\"ID\"</span>].ToString();</div><div class=\"line\">            <span class=\"keyword\">string</span> name = dr[<span class=\"string\">\"Name\"</span>].ToString();</div><div class=\"line\">            sb.Append(<span class=\"string\">\"&lt;li&gt;&lt;a href=\\\"http://blog.fwhyy.com\\\"&gt;\"</span> + name + <span class=\"string\">\"&lt;/a&gt;\\r\\n\"</span>);</div><div class=\"line\">            sb.Append(GetSubMenu(id, dt));  <span class=\"comment\">//递归</span></div><div class=\"line\">            sb.Append(<span class=\"string\">\"&lt;/li&gt;\\r\\n\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        sb.Append(<span class=\"string\">\"&lt;/ul&gt;\\r\\n\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> sb.ToString();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>4 创建aspx页面Menu 将用户控件拖到页面中，运行就可以看到效果。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_112219.gif\" alt=\"2010-12-30_112219\"></p>\n<p>注：该例子需要有一个静态的css菜单作为模板，网络上很多的css菜单都可以来套用，当然css很强的朋友自己来设计会更好。</p>\n<p><a href=\"http://files.cnblogs.com/oec2003/site1.rar\" target=\"_blank\" rel=\"external\">Demo下载</a></p>\n","excerpt":"<p>现在网络上有各种各样的非常漂亮的css菜单，不过大多都是静态的，菜单项都是在页面中写死的，这样就不是很灵活，每次要修改菜单都要去修改页面，下面就介绍一个从数据库中读取菜单项的动态css菜单的例子。<br>","more":"</p>\n<p>1 首先创建数据表Menu，添加三个基本字段id pid menu</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_112106.gif\" alt=\"2010-12-30_112106\"></p>\n<p>表建好后，添加一些测试数据</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_112140.gif\" alt=\"2010-12-30_112140\"></p>\n<p>2 在项目中创建用户控件LeftMenu，菜单一般可以做成用户控件或是放在Masterpage中。LeftMenu中代码如下。</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Control Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"LeftMenu.ascx.cs\"</span></div><div class=\"line\"> Inherits=<span class=\"string\">\"LeftMenu\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"css\"></div><div class=\"line\"><span class=\"selector-tag\">body</span> &#123; <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>; <span class=\"attribute\">padding</span>: <span class=\"number\">30px</span>; <span class=\"attribute\">background</span>: <span class=\"number\">#FFF</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#666</span>; &#125;</div><div class=\"line\"><span class=\"selector-tag\">h1</span> &#123; <span class=\"attribute\">font</span>: bold <span class=\"number\">16px</span> Arial, Helvetica, sans-serif; &#125;</div><div class=\"line\"><span class=\"selector-tag\">p</span> &#123; <span class=\"attribute\">font</span>: <span class=\"number\">11px</span> Arial, Helvetica, sans-serif; &#125;</div><div class=\"line\"><span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">color</span>: <span class=\"number\">#900</span>; <span class=\"attribute\">text-decoration</span>: none; &#125;</div><div class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#900</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#FFF</span>; &#125;</div><div class=\"line\"><span class=\"comment\">/*CSS Code for Menu Begin:*/</span></div><div class=\"line\"><span class=\"comment\">/* Root = Vertical, Secondary = Vertical */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">ul</span> &#123; <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>; <span class=\"attribute\">border</span>: <span class=\"number\">0</span> none; <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>; <span class=\"attribute\">width</span>: <span class=\"number\">160px</span>;  <span class=\"attribute\">list-style</span>: none; &#125;</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span> &#123; <span class=\"attribute\">display</span>: block <span class=\"meta\">!important</span>; <span class=\"comment\">/*For GOOD browsers*/</span></div><div class=\"line\"><span class=\"attribute\">display</span>: inline; <span class=\"comment\">/*For IE*/</span> <span class=\"attribute\">position</span>: relative; &#125;</div><div class=\"line\"><span class=\"comment\">/* Root Menu */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#FFF</span>; <span class=\"attribute\">border-right-color</span>: <span class=\"number\">#CCC</span>;</div><div class=\"line\"><span class=\"attribute\">border-bottom-color</span>: <span class=\"number\">#CCC</span>; <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">6px</span>; <span class=\"attribute\">display</span>: block;</div><div class=\"line\"><span class=\"attribute\">background</span>: <span class=\"number\">#EEE</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#666</span>; <span class=\"attribute\">font</span>: bold <span class=\"number\">10px</span>/<span class=\"number\">22px</span> Verdana, Arial, Helvetica, sans-serif;</div><div class=\"line\"><span class=\"attribute\">text-decoration</span>: none; <span class=\"attribute\">height</span>: auto <span class=\"meta\">!important</span>; <span class=\"attribute\">height</span>: <span class=\"number\">1%</span>; <span class=\"comment\">/*For IE*/</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">/* Root Menu Hover Persistence */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">a</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#CCC</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#FFF</span>; &#125;</div><div class=\"line\"><span class=\"comment\">/* 2nd Menu */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#EEE</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#666</span>; &#125;</div><div class=\"line\"><span class=\"comment\">/* 2nd Menu Hover Persistence */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">a</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#CCC</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#FFF</span>; &#125;</div><div class=\"line\"><span class=\"comment\">/* 3rd Menu */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#EEE</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#666</span>; &#125;</div><div class=\"line\"><span class=\"comment\">/* 3rd Menu Hover Persistence */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">a</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#CCC</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#FFF</span>; &#125;</div><div class=\"line\"><span class=\"comment\">/* 4th Menu */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#EEE</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#666</span>; &#125;</div><div class=\"line\"><span class=\"comment\">/* 4th Menu Hover */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#CCC</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#FFF</span>; &#125;</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span> &#123; <span class=\"attribute\">display</span>: none; <span class=\"attribute\">position</span>: absolute; <span class=\"attribute\">top</span>: <span class=\"number\">0</span>; <span class=\"attribute\">left</span>: <span class=\"number\">160px</span>; &#125;</div><div class=\"line\"><span class=\"comment\">/* Do Not Move - Must Come Before display:block for Gecko */</span></div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span> &#123; <span class=\"attribute\">display</span>: none; &#125;</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">ul</span>,</div><div class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#navmenu</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.iehover</span> <span class=\"selector-tag\">ul</span> &#123; <span class=\"attribute\">display</span>: block; &#125;</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">&lt;!--</div><div class=\"line\">    navHover = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> lis = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"navmenu\"</span>).getElementsByTagName(<span class=\"string\">\"LI\"</span>);</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; lis.length; i++) &#123;</div><div class=\"line\">            lis[i].onmouseover = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">this</span>.className += <span class=\"string\">\" iehover\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            lis[i].onmouseout = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">this</span>.className = <span class=\"keyword\">this</span>.className.replace(<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\" iehover\\\\b\"</span>), <span class=\"string\">\"\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.attachEvent) <span class=\"built_in\">window</span>.attachEvent(<span class=\"string\">\"onload\"</span>, navHover);</div><div class=\"line\">--&gt;</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span> </div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"navmenu\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> _menu </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>3 编写后台代码，主要思路是使用递归来实现菜单的层级关系。</p>\n<figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls;</div><div class=\"line\"><span class=\"comment\">//new using</span></div><div class=\"line\"><span class=\"keyword\">using</span> System.Data;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Data.Sql;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LeftMenu</span> : <span class=\"title\">System</span>.<span class=\"title\">Web</span>.<span class=\"title\">UI</span>.<span class=\"title\">UserControl</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">string</span> _menu = <span class=\"keyword\">string</span>.Empty;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> Page_Load(object sender, EventArgs e)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!IsPostBack)</div><div class=\"line\">        &#123;</div><div class=\"line\">            BindMenu();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> BindMenu()</div><div class=\"line\">    &#123;</div><div class=\"line\">        StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">        OledbHelper helper = <span class=\"keyword\">new</span> OledbHelper();</div><div class=\"line\">        DataSet ds = helper.GetDs(<span class=\"string\">\"select * from [Menu]\"</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span> (ds != <span class=\"literal\">null</span> &amp;&amp; ds.Tables.Count &gt; <span class=\"number\">0</span> &amp;&amp;</div><div class=\"line\">                ds.Tables[<span class=\"number\">0</span>] != <span class=\"literal\">null</span> &amp;&amp; ds.Tables[<span class=\"number\">0</span>].Rows.Count &gt; <span class=\"number\">0</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            DataRow[] rows = ds.Tables[<span class=\"number\">0</span>].Select(<span class=\"string\">\"ParentID=0\"</span>);</div><div class=\"line\">            <span class=\"keyword\">foreach</span> (DataRow dr in rows)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">string</span> id = dr[<span class=\"string\">\"ID\"</span>].ToString();</div><div class=\"line\">                <span class=\"keyword\">string</span> name = dr[<span class=\"string\">\"Name\"</span>].ToString();</div><div class=\"line\">                sb.Append(<span class=\"string\">\"&lt;li&gt;&lt;a href=\\\"http://blog.fwhyy.com\\\"&gt;\"</span> + name + <span class=\"string\">\"&lt;/a&gt;\\r\\n\"</span>);</div><div class=\"line\">                  sb.Append(GetSubMenu(id, ds.Tables[<span class=\"number\">0</span>]));</div><div class=\"line\">                sb.Append(<span class=\"string\">\"&lt;/li&gt;\\r\\n\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">            _menu = sb.ToString();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> GetSubMenu(<span class=\"keyword\">string</span> pid, DataTable dt)</div><div class=\"line\">    &#123;</div><div class=\"line\">        StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">        DataRow[] rows = dt.Select(<span class=\"string\">\"ParentID=\"</span> + pid);</div><div class=\"line\">        sb.Append(<span class=\"string\">\"&lt;ul&gt;\\r\\n\"</span>);</div><div class=\"line\">        <span class=\"keyword\">foreach</span> (DataRow dr in rows)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">string</span> id = dr[<span class=\"string\">\"ID\"</span>].ToString();</div><div class=\"line\">            <span class=\"keyword\">string</span> name = dr[<span class=\"string\">\"Name\"</span>].ToString();</div><div class=\"line\">            sb.Append(<span class=\"string\">\"&lt;li&gt;&lt;a href=\\\"http://blog.fwhyy.com\\\"&gt;\"</span> + name + <span class=\"string\">\"&lt;/a&gt;\\r\\n\"</span>);</div><div class=\"line\">            sb.Append(GetSubMenu(id, dt));  <span class=\"comment\">//递归</span></div><div class=\"line\">            sb.Append(<span class=\"string\">\"&lt;/li&gt;\\r\\n\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        sb.Append(<span class=\"string\">\"&lt;/ul&gt;\\r\\n\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> sb.ToString();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>4 创建aspx页面Menu 将用户控件拖到页面中，运行就可以看到效果。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_112219.gif\" alt=\"2010-12-30_112219\"></p>\n<p>注：该例子需要有一个静态的css菜单作为模板，网络上很多的css菜单都可以来套用，当然css很强的朋友自己来设计会更好。</p>\n<p><a href=\"http://files.cnblogs.com/oec2003/site1.rar\">Demo下载</a></p>"},{"title":"备份windows live writer的草稿","date":"2009-09-25T16:00:00.000Z","_content":"\nwindows live writer的草稿功能很不错，那么草稿的内容是存放在哪里呢？\n\nWindows 7系统下的路径：\n\n```\nC:\\Users\\username\\Documents\\My Weblog Posts\n```\n\nWindows XP系统下的路径：\n\n```\nC:\\Documents and Settings\\username\\My Documents\\My Weblog Posts\n如：C:\\Documents and Settings\\fw\\My Documents\\My Weblog Posts\n```\n\nMy Weblog Posts目录中有两个文件夹Drafts 和 Recent Posts，Drafts 目录中存放的就是草稿，而Recent Posts目录中存放的是最近发布的日志。\n\n![2010-12-31_112146](http://oec2003.qiniudn.com/2010-12-31_112146.gif)\n\n我们可以对这两个目录做备份就ok了。\n\n\n","source":"_posts/backup-windows-live-writers-draft.md","raw":"---\ntitle: 备份windows live writer的草稿\ndate: 2009-09-26\ncategories: [软件使用]\ntags: [windows live writer]\n---\n\nwindows live writer的草稿功能很不错，那么草稿的内容是存放在哪里呢？\n\nWindows 7系统下的路径：\n\n```\nC:\\Users\\username\\Documents\\My Weblog Posts\n```\n\nWindows XP系统下的路径：\n\n```\nC:\\Documents and Settings\\username\\My Documents\\My Weblog Posts\n如：C:\\Documents and Settings\\fw\\My Documents\\My Weblog Posts\n```\n\nMy Weblog Posts目录中有两个文件夹Drafts 和 Recent Posts，Drafts 目录中存放的就是草稿，而Recent Posts目录中存放的是最近发布的日志。\n\n![2010-12-31_112146](http://oec2003.qiniudn.com/2010-12-31_112146.gif)\n\n我们可以对这两个目录做备份就ok了。\n\n\n","slug":"backup-windows-live-writers-draft","published":1,"updated":"2016-08-16T14:10:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz914003exfynnwvccmj9","content":"<p>windows live writer的草稿功能很不错，那么草稿的内容是存放在哪里呢？</p>\n<p>Windows 7系统下的路径：</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:<span class=\"symbol\">\\U</span>sers<span class=\"symbol\">\\u</span>sername<span class=\"symbol\">\\D</span>ocuments<span class=\"symbol\">\\M</span>y Weblog Posts</div></pre></td></tr></table></figure>\n<p>Windows XP系统下的路径：</p>\n<figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:<span class=\"string\">\\Documents</span> <span class=\"keyword\">and</span> Settings<span class=\"string\">\\username\\My</span> Documents<span class=\"string\">\\My</span> Weblog Posts</div><div class=\"line\">如：C:<span class=\"string\">\\Documents</span> <span class=\"keyword\">and</span> Settings<span class=\"string\">\\fw\\My</span> Documents<span class=\"string\">\\My</span> Weblog Posts</div></pre></td></tr></table></figure>\n<p>My Weblog Posts目录中有两个文件夹Drafts 和 Recent Posts，Drafts 目录中存放的就是草稿，而Recent Posts目录中存放的是最近发布的日志。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-31_112146.gif\" alt=\"2010-12-31_112146\"></p>\n<p>我们可以对这两个目录做备份就ok了。</p>\n","excerpt":"","more":"<p>windows live writer的草稿功能很不错，那么草稿的内容是存放在哪里呢？</p>\n<p>Windows 7系统下的路径：</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:<span class=\"symbol\">\\U</span>sers<span class=\"symbol\">\\u</span>sername<span class=\"symbol\">\\D</span>ocuments<span class=\"symbol\">\\M</span>y Weblog Posts</div></pre></td></tr></table></figure>\n<p>Windows XP系统下的路径：</p>\n<figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:<span class=\"string\">\\Documents</span> <span class=\"keyword\">and</span> Settings<span class=\"string\">\\username\\My</span> Documents<span class=\"string\">\\My</span> Weblog Posts</div><div class=\"line\">如：C:<span class=\"string\">\\Documents</span> <span class=\"keyword\">and</span> Settings<span class=\"string\">\\fw\\My</span> Documents<span class=\"string\">\\My</span> Weblog Posts</div></pre></td></tr></table></figure>\n<p>My Weblog Posts目录中有两个文件夹Drafts 和 Recent Posts，Drafts 目录中存放的就是草稿，而Recent Posts目录中存放的是最近发布的日志。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-31_112146.gif\" alt=\"2010-12-31_112146\"></p>\n<p>我们可以对这两个目录做备份就ok了。</p>\n"},{"title":"书法比赛奖品—天堂遮阳伞","date":"2009-09-27T16:00:00.000Z","_content":"\n前些日子，创业园举办了迎国庆书法比赛，这勾起了我又想写写字的冲动（小学的时候练习过几年的书法），于是买了笔墨纸砚开始练习了，最终交了一幅《沁园春国庆》的作品。今天人事部刘姐给了我一把天堂的遮阳伞说是书法比赛的奖品，应该也就是一纪念奖，而且还给裱起来挂在了创业园那边的大厅，真的有点受宠若惊。\n\n最近下载了南开大学的书法教授田蕴章先生的书法视频讲座，听了一部分，无论是在写字的技法上还是在对于中国国学知识上都感觉受益匪浅。而且田先生的人品也非常值得我们学习。也决定了以后要坚持练练字，也算是自己的一技之长吧不能给荒废了，等以后技术长进了贴几幅作品给大家看看。\n\n在此贴个田先生书法讲座的下载地址，有兴趣的朋友可以看看。\n\n[http://www.verycd.com/topics/2725995/](http://www.verycd.com/topics/2725995/)\n\n\n","source":"_posts/calligraphy-competition-prizes-heaven-umbrella.md","raw":"---\ntitle: 书法比赛奖品—天堂遮阳伞\ndate: 2009-09-28\ncategories: [心情日记]\ntags:\n---\n\n前些日子，创业园举办了迎国庆书法比赛，这勾起了我又想写写字的冲动（小学的时候练习过几年的书法），于是买了笔墨纸砚开始练习了，最终交了一幅《沁园春国庆》的作品。今天人事部刘姐给了我一把天堂的遮阳伞说是书法比赛的奖品，应该也就是一纪念奖，而且还给裱起来挂在了创业园那边的大厅，真的有点受宠若惊。\n\n最近下载了南开大学的书法教授田蕴章先生的书法视频讲座，听了一部分，无论是在写字的技法上还是在对于中国国学知识上都感觉受益匪浅。而且田先生的人品也非常值得我们学习。也决定了以后要坚持练练字，也算是自己的一技之长吧不能给荒废了，等以后技术长进了贴几幅作品给大家看看。\n\n在此贴个田先生书法讲座的下载地址，有兴趣的朋友可以看看。\n\n[http://www.verycd.com/topics/2725995/](http://www.verycd.com/topics/2725995/)\n\n\n","slug":"calligraphy-competition-prizes-heaven-umbrella","published":1,"updated":"2016-08-16T14:20:10.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz915003ixfynwypzv2al","content":"<p>前些日子，创业园举办了迎国庆书法比赛，这勾起了我又想写写字的冲动（小学的时候练习过几年的书法），于是买了笔墨纸砚开始练习了，最终交了一幅《沁园春国庆》的作品。今天人事部刘姐给了我一把天堂的遮阳伞说是书法比赛的奖品，应该也就是一纪念奖，而且还给裱起来挂在了创业园那边的大厅，真的有点受宠若惊。</p>\n<p>最近下载了南开大学的书法教授田蕴章先生的书法视频讲座，听了一部分，无论是在写字的技法上还是在对于中国国学知识上都感觉受益匪浅。而且田先生的人品也非常值得我们学习。也决定了以后要坚持练练字，也算是自己的一技之长吧不能给荒废了，等以后技术长进了贴几幅作品给大家看看。</p>\n<p>在此贴个田先生书法讲座的下载地址，有兴趣的朋友可以看看。</p>\n<p><a href=\"http://www.verycd.com/topics/2725995/\" target=\"_blank\" rel=\"external\">http://www.verycd.com/topics/2725995/</a></p>\n","excerpt":"","more":"<p>前些日子，创业园举办了迎国庆书法比赛，这勾起了我又想写写字的冲动（小学的时候练习过几年的书法），于是买了笔墨纸砚开始练习了，最终交了一幅《沁园春国庆》的作品。今天人事部刘姐给了我一把天堂的遮阳伞说是书法比赛的奖品，应该也就是一纪念奖，而且还给裱起来挂在了创业园那边的大厅，真的有点受宠若惊。</p>\n<p>最近下载了南开大学的书法教授田蕴章先生的书法视频讲座，听了一部分，无论是在写字的技法上还是在对于中国国学知识上都感觉受益匪浅。而且田先生的人品也非常值得我们学习。也决定了以后要坚持练练字，也算是自己的一技之长吧不能给荒废了，等以后技术长进了贴几幅作品给大家看看。</p>\n<p>在此贴个田先生书法讲座的下载地址，有兴趣的朋友可以看看。</p>\n<p><a href=\"http://www.verycd.com/topics/2725995/\">http://www.verycd.com/topics/2725995/</a></p>\n"},{"title":"CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型","date":"2009-06-16T16:00:00.000Z","_content":"\n> CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。\n\n首先了解下什么是基元类型，基元类型是编译器直接支持的数据类型，像我们平时经常用到的int string bool 都是基元类型，基元类型是映射到FCL中的类型，像前面的三种类型对应到FCL中就是Int32 String Boolean，基元类型只是给我们的编程提供了方便，它和FCL中的类型在编译后最终生成的IL完全相同。下面给出基元类型和FCL类型的对应表\n\n|C#基元类型 | FCL类型 | CLS相容 | 说明 |\n| --- | --- | --- | --- |\n| sbyte | System.Sbyte |  |  |\n| byte | System.Byte  |  |  |\n| short | System.Int16 |  |  |\n| ushort | System.UInt16 |  |  |\n| int | System.Int32 |  |  |\n| uint | System.Uint32 |  |  |\n| long | System.Int64 |  |  |\n| ulong | System.Uint64 |  |  |\n| char | System.Char |  |  |\n| float | System.Single |  |  |\n| double | System.Double |  |  |\n| bool | System.Boolean |  |  |\n| decimal | System.Decimal |  |  |\n| object | System.Object |  |  |\n| string | System.String |  |  |\n\t\n我们平时在写程序时通常都是使用基元类型，因为方便，但本书的作者认为应该直接使用FCL中的类型，原因如下：\n\n1. 在c#中long对应的FCL类型为System.Int64，但是在其他的语言中，如c++ 就将long视为一个Int32。这样习惯于一种编程语言的人在看另一种编程语言写的源码是就会产生错误的理解。\n2. 在FCL中的许多的方法将类型名作为方法名的一部分，如System.Convert类提供ToBoolean,ToInt32,ToSingle等。这样在使用基元类型做类型转换时就感觉有点怪怪的，如：float val=Convert.ToSingle(“23”);\n\n## 值类型和引用类型的区别\n\n1. 所有的值类型都是从System.TypeValue派生，如Struct Enum都是值类型；所有引用类型都是从System.Object派生。\n2. 值类型分配在线程堆栈上，引用类型分配在托管堆上。\n3. 值类型表现形式有未装箱形式和已装箱形式，而引用类型总是已装箱形式。\n4. 所有的值类型都是sealed类型，所以值类型不能作为任何类型的基类型，也不能在值类型中引入虚方法。\n5. 创建一个引用类型变量时，会被初始化为null，试图使用一个null的引用类型变量时，会抛出NullReferenceException异常，也就是常见的“未将对象引用设置到对象的实例”；值类型在创建时所有成员都初始化为0了，所以不会抛出该异常。\n\n## 原文例子表示值类型和引用类型的区别\n\n```\nclass Program\n{\n    static void Main(string[] args)\n    {\n        SomeRef r1 = new SomeRef();\n        SomeVal v1 = new SomeVal();\n        r1.x = 5;\n        v1.x = 5;\n        Console.WriteLine(r1.x);    //5\n        Console.WriteLine(v1.x);    //5\n        SomeRef r2 = r1;\n        SomeVal v2 = v1;\n        r1.x = 8;\n        v1.x = 9;\n        Console.WriteLine(r1.x);    //8\n        Console.WriteLine(r2.x);    //9\n        Console.WriteLine(v1.x);    //9\n        Console.WriteLine(v2.x);    //5\n    }\n}\nclass SomeRef\n{\n    public Int32 x;\n}\nstruct SomeVal\n{\n    public Int32 x;\n}\n```\n\n## CLR中类型字段布局的控制\n\n为了提高性能，clr能按照所选择的任何方式来排列类型的字段。我们可以通过在类会是结构上使用System.Runtime.InteropServices.StructLayoutAttribute属性来改变这种排列的顺序。该属性接受一个LayoutKind的枚举值（Auto，Sequential，Explicit），默认情况下C#编译器会为类选择Atuo，为结构选择Sequential。下面来定义一个类和一个结构\n\n```\nstruct SomeVal\n{\n    public String name;\n    public Int32 id;\n\n}\n\nclass SomeRel\n{\n    public String name;\n    public Int32 id;\n}\n```\n\n查看IL代码可以看到默认的排列顺序\n\n![2010-12-30_100156](http://oec2003.qiniudn.com/2010-12-30_100156.gif)\n\n现在给类和结构加上属性，首引用加命名空间 using System.Runtime.InteropServices;\n\n```\n[StructLayout(LayoutKind.Auto)]\nstruct SomeVal\n{\n    public String name;\n    public Int32 id;\n\n}\n[StructLayout(LayoutKind.Sequential)]\nclass SomeRel\n{\n    public String name;\n    public Int32 id;\n}\n```\n\n再查看IL可以看到顺序已经发生了变化。\n\n![2010-12-30_100312](http://oec2003.qiniudn.com/2010-12-30_100312.gif)\n\nC#编译器总是会默认给结构这样的值类型选择Sequential，是因为值类型会经常和非托管代码进行交互，字段必须保持和开发人员定义的一致。我们在编码过程中如果判断所创建的值类型不会与非托管代码进行交互，就可以像上面那样给创建的值类型添加[StructLayout(LayoutKind.Auto)] ，让其进行自动排列，以提高性能。\n\n## 系列相关文章\n\nCLR Via C# 学习笔记（1） 基元类型 值类型 引用类型\n[CLR Via C# 学习笔记（2） 装箱和拆箱](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/)\n[CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/)\n[CLR Via C# 学习笔记（4） 方法 构造函数](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/)\n[CLR Via C# 学习笔记（5） 静态构造函数的性能](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor/)\n[CLR Via C# 学习笔记（6） 方法参数相关（out ref params）](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/)\n\n\n","source":"_posts/clr-via-csharp-learning-notes-1-primitive-types.md","raw":"---\ntitle: CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型\ndate: 2009-06-17\ncategories: [CLR Via C#]\ntags: [CLR via C#, DotNet]\n---\n\n> CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。\n\n首先了解下什么是基元类型，基元类型是编译器直接支持的数据类型，像我们平时经常用到的int string bool 都是基元类型，基元类型是映射到FCL中的类型，像前面的三种类型对应到FCL中就是Int32 String Boolean，基元类型只是给我们的编程提供了方便，它和FCL中的类型在编译后最终生成的IL完全相同。下面给出基元类型和FCL类型的对应表\n\n|C#基元类型 | FCL类型 | CLS相容 | 说明 |\n| --- | --- | --- | --- |\n| sbyte | System.Sbyte |  |  |\n| byte | System.Byte  |  |  |\n| short | System.Int16 |  |  |\n| ushort | System.UInt16 |  |  |\n| int | System.Int32 |  |  |\n| uint | System.Uint32 |  |  |\n| long | System.Int64 |  |  |\n| ulong | System.Uint64 |  |  |\n| char | System.Char |  |  |\n| float | System.Single |  |  |\n| double | System.Double |  |  |\n| bool | System.Boolean |  |  |\n| decimal | System.Decimal |  |  |\n| object | System.Object |  |  |\n| string | System.String |  |  |\n\t\n我们平时在写程序时通常都是使用基元类型，因为方便，但本书的作者认为应该直接使用FCL中的类型，原因如下：\n\n1. 在c#中long对应的FCL类型为System.Int64，但是在其他的语言中，如c++ 就将long视为一个Int32。这样习惯于一种编程语言的人在看另一种编程语言写的源码是就会产生错误的理解。\n2. 在FCL中的许多的方法将类型名作为方法名的一部分，如System.Convert类提供ToBoolean,ToInt32,ToSingle等。这样在使用基元类型做类型转换时就感觉有点怪怪的，如：float val=Convert.ToSingle(“23”);\n\n## 值类型和引用类型的区别\n\n1. 所有的值类型都是从System.TypeValue派生，如Struct Enum都是值类型；所有引用类型都是从System.Object派生。\n2. 值类型分配在线程堆栈上，引用类型分配在托管堆上。\n3. 值类型表现形式有未装箱形式和已装箱形式，而引用类型总是已装箱形式。\n4. 所有的值类型都是sealed类型，所以值类型不能作为任何类型的基类型，也不能在值类型中引入虚方法。\n5. 创建一个引用类型变量时，会被初始化为null，试图使用一个null的引用类型变量时，会抛出NullReferenceException异常，也就是常见的“未将对象引用设置到对象的实例”；值类型在创建时所有成员都初始化为0了，所以不会抛出该异常。\n\n## 原文例子表示值类型和引用类型的区别\n\n```\nclass Program\n{\n    static void Main(string[] args)\n    {\n        SomeRef r1 = new SomeRef();\n        SomeVal v1 = new SomeVal();\n        r1.x = 5;\n        v1.x = 5;\n        Console.WriteLine(r1.x);    //5\n        Console.WriteLine(v1.x);    //5\n        SomeRef r2 = r1;\n        SomeVal v2 = v1;\n        r1.x = 8;\n        v1.x = 9;\n        Console.WriteLine(r1.x);    //8\n        Console.WriteLine(r2.x);    //9\n        Console.WriteLine(v1.x);    //9\n        Console.WriteLine(v2.x);    //5\n    }\n}\nclass SomeRef\n{\n    public Int32 x;\n}\nstruct SomeVal\n{\n    public Int32 x;\n}\n```\n\n## CLR中类型字段布局的控制\n\n为了提高性能，clr能按照所选择的任何方式来排列类型的字段。我们可以通过在类会是结构上使用System.Runtime.InteropServices.StructLayoutAttribute属性来改变这种排列的顺序。该属性接受一个LayoutKind的枚举值（Auto，Sequential，Explicit），默认情况下C#编译器会为类选择Atuo，为结构选择Sequential。下面来定义一个类和一个结构\n\n```\nstruct SomeVal\n{\n    public String name;\n    public Int32 id;\n\n}\n\nclass SomeRel\n{\n    public String name;\n    public Int32 id;\n}\n```\n\n查看IL代码可以看到默认的排列顺序\n\n![2010-12-30_100156](http://oec2003.qiniudn.com/2010-12-30_100156.gif)\n\n现在给类和结构加上属性，首引用加命名空间 using System.Runtime.InteropServices;\n\n```\n[StructLayout(LayoutKind.Auto)]\nstruct SomeVal\n{\n    public String name;\n    public Int32 id;\n\n}\n[StructLayout(LayoutKind.Sequential)]\nclass SomeRel\n{\n    public String name;\n    public Int32 id;\n}\n```\n\n再查看IL可以看到顺序已经发生了变化。\n\n![2010-12-30_100312](http://oec2003.qiniudn.com/2010-12-30_100312.gif)\n\nC#编译器总是会默认给结构这样的值类型选择Sequential，是因为值类型会经常和非托管代码进行交互，字段必须保持和开发人员定义的一致。我们在编码过程中如果判断所创建的值类型不会与非托管代码进行交互，就可以像上面那样给创建的值类型添加[StructLayout(LayoutKind.Auto)] ，让其进行自动排列，以提高性能。\n\n## 系列相关文章\n\nCLR Via C# 学习笔记（1） 基元类型 值类型 引用类型\n[CLR Via C# 学习笔记（2） 装箱和拆箱](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/)\n[CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/)\n[CLR Via C# 学习笔记（4） 方法 构造函数](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/)\n[CLR Via C# 学习笔记（5） 静态构造函数的性能](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor/)\n[CLR Via C# 学习笔记（6） 方法参数相关（out ref params）](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/)\n\n\n","slug":"clr-via-csharp-learning-notes-1-primitive-types","published":1,"updated":"2016-08-15T14:03:16.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz916003mxfynpja42he5","content":"<blockquote>\n<p>CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。</p>\n</blockquote>\n<p>首先了解下什么是基元类型，基元类型是编译器直接支持的数据类型，像我们平时经常用到的int string bool 都是基元类型，基元类型是映射到FCL中的类型，像前面的三种类型对应到FCL中就是Int32 String Boolean，基元类型只是给我们的编程提供了方便，它和FCL中的类型在编译后最终生成的IL完全相同。下面给出基元类型和FCL类型的对应表</p>\n<table>\n<thead>\n<tr>\n<th>C#基元类型</th>\n<th>FCL类型</th>\n<th>CLS相容</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>sbyte</td>\n<td>System.Sbyte</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>byte</td>\n<td>System.Byte</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>short</td>\n<td>System.Int16</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ushort</td>\n<td>System.UInt16</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>int</td>\n<td>System.Int32</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>uint</td>\n<td>System.Uint32</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>long</td>\n<td>System.Int64</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ulong</td>\n<td>System.Uint64</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>char</td>\n<td>System.Char</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>float</td>\n<td>System.Single</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>double</td>\n<td>System.Double</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bool</td>\n<td>System.Boolean</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>decimal</td>\n<td>System.Decimal</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>object</td>\n<td>System.Object</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>string</td>\n<td>System.String</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>我们平时在写程序时通常都是使用基元类型，因为方便，但本书的作者认为应该直接使用FCL中的类型，原因如下：</p>\n<ol>\n<li>在c#中long对应的FCL类型为System.Int64，但是在其他的语言中，如c++ 就将long视为一个Int32。这样习惯于一种编程语言的人在看另一种编程语言写的源码是就会产生错误的理解。</li>\n<li>在FCL中的许多的方法将类型名作为方法名的一部分，如System.Convert类提供ToBoolean,ToInt32,ToSingle等。这样在使用基元类型做类型转换时就感觉有点怪怪的，如：float val=Convert.ToSingle(“23”);</li>\n</ol>\n<h2 id=\"值类型和引用类型的区别\"><a href=\"#值类型和引用类型的区别\" class=\"headerlink\" title=\"值类型和引用类型的区别\"></a>值类型和引用类型的区别</h2><ol>\n<li>所有的值类型都是从System.TypeValue派生，如Struct Enum都是值类型；所有引用类型都是从System.Object派生。</li>\n<li>值类型分配在线程堆栈上，引用类型分配在托管堆上。</li>\n<li>值类型表现形式有未装箱形式和已装箱形式，而引用类型总是已装箱形式。</li>\n<li>所有的值类型都是sealed类型，所以值类型不能作为任何类型的基类型，也不能在值类型中引入虚方法。</li>\n<li>创建一个引用类型变量时，会被初始化为null，试图使用一个null的引用类型变量时，会抛出NullReferenceException异常，也就是常见的“未将对象引用设置到对象的实例”；值类型在创建时所有成员都初始化为0了，所以不会抛出该异常。</li>\n</ol>\n<h2 id=\"原文例子表示值类型和引用类型的区别\"><a href=\"#原文例子表示值类型和引用类型的区别\" class=\"headerlink\" title=\"原文例子表示值类型和引用类型的区别\"></a>原文例子表示值类型和引用类型的区别</h2><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">class</span> Program</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> Main(<span class=\"keyword\">string</span>[] args)</div><div class=\"line\">    &#123;</div><div class=\"line\">        SomeRef r1 = <span class=\"keyword\">new</span> SomeRef();</div><div class=\"line\">        SomeVal v1 = <span class=\"keyword\">new</span> SomeVal();</div><div class=\"line\">        r1.x = <span class=\"number\">5</span>;</div><div class=\"line\">        v1.x = <span class=\"number\">5</span>;</div><div class=\"line\">        <span class=\"built_in\">Console</span>.WriteLine(r1.x);    <span class=\"comment\">//5</span></div><div class=\"line\">        <span class=\"built_in\">Console</span>.WriteLine(v1.x);    <span class=\"comment\">//5</span></div><div class=\"line\">        SomeRef r2 = r1;</div><div class=\"line\">        SomeVal v2 = v1;</div><div class=\"line\">        r1.x = <span class=\"number\">8</span>;</div><div class=\"line\">        v1.x = <span class=\"number\">9</span>;</div><div class=\"line\">        <span class=\"built_in\">Console</span>.WriteLine(r1.x);    <span class=\"comment\">//8</span></div><div class=\"line\">        <span class=\"built_in\">Console</span>.WriteLine(r2.x);    <span class=\"comment\">//9</span></div><div class=\"line\">        <span class=\"built_in\">Console</span>.WriteLine(v1.x);    <span class=\"comment\">//9</span></div><div class=\"line\">        <span class=\"built_in\">Console</span>.WriteLine(v2.x);    <span class=\"comment\">//5</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">class</span> SomeRef</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 x;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">struct</span> SomeVal</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 x;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"CLR中类型字段布局的控制\"><a href=\"#CLR中类型字段布局的控制\" class=\"headerlink\" title=\"CLR中类型字段布局的控制\"></a>CLR中类型字段布局的控制</h2><p>为了提高性能，clr能按照所选择的任何方式来排列类型的字段。我们可以通过在类会是结构上使用System.Runtime.InteropServices.StructLayoutAttribute属性来改变这种排列的顺序。该属性接受一个LayoutKind的枚举值（Auto，Sequential，Explicit），默认情况下C#编译器会为类选择Atuo，为结构选择Sequential。下面来定义一个类和一个结构</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">struct</span> SomeVal</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> name;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 id;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">class</span> SomeRel</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> name;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 id;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>查看IL代码可以看到默认的排列顺序</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_100156.gif\" alt=\"2010-12-30_100156\"></p>\n<p>现在给类和结构加上属性，首引用加命名空间 using System.Runtime.InteropServices;</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">[StructLayout(LayoutKind.Auto)]</div><div class=\"line\"><span class=\"keyword\">struct</span> SomeVal</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> name;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 id;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\">[StructLayout(LayoutKind.Sequential)]</div><div class=\"line\"><span class=\"keyword\">class</span> SomeRel</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> name;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 id;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>再查看IL可以看到顺序已经发生了变化。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_100312.gif\" alt=\"2010-12-30_100312\"></p>\n<p>C#编译器总是会默认给结构这样的值类型选择Sequential，是因为值类型会经常和非托管代码进行交互，字段必须保持和开发人员定义的一致。我们在编码过程中如果判断所创建的值类型不会与非托管代码进行交互，就可以像上面那样给创建的值类型添加[StructLayout(LayoutKind.Auto)] ，让其进行自动排列，以提高性能。</p>\n<h2 id=\"系列相关文章\"><a href=\"#系列相关文章\" class=\"headerlink\" title=\"系列相关文章\"></a>系列相关文章</h2><p>CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型<br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（2） 装箱和拆箱</a><br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（4） 方法 构造函数</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（5） 静态构造函数的性能</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（6） 方法参数相关（out ref params）</a></p>\n","excerpt":"","more":"<blockquote>\n<p>CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。</p>\n</blockquote>\n<p>首先了解下什么是基元类型，基元类型是编译器直接支持的数据类型，像我们平时经常用到的int string bool 都是基元类型，基元类型是映射到FCL中的类型，像前面的三种类型对应到FCL中就是Int32 String Boolean，基元类型只是给我们的编程提供了方便，它和FCL中的类型在编译后最终生成的IL完全相同。下面给出基元类型和FCL类型的对应表</p>\n<table>\n<thead>\n<tr>\n<th>C#基元类型</th>\n<th>FCL类型</th>\n<th>CLS相容</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>sbyte</td>\n<td>System.Sbyte</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>byte</td>\n<td>System.Byte</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>short</td>\n<td>System.Int16</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ushort</td>\n<td>System.UInt16</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>int</td>\n<td>System.Int32</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>uint</td>\n<td>System.Uint32</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>long</td>\n<td>System.Int64</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ulong</td>\n<td>System.Uint64</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>char</td>\n<td>System.Char</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>float</td>\n<td>System.Single</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>double</td>\n<td>System.Double</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>bool</td>\n<td>System.Boolean</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>decimal</td>\n<td>System.Decimal</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>object</td>\n<td>System.Object</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>string</td>\n<td>System.String</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>我们平时在写程序时通常都是使用基元类型，因为方便，但本书的作者认为应该直接使用FCL中的类型，原因如下：</p>\n<ol>\n<li>在c#中long对应的FCL类型为System.Int64，但是在其他的语言中，如c++ 就将long视为一个Int32。这样习惯于一种编程语言的人在看另一种编程语言写的源码是就会产生错误的理解。</li>\n<li>在FCL中的许多的方法将类型名作为方法名的一部分，如System.Convert类提供ToBoolean,ToInt32,ToSingle等。这样在使用基元类型做类型转换时就感觉有点怪怪的，如：float val=Convert.ToSingle(“23”);</li>\n</ol>\n<h2 id=\"值类型和引用类型的区别\"><a href=\"#值类型和引用类型的区别\" class=\"headerlink\" title=\"值类型和引用类型的区别\"></a>值类型和引用类型的区别</h2><ol>\n<li>所有的值类型都是从System.TypeValue派生，如Struct Enum都是值类型；所有引用类型都是从System.Object派生。</li>\n<li>值类型分配在线程堆栈上，引用类型分配在托管堆上。</li>\n<li>值类型表现形式有未装箱形式和已装箱形式，而引用类型总是已装箱形式。</li>\n<li>所有的值类型都是sealed类型，所以值类型不能作为任何类型的基类型，也不能在值类型中引入虚方法。</li>\n<li>创建一个引用类型变量时，会被初始化为null，试图使用一个null的引用类型变量时，会抛出NullReferenceException异常，也就是常见的“未将对象引用设置到对象的实例”；值类型在创建时所有成员都初始化为0了，所以不会抛出该异常。</li>\n</ol>\n<h2 id=\"原文例子表示值类型和引用类型的区别\"><a href=\"#原文例子表示值类型和引用类型的区别\" class=\"headerlink\" title=\"原文例子表示值类型和引用类型的区别\"></a>原文例子表示值类型和引用类型的区别</h2><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">class</span> Program</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> Main(<span class=\"keyword\">string</span>[] args)</div><div class=\"line\">    &#123;</div><div class=\"line\">        SomeRef r1 = <span class=\"keyword\">new</span> SomeRef();</div><div class=\"line\">        SomeVal v1 = <span class=\"keyword\">new</span> SomeVal();</div><div class=\"line\">        r1.x = <span class=\"number\">5</span>;</div><div class=\"line\">        v1.x = <span class=\"number\">5</span>;</div><div class=\"line\">        <span class=\"built_in\">Console</span>.WriteLine(r1.x);    <span class=\"comment\">//5</span></div><div class=\"line\">        <span class=\"built_in\">Console</span>.WriteLine(v1.x);    <span class=\"comment\">//5</span></div><div class=\"line\">        SomeRef r2 = r1;</div><div class=\"line\">        SomeVal v2 = v1;</div><div class=\"line\">        r1.x = <span class=\"number\">8</span>;</div><div class=\"line\">        v1.x = <span class=\"number\">9</span>;</div><div class=\"line\">        <span class=\"built_in\">Console</span>.WriteLine(r1.x);    <span class=\"comment\">//8</span></div><div class=\"line\">        <span class=\"built_in\">Console</span>.WriteLine(r2.x);    <span class=\"comment\">//9</span></div><div class=\"line\">        <span class=\"built_in\">Console</span>.WriteLine(v1.x);    <span class=\"comment\">//9</span></div><div class=\"line\">        <span class=\"built_in\">Console</span>.WriteLine(v2.x);    <span class=\"comment\">//5</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">class</span> SomeRef</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 x;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">struct</span> SomeVal</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 x;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"CLR中类型字段布局的控制\"><a href=\"#CLR中类型字段布局的控制\" class=\"headerlink\" title=\"CLR中类型字段布局的控制\"></a>CLR中类型字段布局的控制</h2><p>为了提高性能，clr能按照所选择的任何方式来排列类型的字段。我们可以通过在类会是结构上使用System.Runtime.InteropServices.StructLayoutAttribute属性来改变这种排列的顺序。该属性接受一个LayoutKind的枚举值（Auto，Sequential，Explicit），默认情况下C#编译器会为类选择Atuo，为结构选择Sequential。下面来定义一个类和一个结构</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">struct</span> SomeVal</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> name;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 id;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">class</span> SomeRel</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> name;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 id;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>查看IL代码可以看到默认的排列顺序</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_100156.gif\" alt=\"2010-12-30_100156\"></p>\n<p>现在给类和结构加上属性，首引用加命名空间 using System.Runtime.InteropServices;</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">[StructLayout(LayoutKind.Auto)]</div><div class=\"line\"><span class=\"keyword\">struct</span> SomeVal</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> name;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 id;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\">[StructLayout(LayoutKind.Sequential)]</div><div class=\"line\"><span class=\"keyword\">class</span> SomeRel</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> name;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 id;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>再查看IL可以看到顺序已经发生了变化。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_100312.gif\" alt=\"2010-12-30_100312\"></p>\n<p>C#编译器总是会默认给结构这样的值类型选择Sequential，是因为值类型会经常和非托管代码进行交互，字段必须保持和开发人员定义的一致。我们在编码过程中如果判断所创建的值类型不会与非托管代码进行交互，就可以像上面那样给创建的值类型添加[StructLayout(LayoutKind.Auto)] ，让其进行自动排列，以提高性能。</p>\n<h2 id=\"系列相关文章\"><a href=\"#系列相关文章\" class=\"headerlink\" title=\"系列相关文章\"></a>系列相关文章</h2><p>CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型<br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/\">CLR Via C# 学习笔记（2） 装箱和拆箱</a><br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/\">CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/\">CLR Via C# 学习笔记（4） 方法 构造函数</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor/\">CLR Via C# 学习笔记（5） 静态构造函数的性能</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/\">CLR Via C# 学习笔记（6） 方法参数相关（out ref params）</a></p>\n"},{"title":"CLR Via C# 学习笔记（3） 常量和字段（const readonly）","date":"2009-06-21T16:00:00.000Z","_content":"\n> 《CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。\n\n常量和字段都是类型的数据成员，但是区别却是很大的。\n\n1. 常量的值永远不会改变。字段有多种类型，非只读字段的值是可以改变的。\n2. 常量的值必须在编译时就确定，也就是说在定义时就要赋值。编译后常量的值就保存在程序集的元数据中；字段是存储在动态内存中，在运行时才能得到字段的值。\n3. 常量的定义必须用基元类型，关于基元类型可以参考(CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型 )；字段的定义可以是任何类型。\n4. 因为常量的值不能改变，可以将其看做是静态类型，在IL代码中可以看到常量有static修饰符，所以在调用的时候和调用静态字段一样，直接用类名.常量名；字段中的静态字段的调用才和常量一样直接用类名.字段名，调用非静态字段必须用类的实例。、\n5. C#不允许使用static修饰常量，因为常量本身就隐含是static类型；字段可以使用static，使用static定义的字段为静态字段。\n\n## 下面看个例子来理解下常量\n\n1 创建一个类库项目命名为Oec2003ClassLibrary ,在默认的类Class1中写如下代码\n\n```\nnamespace Oec2003ClassLibrary\n{\n    public class Class1\n    {\n        public const double PI = 3.14;\n\n        public static double _pi = 3.14;\n    }\n}\n```\n\n2 创建一个web项目，添加对Oec2003ClassLibrary类库项目的引用，新建页面ConstTest.aspx,在PageLoad中写如下代码\n\n```\nprotected void Page_Load(object sender, EventArgs e)\n{\n    Response.Write(Class1.PI+\"<br/>\");\n    Response.Write(Class1._pi);\n}\n```\n\n3 将ConstTest设为起始页，运行，可以看到结果如下\n\n![2010-12-29_181713](http://oec2003.qiniudn.com/2010-12-29_181713.gif)\n\n4 现在将Oec2003ClassLibrary 项目中的Class1的代码改写如下，然后从新编译该项目。\n\n```\nnamespace Oec2003ClassLibrary\n{\n    public class Class1\n    {\n        public const double PI = 3.1415926;\n        public static double _pi = 3.1415926;\n    }\n}\n```\n\n5 刷新刚才的页面 ，可以看到结果如下\n\n![2010-12-29_181748](http://oec2003.qiniudn.com/2010-12-29_181748.gif)\n\n6 从新运行ConstTest页面可以看到如下结果\n\n![2010-12-29_181824](http://oec2003.qiniudn.com/2010-12-29_181824-1.gif)\n\n从上面的例子可以看出，在应用程序不从新编译的情况下，常量的值永远不会发生改变。如果应用程序想要获得常量的新值，就必须重新编译，所以在运行时一个应用程序集想获得另一个应用程序集中的值，则不能使用常量，可以使用只读字段（readonly）。\n\n字段也是一种类型的数据成员，字段的修饰符有 static readonly volatile，没有上述修饰修饰的字段为普通的实例字段。static可以和readonly一起使用，就是静态只读字段。有关volatile将在后面的部分介绍。\n\n## 关于readonly要注意的地方\n\n* 当readonly修饰的字段为值类型时，在调用的时候如果视图去改变字段的值，将会编译出错。\n* 当readonly修饰的字段为引用类型时，调用时不能改变其引用，但可以改变应用对象的值，看下面的例子。\n\n1 在Oec2003ClassLibrary项目的Class1.cs文件写如下代码\n\n```\nnamespace Oec2003ClassLibrary\n{\n    public class Class1\n    {\n        public const double PI = 3.14;\n        public static readonly double _pi = 3.14;\n\n        public static readonly User user = new User(\"oec2003\");\n    }\n    public class User\n    {\n        public User(string name)\n        {\n            Name = name;\n        }\n        public string Name { get; set; }\n    }\n}\n```\n\n2 在web项目中添加页面，命名为Readonly.aspx，PageLoad代码如下\n\n```\nprotected void Page_Load(object sender, EventArgs e)\n{\n    User user = Class1.user;\n    //正确 修改静态只读字段应用对象的值，运行会在页面显示oec2005\n    Class1.user.Name = \"oec2005\";\n    //错误 不能通过编译，不能改变为另一个引用\n    Class1.user = new User(\"oec2005\"); \n\n    Response.Write(user.Name);\n}\n```\n\n从上面的讲述中可以知道只读（Readonly）字段一旦定义了是不能够改变其值的，即使是引用类型也只能改变其引用对象的值。不过也并不是这么绝对，下面就来看看怎样用反射来实现改变只读字段的值。\n\n1 既然用到反射，首先引用命名空间using System.Reflection; ，然后修改Class1的代码。\n\n```\nnamespace Oec2003ClassLibrary\n{\n    public class Class1\n    {\n        public readonly Int32 _age = 25;\n        public readonly User _user = new User(\"oec2003\");\n    }\n    public class User\n    {\n        public User(string name)\n        {\n            Name = name;\n        }\n        public string Name { get; set; }\n    }\n}\n```\n\n2 修改PageLoad中的代码，将使用反射前的只读字段的内容输出。\n\n```\nprotected void Page_Load(object sender, EventArgs e)\n{\n    Class1 myClass = new Class1();\n\n    User user = myClass._user;\n\n    Response.Write(\"姓名：\"+user.Name+\" 年龄：\"+myClass._age);\n}\n```\n\n结果如下\n\n![2010-12-29_182011](http://oec2003.qiniudn.com/2010-12-29_182011.gif)\n\n3 修改PageLoad的代码，使用反射修改只读字段的值然后输出。\n\n```\nprotected void Page_Load(object sender, EventArgs e)\n{\n    Class1 myClass = new Class1();\n\n    Type myType = typeof(Oec2003ClassLibrary.Class1);\n    //改变值类型只读字段的值\n    myType.GetField(\"_age\").SetValue(myClass, 30);\n    //改变引用只读字段的值\n    myType.GetField(\"_user\").SetValue(myClass, new User(\"水杯\")); \n\n    User user = myClass._user;\n    Response.Write(\"姓名：\"+user.Name+\" 年龄：\"+myClass._age);\n}\n```\n\n结果如下\n\n![2010-12-29_182116](http://oec2003.qiniudn.com/2010-12-29_182116.gif)\n\n呵呵，可以看出不管是值类型只读字段还是引用类型只读字段都可以通过反射顺利修改。\n\n在一些面试中经常会遇到const和readonly的区别这样的问题，归根基地就是常量和字段的区别，readonly修饰的字段只是字段的一种而已，实际应用中该选择const还是readonly要根据实际的需求，const的性能要好，因为不用分配内存，不过限制很多，比如定义时类型的限制，显得不是很灵活。\n\n## 系列相关文章\n\n[CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/)\n[CLR Via C# 学习笔记（2） 装箱和拆箱](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/)\nCLR Via C# 学习笔记（3） 常量和字段\n[CLR Via C# 学习笔记（4） 方法 构造函数](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/)\n[CLR Via C# 学习笔记（5） 静态构造函数的性能](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor/)\n[CLR Via C# 学习笔记（6） 方法参数相关（out ref params）](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/)\n\n\n","source":"_posts/clr-via-csharp-learning-notes-3-constants-and-fields.md","raw":"---\ntitle: CLR Via C# 学习笔记（3） 常量和字段（const readonly）\ndate: 2009-06-22\ncategories: [CLR Via C#]\ntags: [CLR via C#, DotNet]\n---\n\n> 《CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。\n\n常量和字段都是类型的数据成员，但是区别却是很大的。\n\n1. 常量的值永远不会改变。字段有多种类型，非只读字段的值是可以改变的。\n2. 常量的值必须在编译时就确定，也就是说在定义时就要赋值。编译后常量的值就保存在程序集的元数据中；字段是存储在动态内存中，在运行时才能得到字段的值。\n3. 常量的定义必须用基元类型，关于基元类型可以参考(CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型 )；字段的定义可以是任何类型。\n4. 因为常量的值不能改变，可以将其看做是静态类型，在IL代码中可以看到常量有static修饰符，所以在调用的时候和调用静态字段一样，直接用类名.常量名；字段中的静态字段的调用才和常量一样直接用类名.字段名，调用非静态字段必须用类的实例。、\n5. C#不允许使用static修饰常量，因为常量本身就隐含是static类型；字段可以使用static，使用static定义的字段为静态字段。\n\n## 下面看个例子来理解下常量\n\n1 创建一个类库项目命名为Oec2003ClassLibrary ,在默认的类Class1中写如下代码\n\n```\nnamespace Oec2003ClassLibrary\n{\n    public class Class1\n    {\n        public const double PI = 3.14;\n\n        public static double _pi = 3.14;\n    }\n}\n```\n\n2 创建一个web项目，添加对Oec2003ClassLibrary类库项目的引用，新建页面ConstTest.aspx,在PageLoad中写如下代码\n\n```\nprotected void Page_Load(object sender, EventArgs e)\n{\n    Response.Write(Class1.PI+\"<br/>\");\n    Response.Write(Class1._pi);\n}\n```\n\n3 将ConstTest设为起始页，运行，可以看到结果如下\n\n![2010-12-29_181713](http://oec2003.qiniudn.com/2010-12-29_181713.gif)\n\n4 现在将Oec2003ClassLibrary 项目中的Class1的代码改写如下，然后从新编译该项目。\n\n```\nnamespace Oec2003ClassLibrary\n{\n    public class Class1\n    {\n        public const double PI = 3.1415926;\n        public static double _pi = 3.1415926;\n    }\n}\n```\n\n5 刷新刚才的页面 ，可以看到结果如下\n\n![2010-12-29_181748](http://oec2003.qiniudn.com/2010-12-29_181748.gif)\n\n6 从新运行ConstTest页面可以看到如下结果\n\n![2010-12-29_181824](http://oec2003.qiniudn.com/2010-12-29_181824-1.gif)\n\n从上面的例子可以看出，在应用程序不从新编译的情况下，常量的值永远不会发生改变。如果应用程序想要获得常量的新值，就必须重新编译，所以在运行时一个应用程序集想获得另一个应用程序集中的值，则不能使用常量，可以使用只读字段（readonly）。\n\n字段也是一种类型的数据成员，字段的修饰符有 static readonly volatile，没有上述修饰修饰的字段为普通的实例字段。static可以和readonly一起使用，就是静态只读字段。有关volatile将在后面的部分介绍。\n\n## 关于readonly要注意的地方\n\n* 当readonly修饰的字段为值类型时，在调用的时候如果视图去改变字段的值，将会编译出错。\n* 当readonly修饰的字段为引用类型时，调用时不能改变其引用，但可以改变应用对象的值，看下面的例子。\n\n1 在Oec2003ClassLibrary项目的Class1.cs文件写如下代码\n\n```\nnamespace Oec2003ClassLibrary\n{\n    public class Class1\n    {\n        public const double PI = 3.14;\n        public static readonly double _pi = 3.14;\n\n        public static readonly User user = new User(\"oec2003\");\n    }\n    public class User\n    {\n        public User(string name)\n        {\n            Name = name;\n        }\n        public string Name { get; set; }\n    }\n}\n```\n\n2 在web项目中添加页面，命名为Readonly.aspx，PageLoad代码如下\n\n```\nprotected void Page_Load(object sender, EventArgs e)\n{\n    User user = Class1.user;\n    //正确 修改静态只读字段应用对象的值，运行会在页面显示oec2005\n    Class1.user.Name = \"oec2005\";\n    //错误 不能通过编译，不能改变为另一个引用\n    Class1.user = new User(\"oec2005\"); \n\n    Response.Write(user.Name);\n}\n```\n\n从上面的讲述中可以知道只读（Readonly）字段一旦定义了是不能够改变其值的，即使是引用类型也只能改变其引用对象的值。不过也并不是这么绝对，下面就来看看怎样用反射来实现改变只读字段的值。\n\n1 既然用到反射，首先引用命名空间using System.Reflection; ，然后修改Class1的代码。\n\n```\nnamespace Oec2003ClassLibrary\n{\n    public class Class1\n    {\n        public readonly Int32 _age = 25;\n        public readonly User _user = new User(\"oec2003\");\n    }\n    public class User\n    {\n        public User(string name)\n        {\n            Name = name;\n        }\n        public string Name { get; set; }\n    }\n}\n```\n\n2 修改PageLoad中的代码，将使用反射前的只读字段的内容输出。\n\n```\nprotected void Page_Load(object sender, EventArgs e)\n{\n    Class1 myClass = new Class1();\n\n    User user = myClass._user;\n\n    Response.Write(\"姓名：\"+user.Name+\" 年龄：\"+myClass._age);\n}\n```\n\n结果如下\n\n![2010-12-29_182011](http://oec2003.qiniudn.com/2010-12-29_182011.gif)\n\n3 修改PageLoad的代码，使用反射修改只读字段的值然后输出。\n\n```\nprotected void Page_Load(object sender, EventArgs e)\n{\n    Class1 myClass = new Class1();\n\n    Type myType = typeof(Oec2003ClassLibrary.Class1);\n    //改变值类型只读字段的值\n    myType.GetField(\"_age\").SetValue(myClass, 30);\n    //改变引用只读字段的值\n    myType.GetField(\"_user\").SetValue(myClass, new User(\"水杯\")); \n\n    User user = myClass._user;\n    Response.Write(\"姓名：\"+user.Name+\" 年龄：\"+myClass._age);\n}\n```\n\n结果如下\n\n![2010-12-29_182116](http://oec2003.qiniudn.com/2010-12-29_182116.gif)\n\n呵呵，可以看出不管是值类型只读字段还是引用类型只读字段都可以通过反射顺利修改。\n\n在一些面试中经常会遇到const和readonly的区别这样的问题，归根基地就是常量和字段的区别，readonly修饰的字段只是字段的一种而已，实际应用中该选择const还是readonly要根据实际的需求，const的性能要好，因为不用分配内存，不过限制很多，比如定义时类型的限制，显得不是很灵活。\n\n## 系列相关文章\n\n[CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/)\n[CLR Via C# 学习笔记（2） 装箱和拆箱](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/)\nCLR Via C# 学习笔记（3） 常量和字段\n[CLR Via C# 学习笔记（4） 方法 构造函数](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/)\n[CLR Via C# 学习笔记（5） 静态构造函数的性能](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor/)\n[CLR Via C# 学习笔记（6） 方法参数相关（out ref params）](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/)\n\n\n","slug":"clr-via-csharp-learning-notes-3-constants-and-fields","published":1,"updated":"2016-08-15T14:36:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz919003pxfynbz7o07sz","content":"<blockquote>\n<p>《CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。</p>\n</blockquote>\n<p>常量和字段都是类型的数据成员，但是区别却是很大的。</p>\n<ol>\n<li>常量的值永远不会改变。字段有多种类型，非只读字段的值是可以改变的。</li>\n<li>常量的值必须在编译时就确定，也就是说在定义时就要赋值。编译后常量的值就保存在程序集的元数据中；字段是存储在动态内存中，在运行时才能得到字段的值。</li>\n<li>常量的定义必须用基元类型，关于基元类型可以参考(CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型 )；字段的定义可以是任何类型。</li>\n<li>因为常量的值不能改变，可以将其看做是静态类型，在IL代码中可以看到常量有static修饰符，所以在调用的时候和调用静态字段一样，直接用类名.常量名；字段中的静态字段的调用才和常量一样直接用类名.字段名，调用非静态字段必须用类的实例。、</li>\n<li>C#不允许使用static修饰常量，因为常量本身就隐含是static类型；字段可以使用static，使用static定义的字段为静态字段。</li>\n</ol>\n<h2 id=\"下面看个例子来理解下常量\"><a href=\"#下面看个例子来理解下常量\" class=\"headerlink\" title=\"下面看个例子来理解下常量\"></a>下面看个例子来理解下常量</h2><p>1 创建一个类库项目命名为Oec2003ClassLibrary ,在默认的类Class1中写如下代码</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Oec2003ClassLibrary</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Class1</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"keyword\">double</span> PI = <span class=\"number\">3.14</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">double</span> _pi = <span class=\"number\">3.14</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>2 创建一个web项目，添加对Oec2003ClassLibrary类库项目的引用，新建页面ConstTest.aspx,在PageLoad中写如下代码</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">protected</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">Page_Load</span>(object sender, EventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">    Response<span class=\"selector-class\">.Write</span>(Class1.PI+<span class=\"string\">\"&lt;br/&gt;\"</span>);</div><div class=\"line\">    Response<span class=\"selector-class\">.Write</span>(Class1._pi);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>3 将ConstTest设为起始页，运行，可以看到结果如下</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_181713.gif\" alt=\"2010-12-29_181713\"></p>\n<p>4 现在将Oec2003ClassLibrary 项目中的Class1的代码改写如下，然后从新编译该项目。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Oec2003ClassLibrary</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Class1</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"keyword\">double</span> PI = <span class=\"number\">3.1415926</span>;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">double</span> _pi = <span class=\"number\">3.1415926</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>5 刷新刚才的页面 ，可以看到结果如下</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_181748.gif\" alt=\"2010-12-29_181748\"></p>\n<p>6 从新运行ConstTest页面可以看到如下结果</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_181824-1.gif\" alt=\"2010-12-29_181824\"></p>\n<p>从上面的例子可以看出，在应用程序不从新编译的情况下，常量的值永远不会发生改变。如果应用程序想要获得常量的新值，就必须重新编译，所以在运行时一个应用程序集想获得另一个应用程序集中的值，则不能使用常量，可以使用只读字段（readonly）。</p>\n<p>字段也是一种类型的数据成员，字段的修饰符有 static readonly volatile，没有上述修饰修饰的字段为普通的实例字段。static可以和readonly一起使用，就是静态只读字段。有关volatile将在后面的部分介绍。</p>\n<h2 id=\"关于readonly要注意的地方\"><a href=\"#关于readonly要注意的地方\" class=\"headerlink\" title=\"关于readonly要注意的地方\"></a>关于readonly要注意的地方</h2><ul>\n<li>当readonly修饰的字段为值类型时，在调用的时候如果视图去改变字段的值，将会编译出错。</li>\n<li>当readonly修饰的字段为引用类型时，调用时不能改变其引用，但可以改变应用对象的值，看下面的例子。</li>\n</ul>\n<p>1 在Oec2003ClassLibrary项目的Class1.cs文件写如下代码</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Oec2003ClassLibrary</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Class1</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"keyword\">double</span> PI = <span class=\"number\">3.14</span>;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"keyword\">double</span> _pi = <span class=\"number\">3.14</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> User user = <span class=\"keyword\">new</span> User(<span class=\"string\">\"oec2003\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">User</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span>(<span class=\"params\"><span class=\"keyword\">string</span> name</span>)</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Name = name;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>2 在web项目中添加页面，命名为Readonly.aspx，PageLoad代码如下</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">protected void Page_Load(object sender, EventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">User</span> <span class=\"title\">user</span> = Class1.user;</div><div class=\"line\">    //正确 修改静态只读字段应用对象的值，运行会在页面显示oec2005</div><div class=\"line\">    Class1.user.Name = <span class=\"string\">\"oec2005\"</span>;</div><div class=\"line\">    //错误 不能通过编译，不能改变为另一个引用</div><div class=\"line\">    Class1.<span class=\"keyword\">user</span> <span class=\"title\">= new</span> User(<span class=\"string\">\"oec2005\"</span>); </div><div class=\"line\"></div><div class=\"line\">    Response.<span class=\"keyword\">Write</span>(user.Name);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>从上面的讲述中可以知道只读（Readonly）字段一旦定义了是不能够改变其值的，即使是引用类型也只能改变其引用对象的值。不过也并不是这么绝对，下面就来看看怎样用反射来实现改变只读字段的值。</p>\n<p>1 既然用到反射，首先引用命名空间using System.Reflection; ，然后修改Class1的代码。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Oec2003ClassLibrary</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Class1</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">readonly</span> Int32 _age = <span class=\"number\">25</span>;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">readonly</span> User _user = <span class=\"keyword\">new</span> User(<span class=\"string\">\"oec2003\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">User</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span>(<span class=\"params\"><span class=\"keyword\">string</span> name</span>)</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Name = name;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>2 修改PageLoad中的代码，将使用反射前的只读字段的内容输出。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    Class1 myClass = <span class=\"keyword\">new</span> Class1();</div><div class=\"line\"></div><div class=\"line\">    User user = myClass._user;</div><div class=\"line\"></div><div class=\"line\">    Response.Write(<span class=\"string\">\"姓名：\"</span>+user.Name+<span class=\"string\">\" 年龄：\"</span>+myClass._age);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>结果如下</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_182011.gif\" alt=\"2010-12-29_182011\"></p>\n<p>3 修改PageLoad的代码，使用反射修改只读字段的值然后输出。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    Class1 myClass = <span class=\"keyword\">new</span> Class1();</div><div class=\"line\"></div><div class=\"line\">    Type myType = <span class=\"keyword\">typeof</span>(Oec2003ClassLibrary.Class1);</div><div class=\"line\">    <span class=\"comment\">//改变值类型只读字段的值</span></div><div class=\"line\">    myType.GetField(<span class=\"string\">\"_age\"</span>).SetValue(myClass, <span class=\"number\">30</span>);</div><div class=\"line\">    <span class=\"comment\">//改变引用只读字段的值</span></div><div class=\"line\">    myType.GetField(<span class=\"string\">\"_user\"</span>).SetValue(myClass, <span class=\"keyword\">new</span> User(<span class=\"string\">\"水杯\"</span>)); </div><div class=\"line\"></div><div class=\"line\">    User user = myClass._user;</div><div class=\"line\">    Response.Write(<span class=\"string\">\"姓名：\"</span>+user.Name+<span class=\"string\">\" 年龄：\"</span>+myClass._age);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>结果如下</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_182116.gif\" alt=\"2010-12-29_182116\"></p>\n<p>呵呵，可以看出不管是值类型只读字段还是引用类型只读字段都可以通过反射顺利修改。</p>\n<p>在一些面试中经常会遇到const和readonly的区别这样的问题，归根基地就是常量和字段的区别，readonly修饰的字段只是字段的一种而已，实际应用中该选择const还是readonly要根据实际的需求，const的性能要好，因为不用分配内存，不过限制很多，比如定义时类型的限制，显得不是很灵活。</p>\n<h2 id=\"系列相关文章\"><a href=\"#系列相关文章\" class=\"headerlink\" title=\"系列相关文章\"></a>系列相关文章</h2><p><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型</a><br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（2） 装箱和拆箱</a><br>CLR Via C# 学习笔记（3） 常量和字段<br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（4） 方法 构造函数</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（5） 静态构造函数的性能</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（6） 方法参数相关（out ref params）</a></p>\n","excerpt":"","more":"<blockquote>\n<p>《CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。</p>\n</blockquote>\n<p>常量和字段都是类型的数据成员，但是区别却是很大的。</p>\n<ol>\n<li>常量的值永远不会改变。字段有多种类型，非只读字段的值是可以改变的。</li>\n<li>常量的值必须在编译时就确定，也就是说在定义时就要赋值。编译后常量的值就保存在程序集的元数据中；字段是存储在动态内存中，在运行时才能得到字段的值。</li>\n<li>常量的定义必须用基元类型，关于基元类型可以参考(CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型 )；字段的定义可以是任何类型。</li>\n<li>因为常量的值不能改变，可以将其看做是静态类型，在IL代码中可以看到常量有static修饰符，所以在调用的时候和调用静态字段一样，直接用类名.常量名；字段中的静态字段的调用才和常量一样直接用类名.字段名，调用非静态字段必须用类的实例。、</li>\n<li>C#不允许使用static修饰常量，因为常量本身就隐含是static类型；字段可以使用static，使用static定义的字段为静态字段。</li>\n</ol>\n<h2 id=\"下面看个例子来理解下常量\"><a href=\"#下面看个例子来理解下常量\" class=\"headerlink\" title=\"下面看个例子来理解下常量\"></a>下面看个例子来理解下常量</h2><p>1 创建一个类库项目命名为Oec2003ClassLibrary ,在默认的类Class1中写如下代码</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Oec2003ClassLibrary</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Class1</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"keyword\">double</span> PI = <span class=\"number\">3.14</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">double</span> _pi = <span class=\"number\">3.14</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>2 创建一个web项目，添加对Oec2003ClassLibrary类库项目的引用，新建页面ConstTest.aspx,在PageLoad中写如下代码</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">protected</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">Page_Load</span>(object sender, EventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">    Response<span class=\"selector-class\">.Write</span>(Class1.PI+<span class=\"string\">\"&lt;br/&gt;\"</span>);</div><div class=\"line\">    Response<span class=\"selector-class\">.Write</span>(Class1._pi);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>3 将ConstTest设为起始页，运行，可以看到结果如下</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_181713.gif\" alt=\"2010-12-29_181713\"></p>\n<p>4 现在将Oec2003ClassLibrary 项目中的Class1的代码改写如下，然后从新编译该项目。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Oec2003ClassLibrary</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Class1</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"keyword\">double</span> PI = <span class=\"number\">3.1415926</span>;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">double</span> _pi = <span class=\"number\">3.1415926</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>5 刷新刚才的页面 ，可以看到结果如下</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_181748.gif\" alt=\"2010-12-29_181748\"></p>\n<p>6 从新运行ConstTest页面可以看到如下结果</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_181824-1.gif\" alt=\"2010-12-29_181824\"></p>\n<p>从上面的例子可以看出，在应用程序不从新编译的情况下，常量的值永远不会发生改变。如果应用程序想要获得常量的新值，就必须重新编译，所以在运行时一个应用程序集想获得另一个应用程序集中的值，则不能使用常量，可以使用只读字段（readonly）。</p>\n<p>字段也是一种类型的数据成员，字段的修饰符有 static readonly volatile，没有上述修饰修饰的字段为普通的实例字段。static可以和readonly一起使用，就是静态只读字段。有关volatile将在后面的部分介绍。</p>\n<h2 id=\"关于readonly要注意的地方\"><a href=\"#关于readonly要注意的地方\" class=\"headerlink\" title=\"关于readonly要注意的地方\"></a>关于readonly要注意的地方</h2><ul>\n<li>当readonly修饰的字段为值类型时，在调用的时候如果视图去改变字段的值，将会编译出错。</li>\n<li>当readonly修饰的字段为引用类型时，调用时不能改变其引用，但可以改变应用对象的值，看下面的例子。</li>\n</ul>\n<p>1 在Oec2003ClassLibrary项目的Class1.cs文件写如下代码</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Oec2003ClassLibrary</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Class1</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"keyword\">double</span> PI = <span class=\"number\">3.14</span>;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"keyword\">double</span> _pi = <span class=\"number\">3.14</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> User user = <span class=\"keyword\">new</span> User(<span class=\"string\">\"oec2003\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">User</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span>(<span class=\"params\"><span class=\"keyword\">string</span> name</span>)</div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Name = name;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>2 在web项目中添加页面，命名为Readonly.aspx，PageLoad代码如下</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">protected void Page_Load(object sender, EventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">User</span> <span class=\"title\">user</span> = Class1.user;</div><div class=\"line\">    //正确 修改静态只读字段应用对象的值，运行会在页面显示oec2005</div><div class=\"line\">    Class1.user.Name = <span class=\"string\">\"oec2005\"</span>;</div><div class=\"line\">    //错误 不能通过编译，不能改变为另一个引用</div><div class=\"line\">    Class1.<span class=\"keyword\">user</span> <span class=\"title\">= new</span> User(<span class=\"string\">\"oec2005\"</span>); </div><div class=\"line\"></div><div class=\"line\">    Response.<span class=\"keyword\">Write</span>(user.Name);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>从上面的讲述中可以知道只读（Readonly）字段一旦定义了是不能够改变其值的，即使是引用类型也只能改变其引用对象的值。不过也并不是这么绝对，下面就来看看怎样用反射来实现改变只读字段的值。</p>\n<p>1 既然用到反射，首先引用命名空间using System.Reflection; ，然后修改Class1的代码。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Oec2003ClassLibrary</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Class1</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">readonly</span> Int32 _age = <span class=\"number\">25</span>;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">readonly</span> User _user = <span class=\"keyword\">new</span> User(<span class=\"string\">\"oec2003\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">User</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span>(<span class=\"params\"><span class=\"keyword\">string</span> name</span>)</div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Name = name;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>2 修改PageLoad中的代码，将使用反射前的只读字段的内容输出。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    Class1 myClass = <span class=\"keyword\">new</span> Class1();</div><div class=\"line\"></div><div class=\"line\">    User user = myClass._user;</div><div class=\"line\"></div><div class=\"line\">    Response.Write(<span class=\"string\">\"姓名：\"</span>+user.Name+<span class=\"string\">\" 年龄：\"</span>+myClass._age);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>结果如下</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_182011.gif\" alt=\"2010-12-29_182011\"></p>\n<p>3 修改PageLoad的代码，使用反射修改只读字段的值然后输出。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    Class1 myClass = <span class=\"keyword\">new</span> Class1();</div><div class=\"line\"></div><div class=\"line\">    Type myType = <span class=\"keyword\">typeof</span>(Oec2003ClassLibrary.Class1);</div><div class=\"line\">    <span class=\"comment\">//改变值类型只读字段的值</span></div><div class=\"line\">    myType.GetField(<span class=\"string\">\"_age\"</span>).SetValue(myClass, <span class=\"number\">30</span>);</div><div class=\"line\">    <span class=\"comment\">//改变引用只读字段的值</span></div><div class=\"line\">    myType.GetField(<span class=\"string\">\"_user\"</span>).SetValue(myClass, <span class=\"keyword\">new</span> User(<span class=\"string\">\"水杯\"</span>)); </div><div class=\"line\"></div><div class=\"line\">    User user = myClass._user;</div><div class=\"line\">    Response.Write(<span class=\"string\">\"姓名：\"</span>+user.Name+<span class=\"string\">\" 年龄：\"</span>+myClass._age);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>结果如下</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_182116.gif\" alt=\"2010-12-29_182116\"></p>\n<p>呵呵，可以看出不管是值类型只读字段还是引用类型只读字段都可以通过反射顺利修改。</p>\n<p>在一些面试中经常会遇到const和readonly的区别这样的问题，归根基地就是常量和字段的区别，readonly修饰的字段只是字段的一种而已，实际应用中该选择const还是readonly要根据实际的需求，const的性能要好，因为不用分配内存，不过限制很多，比如定义时类型的限制，显得不是很灵活。</p>\n<h2 id=\"系列相关文章\"><a href=\"#系列相关文章\" class=\"headerlink\" title=\"系列相关文章\"></a>系列相关文章</h2><p><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/\">CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型</a><br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/\">CLR Via C# 学习笔记（2） 装箱和拆箱</a><br>CLR Via C# 学习笔记（3） 常量和字段<br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/\">CLR Via C# 学习笔记（4） 方法 构造函数</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor/\">CLR Via C# 学习笔记（5） 静态构造函数的性能</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/\">CLR Via C# 学习笔记（6） 方法参数相关（out ref params）</a></p>\n"},{"title":"CLR Via C# 学习笔记（2） 装箱和拆箱","date":"2009-06-17T16:00:00.000Z","_content":"\n> CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。\n\n装箱和拆箱是已经被嚼烂的两个概念了，并且在一些面试中也经常考到。\n\n1. 装箱：将值类型转换为引用类型。\n2. 拆箱：将引用类型转换为值类型。\n\n值类型是一种相对轻型的类型，不像对象那样在托管堆中分配，也不会被GC，不通过指针来引用，不过在有些时候需要获取对值类型的引用，例如在使用net1.0的集合类ArrayList的时候。\n\n```\nclass Program\n{\n    static void Main(string[] args)\n    {\n        ArrayList list = new ArrayList();\n        Point p;                        //因Point为值类型，分配在堆栈中\n        for (int i = 0; i < 100; i++)\n        {\n            p.x = p.y = i;              //初始化Point中的成员\n            list.Add(p);                //对p进行装箱后，将引用添加到list中\n        }\n    }\n}\nstruct Point\n{\n    public Int32 x;\n    public Int32 y;\n}\n```\n\nArrayList的Add方法是接受一个Object参数，如下\n\n```\npublic virtual int Add(object value);\n```\n\n所以在执行Add方法时会将Point值类型转换为一个堆得托管对象，并获取到这个对象的引用，将引用地址存储在ArrayList中。\n\n在一个值类型装箱的时候内部发生的事情：\n\n1. 在托管堆分配好内存。分配的内存是值类型的各个字段所需内存量加上托管堆上的两个额外成员（类型对象指针和同步索引块）所需的内存量。\n2. 值类型中的字段值复制到新分配的堆内存中。\n3. 返回对象的引用地址。\n\n拆箱就是执行和装箱相反的操作，将引用类型转化为值类型。接上面的代码，获取ArrayList中的元素值用如下代码：\n\n```\nfor (int j = 0; j < 10; j++)\n{\n    Point point =(Point)list[j];\n    Console.WriteLine(\"X:\" + point.x + \" Y:\" + point.y);\n}\n```\n\n上面的代码中通过索引取到ArrayList中存储的各个Point的引用地址，通过Point类型转换将其对应的值从堆中复制到Point的实例point中，这个转换的过程就是拆箱的过程。\n\n在拆箱的过程中要注意以下两点：\n\n1. 如果对已装箱的值类型的引用的变量为null，会引发NullRefreenceException异常\n2. 如果一个引用指向的对象在拆箱时不是用的装箱时所使用的类型，将会引发InvalidCastException异常。代码如下：\n\n```\nstatic void Main(string[] args)\n{\n    Int32 x = 5;\n    Object o = x;\n    Int16 y = (Int16)o;    //引发InvalidCastException异常\n}\n```\n\n正确的做法是，现将其用Int32类型来拆箱，然后再强制转换为Int16\n\n```\nstatic void Main(string[] args)\n{\n    Int32 x = 5;\n    Object o = x;\n    Int16 y = (Int16)(Int32)o;\n}\n```\n\n下面来看两段程序来深入理解下装箱和拆箱\n\n代码一：\n\n```\nstatic void Main(string[] args)\n{\n    Int32 x = 5;\n    Object o = x;\n    x = 123;\n\n    Console.WriteLine(x + \",  \" + (Int32)o);\n}\n```\n\n上面的代码中有多少次装箱呢？乍一看好像就一次（Object o=x；），其实一共有三次装箱，看看IL代码就一目了然了。\n\n![2010-12-29_183611](http://oec2003.qiniudn.com/2010-12-29_183611.gif)\n\n程序的执行步骤：\n\n1 创建一个Int32的未装箱的值类型实例x，并初始化为5.\n\n2 创建Object类型的变量o，并指向x。由于引用类型的变量必须要执行堆中的对象，所以要对x进行装箱（第一次装箱），并将x在堆中的引用地址存储在o中。\n\n3 将值123赋给未装箱的值类型实例x中。\n\n4 调用WriteLine方法，WriteLine方法的参数值类型为String，现在WriteLine方法存在三个数据项，值类型x、string类型“，”和一个已装箱的Int32类型实例的引用o，这三个数据项必须要合并成一个string对象才能被调用。\n\n5 调用String对象的静态方法Concat，Concat方法有9个重载，根据那三个数据项会选择下面方法执行。\n\n![2010-12-29_183654](http://oec2003.qiniudn.com/2010-12-29_183654.gif)\n\n6 第一个参数arg0传入的是x ，参数类型为object，所以要对x进行装箱（第二次装箱），将引用地址传给arg0，arg1传入的是字符串“，”，字符串就是引用类型，直接传引用地址，arg2传入的是将o拆箱然后再装箱（第三次装箱）的引用地址传入。\n\n上面代码中的WriteLine方法如果直接写成Console.WriteLine(x + “, ” + o);将会有跟高的相率，因为o本身就是Object类型，在Concat的时候不用进行装箱拆箱。\n\n代码二：看看这段程序发生了几次装箱\n\n```\nstatic void Main(string[] args)\n{\n    Int32 x = 5;\n    Object o=x;\n    x=123;\n    Console.WriteLine(x);\n    x = (Int32)o;\n    Console.WriteLine(x);\n    Console.WriteLine(o);\n}\n```\n\n上面的代码只发生了一次装箱，因为WriteLine方法的重载版本中参数类型可以为Objet或是Int32，在调用WriteLine方法是并没有装箱，唯一的一次装箱是Object o=x;。\n\n代码三：\n\n```\nstatic void Main(string[] args)\n{\n    Int32 x = 5;\n    CheckRef(x, x);  //输出不同引用\n}\n\nstatic void CheckRef(object obj1, object obj2)\n{\n    if (obj1 == obj2)\n    Console.WriteLine(\"相同引用\");\n    else\n    Console.WriteLine(\"不同引用\");\n}\n```\n\n执行上面代码将发生两次装箱，因为CheckRef方法的两个参数都是Object类型，传入的都是值类型的实例，可以讲代\n\n码改进下，先将x转换成Object类型再传入方法，如下:\n\n```\nstatic void Main(string[] args)\n{\n    Int32 x = 5;\n    Object o = x;\n    CheckRef(o,o);  //输出相同引用\n}\n\nstatic void CheckRef(object obj1, object obj2)\n{\n    if (obj1 == obj2)\n    Console.WriteLine(\"相同引用\");\n    else\n    Console.WriteLine(\"不同引用\");\n}\n```\n\n改进后只进行一次装箱操作了，效率提高了，但是会发现运行的结果也发生了变化，所以这种做法在有些时候是很危险的。\n\n装箱拆箱操作极大的破环程序的性能，不过在Net2.0中提供了泛型集合类，所以完全可以用List<T> 和Dictionary<Tkey,Tvalue> 来代替 原来1.0中的ArrayList和HashTable，即使是List<Object>也会比ArrayList的性能要好。\n\n## 系列相关文章\n\n[CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/)\nCLR Via C# 学习笔记（2） 装箱和拆箱\n[CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/)\n[CLR Via C# 学习笔记（4） 方法 构造函数](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/)\n[CLR Via C# 学习笔记（5） 静态构造函数的性能](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor/)\n[CLR Via C# 学习笔记（6） 方法参数相关（out ref params）](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/)\n\n\n","source":"_posts/clr-via-csharp-learning-notes-2-boxing-and-unboxing.md","raw":"---\ntitle: CLR Via C# 学习笔记（2） 装箱和拆箱\ndate: 2009-06-18\ncategories: [CLR Via C#]\ntags: [CLR via C#, DotNet]\n---\n\n> CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。\n\n装箱和拆箱是已经被嚼烂的两个概念了，并且在一些面试中也经常考到。\n\n1. 装箱：将值类型转换为引用类型。\n2. 拆箱：将引用类型转换为值类型。\n\n值类型是一种相对轻型的类型，不像对象那样在托管堆中分配，也不会被GC，不通过指针来引用，不过在有些时候需要获取对值类型的引用，例如在使用net1.0的集合类ArrayList的时候。\n\n```\nclass Program\n{\n    static void Main(string[] args)\n    {\n        ArrayList list = new ArrayList();\n        Point p;                        //因Point为值类型，分配在堆栈中\n        for (int i = 0; i < 100; i++)\n        {\n            p.x = p.y = i;              //初始化Point中的成员\n            list.Add(p);                //对p进行装箱后，将引用添加到list中\n        }\n    }\n}\nstruct Point\n{\n    public Int32 x;\n    public Int32 y;\n}\n```\n\nArrayList的Add方法是接受一个Object参数，如下\n\n```\npublic virtual int Add(object value);\n```\n\n所以在执行Add方法时会将Point值类型转换为一个堆得托管对象，并获取到这个对象的引用，将引用地址存储在ArrayList中。\n\n在一个值类型装箱的时候内部发生的事情：\n\n1. 在托管堆分配好内存。分配的内存是值类型的各个字段所需内存量加上托管堆上的两个额外成员（类型对象指针和同步索引块）所需的内存量。\n2. 值类型中的字段值复制到新分配的堆内存中。\n3. 返回对象的引用地址。\n\n拆箱就是执行和装箱相反的操作，将引用类型转化为值类型。接上面的代码，获取ArrayList中的元素值用如下代码：\n\n```\nfor (int j = 0; j < 10; j++)\n{\n    Point point =(Point)list[j];\n    Console.WriteLine(\"X:\" + point.x + \" Y:\" + point.y);\n}\n```\n\n上面的代码中通过索引取到ArrayList中存储的各个Point的引用地址，通过Point类型转换将其对应的值从堆中复制到Point的实例point中，这个转换的过程就是拆箱的过程。\n\n在拆箱的过程中要注意以下两点：\n\n1. 如果对已装箱的值类型的引用的变量为null，会引发NullRefreenceException异常\n2. 如果一个引用指向的对象在拆箱时不是用的装箱时所使用的类型，将会引发InvalidCastException异常。代码如下：\n\n```\nstatic void Main(string[] args)\n{\n    Int32 x = 5;\n    Object o = x;\n    Int16 y = (Int16)o;    //引发InvalidCastException异常\n}\n```\n\n正确的做法是，现将其用Int32类型来拆箱，然后再强制转换为Int16\n\n```\nstatic void Main(string[] args)\n{\n    Int32 x = 5;\n    Object o = x;\n    Int16 y = (Int16)(Int32)o;\n}\n```\n\n下面来看两段程序来深入理解下装箱和拆箱\n\n代码一：\n\n```\nstatic void Main(string[] args)\n{\n    Int32 x = 5;\n    Object o = x;\n    x = 123;\n\n    Console.WriteLine(x + \",  \" + (Int32)o);\n}\n```\n\n上面的代码中有多少次装箱呢？乍一看好像就一次（Object o=x；），其实一共有三次装箱，看看IL代码就一目了然了。\n\n![2010-12-29_183611](http://oec2003.qiniudn.com/2010-12-29_183611.gif)\n\n程序的执行步骤：\n\n1 创建一个Int32的未装箱的值类型实例x，并初始化为5.\n\n2 创建Object类型的变量o，并指向x。由于引用类型的变量必须要执行堆中的对象，所以要对x进行装箱（第一次装箱），并将x在堆中的引用地址存储在o中。\n\n3 将值123赋给未装箱的值类型实例x中。\n\n4 调用WriteLine方法，WriteLine方法的参数值类型为String，现在WriteLine方法存在三个数据项，值类型x、string类型“，”和一个已装箱的Int32类型实例的引用o，这三个数据项必须要合并成一个string对象才能被调用。\n\n5 调用String对象的静态方法Concat，Concat方法有9个重载，根据那三个数据项会选择下面方法执行。\n\n![2010-12-29_183654](http://oec2003.qiniudn.com/2010-12-29_183654.gif)\n\n6 第一个参数arg0传入的是x ，参数类型为object，所以要对x进行装箱（第二次装箱），将引用地址传给arg0，arg1传入的是字符串“，”，字符串就是引用类型，直接传引用地址，arg2传入的是将o拆箱然后再装箱（第三次装箱）的引用地址传入。\n\n上面代码中的WriteLine方法如果直接写成Console.WriteLine(x + “, ” + o);将会有跟高的相率，因为o本身就是Object类型，在Concat的时候不用进行装箱拆箱。\n\n代码二：看看这段程序发生了几次装箱\n\n```\nstatic void Main(string[] args)\n{\n    Int32 x = 5;\n    Object o=x;\n    x=123;\n    Console.WriteLine(x);\n    x = (Int32)o;\n    Console.WriteLine(x);\n    Console.WriteLine(o);\n}\n```\n\n上面的代码只发生了一次装箱，因为WriteLine方法的重载版本中参数类型可以为Objet或是Int32，在调用WriteLine方法是并没有装箱，唯一的一次装箱是Object o=x;。\n\n代码三：\n\n```\nstatic void Main(string[] args)\n{\n    Int32 x = 5;\n    CheckRef(x, x);  //输出不同引用\n}\n\nstatic void CheckRef(object obj1, object obj2)\n{\n    if (obj1 == obj2)\n    Console.WriteLine(\"相同引用\");\n    else\n    Console.WriteLine(\"不同引用\");\n}\n```\n\n执行上面代码将发生两次装箱，因为CheckRef方法的两个参数都是Object类型，传入的都是值类型的实例，可以讲代\n\n码改进下，先将x转换成Object类型再传入方法，如下:\n\n```\nstatic void Main(string[] args)\n{\n    Int32 x = 5;\n    Object o = x;\n    CheckRef(o,o);  //输出相同引用\n}\n\nstatic void CheckRef(object obj1, object obj2)\n{\n    if (obj1 == obj2)\n    Console.WriteLine(\"相同引用\");\n    else\n    Console.WriteLine(\"不同引用\");\n}\n```\n\n改进后只进行一次装箱操作了，效率提高了，但是会发现运行的结果也发生了变化，所以这种做法在有些时候是很危险的。\n\n装箱拆箱操作极大的破环程序的性能，不过在Net2.0中提供了泛型集合类，所以完全可以用List<T> 和Dictionary<Tkey,Tvalue> 来代替 原来1.0中的ArrayList和HashTable，即使是List<Object>也会比ArrayList的性能要好。\n\n## 系列相关文章\n\n[CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/)\nCLR Via C# 学习笔记（2） 装箱和拆箱\n[CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/)\n[CLR Via C# 学习笔记（4） 方法 构造函数](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/)\n[CLR Via C# 学习笔记（5） 静态构造函数的性能](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor/)\n[CLR Via C# 学习笔记（6） 方法参数相关（out ref params）](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/)\n\n\n","slug":"clr-via-csharp-learning-notes-2-boxing-and-unboxing","published":1,"updated":"2016-08-15T14:09:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz91d003sxfynyv3pze6w","content":"<blockquote>\n<p>CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。</p>\n</blockquote>\n<p>装箱和拆箱是已经被嚼烂的两个概念了，并且在一些面试中也经常考到。</p>\n<ol>\n<li>装箱：将值类型转换为引用类型。</li>\n<li>拆箱：将引用类型转换为值类型。</li>\n</ol>\n<p>值类型是一种相对轻型的类型，不像对象那样在托管堆中分配，也不会被GC，不通过指针来引用，不过在有些时候需要获取对值类型的引用，例如在使用net1.0的集合类ArrayList的时候。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">class</span> Program</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        ArrayList <span class=\"built_in\">list</span> = <span class=\"keyword\">new</span> ArrayList();</div><div class=\"line\">        Point p;                        <span class=\"comment\">//因Point为值类型，分配在堆栈中</span></div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100</span>; i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            p.x = p.y = i;              <span class=\"comment\">//初始化Point中的成员</span></div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(p);                <span class=\"comment\">//对p进行装箱后，将引用添加到list中</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">struct</span> Point</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 x;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 y;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>ArrayList的Add方法是接受一个Object参数，如下</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">virtual</span> <span class=\"keyword\">int</span> <span class=\"title\">Add</span>(<span class=\"params\"><span class=\"keyword\">object</span> <span class=\"keyword\">value</span></span>)</span>;</div></pre></td></tr></table></figure>\n<p>所以在执行Add方法时会将Point值类型转换为一个堆得托管对象，并获取到这个对象的引用，将引用地址存储在ArrayList中。</p>\n<p>在一个值类型装箱的时候内部发生的事情：</p>\n<ol>\n<li>在托管堆分配好内存。分配的内存是值类型的各个字段所需内存量加上托管堆上的两个额外成员（类型对象指针和同步索引块）所需的内存量。</li>\n<li>值类型中的字段值复制到新分配的堆内存中。</li>\n<li>返回对象的引用地址。</li>\n</ol>\n<p>拆箱就是执行和装箱相反的操作，将引用类型转化为值类型。接上面的代码，获取ArrayList中的元素值用如下代码：</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">10</span>; j++)</div><div class=\"line\">&#123;</div><div class=\"line\">    Point <span class=\"built_in\">point</span> =(Point)list[j];</div><div class=\"line\">    <span class=\"built_in\">Console</span>.WriteLine(<span class=\"string\">\"X:\"</span> + <span class=\"built_in\">point</span>.x + <span class=\"string\">\" Y:\"</span> + <span class=\"built_in\">point</span>.y);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的代码中通过索引取到ArrayList中存储的各个Point的引用地址，通过Point类型转换将其对应的值从堆中复制到Point的实例point中，这个转换的过程就是拆箱的过程。</p>\n<p>在拆箱的过程中要注意以下两点：</p>\n<ol>\n<li>如果对已装箱的值类型的引用的变量为null，会引发NullRefreenceException异常</li>\n<li>如果一个引用指向的对象在拆箱时不是用的装箱时所使用的类型，将会引发InvalidCastException异常。代码如下：</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    Int32 x = <span class=\"number\">5</span>;</div><div class=\"line\">    Object o = x;</div><div class=\"line\">    Int16 y = (Int16)o;    <span class=\"comment\">//引发InvalidCastException异常</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>正确的做法是，现将其用Int32类型来拆箱，然后再强制转换为Int16</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    Int32 x = <span class=\"number\">5</span>;</div><div class=\"line\">    Object o = x;</div><div class=\"line\">    Int16 y = (Int16)(Int32)o;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>下面来看两段程序来深入理解下装箱和拆箱</p>\n<p>代码一：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    Int32 x = <span class=\"number\">5</span>;</div><div class=\"line\">    Object o = x;</div><div class=\"line\">    x = <span class=\"number\">123</span>;</div><div class=\"line\"></div><div class=\"line\">    Console.WriteLine(x + <span class=\"string\">\",  \"</span> + (Int32)o);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的代码中有多少次装箱呢？乍一看好像就一次（Object o=x；），其实一共有三次装箱，看看IL代码就一目了然了。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_183611.gif\" alt=\"2010-12-29_183611\"></p>\n<p>程序的执行步骤：</p>\n<p>1 创建一个Int32的未装箱的值类型实例x，并初始化为5.</p>\n<p>2 创建Object类型的变量o，并指向x。由于引用类型的变量必须要执行堆中的对象，所以要对x进行装箱（第一次装箱），并将x在堆中的引用地址存储在o中。</p>\n<p>3 将值123赋给未装箱的值类型实例x中。</p>\n<p>4 调用WriteLine方法，WriteLine方法的参数值类型为String，现在WriteLine方法存在三个数据项，值类型x、string类型“，”和一个已装箱的Int32类型实例的引用o，这三个数据项必须要合并成一个string对象才能被调用。</p>\n<p>5 调用String对象的静态方法Concat，Concat方法有9个重载，根据那三个数据项会选择下面方法执行。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_183654.gif\" alt=\"2010-12-29_183654\"></p>\n<p>6 第一个参数arg0传入的是x ，参数类型为object，所以要对x进行装箱（第二次装箱），将引用地址传给arg0，arg1传入的是字符串“，”，字符串就是引用类型，直接传引用地址，arg2传入的是将o拆箱然后再装箱（第三次装箱）的引用地址传入。</p>\n<p>上面代码中的WriteLine方法如果直接写成Console.WriteLine(x + “, ” + o);将会有跟高的相率，因为o本身就是Object类型，在Concat的时候不用进行装箱拆箱。</p>\n<p>代码二：看看这段程序发生了几次装箱</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">static void Main(string[] args)</div><div class=\"line\">&#123;</div><div class=\"line\">    Int32 x = <span class=\"number\">5</span><span class=\"comment\">;</span></div><div class=\"line\">    Object o=x<span class=\"comment\">;</span></div><div class=\"line\">    x=<span class=\"number\">123</span><span class=\"comment\">;</span></div><div class=\"line\">    Console.WriteLine(x)<span class=\"comment\">;</span></div><div class=\"line\">    x = (Int32)o<span class=\"comment\">;</span></div><div class=\"line\">    Console.WriteLine(x)<span class=\"comment\">;</span></div><div class=\"line\">    Console.WriteLine(o)<span class=\"comment\">;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的代码只发生了一次装箱，因为WriteLine方法的重载版本中参数类型可以为Objet或是Int32，在调用WriteLine方法是并没有装箱，唯一的一次装箱是Object o=x;。</p>\n<p>代码三：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    Int32 x = <span class=\"number\">5</span>;</div><div class=\"line\">    CheckRef(x, x);  <span class=\"comment\">//输出不同引用</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CheckRef</span>(<span class=\"params\"><span class=\"keyword\">object</span> obj1, <span class=\"keyword\">object</span> obj2</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (obj1 == obj2)</div><div class=\"line\">    Console.WriteLine(<span class=\"string\">\"相同引用\"</span>);</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">    Console.WriteLine(<span class=\"string\">\"不同引用\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>执行上面代码将发生两次装箱，因为CheckRef方法的两个参数都是Object类型，传入的都是值类型的实例，可以讲代</p>\n<p>码改进下，先将x转换成Object类型再传入方法，如下:</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    Int32 x = <span class=\"number\">5</span>;</div><div class=\"line\">    Object o = x;</div><div class=\"line\">    CheckRef(o,o);  <span class=\"comment\">//输出相同引用</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CheckRef</span>(<span class=\"params\"><span class=\"keyword\">object</span> obj1, <span class=\"keyword\">object</span> obj2</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (obj1 == obj2)</div><div class=\"line\">    Console.WriteLine(<span class=\"string\">\"相同引用\"</span>);</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">    Console.WriteLine(<span class=\"string\">\"不同引用\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>改进后只进行一次装箱操作了，效率提高了，但是会发现运行的结果也发生了变化，所以这种做法在有些时候是很危险的。</p>\n<p>装箱拆箱操作极大的破环程序的性能，不过在Net2.0中提供了泛型集合类，所以完全可以用List<t> 和Dictionary<tkey,tvalue> 来代替 原来1.0中的ArrayList和HashTable，即使是List<object>也会比ArrayList的性能要好。</object></tkey,tvalue></t></p>\n<h2 id=\"系列相关文章\"><a href=\"#系列相关文章\" class=\"headerlink\" title=\"系列相关文章\"></a>系列相关文章</h2><p><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型</a><br>CLR Via C# 学习笔记（2） 装箱和拆箱<br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（4） 方法 构造函数</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（5） 静态构造函数的性能</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（6） 方法参数相关（out ref params）</a></p>\n","excerpt":"","more":"<blockquote>\n<p>CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。</p>\n</blockquote>\n<p>装箱和拆箱是已经被嚼烂的两个概念了，并且在一些面试中也经常考到。</p>\n<ol>\n<li>装箱：将值类型转换为引用类型。</li>\n<li>拆箱：将引用类型转换为值类型。</li>\n</ol>\n<p>值类型是一种相对轻型的类型，不像对象那样在托管堆中分配，也不会被GC，不通过指针来引用，不过在有些时候需要获取对值类型的引用，例如在使用net1.0的集合类ArrayList的时候。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">class</span> Program</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        ArrayList <span class=\"built_in\">list</span> = <span class=\"keyword\">new</span> ArrayList();</div><div class=\"line\">        Point p;                        <span class=\"comment\">//因Point为值类型，分配在堆栈中</span></div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100</span>; i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            p.x = p.y = i;              <span class=\"comment\">//初始化Point中的成员</span></div><div class=\"line\">            <span class=\"built_in\">list</span>.Add(p);                <span class=\"comment\">//对p进行装箱后，将引用添加到list中</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">struct</span> Point</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 x;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 y;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>ArrayList的Add方法是接受一个Object参数，如下</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">virtual</span> <span class=\"keyword\">int</span> <span class=\"title\">Add</span>(<span class=\"params\"><span class=\"keyword\">object</span> <span class=\"keyword\">value</span></span>)</span>;</div></pre></td></tr></table></figure>\n<p>所以在执行Add方法时会将Point值类型转换为一个堆得托管对象，并获取到这个对象的引用，将引用地址存储在ArrayList中。</p>\n<p>在一个值类型装箱的时候内部发生的事情：</p>\n<ol>\n<li>在托管堆分配好内存。分配的内存是值类型的各个字段所需内存量加上托管堆上的两个额外成员（类型对象指针和同步索引块）所需的内存量。</li>\n<li>值类型中的字段值复制到新分配的堆内存中。</li>\n<li>返回对象的引用地址。</li>\n</ol>\n<p>拆箱就是执行和装箱相反的操作，将引用类型转化为值类型。接上面的代码，获取ArrayList中的元素值用如下代码：</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">10</span>; j++)</div><div class=\"line\">&#123;</div><div class=\"line\">    Point <span class=\"built_in\">point</span> =(Point)list[j];</div><div class=\"line\">    <span class=\"built_in\">Console</span>.WriteLine(<span class=\"string\">\"X:\"</span> + <span class=\"built_in\">point</span>.x + <span class=\"string\">\" Y:\"</span> + <span class=\"built_in\">point</span>.y);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的代码中通过索引取到ArrayList中存储的各个Point的引用地址，通过Point类型转换将其对应的值从堆中复制到Point的实例point中，这个转换的过程就是拆箱的过程。</p>\n<p>在拆箱的过程中要注意以下两点：</p>\n<ol>\n<li>如果对已装箱的值类型的引用的变量为null，会引发NullRefreenceException异常</li>\n<li>如果一个引用指向的对象在拆箱时不是用的装箱时所使用的类型，将会引发InvalidCastException异常。代码如下：</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    Int32 x = <span class=\"number\">5</span>;</div><div class=\"line\">    Object o = x;</div><div class=\"line\">    Int16 y = (Int16)o;    <span class=\"comment\">//引发InvalidCastException异常</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>正确的做法是，现将其用Int32类型来拆箱，然后再强制转换为Int16</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    Int32 x = <span class=\"number\">5</span>;</div><div class=\"line\">    Object o = x;</div><div class=\"line\">    Int16 y = (Int16)(Int32)o;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>下面来看两段程序来深入理解下装箱和拆箱</p>\n<p>代码一：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    Int32 x = <span class=\"number\">5</span>;</div><div class=\"line\">    Object o = x;</div><div class=\"line\">    x = <span class=\"number\">123</span>;</div><div class=\"line\"></div><div class=\"line\">    Console.WriteLine(x + <span class=\"string\">\",  \"</span> + (Int32)o);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的代码中有多少次装箱呢？乍一看好像就一次（Object o=x；），其实一共有三次装箱，看看IL代码就一目了然了。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_183611.gif\" alt=\"2010-12-29_183611\"></p>\n<p>程序的执行步骤：</p>\n<p>1 创建一个Int32的未装箱的值类型实例x，并初始化为5.</p>\n<p>2 创建Object类型的变量o，并指向x。由于引用类型的变量必须要执行堆中的对象，所以要对x进行装箱（第一次装箱），并将x在堆中的引用地址存储在o中。</p>\n<p>3 将值123赋给未装箱的值类型实例x中。</p>\n<p>4 调用WriteLine方法，WriteLine方法的参数值类型为String，现在WriteLine方法存在三个数据项，值类型x、string类型“，”和一个已装箱的Int32类型实例的引用o，这三个数据项必须要合并成一个string对象才能被调用。</p>\n<p>5 调用String对象的静态方法Concat，Concat方法有9个重载，根据那三个数据项会选择下面方法执行。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_183654.gif\" alt=\"2010-12-29_183654\"></p>\n<p>6 第一个参数arg0传入的是x ，参数类型为object，所以要对x进行装箱（第二次装箱），将引用地址传给arg0，arg1传入的是字符串“，”，字符串就是引用类型，直接传引用地址，arg2传入的是将o拆箱然后再装箱（第三次装箱）的引用地址传入。</p>\n<p>上面代码中的WriteLine方法如果直接写成Console.WriteLine(x + “, ” + o);将会有跟高的相率，因为o本身就是Object类型，在Concat的时候不用进行装箱拆箱。</p>\n<p>代码二：看看这段程序发生了几次装箱</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">static void Main(string[] args)</div><div class=\"line\">&#123;</div><div class=\"line\">    Int32 x = <span class=\"number\">5</span><span class=\"comment\">;</span></div><div class=\"line\">    Object o=x<span class=\"comment\">;</span></div><div class=\"line\">    x=<span class=\"number\">123</span><span class=\"comment\">;</span></div><div class=\"line\">    Console.WriteLine(x)<span class=\"comment\">;</span></div><div class=\"line\">    x = (Int32)o<span class=\"comment\">;</span></div><div class=\"line\">    Console.WriteLine(x)<span class=\"comment\">;</span></div><div class=\"line\">    Console.WriteLine(o)<span class=\"comment\">;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的代码只发生了一次装箱，因为WriteLine方法的重载版本中参数类型可以为Objet或是Int32，在调用WriteLine方法是并没有装箱，唯一的一次装箱是Object o=x;。</p>\n<p>代码三：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    Int32 x = <span class=\"number\">5</span>;</div><div class=\"line\">    CheckRef(x, x);  <span class=\"comment\">//输出不同引用</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CheckRef</span>(<span class=\"params\"><span class=\"keyword\">object</span> obj1, <span class=\"keyword\">object</span> obj2</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (obj1 == obj2)</div><div class=\"line\">    Console.WriteLine(<span class=\"string\">\"相同引用\"</span>);</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">    Console.WriteLine(<span class=\"string\">\"不同引用\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>执行上面代码将发生两次装箱，因为CheckRef方法的两个参数都是Object类型，传入的都是值类型的实例，可以讲代</p>\n<p>码改进下，先将x转换成Object类型再传入方法，如下:</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    Int32 x = <span class=\"number\">5</span>;</div><div class=\"line\">    Object o = x;</div><div class=\"line\">    CheckRef(o,o);  <span class=\"comment\">//输出相同引用</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CheckRef</span>(<span class=\"params\"><span class=\"keyword\">object</span> obj1, <span class=\"keyword\">object</span> obj2</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (obj1 == obj2)</div><div class=\"line\">    Console.WriteLine(<span class=\"string\">\"相同引用\"</span>);</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">    Console.WriteLine(<span class=\"string\">\"不同引用\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>改进后只进行一次装箱操作了，效率提高了，但是会发现运行的结果也发生了变化，所以这种做法在有些时候是很危险的。</p>\n<p>装箱拆箱操作极大的破环程序的性能，不过在Net2.0中提供了泛型集合类，所以完全可以用List<T> 和Dictionary<Tkey,Tvalue> 来代替 原来1.0中的ArrayList和HashTable，即使是List<Object>也会比ArrayList的性能要好。</p>\n<h2 id=\"系列相关文章\"><a href=\"#系列相关文章\" class=\"headerlink\" title=\"系列相关文章\"></a>系列相关文章</h2><p><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/\">CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型</a><br>CLR Via C# 学习笔记（2） 装箱和拆箱<br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/\">CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/\">CLR Via C# 学习笔记（4） 方法 构造函数</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor/\">CLR Via C# 学习笔记（5） 静态构造函数的性能</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/\">CLR Via C# 学习笔记（6） 方法参数相关（out ref params）</a></p>\n"},{"title":"CLR Via C# 学习笔记（4） 方法 构造函数","date":"2009-07-02T16:00:00.000Z","_content":"\n> 《CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。\n\n构造函数是可以将类型实例初始化为有效状态的特殊方法。构造函数在元数据中通常用.ctor来表示，通过IL代码可以看到。在创建一个类型的实例时，通常分为三步：\n\n1. 为实例的数据字段分配内存。\n2. 创建对象指针和同步索引块。\n3. 调用类型的实例构造器来设置对象的初始状态。\n\n## 引用类型的实例构造器\n\n在创建一个引用类型的对象是，调用类型的实例构造函数之前，会将对象分配的内存做清零处理，就是说在构造函数中没有显示赋值的所有字段都将设置为0或null。\n\n实例构造函数和一般方法不同，他永远都不能被继承，所有以下的关键字也不能用于实例构造函数（virtual new override sealed abstract）。\n\n一个类中如果没有显示定义任何构造函数，C#编译器将定义一个默认的无参构造函数。\n\n抽象（abstract）类的默认构造函数的访问修饰符为protected。\n\n构造函数可以初始化字段，不过在c#语言中提供了一种简单的方法，在定义字段的时候直接赋值以初始化。如下：\n\n```\npublic class User\n{\n    private int _age = 25;\n    private string _name = \"oec2003\";\n}\n```\n\n像上面那样的确很方便，但如果有好几个已经初始化的实例字段和多个重载的构造函数同时存在的情况下，就应该将实例字段的初始化放到一个公共的构造函数中，其他的构造函数通过this来显示调用该构造函数，这样可以减少代码生成的大小，看下面的例子。\n\n```\npublic abstract class User\n{\n    private int _age = 25;\n    private string _name = \"oec2003\";\n    private string _email = \"oec2003@gmail.com\";\n\n    public User(Int32 age)\n    {\n        this._age = age;\n    }\n\n    public User(string name)\n    {\n        this._name = name;\n    }\n\n    public User(Int32 age, String name, String email)\n    {\n        this._age = age;\n        this._name = name;\n        this._email = email;\n    }\n}\n```\n\n正确的写法应该像下面这样\n\n```\npublic abstract class User\n{\n    private int _age;\n    private string _name;\n    private string _email;\n\n    public User()\n    {\n        _age = 25;\n        _name = \"oec2003\";\n        _email = \"oec2003@gmail.com\";\n    }\n\n    public User(Int32 age)\n        : this()\n    {\n        this._age = age;\n    }\n\n    public User(string name)\n        : this()\n    {\n        this._name = name;\n    }\n\n    public User(Int32 age, String name, String email)\n        : this()\n    {\n        this._age = age;\n        this._name = name;\n        this._email = email;\n    }\n}\n```\n\n## 值类型的实例构造函数\n\n值类型的实例构造函数和引用类型的有很大不同，在值类型中不能含有无参的构造函数，如果显式指定无参的构造函数将会出现编译错误。如下面代码会出现编译错误：\n\n```\nstruct User\n{\n    public Int32 _age;\n    public String _name;\n\n    public User()\n    {\n        _age = 25;\n        _name = \"oec2003\";\n    }\n}\n```\n\n值类型不能包含无参的构造函数，也不能在值类型中给字段进行初始化，下面的代码也将不能通过编译。\n\n```\npublic struct User\n{\n    public Int32 _age = 25;\n    public String _name = \"oec2003\";\n}\n```\n\n在值类型中也可以有构造函数，不过该构造函数必须含有参数，而且要初始化所有的字段。含有参数但没有初始化所有字段的构造函数也不能通过编译。看如下代码：\n\n```\npublic struct User\n{\n    public Int32 _age;\n    public String _name;\n    //只初始化了_age\n    public User(Int32 age)\n    {\n        _age = age;\n    }\n    public User(Int32 age, String name)\n    {\n        _age = age;\n        _name = name;\n    }\n}\n```\n\n由此可见如果值类型中显示包含构造函数必须要初始化所有的字段。如果有多个构造函数，每个构造函数也必须保证初始化所有的字段，否则不能通过编译。如果值类型中不包含构造函数，实例化时所有字段将设置为0或null。\n\n## 类型构造函数\n\n类型构造函数也被称为静态构造函数。静态构造函数可以用于引用类型和值类型。和实例构造函数不同的是静态构造函数在一个类型中永远只有一个，并且不能包含参数。静态构造函数中只能初始化静态字段。下面代码分别展示在值类型（和实力构造函数不同，值类型中允许显示定义无参的静态构造函数）和引用类型中的静态构造函数。\n\n```\n//值类型\npublic struct User\n{\n    public static Int32 _age;\n    public static String _name;\n\n    static User()\n    {\n        _age = 25;\n        _name = \"oec2003\";\n    }\n}\n//引用类型\npublic class User\n{\n    public static Int32 _age;\n    public static String _name;\n\n    static User()\n    {\n        _age = 25;\n        _name = \"oec2003\";\n    }\n}\n```\n\n为了防止开发人员编写的代码调用静态构造函数，C#编译器会将静态构造函数定义为私有（private）的，并且不能显示地给静态构造函数添加访问修饰符，如果这么做了会出现编译错误。\n\n上面讲到过在值类型中不能在定义是给实例字段赋值，否则会编译错误，但可以在定义时给静态字段赋值，看下面代码：\n\n```\npublic struct User\n{\n    public static Int32 _age = 25;    //正确 可以初始化静态字段\n    public String _name = \"oec2003\";  //错误 不能初始化实例字段\n}\n```\n\n静态构造函数不应该去调用基类的静态构造函数，因为静态字段是不会被继承到子类中，所以这样做没有意义。\n\n## 系列相关文章\n\n[CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/)\n[CLR Via C# 学习笔记（2） 装箱和拆箱](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/)\n[CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/)\nCLR Via C# 学习笔记（4） 方法 构造函数\n[CLR Via C# 学习笔记（5） 静态构造函数的性能](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor/)\n[CLR Via C# 学习笔记（6） 方法参数相关（out ref params）](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/)\n\n\n","source":"_posts/clr-via-csharp-learning-notes-5-methods-the-constructor.md","raw":"---\ntitle: CLR Via C# 学习笔记（4） 方法 构造函数\ndate: 2009-07-03\ncategories: [CLR Via C#]\ntags: [AspNet, CLR via C#, DotNet]\n---\n\n> 《CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。\n\n构造函数是可以将类型实例初始化为有效状态的特殊方法。构造函数在元数据中通常用.ctor来表示，通过IL代码可以看到。在创建一个类型的实例时，通常分为三步：\n\n1. 为实例的数据字段分配内存。\n2. 创建对象指针和同步索引块。\n3. 调用类型的实例构造器来设置对象的初始状态。\n\n## 引用类型的实例构造器\n\n在创建一个引用类型的对象是，调用类型的实例构造函数之前，会将对象分配的内存做清零处理，就是说在构造函数中没有显示赋值的所有字段都将设置为0或null。\n\n实例构造函数和一般方法不同，他永远都不能被继承，所有以下的关键字也不能用于实例构造函数（virtual new override sealed abstract）。\n\n一个类中如果没有显示定义任何构造函数，C#编译器将定义一个默认的无参构造函数。\n\n抽象（abstract）类的默认构造函数的访问修饰符为protected。\n\n构造函数可以初始化字段，不过在c#语言中提供了一种简单的方法，在定义字段的时候直接赋值以初始化。如下：\n\n```\npublic class User\n{\n    private int _age = 25;\n    private string _name = \"oec2003\";\n}\n```\n\n像上面那样的确很方便，但如果有好几个已经初始化的实例字段和多个重载的构造函数同时存在的情况下，就应该将实例字段的初始化放到一个公共的构造函数中，其他的构造函数通过this来显示调用该构造函数，这样可以减少代码生成的大小，看下面的例子。\n\n```\npublic abstract class User\n{\n    private int _age = 25;\n    private string _name = \"oec2003\";\n    private string _email = \"oec2003@gmail.com\";\n\n    public User(Int32 age)\n    {\n        this._age = age;\n    }\n\n    public User(string name)\n    {\n        this._name = name;\n    }\n\n    public User(Int32 age, String name, String email)\n    {\n        this._age = age;\n        this._name = name;\n        this._email = email;\n    }\n}\n```\n\n正确的写法应该像下面这样\n\n```\npublic abstract class User\n{\n    private int _age;\n    private string _name;\n    private string _email;\n\n    public User()\n    {\n        _age = 25;\n        _name = \"oec2003\";\n        _email = \"oec2003@gmail.com\";\n    }\n\n    public User(Int32 age)\n        : this()\n    {\n        this._age = age;\n    }\n\n    public User(string name)\n        : this()\n    {\n        this._name = name;\n    }\n\n    public User(Int32 age, String name, String email)\n        : this()\n    {\n        this._age = age;\n        this._name = name;\n        this._email = email;\n    }\n}\n```\n\n## 值类型的实例构造函数\n\n值类型的实例构造函数和引用类型的有很大不同，在值类型中不能含有无参的构造函数，如果显式指定无参的构造函数将会出现编译错误。如下面代码会出现编译错误：\n\n```\nstruct User\n{\n    public Int32 _age;\n    public String _name;\n\n    public User()\n    {\n        _age = 25;\n        _name = \"oec2003\";\n    }\n}\n```\n\n值类型不能包含无参的构造函数，也不能在值类型中给字段进行初始化，下面的代码也将不能通过编译。\n\n```\npublic struct User\n{\n    public Int32 _age = 25;\n    public String _name = \"oec2003\";\n}\n```\n\n在值类型中也可以有构造函数，不过该构造函数必须含有参数，而且要初始化所有的字段。含有参数但没有初始化所有字段的构造函数也不能通过编译。看如下代码：\n\n```\npublic struct User\n{\n    public Int32 _age;\n    public String _name;\n    //只初始化了_age\n    public User(Int32 age)\n    {\n        _age = age;\n    }\n    public User(Int32 age, String name)\n    {\n        _age = age;\n        _name = name;\n    }\n}\n```\n\n由此可见如果值类型中显示包含构造函数必须要初始化所有的字段。如果有多个构造函数，每个构造函数也必须保证初始化所有的字段，否则不能通过编译。如果值类型中不包含构造函数，实例化时所有字段将设置为0或null。\n\n## 类型构造函数\n\n类型构造函数也被称为静态构造函数。静态构造函数可以用于引用类型和值类型。和实例构造函数不同的是静态构造函数在一个类型中永远只有一个，并且不能包含参数。静态构造函数中只能初始化静态字段。下面代码分别展示在值类型（和实力构造函数不同，值类型中允许显示定义无参的静态构造函数）和引用类型中的静态构造函数。\n\n```\n//值类型\npublic struct User\n{\n    public static Int32 _age;\n    public static String _name;\n\n    static User()\n    {\n        _age = 25;\n        _name = \"oec2003\";\n    }\n}\n//引用类型\npublic class User\n{\n    public static Int32 _age;\n    public static String _name;\n\n    static User()\n    {\n        _age = 25;\n        _name = \"oec2003\";\n    }\n}\n```\n\n为了防止开发人员编写的代码调用静态构造函数，C#编译器会将静态构造函数定义为私有（private）的，并且不能显示地给静态构造函数添加访问修饰符，如果这么做了会出现编译错误。\n\n上面讲到过在值类型中不能在定义是给实例字段赋值，否则会编译错误，但可以在定义时给静态字段赋值，看下面代码：\n\n```\npublic struct User\n{\n    public static Int32 _age = 25;    //正确 可以初始化静态字段\n    public String _name = \"oec2003\";  //错误 不能初始化实例字段\n}\n```\n\n静态构造函数不应该去调用基类的静态构造函数，因为静态字段是不会被继承到子类中，所以这样做没有意义。\n\n## 系列相关文章\n\n[CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/)\n[CLR Via C# 学习笔记（2） 装箱和拆箱](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/)\n[CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/)\nCLR Via C# 学习笔记（4） 方法 构造函数\n[CLR Via C# 学习笔记（5） 静态构造函数的性能](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor/)\n[CLR Via C# 学习笔记（6） 方法参数相关（out ref params）](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/)\n\n\n","slug":"clr-via-csharp-learning-notes-5-methods-the-constructor","published":1,"updated":"2016-08-16T13:37:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz91f003wxfynuhcfeayj","content":"<blockquote>\n<p>《CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。</p>\n</blockquote>\n<p>构造函数是可以将类型实例初始化为有效状态的特殊方法。构造函数在元数据中通常用.ctor来表示，通过IL代码可以看到。在创建一个类型的实例时，通常分为三步：</p>\n<ol>\n<li>为实例的数据字段分配内存。</li>\n<li>创建对象指针和同步索引块。</li>\n<li>调用类型的实例构造器来设置对象的初始状态。</li>\n</ol>\n<h2 id=\"引用类型的实例构造器\"><a href=\"#引用类型的实例构造器\" class=\"headerlink\" title=\"引用类型的实例构造器\"></a>引用类型的实例构造器</h2><p>在创建一个引用类型的对象是，调用类型的实例构造函数之前，会将对象分配的内存做清零处理，就是说在构造函数中没有显示赋值的所有字段都将设置为0或null。</p>\n<p>实例构造函数和一般方法不同，他永远都不能被继承，所有以下的关键字也不能用于实例构造函数（virtual new override sealed abstract）。</p>\n<p>一个类中如果没有显示定义任何构造函数，C#编译器将定义一个默认的无参构造函数。</p>\n<p>抽象（abstract）类的默认构造函数的访问修饰符为protected。</p>\n<p>构造函数可以初始化字段，不过在c#语言中提供了一种简单的方法，在定义字段的时候直接赋值以初始化。如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">User</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _age = <span class=\"number\">25</span>;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> _name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>像上面那样的确很方便，但如果有好几个已经初始化的实例字段和多个重载的构造函数同时存在的情况下，就应该将实例字段的初始化放到一个公共的构造函数中，其他的构造函数通过this来显示调用该构造函数，这样可以减少代码生成的大小，看下面的例子。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title\">User</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _age = <span class=\"number\">25</span>;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> _name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> _email = <span class=\"string\">\"oec2003@gmail.com\"</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span>(<span class=\"params\">Int32 age</span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._age = age;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span>(<span class=\"params\"><span class=\"keyword\">string</span> name</span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._name = name;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span>(<span class=\"params\">Int32 age, String name, String email</span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._age = age;</div><div class=\"line\">        <span class=\"keyword\">this</span>._name = name;</div><div class=\"line\">        <span class=\"keyword\">this</span>._email = email;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>正确的写法应该像下面这样</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> int _age;</div><div class=\"line\">    <span class=\"keyword\">private</span> string _name;</div><div class=\"line\">    <span class=\"keyword\">private</span> string _email;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> User()</div><div class=\"line\">    &#123;</div><div class=\"line\">        _age = <span class=\"number\">25</span>;</div><div class=\"line\">        _name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">        _email = <span class=\"string\">\"oec2003@gmail.com\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> User(Int32 age)</div><div class=\"line\">        : <span class=\"keyword\">this</span>()</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._age = age;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> User(string name)</div><div class=\"line\">        : <span class=\"keyword\">this</span>()</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._name = name;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> User(Int32 age, String name, String email)</div><div class=\"line\">        : <span class=\"keyword\">this</span>()</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._age = age;</div><div class=\"line\">        <span class=\"keyword\">this</span>._name = name;</div><div class=\"line\">        <span class=\"keyword\">this</span>._email = email;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"值类型的实例构造函数\"><a href=\"#值类型的实例构造函数\" class=\"headerlink\" title=\"值类型的实例构造函数\"></a>值类型的实例构造函数</h2><p>值类型的实例构造函数和引用类型的有很大不同，在值类型中不能含有无参的构造函数，如果显式指定无参的构造函数将会出现编译错误。如下面代码会出现编译错误：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">struct</span> User</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"attribute\">public</span> Int32 _age;</div><div class=\"line\">    <span class=\"attribute\">public</span> String _name;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">public</span> User()</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"attribute\">_age</span> = <span class=\"number\">25</span>;</div><div class=\"line\">        <span class=\"attribute\">_name</span> = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>值类型不能包含无参的构造函数，也不能在值类型中给字段进行初始化，下面的代码也将不能通过编译。</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">struct</span> User</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 _age = <span class=\"number\">25</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> _name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在值类型中也可以有构造函数，不过该构造函数必须含有参数，而且要初始化所有的字段。含有参数但没有初始化所有字段的构造函数也不能通过编译。看如下代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">struct</span> User</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 <span class=\"number\">_</span>age;</div><div class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"number\">_</span>name;</div><div class=\"line\">    <span class=\"comment\">//只初始化了_age</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">(Int32 age)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"number\">_</span>age = age;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">(Int32 age, String name)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"number\">_</span>age = age;</div><div class=\"line\">        <span class=\"number\">_</span>name = name;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>由此可见如果值类型中显示包含构造函数必须要初始化所有的字段。如果有多个构造函数，每个构造函数也必须保证初始化所有的字段，否则不能通过编译。如果值类型中不包含构造函数，实例化时所有字段将设置为0或null。</p>\n<h2 id=\"类型构造函数\"><a href=\"#类型构造函数\" class=\"headerlink\" title=\"类型构造函数\"></a>类型构造函数</h2><p>类型构造函数也被称为静态构造函数。静态构造函数可以用于引用类型和值类型。和实例构造函数不同的是静态构造函数在一个类型中永远只有一个，并且不能包含参数。静态构造函数中只能初始化静态字段。下面代码分别展示在值类型（和实力构造函数不同，值类型中允许显示定义无参的静态构造函数）和引用类型中的静态构造函数。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//值类型</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">struct</span> User</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Int32 _age;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String _name;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">User</span>(<span class=\"params\"></span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        _age = <span class=\"number\">25</span>;</div><div class=\"line\">        _name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//引用类型</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">User</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Int32 _age;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String _name;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">User</span>(<span class=\"params\"></span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        _age = <span class=\"number\">25</span>;</div><div class=\"line\">        _name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>为了防止开发人员编写的代码调用静态构造函数，C#编译器会将静态构造函数定义为私有（private）的，并且不能显示地给静态构造函数添加访问修饰符，如果这么做了会出现编译错误。</p>\n<p>上面讲到过在值类型中不能在定义是给实例字段赋值，否则会编译错误，但可以在定义时给静态字段赋值，看下面代码：</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">struct</span> User</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Int32 _age = <span class=\"number\">25</span>;    <span class=\"comment\">//正确 可以初始化静态字段</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> _name = <span class=\"string\">\"oec2003\"</span>;  <span class=\"comment\">//错误 不能初始化实例字段</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>静态构造函数不应该去调用基类的静态构造函数，因为静态字段是不会被继承到子类中，所以这样做没有意义。</p>\n<h2 id=\"系列相关文章\"><a href=\"#系列相关文章\" class=\"headerlink\" title=\"系列相关文章\"></a>系列相关文章</h2><p><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型</a><br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（2） 装箱和拆箱</a><br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）</a><br>CLR Via C# 学习笔记（4） 方法 构造函数<br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（5） 静态构造函数的性能</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（6） 方法参数相关（out ref params）</a></p>\n","excerpt":"","more":"<blockquote>\n<p>《CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。</p>\n</blockquote>\n<p>构造函数是可以将类型实例初始化为有效状态的特殊方法。构造函数在元数据中通常用.ctor来表示，通过IL代码可以看到。在创建一个类型的实例时，通常分为三步：</p>\n<ol>\n<li>为实例的数据字段分配内存。</li>\n<li>创建对象指针和同步索引块。</li>\n<li>调用类型的实例构造器来设置对象的初始状态。</li>\n</ol>\n<h2 id=\"引用类型的实例构造器\"><a href=\"#引用类型的实例构造器\" class=\"headerlink\" title=\"引用类型的实例构造器\"></a>引用类型的实例构造器</h2><p>在创建一个引用类型的对象是，调用类型的实例构造函数之前，会将对象分配的内存做清零处理，就是说在构造函数中没有显示赋值的所有字段都将设置为0或null。</p>\n<p>实例构造函数和一般方法不同，他永远都不能被继承，所有以下的关键字也不能用于实例构造函数（virtual new override sealed abstract）。</p>\n<p>一个类中如果没有显示定义任何构造函数，C#编译器将定义一个默认的无参构造函数。</p>\n<p>抽象（abstract）类的默认构造函数的访问修饰符为protected。</p>\n<p>构造函数可以初始化字段，不过在c#语言中提供了一种简单的方法，在定义字段的时候直接赋值以初始化。如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">User</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _age = <span class=\"number\">25</span>;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> _name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>像上面那样的确很方便，但如果有好几个已经初始化的实例字段和多个重载的构造函数同时存在的情况下，就应该将实例字段的初始化放到一个公共的构造函数中，其他的构造函数通过this来显示调用该构造函数，这样可以减少代码生成的大小，看下面的例子。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title\">User</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _age = <span class=\"number\">25</span>;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> _name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> _email = <span class=\"string\">\"oec2003@gmail.com\"</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span>(<span class=\"params\">Int32 age</span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._age = age;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span>(<span class=\"params\"><span class=\"keyword\">string</span> name</span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._name = name;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span>(<span class=\"params\">Int32 age, String name, String email</span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._age = age;</div><div class=\"line\">        <span class=\"keyword\">this</span>._name = name;</div><div class=\"line\">        <span class=\"keyword\">this</span>._email = email;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>正确的写法应该像下面这样</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> int _age;</div><div class=\"line\">    <span class=\"keyword\">private</span> string _name;</div><div class=\"line\">    <span class=\"keyword\">private</span> string _email;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> User()</div><div class=\"line\">    &#123;</div><div class=\"line\">        _age = <span class=\"number\">25</span>;</div><div class=\"line\">        _name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">        _email = <span class=\"string\">\"oec2003@gmail.com\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> User(Int32 age)</div><div class=\"line\">        : <span class=\"keyword\">this</span>()</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._age = age;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> User(string name)</div><div class=\"line\">        : <span class=\"keyword\">this</span>()</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._name = name;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> User(Int32 age, String name, String email)</div><div class=\"line\">        : <span class=\"keyword\">this</span>()</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._age = age;</div><div class=\"line\">        <span class=\"keyword\">this</span>._name = name;</div><div class=\"line\">        <span class=\"keyword\">this</span>._email = email;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"值类型的实例构造函数\"><a href=\"#值类型的实例构造函数\" class=\"headerlink\" title=\"值类型的实例构造函数\"></a>值类型的实例构造函数</h2><p>值类型的实例构造函数和引用类型的有很大不同，在值类型中不能含有无参的构造函数，如果显式指定无参的构造函数将会出现编译错误。如下面代码会出现编译错误：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">struct</span> User</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"attribute\">public</span> Int32 _age;</div><div class=\"line\">    <span class=\"attribute\">public</span> String _name;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">public</span> User()</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"attribute\">_age</span> = <span class=\"number\">25</span>;</div><div class=\"line\">        <span class=\"attribute\">_name</span> = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>值类型不能包含无参的构造函数，也不能在值类型中给字段进行初始化，下面的代码也将不能通过编译。</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">struct</span> User</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 _age = <span class=\"number\">25</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> _name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在值类型中也可以有构造函数，不过该构造函数必须含有参数，而且要初始化所有的字段。含有参数但没有初始化所有字段的构造函数也不能通过编译。看如下代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">struct</span> User</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> Int32 <span class=\"number\">_</span>age;</div><div class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"number\">_</span>name;</div><div class=\"line\">    <span class=\"comment\">//只初始化了_age</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">(Int32 age)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"number\">_</span>age = age;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">(Int32 age, String name)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"number\">_</span>age = age;</div><div class=\"line\">        <span class=\"number\">_</span>name = name;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>由此可见如果值类型中显示包含构造函数必须要初始化所有的字段。如果有多个构造函数，每个构造函数也必须保证初始化所有的字段，否则不能通过编译。如果值类型中不包含构造函数，实例化时所有字段将设置为0或null。</p>\n<h2 id=\"类型构造函数\"><a href=\"#类型构造函数\" class=\"headerlink\" title=\"类型构造函数\"></a>类型构造函数</h2><p>类型构造函数也被称为静态构造函数。静态构造函数可以用于引用类型和值类型。和实例构造函数不同的是静态构造函数在一个类型中永远只有一个，并且不能包含参数。静态构造函数中只能初始化静态字段。下面代码分别展示在值类型（和实力构造函数不同，值类型中允许显示定义无参的静态构造函数）和引用类型中的静态构造函数。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//值类型</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">struct</span> User</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Int32 _age;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String _name;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">User</span>(<span class=\"params\"></span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        _age = <span class=\"number\">25</span>;</div><div class=\"line\">        _name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//引用类型</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">User</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Int32 _age;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String _name;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">User</span>(<span class=\"params\"></span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        _age = <span class=\"number\">25</span>;</div><div class=\"line\">        _name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>为了防止开发人员编写的代码调用静态构造函数，C#编译器会将静态构造函数定义为私有（private）的，并且不能显示地给静态构造函数添加访问修饰符，如果这么做了会出现编译错误。</p>\n<p>上面讲到过在值类型中不能在定义是给实例字段赋值，否则会编译错误，但可以在定义时给静态字段赋值，看下面代码：</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">struct</span> User</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Int32 _age = <span class=\"number\">25</span>;    <span class=\"comment\">//正确 可以初始化静态字段</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">String</span> _name = <span class=\"string\">\"oec2003\"</span>;  <span class=\"comment\">//错误 不能初始化实例字段</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>静态构造函数不应该去调用基类的静态构造函数，因为静态字段是不会被继承到子类中，所以这样做没有意义。</p>\n<h2 id=\"系列相关文章\"><a href=\"#系列相关文章\" class=\"headerlink\" title=\"系列相关文章\"></a>系列相关文章</h2><p><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/\">CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型</a><br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/\">CLR Via C# 学习笔记（2） 装箱和拆箱</a><br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/\">CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）</a><br>CLR Via C# 学习笔记（4） 方法 构造函数<br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor/\">CLR Via C# 学习笔记（5） 静态构造函数的性能</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/\">CLR Via C# 学习笔记（6） 方法参数相关（out ref params）</a></p>\n"},{"title":"CLR Via C# 学习笔记（5） 静态构造函数的性能","date":"2009-07-07T16:00:00.000Z","_content":"\n> CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。\n\n在上一篇《CLR Via C# 学习笔记（4） 方法 构造函数 》中讲到了一些静态构造函数方面的知识，现在也回顾一下，大概总结如下：\n\n1. 静态构造函数是私有的（private） ，而且不能人为去修改访问修饰符。\n2. 静态构造函数不应该去调用基类的静态构造函数，因为静态字段不会被继承到子类。\n3. 静态构造函数在一个类型中有且仅有一个，并且是无参的。\n4. 静态构造函数中只能初始化静态字段。\n\n从上面的第一点可以知道静态构造函数都是private的，所以不能显示区进行调用，关于JIT何时会去生成调用静态构造函数的代码。存在着两种说法。通常被称为Precise和BeforeFieldInit。\n\n1. Precise方式JIT编译器生成调用的时机：首次创建类型的代码之前；访问类的非继承字段或成员代码之前。\n2. BeforeFieldInit方式JIT编译器生成调用的时机：在访问费继承静态字段代码之前。\n\n这两种方式的主要区别就是选择调用静态构造函数的时机是否是确定的，Precise方式CLR会在确定的时刻调用静态构造函数，而BeforeFieldInit方式CLR可以自由选择调用静态构造函数的时机，利用这一点，CLR可以根据类型是否在程序域中加载来选择静态构造函数的调用次数，以便能生成执行更快的代码。\n\n下面来看来个类分别展现了这两种方式\n\n```\npublic classUserPrecise\n{\n    public static string_name = \"内联赋值：oec2003\";\n    staticUserPrecise()\n    {\n        _name = \"构造函数赋值：oec2003\";\n    }\n}\npublic classUserBeforeFieldInit\n{\n    public static string_name = \"内联赋值：oec2003\";\n}\n```\n\n通过IL代码可以看出在UserBeforeFieldInit 的元数据上有BeforeFieldInit的标记，如下图：\n\n![2010-12-29_173428](http://oec2003.qiniudn.com/2010-12-29_173428.gif)\n\n既然上面提到BeforeFieldInit方式CLR可以选择调用构造函数的次数从而来生成执行更快的代码，下面就写一段测试代码来看看究竟怎样。\n\n```\npublic sealed class Program\n{\n    static void Main(string[] args)\n    {\n        const Int32 iterations = 1000 * 1000 * 1000;\n        Test1(iterations);\n        Test2(iterations);\n    }\n\n    private static void Test1(Int32 iterations)\n    {\n        Stopwatch sw = Stopwatch.StartNew();\n        for (Int32 i = 0; i < iterations; i++)\n        {\n            UserBeforeFieldInit._name = \"oec2003\";\n        }\n        Console.WriteLine(\"Test1-UserBeforeFieldInit 用时：\" + sw.Elapsed);\n\n        sw = Stopwatch.StartNew();\n        for (Int32 j = 0; j < iterations; j++)\n        {\n            UserPrecise._name = \"oec2003\";\n        }\n        Console.WriteLine(\"Test1-UserPrecise 用时：\" + sw.Elapsed);\n    }\n\n    private static void Test2(Int32 iterations)\n    {\n        Stopwatch sw = Stopwatch.StartNew();\n        for (Int32 i = 0; i < iterations; i++)\n        {\n            UserBeforeFieldInit._name = \"oec2003\";\n        }\n        Console.WriteLine(\"Test2-UserBeforeFieldInit 用时：\" + sw.Elapsed);\n\n        sw = Stopwatch.StartNew();\n        for (Int32 j = 0; j < iterations; j++)\n        {\n            UserPrecise._name = \"oec2003\";\n        }\n        Console.WriteLine(\"Test2-UserPrecise 用时：\" + sw.Elapsed);\n    }\n}\n\npublic class UserBeforeFieldInit\n{\n    public static string _name;\n}\n\npublic class UserPrecise\n{\n    public static string _name;\n\n    static UserPrecise()\n    {\n        _name = \"oec2003\";\n    }\n}\n```\n\n测试结果如下：\n\n![2010-12-29_173503](http://oec2003.qiniudn.com/2010-12-29_173503.gif)\n\n从上面结果来看，BeforeFieldInit方式的执行速度还是要快很多，但为什么第二次执行时，两种方式的速度差不多呢?因为经过第一次执行后JIT编译器知道类型的构造器已经被调用了，所以第二次执行时不会显示对构造函数进行调用。\n\n## 系列相关文章\n\n[CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/)\n[CLR Via C# 学习笔记（2） 装箱和拆箱](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/)\n[CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/)\n[CLR Via C# 学习笔记（4） 方法 构造函数](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/)\nCLR Via C# 学习笔记（5） 静态构造函数的性能\n[CLR Via C# 学习笔记（6） 方法参数相关（out ref params）](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/)\n\n\n\n","source":"_posts/clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor.md","raw":"---\ntitle: CLR Via C# 学习笔记（5） 静态构造函数的性能\ndate: 2009-07-08\ncategories: [CLR Via C#]\ntags: [AspNet, CLR via C#]\n---\n\n> CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。\n\n在上一篇《CLR Via C# 学习笔记（4） 方法 构造函数 》中讲到了一些静态构造函数方面的知识，现在也回顾一下，大概总结如下：\n\n1. 静态构造函数是私有的（private） ，而且不能人为去修改访问修饰符。\n2. 静态构造函数不应该去调用基类的静态构造函数，因为静态字段不会被继承到子类。\n3. 静态构造函数在一个类型中有且仅有一个，并且是无参的。\n4. 静态构造函数中只能初始化静态字段。\n\n从上面的第一点可以知道静态构造函数都是private的，所以不能显示区进行调用，关于JIT何时会去生成调用静态构造函数的代码。存在着两种说法。通常被称为Precise和BeforeFieldInit。\n\n1. Precise方式JIT编译器生成调用的时机：首次创建类型的代码之前；访问类的非继承字段或成员代码之前。\n2. BeforeFieldInit方式JIT编译器生成调用的时机：在访问费继承静态字段代码之前。\n\n这两种方式的主要区别就是选择调用静态构造函数的时机是否是确定的，Precise方式CLR会在确定的时刻调用静态构造函数，而BeforeFieldInit方式CLR可以自由选择调用静态构造函数的时机，利用这一点，CLR可以根据类型是否在程序域中加载来选择静态构造函数的调用次数，以便能生成执行更快的代码。\n\n下面来看来个类分别展现了这两种方式\n\n```\npublic classUserPrecise\n{\n    public static string_name = \"内联赋值：oec2003\";\n    staticUserPrecise()\n    {\n        _name = \"构造函数赋值：oec2003\";\n    }\n}\npublic classUserBeforeFieldInit\n{\n    public static string_name = \"内联赋值：oec2003\";\n}\n```\n\n通过IL代码可以看出在UserBeforeFieldInit 的元数据上有BeforeFieldInit的标记，如下图：\n\n![2010-12-29_173428](http://oec2003.qiniudn.com/2010-12-29_173428.gif)\n\n既然上面提到BeforeFieldInit方式CLR可以选择调用构造函数的次数从而来生成执行更快的代码，下面就写一段测试代码来看看究竟怎样。\n\n```\npublic sealed class Program\n{\n    static void Main(string[] args)\n    {\n        const Int32 iterations = 1000 * 1000 * 1000;\n        Test1(iterations);\n        Test2(iterations);\n    }\n\n    private static void Test1(Int32 iterations)\n    {\n        Stopwatch sw = Stopwatch.StartNew();\n        for (Int32 i = 0; i < iterations; i++)\n        {\n            UserBeforeFieldInit._name = \"oec2003\";\n        }\n        Console.WriteLine(\"Test1-UserBeforeFieldInit 用时：\" + sw.Elapsed);\n\n        sw = Stopwatch.StartNew();\n        for (Int32 j = 0; j < iterations; j++)\n        {\n            UserPrecise._name = \"oec2003\";\n        }\n        Console.WriteLine(\"Test1-UserPrecise 用时：\" + sw.Elapsed);\n    }\n\n    private static void Test2(Int32 iterations)\n    {\n        Stopwatch sw = Stopwatch.StartNew();\n        for (Int32 i = 0; i < iterations; i++)\n        {\n            UserBeforeFieldInit._name = \"oec2003\";\n        }\n        Console.WriteLine(\"Test2-UserBeforeFieldInit 用时：\" + sw.Elapsed);\n\n        sw = Stopwatch.StartNew();\n        for (Int32 j = 0; j < iterations; j++)\n        {\n            UserPrecise._name = \"oec2003\";\n        }\n        Console.WriteLine(\"Test2-UserPrecise 用时：\" + sw.Elapsed);\n    }\n}\n\npublic class UserBeforeFieldInit\n{\n    public static string _name;\n}\n\npublic class UserPrecise\n{\n    public static string _name;\n\n    static UserPrecise()\n    {\n        _name = \"oec2003\";\n    }\n}\n```\n\n测试结果如下：\n\n![2010-12-29_173503](http://oec2003.qiniudn.com/2010-12-29_173503.gif)\n\n从上面结果来看，BeforeFieldInit方式的执行速度还是要快很多，但为什么第二次执行时，两种方式的速度差不多呢?因为经过第一次执行后JIT编译器知道类型的构造器已经被调用了，所以第二次执行时不会显示对构造函数进行调用。\n\n## 系列相关文章\n\n[CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/)\n[CLR Via C# 学习笔记（2） 装箱和拆箱](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/)\n[CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/)\n[CLR Via C# 学习笔记（4） 方法 构造函数](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/)\nCLR Via C# 学习笔记（5） 静态构造函数的性能\n[CLR Via C# 学习笔记（6） 方法参数相关（out ref params）](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/)\n\n\n\n","slug":"clr-via-csharp-learning-notes-5-the-performance-of-the-static-constructor","published":1,"updated":"2016-08-16T13:42:50.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz91i0040xfynfjcgj6q0","content":"<blockquote>\n<p>CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。</p>\n</blockquote>\n<p>在上一篇《CLR Via C# 学习笔记（4） 方法 构造函数 》中讲到了一些静态构造函数方面的知识，现在也回顾一下，大概总结如下：</p>\n<ol>\n<li>静态构造函数是私有的（private） ，而且不能人为去修改访问修饰符。</li>\n<li>静态构造函数不应该去调用基类的静态构造函数，因为静态字段不会被继承到子类。</li>\n<li>静态构造函数在一个类型中有且仅有一个，并且是无参的。</li>\n<li>静态构造函数中只能初始化静态字段。</li>\n</ol>\n<p>从上面的第一点可以知道静态构造函数都是private的，所以不能显示区进行调用，关于JIT何时会去生成调用静态构造函数的代码。存在着两种说法。通常被称为Precise和BeforeFieldInit。</p>\n<ol>\n<li>Precise方式JIT编译器生成调用的时机：首次创建类型的代码之前；访问类的非继承字段或成员代码之前。</li>\n<li>BeforeFieldInit方式JIT编译器生成调用的时机：在访问费继承静态字段代码之前。</li>\n</ol>\n<p>这两种方式的主要区别就是选择调用静态构造函数的时机是否是确定的，Precise方式CLR会在确定的时刻调用静态构造函数，而BeforeFieldInit方式CLR可以自由选择调用静态构造函数的时机，利用这一点，CLR可以根据类型是否在程序域中加载来选择静态构造函数的调用次数，以便能生成执行更快的代码。</p>\n<p>下面来看来个类分别展现了这两种方式</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> classUserPrecise</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> string_name = <span class=\"string\">\"内联赋值：oec2003\"</span>;</div><div class=\"line\">    staticUserPrecise()</div><div class=\"line\">    &#123;</div><div class=\"line\">        _name = <span class=\"string\">\"构造函数赋值：oec2003\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> classUserBeforeFieldInit</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> string_name = <span class=\"string\">\"内联赋值：oec2003\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>通过IL代码可以看出在UserBeforeFieldInit 的元数据上有BeforeFieldInit的标记，如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_173428.gif\" alt=\"2010-12-29_173428\"></p>\n<p>既然上面提到BeforeFieldInit方式CLR可以选择调用构造函数的次数从而来生成执行更快的代码，下面就写一段测试代码来看看究竟怎样。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">sealed</span> <span class=\"keyword\">class</span> <span class=\"title\">Program</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> Int32 iterations = <span class=\"number\">1000</span> * <span class=\"number\">1000</span> * <span class=\"number\">1000</span>;</div><div class=\"line\">        Test1(iterations);</div><div class=\"line\">        Test2(iterations);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Test1</span>(<span class=\"params\">Int32 iterations</span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        Stopwatch sw = Stopwatch.StartNew();</div><div class=\"line\">        <span class=\"keyword\">for</span> (Int32 i = <span class=\"number\">0</span>; i &lt; iterations; i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            UserBeforeFieldInit._name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        Console.WriteLine(<span class=\"string\">\"Test1-UserBeforeFieldInit 用时：\"</span> + sw.Elapsed);</div><div class=\"line\"></div><div class=\"line\">        sw = Stopwatch.StartNew();</div><div class=\"line\">        <span class=\"keyword\">for</span> (Int32 j = <span class=\"number\">0</span>; j &lt; iterations; j++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            UserPrecise._name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        Console.WriteLine(<span class=\"string\">\"Test1-UserPrecise 用时：\"</span> + sw.Elapsed);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Test2</span>(<span class=\"params\">Int32 iterations</span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        Stopwatch sw = Stopwatch.StartNew();</div><div class=\"line\">        <span class=\"keyword\">for</span> (Int32 i = <span class=\"number\">0</span>; i &lt; iterations; i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            UserBeforeFieldInit._name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        Console.WriteLine(<span class=\"string\">\"Test2-UserBeforeFieldInit 用时：\"</span> + sw.Elapsed);</div><div class=\"line\"></div><div class=\"line\">        sw = Stopwatch.StartNew();</div><div class=\"line\">        <span class=\"keyword\">for</span> (Int32 j = <span class=\"number\">0</span>; j &lt; iterations; j++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            UserPrecise._name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        Console.WriteLine(<span class=\"string\">\"Test2-UserPrecise 用时：\"</span> + sw.Elapsed);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserBeforeFieldInit</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">string</span> _name;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserPrecise</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">string</span> _name;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">UserPrecise</span>(<span class=\"params\"></span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        _name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>测试结果如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_173503.gif\" alt=\"2010-12-29_173503\"></p>\n<p>从上面结果来看，BeforeFieldInit方式的执行速度还是要快很多，但为什么第二次执行时，两种方式的速度差不多呢?因为经过第一次执行后JIT编译器知道类型的构造器已经被调用了，所以第二次执行时不会显示对构造函数进行调用。</p>\n<h2 id=\"系列相关文章\"><a href=\"#系列相关文章\" class=\"headerlink\" title=\"系列相关文章\"></a>系列相关文章</h2><p><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型</a><br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（2） 装箱和拆箱</a><br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（4） 方法 构造函数</a><br>CLR Via C# 学习笔记（5） 静态构造函数的性能<br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（6） 方法参数相关（out ref params）</a></p>\n","excerpt":"","more":"<blockquote>\n<p>CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。</p>\n</blockquote>\n<p>在上一篇《CLR Via C# 学习笔记（4） 方法 构造函数 》中讲到了一些静态构造函数方面的知识，现在也回顾一下，大概总结如下：</p>\n<ol>\n<li>静态构造函数是私有的（private） ，而且不能人为去修改访问修饰符。</li>\n<li>静态构造函数不应该去调用基类的静态构造函数，因为静态字段不会被继承到子类。</li>\n<li>静态构造函数在一个类型中有且仅有一个，并且是无参的。</li>\n<li>静态构造函数中只能初始化静态字段。</li>\n</ol>\n<p>从上面的第一点可以知道静态构造函数都是private的，所以不能显示区进行调用，关于JIT何时会去生成调用静态构造函数的代码。存在着两种说法。通常被称为Precise和BeforeFieldInit。</p>\n<ol>\n<li>Precise方式JIT编译器生成调用的时机：首次创建类型的代码之前；访问类的非继承字段或成员代码之前。</li>\n<li>BeforeFieldInit方式JIT编译器生成调用的时机：在访问费继承静态字段代码之前。</li>\n</ol>\n<p>这两种方式的主要区别就是选择调用静态构造函数的时机是否是确定的，Precise方式CLR会在确定的时刻调用静态构造函数，而BeforeFieldInit方式CLR可以自由选择调用静态构造函数的时机，利用这一点，CLR可以根据类型是否在程序域中加载来选择静态构造函数的调用次数，以便能生成执行更快的代码。</p>\n<p>下面来看来个类分别展现了这两种方式</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> classUserPrecise</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> string_name = <span class=\"string\">\"内联赋值：oec2003\"</span>;</div><div class=\"line\">    staticUserPrecise()</div><div class=\"line\">    &#123;</div><div class=\"line\">        _name = <span class=\"string\">\"构造函数赋值：oec2003\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> classUserBeforeFieldInit</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> string_name = <span class=\"string\">\"内联赋值：oec2003\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>通过IL代码可以看出在UserBeforeFieldInit 的元数据上有BeforeFieldInit的标记，如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_173428.gif\" alt=\"2010-12-29_173428\"></p>\n<p>既然上面提到BeforeFieldInit方式CLR可以选择调用构造函数的次数从而来生成执行更快的代码，下面就写一段测试代码来看看究竟怎样。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">sealed</span> <span class=\"keyword\">class</span> <span class=\"title\">Program</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> Int32 iterations = <span class=\"number\">1000</span> * <span class=\"number\">1000</span> * <span class=\"number\">1000</span>;</div><div class=\"line\">        Test1(iterations);</div><div class=\"line\">        Test2(iterations);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Test1</span>(<span class=\"params\">Int32 iterations</span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        Stopwatch sw = Stopwatch.StartNew();</div><div class=\"line\">        <span class=\"keyword\">for</span> (Int32 i = <span class=\"number\">0</span>; i &lt; iterations; i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            UserBeforeFieldInit._name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        Console.WriteLine(<span class=\"string\">\"Test1-UserBeforeFieldInit 用时：\"</span> + sw.Elapsed);</div><div class=\"line\"></div><div class=\"line\">        sw = Stopwatch.StartNew();</div><div class=\"line\">        <span class=\"keyword\">for</span> (Int32 j = <span class=\"number\">0</span>; j &lt; iterations; j++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            UserPrecise._name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        Console.WriteLine(<span class=\"string\">\"Test1-UserPrecise 用时：\"</span> + sw.Elapsed);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Test2</span>(<span class=\"params\">Int32 iterations</span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        Stopwatch sw = Stopwatch.StartNew();</div><div class=\"line\">        <span class=\"keyword\">for</span> (Int32 i = <span class=\"number\">0</span>; i &lt; iterations; i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            UserBeforeFieldInit._name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        Console.WriteLine(<span class=\"string\">\"Test2-UserBeforeFieldInit 用时：\"</span> + sw.Elapsed);</div><div class=\"line\"></div><div class=\"line\">        sw = Stopwatch.StartNew();</div><div class=\"line\">        <span class=\"keyword\">for</span> (Int32 j = <span class=\"number\">0</span>; j &lt; iterations; j++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            UserPrecise._name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        Console.WriteLine(<span class=\"string\">\"Test2-UserPrecise 用时：\"</span> + sw.Elapsed);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserBeforeFieldInit</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">string</span> _name;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">UserPrecise</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">string</span> _name;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"title\">UserPrecise</span>(<span class=\"params\"></span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        _name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>测试结果如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_173503.gif\" alt=\"2010-12-29_173503\"></p>\n<p>从上面结果来看，BeforeFieldInit方式的执行速度还是要快很多，但为什么第二次执行时，两种方式的速度差不多呢?因为经过第一次执行后JIT编译器知道类型的构造器已经被调用了，所以第二次执行时不会显示对构造函数进行调用。</p>\n<h2 id=\"系列相关文章\"><a href=\"#系列相关文章\" class=\"headerlink\" title=\"系列相关文章\"></a>系列相关文章</h2><p><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/\">CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型</a><br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/\">CLR Via C# 学习笔记（2） 装箱和拆箱</a><br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/\">CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/\">CLR Via C# 学习笔记（4） 方法 构造函数</a><br>CLR Via C# 学习笔记（5） 静态构造函数的性能<br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/\">CLR Via C# 学习笔记（6） 方法参数相关（out ref params）</a></p>\n"},{"title":"CLR Via C# 学习笔记（6） 方法参数相关（out ref params）","date":"2009-07-15T16:00:00.000Z","_content":"\n> CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。\n\n通常我们在使用方法的时候，方法的参数是按值传递的，如果传递的参数是引用类型的对象，是将引用对象的地址传给方法。如果传递的是值类型实例，传递给方法的是该实例的一个副本。允许使用在方法中按引用来传递参数，C#中使用out和ref关键字来体现。下面就来介绍out和ref的使用。\n\n## out\n\n1 使用out时在方法的参数定义和方法的调用时都要用out关键字，如下：\n\n```\nstatic void Main(string[] args)\n{\n    string name = string.Empty;\n    GetStr(out name); //调用时加out\n    Console.WriteLine(name);\n}\nprivate static void GetStr(out string name) //方法参数定义时的out\n{\n    name = \"oec2003\";\n}\n```\n\n2 如果一个方法有out修饰的参数，在方法结束前必须给给参数赋值，否则不能通过编译，代码如下：\n\n```\nstatic void Main(string[] args)\n{\n    string name = \"oec2003\";\n    GetStr(out name);\n    Console.WriteLine(name);\n}\nprivate static void GetStr(out string name)\n{\n    //没有给name赋值，编译时会出现“控制离开当前方法之前必须对\n    //out 参数“name”赋值”异常\n}\n```\n\n3 在调用有out参数的方法时，没有必要给out参数赋初始值，因为赋的值不会传递到方法的内部，如果在方法的内部要强行使用out参数会有编译错误。代码如下：\n\n```\nstatic void Main(string[] args)\n{\n    //给out参数name赋初始值oec2003\n    string name = \"oec2003\";\n    GetStr(out name);\n    Console.WriteLine(name);\n}\nprivate static void GetStr(out string name)\n{\n    name = \"hello\" + name;\n    //name在调用前虽赋值为oec2003 ，\n    //但此处会报错“使用了未赋值的 out 参数name”\n}\n```\n\n4 通常我们需要在一个方法中返回多个值的时候就可以使用out参数。\n\n5 如果两个方法的参数个数和类型都相同，区别只是其中一个为out参数，那么这两个方法是可以进行重载的，下面的代码可以正常运行。\n\n```\nprivate static void GetStr(out string name)\n{\n    name = \"oec2003\";\n}\nprivate static void GetStr(string name)\n{\n    name = \"oec2003\";\n}\n```\n\n## ref\n\n1 和out参数一样，使用ref时在方法的参数定义和方法的调用时都要用ref关键字。\n\n2 如果调用方法前，ref参数没有赋初始值，不能通过编译，看如下代码：\n\n```\nstatic void Main(string[] args)\n{\n    string name;\n    GetStr(ref name); //如果name没有赋值不能通过编译\n    Console.WriteLine(name);\n}\nprivate static void GetStr(ref string name)\n{\n    name = \"oec2003\";\n}\n```\n\n3 和out不同的是ref参数的值可以传入方法内进行操作。\n\n```\nstatic void Main(string[] args)\n{\n    string name=\"oec2003\";\n    GetStr(ref name);\n    Console.WriteLine(name);//返回：hello oec2003\n}\nprivate static void GetStr(ref string name)\n{\n    name = \"hello \" + name;\n}\n``` \n\n4 因为ref在传入方法时会有初始值，所以在方法的内部可以不对ref参数进行任何的操作，那样ref参数的值不会改变。\n\n```\nstatic void Main(string[] args)\n{\n    string name=\"oec2003\";\n    GetStr(ref name);\n    Console.WriteLine(name);//在方法中没有操作，仍然返回oec2003\n}\nprivate static void GetStr(ref string name)\n{\n\n}\n```\n\n5 同out参数一样，如果两个方法的参数个数和类型都一样，仅有的区别只是其中之一的参数为ref参数，两个可以进行重载。\n\n对于CLR来说，关键字out和关键字ref是等价的，就是说无论使用的out还是ref，都会生成相同的IL代码，正因为如此，如果两个方法的差异仅仅是out和ref的差异，那么这两个方法是不能进行重载的，如下代码：\n\n```\n//下面代码编译会报“不能定义仅在 ref 和 out 上有差别的重载方法”异常\nprivate static void GetStr(ref string name)\n{\n    name = \"oec2003\";\n}\nprivate static void GetStr(out string name)\n{\n    name = \"oec2003\";\n}\n```\n\n## 可变数量的参数\n\n有些时候如果一个方法的参数数量可以根据用户的需要而进行变动，那将会带来很大的方便。像String类型的Concat、Format等方法就提供了可变参数。可以变参数在C#中使用params来定义，如下面代码：\n\n```\nstatic void Main(string[] args)\n{\n    Console.WriteLine(Add(1,2,3,4));\n}\npublic static int Add(params int[] num)\n{\n    int sum = 0;\n    foreach (int i in num)\n    {\n        sum += i;\n    }\n    return sum;\n}\n```\n\n使用可变参数非常简单，需要注意的是可变参数的类型一定要是数组类型。可变参数虽然很好用，但是接受可变参数的方法在调用时会导致一些性能损失，以为数组对象必须分配在堆上，数组的内存最终需要GC来回收。为了避免这种性能的损耗，我们在写方法的时候可以多定义几个没有params关键字的方法的重载，这样只有在很特殊的情况下才会使用有params关键字的方法。C#中的一些类的方法也是这么做的，如下图：\n\n![2010-12-29_165108](http://oec2003.qiniudn.com/2010-12-29_165108.gif)\n\n## 方法的参数类型\n\n声明方法参数类型时，应尽可能只用弱的类型，例如如果要编写一个操作一组数据项的方法，最好使用接口（如Ienumerable）来定义方法参数的类型，而不要使用一些强的数据类型如List或是一些强的接口类型（如Ilist或Icollection），如下：\n\n```\n//使用的弱类型参数\nprivate void OperateCollection<T>(IEnumerable<T> collection)\n{ \n\n}\n//使用的强类型参数\nprivate void OperateCollection<T>(List<T> collection)\n{\n\n}\n```\n\n此处所指的强类型和弱类型，可以理解为类型的层次，如果说父类的层次高于子类，那么层次越高就类型越弱。Iemumerable接口直接在 System.Collections 命名空间下，是其他一些集合类和接口（如Icollection IList List等）的基类，所以定义参数为IEnumerable 类型的，凡是继承了IEnumerable 的类型的参数都能够传入方法，大大提高了灵活性。\n\n## 系列相关文章\n\n[CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/)\n[CLR Via C# 学习笔记（2） 装箱和拆箱](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/)\n[CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/)\n[CLR Via C# 学习笔记（4） 方法 构造函数](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/)\nCLR Via C# 学习笔记（5） 静态构造函数的性能\n[CLR Via C# 学习笔记（6） 方法参数相关（out ref params）](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/)\n\n\n","source":"_posts/clr-via-csharp-learning-notes-6-the-method-parameters-related.md","raw":"---\ntitle: CLR Via C# 学习笔记（6） 方法参数相关（out ref params）\ndate: 2009-07-16\ncategories: [CLR Via C#]\ntags: [CLR via C#, DotNet]\n---\n\n> CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。\n\n通常我们在使用方法的时候，方法的参数是按值传递的，如果传递的参数是引用类型的对象，是将引用对象的地址传给方法。如果传递的是值类型实例，传递给方法的是该实例的一个副本。允许使用在方法中按引用来传递参数，C#中使用out和ref关键字来体现。下面就来介绍out和ref的使用。\n\n## out\n\n1 使用out时在方法的参数定义和方法的调用时都要用out关键字，如下：\n\n```\nstatic void Main(string[] args)\n{\n    string name = string.Empty;\n    GetStr(out name); //调用时加out\n    Console.WriteLine(name);\n}\nprivate static void GetStr(out string name) //方法参数定义时的out\n{\n    name = \"oec2003\";\n}\n```\n\n2 如果一个方法有out修饰的参数，在方法结束前必须给给参数赋值，否则不能通过编译，代码如下：\n\n```\nstatic void Main(string[] args)\n{\n    string name = \"oec2003\";\n    GetStr(out name);\n    Console.WriteLine(name);\n}\nprivate static void GetStr(out string name)\n{\n    //没有给name赋值，编译时会出现“控制离开当前方法之前必须对\n    //out 参数“name”赋值”异常\n}\n```\n\n3 在调用有out参数的方法时，没有必要给out参数赋初始值，因为赋的值不会传递到方法的内部，如果在方法的内部要强行使用out参数会有编译错误。代码如下：\n\n```\nstatic void Main(string[] args)\n{\n    //给out参数name赋初始值oec2003\n    string name = \"oec2003\";\n    GetStr(out name);\n    Console.WriteLine(name);\n}\nprivate static void GetStr(out string name)\n{\n    name = \"hello\" + name;\n    //name在调用前虽赋值为oec2003 ，\n    //但此处会报错“使用了未赋值的 out 参数name”\n}\n```\n\n4 通常我们需要在一个方法中返回多个值的时候就可以使用out参数。\n\n5 如果两个方法的参数个数和类型都相同，区别只是其中一个为out参数，那么这两个方法是可以进行重载的，下面的代码可以正常运行。\n\n```\nprivate static void GetStr(out string name)\n{\n    name = \"oec2003\";\n}\nprivate static void GetStr(string name)\n{\n    name = \"oec2003\";\n}\n```\n\n## ref\n\n1 和out参数一样，使用ref时在方法的参数定义和方法的调用时都要用ref关键字。\n\n2 如果调用方法前，ref参数没有赋初始值，不能通过编译，看如下代码：\n\n```\nstatic void Main(string[] args)\n{\n    string name;\n    GetStr(ref name); //如果name没有赋值不能通过编译\n    Console.WriteLine(name);\n}\nprivate static void GetStr(ref string name)\n{\n    name = \"oec2003\";\n}\n```\n\n3 和out不同的是ref参数的值可以传入方法内进行操作。\n\n```\nstatic void Main(string[] args)\n{\n    string name=\"oec2003\";\n    GetStr(ref name);\n    Console.WriteLine(name);//返回：hello oec2003\n}\nprivate static void GetStr(ref string name)\n{\n    name = \"hello \" + name;\n}\n``` \n\n4 因为ref在传入方法时会有初始值，所以在方法的内部可以不对ref参数进行任何的操作，那样ref参数的值不会改变。\n\n```\nstatic void Main(string[] args)\n{\n    string name=\"oec2003\";\n    GetStr(ref name);\n    Console.WriteLine(name);//在方法中没有操作，仍然返回oec2003\n}\nprivate static void GetStr(ref string name)\n{\n\n}\n```\n\n5 同out参数一样，如果两个方法的参数个数和类型都一样，仅有的区别只是其中之一的参数为ref参数，两个可以进行重载。\n\n对于CLR来说，关键字out和关键字ref是等价的，就是说无论使用的out还是ref，都会生成相同的IL代码，正因为如此，如果两个方法的差异仅仅是out和ref的差异，那么这两个方法是不能进行重载的，如下代码：\n\n```\n//下面代码编译会报“不能定义仅在 ref 和 out 上有差别的重载方法”异常\nprivate static void GetStr(ref string name)\n{\n    name = \"oec2003\";\n}\nprivate static void GetStr(out string name)\n{\n    name = \"oec2003\";\n}\n```\n\n## 可变数量的参数\n\n有些时候如果一个方法的参数数量可以根据用户的需要而进行变动，那将会带来很大的方便。像String类型的Concat、Format等方法就提供了可变参数。可以变参数在C#中使用params来定义，如下面代码：\n\n```\nstatic void Main(string[] args)\n{\n    Console.WriteLine(Add(1,2,3,4));\n}\npublic static int Add(params int[] num)\n{\n    int sum = 0;\n    foreach (int i in num)\n    {\n        sum += i;\n    }\n    return sum;\n}\n```\n\n使用可变参数非常简单，需要注意的是可变参数的类型一定要是数组类型。可变参数虽然很好用，但是接受可变参数的方法在调用时会导致一些性能损失，以为数组对象必须分配在堆上，数组的内存最终需要GC来回收。为了避免这种性能的损耗，我们在写方法的时候可以多定义几个没有params关键字的方法的重载，这样只有在很特殊的情况下才会使用有params关键字的方法。C#中的一些类的方法也是这么做的，如下图：\n\n![2010-12-29_165108](http://oec2003.qiniudn.com/2010-12-29_165108.gif)\n\n## 方法的参数类型\n\n声明方法参数类型时，应尽可能只用弱的类型，例如如果要编写一个操作一组数据项的方法，最好使用接口（如Ienumerable）来定义方法参数的类型，而不要使用一些强的数据类型如List或是一些强的接口类型（如Ilist或Icollection），如下：\n\n```\n//使用的弱类型参数\nprivate void OperateCollection<T>(IEnumerable<T> collection)\n{ \n\n}\n//使用的强类型参数\nprivate void OperateCollection<T>(List<T> collection)\n{\n\n}\n```\n\n此处所指的强类型和弱类型，可以理解为类型的层次，如果说父类的层次高于子类，那么层次越高就类型越弱。Iemumerable接口直接在 System.Collections 命名空间下，是其他一些集合类和接口（如Icollection IList List等）的基类，所以定义参数为IEnumerable 类型的，凡是继承了IEnumerable 的类型的参数都能够传入方法，大大提高了灵活性。\n\n## 系列相关文章\n\n[CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/)\n[CLR Via C# 学习笔记（2） 装箱和拆箱](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/)\n[CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）](http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/)\n[CLR Via C# 学习笔记（4） 方法 构造函数](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/)\nCLR Via C# 学习笔记（5） 静态构造函数的性能\n[CLR Via C# 学习笔记（6） 方法参数相关（out ref params）](http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/)\n\n\n","slug":"clr-via-csharp-learning-notes-6-the-method-parameters-related","published":1,"updated":"2016-08-16T13:51:19.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz91k0043xfynfoatlxhx","content":"<blockquote>\n<p>CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。</p>\n</blockquote>\n<p>通常我们在使用方法的时候，方法的参数是按值传递的，如果传递的参数是引用类型的对象，是将引用对象的地址传给方法。如果传递的是值类型实例，传递给方法的是该实例的一个副本。允许使用在方法中按引用来传递参数，C#中使用out和ref关键字来体现。下面就来介绍out和ref的使用。</p>\n<h2 id=\"out\"><a href=\"#out\" class=\"headerlink\" title=\"out\"></a>out</h2><p>1 使用out时在方法的参数定义和方法的调用时都要用out关键字，如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">string</span> name = <span class=\"keyword\">string</span>.Empty;</div><div class=\"line\">    GetStr(<span class=\"keyword\">out</span> name); <span class=\"comment\">//调用时加out</span></div><div class=\"line\">    Console.WriteLine(name);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetStr</span>(<span class=\"params\"><span class=\"keyword\">out</span> <span class=\"keyword\">string</span> name</span>) <span class=\"comment\">//方法参数定义时的out</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>2 如果一个方法有out修饰的参数，在方法结束前必须给给参数赋值，否则不能通过编译，代码如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">string</span> name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">    GetStr(<span class=\"keyword\">out</span> name);</div><div class=\"line\">    Console.WriteLine(name);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetStr</span>(<span class=\"params\"><span class=\"keyword\">out</span> <span class=\"keyword\">string</span> name</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">//没有给name赋值，编译时会出现“控制离开当前方法之前必须对</span></div><div class=\"line\">    <span class=\"comment\">//out 参数“name”赋值”异常</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>3 在调用有out参数的方法时，没有必要给out参数赋初始值，因为赋的值不会传递到方法的内部，如果在方法的内部要强行使用out参数会有编译错误。代码如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">//给out参数name赋初始值oec2003</span></div><div class=\"line\">    <span class=\"keyword\">string</span> name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">    GetStr(<span class=\"keyword\">out</span> name);</div><div class=\"line\">    Console.WriteLine(name);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetStr</span>(<span class=\"params\"><span class=\"keyword\">out</span> <span class=\"keyword\">string</span> name</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    name = <span class=\"string\">\"hello\"</span> + name;</div><div class=\"line\">    <span class=\"comment\">//name在调用前虽赋值为oec2003 ，</span></div><div class=\"line\">    <span class=\"comment\">//但此处会报错“使用了未赋值的 out 参数name”</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>4 通常我们需要在一个方法中返回多个值的时候就可以使用out参数。</p>\n<p>5 如果两个方法的参数个数和类型都相同，区别只是其中一个为out参数，那么这两个方法是可以进行重载的，下面的代码可以正常运行。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetStr</span>(<span class=\"params\"><span class=\"keyword\">out</span> <span class=\"keyword\">string</span> name</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetStr</span>(<span class=\"params\"><span class=\"keyword\">string</span> name</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"ref\"><a href=\"#ref\" class=\"headerlink\" title=\"ref\"></a>ref</h2><p>1 和out参数一样，使用ref时在方法的参数定义和方法的调用时都要用ref关键字。</p>\n<p>2 如果调用方法前，ref参数没有赋初始值，不能通过编译，看如下代码：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">string</span> name;</div><div class=\"line\">    GetStr(<span class=\"keyword\">ref</span> name); <span class=\"comment\">//如果name没有赋值不能通过编译</span></div><div class=\"line\">    Console.WriteLine(name);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetStr</span>(<span class=\"params\"><span class=\"keyword\">ref</span> <span class=\"keyword\">string</span> name</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>3 和out不同的是ref参数的值可以传入方法内进行操作。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">string</span> name=<span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">    GetStr(<span class=\"keyword\">ref</span> name);</div><div class=\"line\">    Console.WriteLine(name);<span class=\"comment\">//返回：hello oec2003</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetStr</span>(<span class=\"params\"><span class=\"keyword\">ref</span> <span class=\"keyword\">string</span> name</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    name = <span class=\"string\">\"hello \"</span> + name;</div><div class=\"line\">&#125;</div><div class=\"line\">``` </div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">4</span> 因为<span class=\"keyword\">ref</span>在传入方法时会有初始值，所以在方法的内部可以不对<span class=\"keyword\">ref</span>参数进行任何的操作，那样<span class=\"keyword\">ref</span>参数的值不会改变。</div></pre></td></tr></table></figure>\n<p>static void Main(string[] args)<br>{<br>    string name=”oec2003”;<br>    GetStr(ref name);<br>    Console.WriteLine(name);//在方法中没有操作，仍然返回oec2003<br>}<br>private static void GetStr(ref string name)<br>{</p>\n<p>}<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"number\">5</span> 同<span class=\"keyword\">out</span>参数一样，如果两个方法的参数个数和类型都一样，仅有的区别只是其中之一的参数为<span class=\"keyword\">ref</span>参数，两个可以进行重载。</div><div class=\"line\"></div><div class=\"line\">对于CLR来说，关键字<span class=\"keyword\">out</span>和关键字<span class=\"keyword\">ref</span>是等价的，就是说无论使用的<span class=\"keyword\">out</span>还是<span class=\"keyword\">ref</span>，都会生成相同的IL代码，正因为如此，如果两个方法的差异仅仅是<span class=\"keyword\">out</span>和<span class=\"keyword\">ref</span>的差异，那么这两个方法是不能进行重载的，如下代码：</div></pre></td></tr></table></figure></p>\n<p>//下面代码编译会报“不能定义仅在 ref 和 out 上有差别的重载方法”异常<br>private static void GetStr(ref string name)<br>{<br>    name = “oec2003”;<br>}<br>private static void GetStr(out string name)<br>{<br>    name = “oec2003”;<br>}<br><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">## 可变数量的参数</span></div><div class=\"line\"></div><div class=\"line\">有些时候如果一个方法的参数数量可以根据用户的需要而进行变动，那将会带来很大的方便。像<span class=\"keyword\">String</span>类型的Concat、<span class=\"keyword\">Format</span>等方法就提供了可变参数。可以变参数在C<span class=\"meta\">#中使用params来定义，如下面代码：</span></div></pre></td></tr></table></figure></p>\n<p>static void Main(string[] args)<br>{<br>    Console.WriteLine(Add(1,2,3,4));<br>}<br>public static int Add(params int[] num)<br>{<br>    int sum = 0;<br>    foreach (int i in num)<br>    {<br>        sum += i;<br>    }<br>    return sum;<br>}<br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">使用可变参数非常简单，需要注意的是可变参数的类型一定要是数组类型。可变参数虽然很好用，但是接受可变参数的方法在调用时会导致一些性能损失，以为数组对象必须分配在堆上，数组的内存最终需要GC来回收。为了避免这种性能的损耗，我们在写方法的时候可以多定义几个没有params关键字的方法的重载，这样只有在很特殊的情况下才会使用有params关键字的方法。C#中的一些类的方法也是这么做的，如下图：</div><div class=\"line\"></div><div class=\"line\">![<span class=\"string\">2010-12-29_165108</span>](<span class=\"link\">http://oec2003.qiniudn.com/2010-12-29_165108.gif</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"section\">## 方法的参数类型</span></div><div class=\"line\"></div><div class=\"line\">声明方法参数类型时，应尽可能只用弱的类型，例如如果要编写一个操作一组数据项的方法，最好使用接口（如Ienumerable）来定义方法参数的类型，而不要使用一些强的数据类型如List或是一些强的接口类型（如Ilist或Icollection），如下：</div></pre></td></tr></table></figure></p>\n<p>//使用的弱类型参数<br>private void OperateCollection<t>(IEnumerable<t> collection)<br>{ </t></t></p>\n<p>}<br>//使用的强类型参数<br>private void OperateCollection<t>(List<t> collection)<br>{</t></t></p>\n<p>}<br>```</p>\n<p>此处所指的强类型和弱类型，可以理解为类型的层次，如果说父类的层次高于子类，那么层次越高就类型越弱。Iemumerable接口直接在 System.Collections 命名空间下，是其他一些集合类和接口（如Icollection IList List等）的基类，所以定义参数为IEnumerable 类型的，凡是继承了IEnumerable 的类型的参数都能够传入方法，大大提高了灵活性。</p>\n<h2 id=\"系列相关文章\"><a href=\"#系列相关文章\" class=\"headerlink\" title=\"系列相关文章\"></a>系列相关文章</h2><p><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型</a><br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（2） 装箱和拆箱</a><br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（4） 方法 构造函数</a><br>CLR Via C# 学习笔记（5） 静态构造函数的性能<br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/\" target=\"_blank\" rel=\"external\">CLR Via C# 学习笔记（6） 方法参数相关（out ref params）</a></p>\n","excerpt":"","more":"<blockquote>\n<p>CLR Via C#》这本书以前就粗略看过两遍，但一直都没能深入理解，而且很多内容也忘记了，现在准备重新看一遍，并将看过的部分写出来，因为写的过程也是一个加深理解的过程。本系列算是学习的一个记录吧，也可以方便以后自己查阅，如果对大家还有些帮助的话，我就很高兴了。书我是选择性的看的，所以顺序和书中的顺序可能不一样。</p>\n</blockquote>\n<p>通常我们在使用方法的时候，方法的参数是按值传递的，如果传递的参数是引用类型的对象，是将引用对象的地址传给方法。如果传递的是值类型实例，传递给方法的是该实例的一个副本。允许使用在方法中按引用来传递参数，C#中使用out和ref关键字来体现。下面就来介绍out和ref的使用。</p>\n<h2 id=\"out\"><a href=\"#out\" class=\"headerlink\" title=\"out\"></a>out</h2><p>1 使用out时在方法的参数定义和方法的调用时都要用out关键字，如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">string</span> name = <span class=\"keyword\">string</span>.Empty;</div><div class=\"line\">    GetStr(<span class=\"keyword\">out</span> name); <span class=\"comment\">//调用时加out</span></div><div class=\"line\">    Console.WriteLine(name);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetStr</span>(<span class=\"params\"><span class=\"keyword\">out</span> <span class=\"keyword\">string</span> name</span>) <span class=\"comment\">//方法参数定义时的out</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>2 如果一个方法有out修饰的参数，在方法结束前必须给给参数赋值，否则不能通过编译，代码如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">string</span> name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">    GetStr(<span class=\"keyword\">out</span> name);</div><div class=\"line\">    Console.WriteLine(name);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetStr</span>(<span class=\"params\"><span class=\"keyword\">out</span> <span class=\"keyword\">string</span> name</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"comment\">//没有给name赋值，编译时会出现“控制离开当前方法之前必须对</span></div><div class=\"line\">    <span class=\"comment\">//out 参数“name”赋值”异常</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>3 在调用有out参数的方法时，没有必要给out参数赋初始值，因为赋的值不会传递到方法的内部，如果在方法的内部要强行使用out参数会有编译错误。代码如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"comment\">//给out参数name赋初始值oec2003</span></div><div class=\"line\">    <span class=\"keyword\">string</span> name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">    GetStr(<span class=\"keyword\">out</span> name);</div><div class=\"line\">    Console.WriteLine(name);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetStr</span>(<span class=\"params\"><span class=\"keyword\">out</span> <span class=\"keyword\">string</span> name</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    name = <span class=\"string\">\"hello\"</span> + name;</div><div class=\"line\">    <span class=\"comment\">//name在调用前虽赋值为oec2003 ，</span></div><div class=\"line\">    <span class=\"comment\">//但此处会报错“使用了未赋值的 out 参数name”</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>4 通常我们需要在一个方法中返回多个值的时候就可以使用out参数。</p>\n<p>5 如果两个方法的参数个数和类型都相同，区别只是其中一个为out参数，那么这两个方法是可以进行重载的，下面的代码可以正常运行。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetStr</span>(<span class=\"params\"><span class=\"keyword\">out</span> <span class=\"keyword\">string</span> name</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetStr</span>(<span class=\"params\"><span class=\"keyword\">string</span> name</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"ref\"><a href=\"#ref\" class=\"headerlink\" title=\"ref\"></a>ref</h2><p>1 和out参数一样，使用ref时在方法的参数定义和方法的调用时都要用ref关键字。</p>\n<p>2 如果调用方法前，ref参数没有赋初始值，不能通过编译，看如下代码：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">string</span> name;</div><div class=\"line\">    GetStr(<span class=\"keyword\">ref</span> name); <span class=\"comment\">//如果name没有赋值不能通过编译</span></div><div class=\"line\">    Console.WriteLine(name);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetStr</span>(<span class=\"params\"><span class=\"keyword\">ref</span> <span class=\"keyword\">string</span> name</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    name = <span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>3 和out不同的是ref参数的值可以传入方法内进行操作。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">string</span> name=<span class=\"string\">\"oec2003\"</span>;</div><div class=\"line\">    GetStr(<span class=\"keyword\">ref</span> name);</div><div class=\"line\">    Console.WriteLine(name);<span class=\"comment\">//返回：hello oec2003</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetStr</span>(<span class=\"params\"><span class=\"keyword\">ref</span> <span class=\"keyword\">string</span> name</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    name = <span class=\"string\">\"hello \"</span> + name;</div><div class=\"line\">&#125;</div><div class=\"line\">``` </div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">4</span> 因为<span class=\"keyword\">ref</span>在传入方法时会有初始值，所以在方法的内部可以不对<span class=\"keyword\">ref</span>参数进行任何的操作，那样<span class=\"keyword\">ref</span>参数的值不会改变。</div></pre></td></tr></table></figure>\n<p>static void Main(string[] args)<br>{<br>    string name=”oec2003”;<br>    GetStr(ref name);<br>    Console.WriteLine(name);//在方法中没有操作，仍然返回oec2003<br>}<br>private static void GetStr(ref string name)<br>{</p>\n<p>}<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"number\">5</span> 同<span class=\"keyword\">out</span>参数一样，如果两个方法的参数个数和类型都一样，仅有的区别只是其中之一的参数为<span class=\"keyword\">ref</span>参数，两个可以进行重载。</div><div class=\"line\"></div><div class=\"line\">对于CLR来说，关键字<span class=\"keyword\">out</span>和关键字<span class=\"keyword\">ref</span>是等价的，就是说无论使用的<span class=\"keyword\">out</span>还是<span class=\"keyword\">ref</span>，都会生成相同的IL代码，正因为如此，如果两个方法的差异仅仅是<span class=\"keyword\">out</span>和<span class=\"keyword\">ref</span>的差异，那么这两个方法是不能进行重载的，如下代码：</div></pre></td></tr></table></figure></p>\n<p>//下面代码编译会报“不能定义仅在 ref 和 out 上有差别的重载方法”异常<br>private static void GetStr(ref string name)<br>{<br>    name = “oec2003”;<br>}<br>private static void GetStr(out string name)<br>{<br>    name = “oec2003”;<br>}<br><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">## 可变数量的参数</span></div><div class=\"line\"></div><div class=\"line\">有些时候如果一个方法的参数数量可以根据用户的需要而进行变动，那将会带来很大的方便。像<span class=\"keyword\">String</span>类型的Concat、<span class=\"keyword\">Format</span>等方法就提供了可变参数。可以变参数在C<span class=\"meta\">#中使用params来定义，如下面代码：</span></div></pre></td></tr></table></figure></p>\n<p>static void Main(string[] args)<br>{<br>    Console.WriteLine(Add(1,2,3,4));<br>}<br>public static int Add(params int[] num)<br>{<br>    int sum = 0;<br>    foreach (int i in num)<br>    {<br>        sum += i;<br>    }<br>    return sum;<br>}<br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">使用可变参数非常简单，需要注意的是可变参数的类型一定要是数组类型。可变参数虽然很好用，但是接受可变参数的方法在调用时会导致一些性能损失，以为数组对象必须分配在堆上，数组的内存最终需要GC来回收。为了避免这种性能的损耗，我们在写方法的时候可以多定义几个没有params关键字的方法的重载，这样只有在很特殊的情况下才会使用有params关键字的方法。C#中的一些类的方法也是这么做的，如下图：</div><div class=\"line\"></div><div class=\"line\">![<span class=\"string\">2010-12-29_165108</span>](<span class=\"link\">http://oec2003.qiniudn.com/2010-12-29_165108.gif</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"section\">## 方法的参数类型</span></div><div class=\"line\"></div><div class=\"line\">声明方法参数类型时，应尽可能只用弱的类型，例如如果要编写一个操作一组数据项的方法，最好使用接口（如Ienumerable）来定义方法参数的类型，而不要使用一些强的数据类型如List或是一些强的接口类型（如Ilist或Icollection），如下：</div></pre></td></tr></table></figure></p>\n<p>//使用的弱类型参数<br>private void OperateCollection<T>(IEnumerable<T> collection)<br>{ </p>\n<p>}<br>//使用的强类型参数<br>private void OperateCollection<T>(List<T> collection)<br>{</p>\n<p>}<br>```</p>\n<p>此处所指的强类型和弱类型，可以理解为类型的层次，如果说父类的层次高于子类，那么层次越高就类型越弱。Iemumerable接口直接在 System.Collections 命名空间下，是其他一些集合类和接口（如Icollection IList List等）的基类，所以定义参数为IEnumerable 类型的，凡是继承了IEnumerable 的类型的参数都能够传入方法，大大提高了灵活性。</p>\n<h2 id=\"系列相关文章\"><a href=\"#系列相关文章\" class=\"headerlink\" title=\"系列相关文章\"></a>系列相关文章</h2><p><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-1-primitive-types/\">CLR Via C# 学习笔记（1） 基元类型 值类型 引用类型</a><br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-2-boxing-and-unboxing/\">CLR Via C# 学习笔记（2） 装箱和拆箱</a><br><a href=\"http://blog.fwhyy.com/2009/06/clr-via-csharp-learning-notes-3-constants-and-fields/\">CLR Via C# 学习笔记（3） 常量和字段（cosnt readonly）</a><br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-5-methods-the-constructor/\">CLR Via C# 学习笔记（4） 方法 构造函数</a><br>CLR Via C# 学习笔记（5） 静态构造函数的性能<br><a href=\"http://blog.fwhyy.com/2009/07/clr-via-csharp-learning-notes-6-the-method-parameters-related/\">CLR Via C# 学习笔记（6） 方法参数相关（out ref params）</a></p>\n"},{"title":"常用的一些正则表达式","date":"2007-05-07T16:00:00.000Z","_content":"\n正则表达式用于字符串处理、表单验证等场合，实用高效。但用到时总是不太把握，以致往往要查证一番。现将一些常用的表达式收集于此，以备不时之需。\n<!--more-->\n匹配中文字符的正则表达式： [\\u4e00-\\u9fa5]\n\n评注：匹配中文还真是个头疼的事，有了这个表达式就好办了\n\n匹配双字节字符(包括汉字在内)：[^\\x00-\\xff]\n\n评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）\n\n匹配空白行的正则表达式：\\n\\s*\\r\n\n评注：可以用来删除空白行\n\n匹配HTML标记的正则表达式：< (\\S*?)[^>]*>.*?|< .*? />\n\n评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力\n\n匹配首尾空白字符的正则表达式：^\\s*|\\s*$\n\n评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式\n\n匹配Email地址的正则表达式：\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*\n\n评注：表单验证时很实用\n\n匹配网址URL的正则表达式：[a-zA-z]+://[^\\s]*\n\n评注：网上流传的版本功能很有限，上面这个基本可以满足需求\n\n匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$\n\n评注：表单验证时很实用\n\n匹配国内电话号码：\\d{3}-\\d{8}|\\d{4}-\\d{7}\n\n评注：匹配形式如 0511-4405222 或 021-87888822\n\n匹配腾讯QQ号：[1-9][0-9]{4,}\n\n评注：腾讯QQ号从10000开始\n\n匹配中国邮政编码：[1-9]\\d{5}(?!\\d)\n\n评注：中国邮政编码为6位数字\n\n匹配身份证：\\d{15}|\\d{18}\n\n评注：中国的身份证为15位或18位\n\n匹配ip地址：\\d+\\.\\d+\\.\\d+\\.\\d+\n\n评注：提取ip地址时有用\n\n匹配特定数字：\n\n^[1-9]\\d*$ //匹配正整数\n\n^-[1-9]\\d*$ //匹配负整数\n\n^-?[1-9]\\d*$ //匹配整数\n\n^[1-9]\\d*|0$ //匹配非负整数（正整数 + 0）\n\n^-[1-9]\\d*|0$ //匹配非正整数（负整数 + 0）\n\n^[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*$ //匹配正浮点数\n\n^-([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*)$ //匹配负浮点数\n\n^-?([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0)$ //匹配浮点数\n\n^[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0$ //匹配非负浮点数（正浮点数 + 0）\n\n^(-([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*))|0?\\.0+|0$ //匹配非正浮点数（负浮点数 + 0）\n\n评注：处理大量数据时有用，具体应用时注意修正\n\n匹配特定字符串：\n\n^[A-Za-z]+$ //匹配由26个英文字母组成的字符串\n\n^[A-Z]+$ //匹配由26个英文字母的大写组成的字符串\n\n^[a-z]+$ //匹配由26个英文字母的小写组成的字符串\n\n^[A-Za-z0-9]+$ //匹配由数字和26个英文字母组成的字符串\n\n^\\w+$ //匹配由数字、26个英文字母或者下划线组成的字符串\n\n评注：最基本也是最常用的一些表达式\n\n","source":"_posts/commonly-used-some-regular-expressions.md","raw":"---\ntitle: 常用的一些正则表达式\ndate: 2007-05-08\ncategories: [Javascript]\ntags: [javascript,正则]\n---\n\n正则表达式用于字符串处理、表单验证等场合，实用高效。但用到时总是不太把握，以致往往要查证一番。现将一些常用的表达式收集于此，以备不时之需。\n<!--more-->\n匹配中文字符的正则表达式： [\\u4e00-\\u9fa5]\n\n评注：匹配中文还真是个头疼的事，有了这个表达式就好办了\n\n匹配双字节字符(包括汉字在内)：[^\\x00-\\xff]\n\n评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）\n\n匹配空白行的正则表达式：\\n\\s*\\r\n\n评注：可以用来删除空白行\n\n匹配HTML标记的正则表达式：< (\\S*?)[^>]*>.*?|< .*? />\n\n评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力\n\n匹配首尾空白字符的正则表达式：^\\s*|\\s*$\n\n评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式\n\n匹配Email地址的正则表达式：\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*\n\n评注：表单验证时很实用\n\n匹配网址URL的正则表达式：[a-zA-z]+://[^\\s]*\n\n评注：网上流传的版本功能很有限，上面这个基本可以满足需求\n\n匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$\n\n评注：表单验证时很实用\n\n匹配国内电话号码：\\d{3}-\\d{8}|\\d{4}-\\d{7}\n\n评注：匹配形式如 0511-4405222 或 021-87888822\n\n匹配腾讯QQ号：[1-9][0-9]{4,}\n\n评注：腾讯QQ号从10000开始\n\n匹配中国邮政编码：[1-9]\\d{5}(?!\\d)\n\n评注：中国邮政编码为6位数字\n\n匹配身份证：\\d{15}|\\d{18}\n\n评注：中国的身份证为15位或18位\n\n匹配ip地址：\\d+\\.\\d+\\.\\d+\\.\\d+\n\n评注：提取ip地址时有用\n\n匹配特定数字：\n\n^[1-9]\\d*$ //匹配正整数\n\n^-[1-9]\\d*$ //匹配负整数\n\n^-?[1-9]\\d*$ //匹配整数\n\n^[1-9]\\d*|0$ //匹配非负整数（正整数 + 0）\n\n^-[1-9]\\d*|0$ //匹配非正整数（负整数 + 0）\n\n^[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*$ //匹配正浮点数\n\n^-([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*)$ //匹配负浮点数\n\n^-?([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0)$ //匹配浮点数\n\n^[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0$ //匹配非负浮点数（正浮点数 + 0）\n\n^(-([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*))|0?\\.0+|0$ //匹配非正浮点数（负浮点数 + 0）\n\n评注：处理大量数据时有用，具体应用时注意修正\n\n匹配特定字符串：\n\n^[A-Za-z]+$ //匹配由26个英文字母组成的字符串\n\n^[A-Z]+$ //匹配由26个英文字母的大写组成的字符串\n\n^[a-z]+$ //匹配由26个英文字母的小写组成的字符串\n\n^[A-Za-z0-9]+$ //匹配由数字和26个英文字母组成的字符串\n\n^\\w+$ //匹配由数字、26个英文字母或者下划线组成的字符串\n\n评注：最基本也是最常用的一些表达式\n\n","slug":"commonly-used-some-regular-expressions","published":1,"updated":"2016-08-12T16:15:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz91m0046xfynrxpai5ct","content":"<p>正则表达式用于字符串处理、表单验证等场合，实用高效。但用到时总是不太把握，以致往往要查证一番。现将一些常用的表达式收集于此，以备不时之需。<br><a id=\"more\"></a><br>匹配中文字符的正则表达式： [\\u4e00-\\u9fa5]</p>\n<p>评注：匹配中文还真是个头疼的事，有了这个表达式就好办了</p>\n<p>匹配双字节字符(包括汉字在内)：[^\\x00-\\xff]</p>\n<p>评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）</p>\n<p>匹配空白行的正则表达式：\\n\\s*\\r</p>\n<p>评注：可以用来删除空白行</p>\n<p>匹配HTML标记的正则表达式：&lt; (\\S<em>?)[^&gt;]</em>&gt;.<em>?|&lt; .</em>? /&gt;</p>\n<p>评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力</p>\n<p>匹配首尾空白字符的正则表达式：^\\s<em>|\\s</em>$</p>\n<p>评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式</p>\n<p>匹配Email地址的正则表达式：\\w+([-+.]\\w+)<em>@\\w+([-.]\\w+)</em>.\\w+([-.]\\w+)*</p>\n<p>评注：表单验证时很实用</p>\n<p>匹配网址URL的正则表达式：[a-zA-z]+://[^\\s]*</p>\n<p>评注：网上流传的版本功能很有限，上面这个基本可以满足需求</p>\n<p>匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$</p>\n<p>评注：表单验证时很实用</p>\n<p>匹配国内电话号码：\\d{3}-\\d{8}|\\d{4}-\\d{7}</p>\n<p>评注：匹配形式如 0511-4405222 或 021-87888822</p>\n<p>匹配腾讯QQ号：[1-9][0-9]{4,}</p>\n<p>评注：腾讯QQ号从10000开始</p>\n<p>匹配中国邮政编码：[1-9]\\d{5}(?!\\d)</p>\n<p>评注：中国邮政编码为6位数字</p>\n<p>匹配身份证：\\d{15}|\\d{18}</p>\n<p>评注：中国的身份证为15位或18位</p>\n<p>匹配ip地址：\\d+.\\d+.\\d+.\\d+</p>\n<p>评注：提取ip地址时有用</p>\n<p>匹配特定数字：</p>\n<p>^[1-9]\\d*$ //匹配正整数</p>\n<p>^-[1-9]\\d*$ //匹配负整数</p>\n<p>^-?[1-9]\\d*$ //匹配整数</p>\n<p>^[1-9]\\d*|0$ //匹配非负整数（正整数 + 0）</p>\n<p>^-[1-9]\\d*|0$ //匹配非正整数（负整数 + 0）</p>\n<p>^[1-9]\\d<em>.\\d</em>|0.\\d<em>[1-9]\\d</em>$ //匹配正浮点数</p>\n<p>^-([1-9]\\d<em>.\\d</em>|0.\\d<em>[1-9]\\d</em>)$ //匹配负浮点数</p>\n<p>^-?([1-9]\\d<em>.\\d</em>|0.\\d<em>[1-9]\\d</em>|0?.0+|0)$ //匹配浮点数</p>\n<p>^[1-9]\\d<em>.\\d</em>|0.\\d<em>[1-9]\\d</em>|0?.0+|0$ //匹配非负浮点数（正浮点数 + 0）</p>\n<p>^(-([1-9]\\d<em>.\\d</em>|0.\\d<em>[1-9]\\d</em>))|0?.0+|0$ //匹配非正浮点数（负浮点数 + 0）</p>\n<p>评注：处理大量数据时有用，具体应用时注意修正</p>\n<p>匹配特定字符串：</p>\n<p>^[A-Za-z]+$ //匹配由26个英文字母组成的字符串</p>\n<p>^[A-Z]+$ //匹配由26个英文字母的大写组成的字符串</p>\n<p>^[a-z]+$ //匹配由26个英文字母的小写组成的字符串</p>\n<p>^[A-Za-z0-9]+$ //匹配由数字和26个英文字母组成的字符串</p>\n<p>^\\w+$ //匹配由数字、26个英文字母或者下划线组成的字符串</p>\n<p>评注：最基本也是最常用的一些表达式</p>\n","excerpt":"<p>正则表达式用于字符串处理、表单验证等场合，实用高效。但用到时总是不太把握，以致往往要查证一番。现将一些常用的表达式收集于此，以备不时之需。<br>","more":"<br>匹配中文字符的正则表达式： [\\u4e00-\\u9fa5]</p>\n<p>评注：匹配中文还真是个头疼的事，有了这个表达式就好办了</p>\n<p>匹配双字节字符(包括汉字在内)：[^\\x00-\\xff]</p>\n<p>评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）</p>\n<p>匹配空白行的正则表达式：\\n\\s*\\r</p>\n<p>评注：可以用来删除空白行</p>\n<p>匹配HTML标记的正则表达式：&lt; (\\S<em>?)[^&gt;]</em>&gt;.<em>?|&lt; .</em>? /&gt;</p>\n<p>评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力</p>\n<p>匹配首尾空白字符的正则表达式：^\\s<em>|\\s</em>$</p>\n<p>评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式</p>\n<p>匹配Email地址的正则表达式：\\w+([-+.]\\w+)<em>@\\w+([-.]\\w+)</em>.\\w+([-.]\\w+)*</p>\n<p>评注：表单验证时很实用</p>\n<p>匹配网址URL的正则表达式：[a-zA-z]+://[^\\s]*</p>\n<p>评注：网上流传的版本功能很有限，上面这个基本可以满足需求</p>\n<p>匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$</p>\n<p>评注：表单验证时很实用</p>\n<p>匹配国内电话号码：\\d{3}-\\d{8}|\\d{4}-\\d{7}</p>\n<p>评注：匹配形式如 0511-4405222 或 021-87888822</p>\n<p>匹配腾讯QQ号：[1-9][0-9]{4,}</p>\n<p>评注：腾讯QQ号从10000开始</p>\n<p>匹配中国邮政编码：[1-9]\\d{5}(?!\\d)</p>\n<p>评注：中国邮政编码为6位数字</p>\n<p>匹配身份证：\\d{15}|\\d{18}</p>\n<p>评注：中国的身份证为15位或18位</p>\n<p>匹配ip地址：\\d+.\\d+.\\d+.\\d+</p>\n<p>评注：提取ip地址时有用</p>\n<p>匹配特定数字：</p>\n<p>^[1-9]\\d*$ //匹配正整数</p>\n<p>^-[1-9]\\d*$ //匹配负整数</p>\n<p>^-?[1-9]\\d*$ //匹配整数</p>\n<p>^[1-9]\\d*|0$ //匹配非负整数（正整数 + 0）</p>\n<p>^-[1-9]\\d*|0$ //匹配非正整数（负整数 + 0）</p>\n<p>^[1-9]\\d<em>.\\d</em>|0.\\d<em>[1-9]\\d</em>$ //匹配正浮点数</p>\n<p>^-([1-9]\\d<em>.\\d</em>|0.\\d<em>[1-9]\\d</em>)$ //匹配负浮点数</p>\n<p>^-?([1-9]\\d<em>.\\d</em>|0.\\d<em>[1-9]\\d</em>|0?.0+|0)$ //匹配浮点数</p>\n<p>^[1-9]\\d<em>.\\d</em>|0.\\d<em>[1-9]\\d</em>|0?.0+|0$ //匹配非负浮点数（正浮点数 + 0）</p>\n<p>^(-([1-9]\\d<em>.\\d</em>|0.\\d<em>[1-9]\\d</em>))|0?.0+|0$ //匹配非正浮点数（负浮点数 + 0）</p>\n<p>评注：处理大量数据时有用，具体应用时注意修正</p>\n<p>匹配特定字符串：</p>\n<p>^[A-Za-z]+$ //匹配由26个英文字母组成的字符串</p>\n<p>^[A-Z]+$ //匹配由26个英文字母的大写组成的字符串</p>\n<p>^[a-z]+$ //匹配由26个英文字母的小写组成的字符串</p>\n<p>^[A-Za-z0-9]+$ //匹配由数字和26个英文字母组成的字符串</p>\n<p>^\\w+$ //匹配由数字、26个英文字母或者下划线组成的字符串</p>\n<p>评注：最基本也是最常用的一些表达式</p>"},{"title":"在visual studio中删除最近打开的项目和文件记录的方法","date":"2007-12-04T16:00:00.000Z","_content":"\n在打开visual studio时有一个最近打开的项目列表，但是当我们将某个项目在本地磁盘上删除后，那个项目列表依然存在，下面的方法可以让删除的项目在列表中不出现。\n<!--more-->\n下面是一vs2005为例，其中8.0代表的是版本号，vs03为7.1,vs2008为9.0\n\n1.删除最近打开的文件\nHKEY_CURRENT_USER\\Software\\Microsoft\\VisualStudio\\8.0\\FileMRUList ，在右边删除相应键值。\n2.删除最近打开的项目\nHKEY_CURRENT_USER\\Software\\Microsoft\\VisualStudio\\8.0\\ProjectMRUList，在右边删除相应键值。\n\n","source":"_posts/delete-recently-opened-in-visual-studio-project-and-file-records.md","raw":"---\ntitle: 在visual studio中删除最近打开的项目和文件记录的方法\ndate: 2007-12-05\ncategories: [DotNet]\ntags: [visual studio]\n---\n\n在打开visual studio时有一个最近打开的项目列表，但是当我们将某个项目在本地磁盘上删除后，那个项目列表依然存在，下面的方法可以让删除的项目在列表中不出现。\n<!--more-->\n下面是一vs2005为例，其中8.0代表的是版本号，vs03为7.1,vs2008为9.0\n\n1.删除最近打开的文件\nHKEY_CURRENT_USER\\Software\\Microsoft\\VisualStudio\\8.0\\FileMRUList ，在右边删除相应键值。\n2.删除最近打开的项目\nHKEY_CURRENT_USER\\Software\\Microsoft\\VisualStudio\\8.0\\ProjectMRUList，在右边删除相应键值。\n\n","slug":"delete-recently-opened-in-visual-studio-project-and-file-records","published":1,"updated":"2016-08-13T14:06:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz91n0049xfynllbf6qmn","content":"<p>在打开visual studio时有一个最近打开的项目列表，但是当我们将某个项目在本地磁盘上删除后，那个项目列表依然存在，下面的方法可以让删除的项目在列表中不出现。<br><a id=\"more\"></a><br>下面是一vs2005为例，其中8.0代表的是版本号，vs03为7.1,vs2008为9.0</p>\n<p>1.删除最近打开的文件<br>HKEY_CURRENT_USER\\Software\\Microsoft\\VisualStudio\\8.0\\FileMRUList ，在右边删除相应键值。<br>2.删除最近打开的项目<br>HKEY_CURRENT_USER\\Software\\Microsoft\\VisualStudio\\8.0\\ProjectMRUList，在右边删除相应键值。</p>\n","excerpt":"<p>在打开visual studio时有一个最近打开的项目列表，但是当我们将某个项目在本地磁盘上删除后，那个项目列表依然存在，下面的方法可以让删除的项目在列表中不出现。<br>","more":"<br>下面是一vs2005为例，其中8.0代表的是版本号，vs03为7.1,vs2008为9.0</p>\n<p>1.删除最近打开的文件<br>HKEY_CURRENT_USER\\Software\\Microsoft\\VisualStudio\\8.0\\FileMRUList ，在右边删除相应键值。<br>2.删除最近打开的项目<br>HKEY_CURRENT_USER\\Software\\Microsoft\\VisualStudio\\8.0\\ProjectMRUList，在右边删除相应键值。</p>"},{"title":"C#和Javascript交互","date":"2007-11-22T16:00:00.000Z","_content":"\n在asp.net开发中，经常会用到后台和前台的交互，就此总结了一点c#和javascript相互操作的方法。\n<!--more-->\n## 在后台c#代码中调用jacascript的方法\n\n### javascript代码：\n\n```\n<script type=\"text/javascript\" language=\"javascript\">\n    function test() {\n        alert(\"oec2003\");\n        return false;\n    }\n</script>\n```\n\n### C#代码：\n\n```\nprotected void Button1_Click(object sender, EventArgs e)\n{\n    ClientScript.RegisterStartupScript(this.GetType(), \"clear\", \"<script>test()</script>\");\n}\n```\n\n## javascript中调用c#方法\n\n如果c#中的方法有返回值，可以用下面方法\n\n### C#代码\n\n```\npublic string GetAuthStatus()\n{\n   ViewState[\"Auth\"] = \"Red\";\n   return ViewState[\"Auth\"].ToString();\n}\n```\n\n### javascript代码\n\n```\n<script type=\"text/javascript\" language=\"javascript\">\n    function getAuth() {\n        var authStatus = \"<%=GetAuthStatus()%>\";\n        return authStatus;\n    }\n</script>\n```\n\n如果在javascript调用的c#方法没有返回值，可以在一面中放一个button，然后在button的单击事件中去写想做的事情，在客户端的脚本中写下如下代码就可以了\n\n```\ndocument.all(\"button1\").click();\n```\n\n","source":"_posts/csharp-and-javascript-interaction.md","raw":"---\ntitle: C#和Javascript交互\ndate: 2007-11-23\ncategories: [C#,Javascript]\ntags: [C#,javascript]\n---\n\n在asp.net开发中，经常会用到后台和前台的交互，就此总结了一点c#和javascript相互操作的方法。\n<!--more-->\n## 在后台c#代码中调用jacascript的方法\n\n### javascript代码：\n\n```\n<script type=\"text/javascript\" language=\"javascript\">\n    function test() {\n        alert(\"oec2003\");\n        return false;\n    }\n</script>\n```\n\n### C#代码：\n\n```\nprotected void Button1_Click(object sender, EventArgs e)\n{\n    ClientScript.RegisterStartupScript(this.GetType(), \"clear\", \"<script>test()</script>\");\n}\n```\n\n## javascript中调用c#方法\n\n如果c#中的方法有返回值，可以用下面方法\n\n### C#代码\n\n```\npublic string GetAuthStatus()\n{\n   ViewState[\"Auth\"] = \"Red\";\n   return ViewState[\"Auth\"].ToString();\n}\n```\n\n### javascript代码\n\n```\n<script type=\"text/javascript\" language=\"javascript\">\n    function getAuth() {\n        var authStatus = \"<%=GetAuthStatus()%>\";\n        return authStatus;\n    }\n</script>\n```\n\n如果在javascript调用的c#方法没有返回值，可以在一面中放一个button，然后在button的单击事件中去写想做的事情，在客户端的脚本中写下如下代码就可以了\n\n```\ndocument.all(\"button1\").click();\n```\n\n","slug":"csharp-and-javascript-interaction","published":1,"updated":"2016-08-13T13:49:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz91o004bxfynqljuiams","content":"<p>在asp.net开发中，经常会用到后台和前台的交互，就此总结了一点c#和javascript相互操作的方法。<br><a id=\"more\"></a></p>\n<h2 id=\"在后台c-代码中调用jacascript的方法\"><a href=\"#在后台c-代码中调用jacascript的方法\" class=\"headerlink\" title=\"在后台c#代码中调用jacascript的方法\"></a>在后台c#代码中调用jacascript的方法</h2><h3 id=\"javascript代码：\"><a href=\"#javascript代码：\" class=\"headerlink\" title=\"javascript代码：\"></a>javascript代码：</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">language</span>=<span class=\"string\">\"javascript\"</span>&gt;</span><span class=\"actionscript\"></span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        alert(<span class=\"string\">\"oec2003\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"C-代码：\"><a href=\"#C-代码：\" class=\"headerlink\" title=\"C#代码：\"></a>C#代码：</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Button1_Click</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    ClientScript.RegisterStartupScript(<span class=\"keyword\">this</span>.GetType(), <span class=\"string\">\"clear\"</span>, <span class=\"string\">\"&lt;script&gt;test()&lt;/script&gt;\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"javascript中调用c-方法\"><a href=\"#javascript中调用c-方法\" class=\"headerlink\" title=\"javascript中调用c#方法\"></a>javascript中调用c#方法</h2><p>如果c#中的方法有返回值，可以用下面方法</p>\n<h3 id=\"C-代码\"><a href=\"#C-代码\" class=\"headerlink\" title=\"C#代码\"></a>C#代码</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> <span class=\"title\">GetAuthStatus</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">   ViewState[<span class=\"string\">\"Auth\"</span>] = <span class=\"string\">\"Red\"</span>;</div><div class=\"line\">   <span class=\"keyword\">return</span> ViewState[<span class=\"string\">\"Auth\"</span>].ToString();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"javascript代码\"><a href=\"#javascript代码\" class=\"headerlink\" title=\"javascript代码\"></a>javascript代码</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">language</span>=<span class=\"string\">\"javascript\"</span>&gt;</span><span class=\"actionscript\"></span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getAuth</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> authStatus = <span class=\"string\">\"&lt;%=GetAuthStatus()%&gt;\"</span>;</div><div class=\"line\">        <span class=\"keyword\">return</span> authStatus;</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>如果在javascript调用的c#方法没有返回值，可以在一面中放一个button，然后在button的单击事件中去写想做的事情，在客户端的脚本中写下如下代码就可以了</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">document<span class=\"selector-class\">.all</span>(<span class=\"string\">\"button1\"</span>)<span class=\"selector-class\">.click</span>();</div></pre></td></tr></table></figure>\n","excerpt":"<p>在asp.net开发中，经常会用到后台和前台的交互，就此总结了一点c#和javascript相互操作的方法。<br>","more":"</p>\n<h2 id=\"在后台c-代码中调用jacascript的方法\"><a href=\"#在后台c-代码中调用jacascript的方法\" class=\"headerlink\" title=\"在后台c#代码中调用jacascript的方法\"></a>在后台c#代码中调用jacascript的方法</h2><h3 id=\"javascript代码：\"><a href=\"#javascript代码：\" class=\"headerlink\" title=\"javascript代码：\"></a>javascript代码：</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">language</span>=<span class=\"string\">\"javascript\"</span>&gt;</span><span class=\"actionscript\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        alert(<span class=\"string\">\"oec2003\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"C-代码：\"><a href=\"#C-代码：\" class=\"headerlink\" title=\"C#代码：\"></a>C#代码：</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Button1_Click</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    ClientScript.RegisterStartupScript(<span class=\"keyword\">this</span>.GetType(), <span class=\"string\">\"clear\"</span>, <span class=\"string\">\"&lt;script&gt;test()&lt;/script&gt;\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"javascript中调用c-方法\"><a href=\"#javascript中调用c-方法\" class=\"headerlink\" title=\"javascript中调用c#方法\"></a>javascript中调用c#方法</h2><p>如果c#中的方法有返回值，可以用下面方法</p>\n<h3 id=\"C-代码\"><a href=\"#C-代码\" class=\"headerlink\" title=\"C#代码\"></a>C#代码</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> <span class=\"title\">GetAuthStatus</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">   ViewState[<span class=\"string\">\"Auth\"</span>] = <span class=\"string\">\"Red\"</span>;</div><div class=\"line\">   <span class=\"keyword\">return</span> ViewState[<span class=\"string\">\"Auth\"</span>].ToString();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"javascript代码\"><a href=\"#javascript代码\" class=\"headerlink\" title=\"javascript代码\"></a>javascript代码</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">language</span>=<span class=\"string\">\"javascript\"</span>&gt;</span><span class=\"actionscript\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getAuth</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> authStatus = <span class=\"string\">\"&lt;%=GetAuthStatus()%&gt;\"</span>;</div><div class=\"line\">        <span class=\"keyword\">return</span> authStatus;</div><div class=\"line\">    &#125;</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>如果在javascript调用的c#方法没有返回值，可以在一面中放一个button，然后在button的单击事件中去写想做的事情，在客户端的脚本中写下如下代码就可以了</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">document<span class=\"selector-class\">.all</span>(<span class=\"string\">\"button1\"</span>)<span class=\"selector-class\">.click</span>();</div></pre></td></tr></table></figure>"},{"title":"设计模式笔记(18)—迭代器模式（行为型）","date":"2010-01-23T16:00:00.000Z","url":"/2010/01/design-patterns-notes-18-iterator-pattern/","_content":"\nGof定义\n\n提供一种方法顺序访问一个聚合对象中的各个元素， 而又不暴露该对象的内部表示。\n\n# 动机\n\n在软件构建过程中，集合对象内部结构常常变化各异。但对于这些集合对象，我们希望在不暴露其内部结构的同时，可以让外部客户代码透明地访问其中包含的元素；同时这种“透明遍历”也为“同一种算法在多种集合对象上进行操作”提供了可能。使用面向对象技术将这种遍历机制抽象为“迭代器对象”为“应对变化中的集合对象”提供了一种优雅的方式。\n<!--more-->\n迭代器模式结构图：\n\n![tool-manager](http://blog.fwhyy.com/wp-content/uploads/2010/01/2010-12-29_113434.png)\n\n* Aggregate:集合结构接口\n* Iterator:迭代器接口\n* Concreteaggregate:集合结构的具体类，继承Aggregate接口\n* ConcreteIteator:具体的迭代器类\n代码实现：\n\n```\n/// <summary>\n/// 集合结构接口\n/// </summary>\npublic interface Aggregate\n{\n    Iterator CreateIterator();\n}\n/// <summary>\n/// 迭代器接口\n/// </summary>\npublic interface Iterator\n{\n    object First();\n    object Next();\n    bool IsDone();\n    object CurrentItem();\n}\n/// <summary>\n/// 集合结构的具体类\n/// </summary>\nclass ConcreteAggregate : Aggregate\n{\n    private List<object> items = new List<object>();\n    public Iterator CreateIterator()\n    {\n        return new ConcreteIterator(this);\n    }\n    public int Count\n    {\n        get { return items.Count; }\n    }\n    public object this[int index]\n    {\n        get { return items[index]; }\n        set { items.Insert(index, value); }\n    }\n}\n/// <summary>\n/// 具体的迭代器类\n/// </summary>\nclass ConcreteIterator : Iterator\n{\n    private ConcreteAggregate _aggregate;\n    private int _current = 0;\n    public ConcreteIterator(ConcreteAggregate aggregate)\n    {\n        this._aggregate = aggregate;\n    }\n    public object First()\n    {\n        return _aggregate[0];\n    }\n    public object Next()\n    {\n        object r = null;\n        _current++;\n        if (_current < _aggregate.Count)\n        {\n            r = _aggregate[_current];\n        }\n        return r;\n    }\n    public bool IsDone()\n    {\n        return _current >= _aggregate.Count ? true : false;\n    }\n    public object CurrentItem()\n    {\n        return _aggregate[_current];\n    }\n}\n/// <summary>\n/// 客户端调用\n/// </summary>\nclass Program\n{\n    static void Main(string[] args)\n    {\n        ConcreteAggregate ca = new ConcreteAggregate();\n        ca[0] = \"AspNet3.5 揭秘\";\n        ca[0] = \"重构：改善既有代码的设计\";\n        ca[2] = \"设计模式\";\n        ca[3] = \"人月神话\";\n        ca[4] = \"代码大全2\";\n        Iterator i = new ConcreteIterator(ca);\n        while (!i.IsDone())\n        {\n            Console.WriteLine(\"要读的书:\" + i.CurrentItem());\n            i.Next();\n        }\n    }\n}\n```\n\n上面的代码是根据结构图实现的基础代码，在设计的运用中可以使用Net框架给我们提供的相关接口IEnumerable和IEnumerator，这两个接口在Net中的实现代码如下：\n```\npublic interface IEnumerable\n{\n    IEmumerator GetEnumerator();\n}\npublic interface IEmumerator\n{\n    Object Current { get; }\n    bool MoveNext();\n    void Reset();\n}\n```\n\n在Net中List实现了IEnumerable接口，下面的代码将List作为数据的容器来实现遍历：\n```\nclass Program\n{\n    static void Main(string[] args)\n    {\n        List<string> list = new List<string>\n        {\n            \"AspNet3.5 揭秘\",\"重构：改善既有代码的设计\",\"设计模式\",\n            \"人月神话\",\"代码大全2\"\n        };\n\n        IEnumerator i = list.GetEnumerator();\n        while (i.MoveNext())\n        {\n            Console.WriteLine(\"要读的书：\" + i.Current);\n        }\n    }\n}\n```\n上面的代码中试调用List的GetEnumerator方法返回IEmumerator类型的集合，然后取遍历，这样仍然显得比较麻烦，其实在Net中foreach已经实现了这样的功能，代码如下：\n```\nclass Program\n{\n    static void Main(string[] args)\n    {\n        List<string> list = new List<string>\n        {\n            \"AspNet3.5 揭秘\",\"重构：改善既有代码的设计\",\"设计模式\",\n            \"人月神话\",\"代码大全2\"\n        };\n        foreach (string s in list)\n        {\n            Console.WriteLine(\"要读的书：\" + s);\n        }\n    }\n}\n```\n可以看出foreach其实就是实现了下面这段代码\n```\nIEnumerator i = list.GetEnumerator();\nwhile (i.MoveNext())\n{\n    Console.WriteLine(\"要读的书：\" + i.Current);\n}\n```\nIterator模式的几个要点\n\n* 迭代抽象：访问一个聚合对象的内容而无需暴露它的内部表示。\n* 迭代多态：为遍历不同的集合结构提供一个统一的接口，从而支持同样的算法在不同的集合结构上进行操作。\n* 迭代器的健壮性考虑：遍历的同时更改迭代器所在的集合结构，会导致问题。\n\n","source":"_posts/design-patterns-notes-18-iterator-pattern.md","raw":"title: 设计模式笔记(18)—迭代器模式（行为型）\ndate: 2010-01-24\nurl: /2010/01/design-patterns-notes-18-iterator-pattern/\ncategories: [设计模式]\ntags:  [C#,设计模式]\n---\n\nGof定义\n\n提供一种方法顺序访问一个聚合对象中的各个元素， 而又不暴露该对象的内部表示。\n\n# 动机\n\n在软件构建过程中，集合对象内部结构常常变化各异。但对于这些集合对象，我们希望在不暴露其内部结构的同时，可以让外部客户代码透明地访问其中包含的元素；同时这种“透明遍历”也为“同一种算法在多种集合对象上进行操作”提供了可能。使用面向对象技术将这种遍历机制抽象为“迭代器对象”为“应对变化中的集合对象”提供了一种优雅的方式。\n<!--more-->\n迭代器模式结构图：\n\n![tool-manager](http://blog.fwhyy.com/wp-content/uploads/2010/01/2010-12-29_113434.png)\n\n* Aggregate:集合结构接口\n* Iterator:迭代器接口\n* Concreteaggregate:集合结构的具体类，继承Aggregate接口\n* ConcreteIteator:具体的迭代器类\n代码实现：\n\n```\n/// <summary>\n/// 集合结构接口\n/// </summary>\npublic interface Aggregate\n{\n    Iterator CreateIterator();\n}\n/// <summary>\n/// 迭代器接口\n/// </summary>\npublic interface Iterator\n{\n    object First();\n    object Next();\n    bool IsDone();\n    object CurrentItem();\n}\n/// <summary>\n/// 集合结构的具体类\n/// </summary>\nclass ConcreteAggregate : Aggregate\n{\n    private List<object> items = new List<object>();\n    public Iterator CreateIterator()\n    {\n        return new ConcreteIterator(this);\n    }\n    public int Count\n    {\n        get { return items.Count; }\n    }\n    public object this[int index]\n    {\n        get { return items[index]; }\n        set { items.Insert(index, value); }\n    }\n}\n/// <summary>\n/// 具体的迭代器类\n/// </summary>\nclass ConcreteIterator : Iterator\n{\n    private ConcreteAggregate _aggregate;\n    private int _current = 0;\n    public ConcreteIterator(ConcreteAggregate aggregate)\n    {\n        this._aggregate = aggregate;\n    }\n    public object First()\n    {\n        return _aggregate[0];\n    }\n    public object Next()\n    {\n        object r = null;\n        _current++;\n        if (_current < _aggregate.Count)\n        {\n            r = _aggregate[_current];\n        }\n        return r;\n    }\n    public bool IsDone()\n    {\n        return _current >= _aggregate.Count ? true : false;\n    }\n    public object CurrentItem()\n    {\n        return _aggregate[_current];\n    }\n}\n/// <summary>\n/// 客户端调用\n/// </summary>\nclass Program\n{\n    static void Main(string[] args)\n    {\n        ConcreteAggregate ca = new ConcreteAggregate();\n        ca[0] = \"AspNet3.5 揭秘\";\n        ca[0] = \"重构：改善既有代码的设计\";\n        ca[2] = \"设计模式\";\n        ca[3] = \"人月神话\";\n        ca[4] = \"代码大全2\";\n        Iterator i = new ConcreteIterator(ca);\n        while (!i.IsDone())\n        {\n            Console.WriteLine(\"要读的书:\" + i.CurrentItem());\n            i.Next();\n        }\n    }\n}\n```\n\n上面的代码是根据结构图实现的基础代码，在设计的运用中可以使用Net框架给我们提供的相关接口IEnumerable和IEnumerator，这两个接口在Net中的实现代码如下：\n```\npublic interface IEnumerable\n{\n    IEmumerator GetEnumerator();\n}\npublic interface IEmumerator\n{\n    Object Current { get; }\n    bool MoveNext();\n    void Reset();\n}\n```\n\n在Net中List实现了IEnumerable接口，下面的代码将List作为数据的容器来实现遍历：\n```\nclass Program\n{\n    static void Main(string[] args)\n    {\n        List<string> list = new List<string>\n        {\n            \"AspNet3.5 揭秘\",\"重构：改善既有代码的设计\",\"设计模式\",\n            \"人月神话\",\"代码大全2\"\n        };\n\n        IEnumerator i = list.GetEnumerator();\n        while (i.MoveNext())\n        {\n            Console.WriteLine(\"要读的书：\" + i.Current);\n        }\n    }\n}\n```\n上面的代码中试调用List的GetEnumerator方法返回IEmumerator类型的集合，然后取遍历，这样仍然显得比较麻烦，其实在Net中foreach已经实现了这样的功能，代码如下：\n```\nclass Program\n{\n    static void Main(string[] args)\n    {\n        List<string> list = new List<string>\n        {\n            \"AspNet3.5 揭秘\",\"重构：改善既有代码的设计\",\"设计模式\",\n            \"人月神话\",\"代码大全2\"\n        };\n        foreach (string s in list)\n        {\n            Console.WriteLine(\"要读的书：\" + s);\n        }\n    }\n}\n```\n可以看出foreach其实就是实现了下面这段代码\n```\nIEnumerator i = list.GetEnumerator();\nwhile (i.MoveNext())\n{\n    Console.WriteLine(\"要读的书：\" + i.Current);\n}\n```\nIterator模式的几个要点\n\n* 迭代抽象：访问一个聚合对象的内容而无需暴露它的内部表示。\n* 迭代多态：为遍历不同的集合结构提供一个统一的接口，从而支持同样的算法在不同的集合结构上进行操作。\n* 迭代器的健壮性考虑：遍历的同时更改迭代器所在的集合结构，会导致问题。\n\n","slug":"design-patterns-notes-18-iterator-pattern","published":1,"updated":"2016-08-11T14:37:10.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz91r004gxfynavkekac2","content":"<p>Gof定义</p>\n<p>提供一种方法顺序访问一个聚合对象中的各个元素， 而又不暴露该对象的内部表示。</p>\n<h1 id=\"动机\"><a href=\"#动机\" class=\"headerlink\" title=\"动机\"></a>动机</h1><p>在软件构建过程中，集合对象内部结构常常变化各异。但对于这些集合对象，我们希望在不暴露其内部结构的同时，可以让外部客户代码透明地访问其中包含的元素；同时这种“透明遍历”也为“同一种算法在多种集合对象上进行操作”提供了可能。使用面向对象技术将这种遍历机制抽象为“迭代器对象”为“应对变化中的集合对象”提供了一种优雅的方式。<br><a id=\"more\"></a><br>迭代器模式结构图：</p>\n<p><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/01/2010-12-29_113434.png\" alt=\"tool-manager\"></p>\n<ul>\n<li>Aggregate:集合结构接口</li>\n<li>Iterator:迭代器接口</li>\n<li>Concreteaggregate:集合结构的具体类，继承Aggregate接口</li>\n<li>ConcreteIteator:具体的迭代器类<br>代码实现：</li>\n</ul>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 集合结构接口</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">Aggregate</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\">Iterator <span class=\"title\">CreateIterator</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 迭代器接口</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">Iterator</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">object</span> <span class=\"title\">First</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">object</span> <span class=\"title\">Next</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">IsDone</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">object</span> <span class=\"title\">CurrentItem</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 集合结构的具体类</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteAggregate</span> : <span class=\"title\">Aggregate</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> List&lt;<span class=\"keyword\">object</span>&gt; items = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">object</span>&gt;();</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Iterator <span class=\"title\">CreateIterator</span>(<span class=\"params\"></span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ConcreteIterator(<span class=\"keyword\">this</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> Count</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> items.Count; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">object</span> <span class=\"keyword\">this</span>[<span class=\"keyword\">int</span> index]</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> items[index]; &#125;</div><div class=\"line\">        <span class=\"keyword\">set</span> &#123; items.Insert(index, <span class=\"keyword\">value</span>); &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 具体的迭代器类</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteIterator</span> : <span class=\"title\">Iterator</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> ConcreteAggregate _aggregate;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _current = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ConcreteIterator</span>(<span class=\"params\">ConcreteAggregate aggregate</span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._aggregate = aggregate;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">object</span> <span class=\"title\">First</span>(<span class=\"params\"></span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> _aggregate[<span class=\"number\">0</span>];</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">object</span> <span class=\"title\">Next</span>(<span class=\"params\"></span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">object</span> r = <span class=\"literal\">null</span>;</div><div class=\"line\">        _current++;</div><div class=\"line\">        <span class=\"keyword\">if</span> (_current &lt; _aggregate.Count)</div><div class=\"line\">        &#123;</div><div class=\"line\">            r = _aggregate[_current];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> r;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">IsDone</span>(<span class=\"params\"></span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> _current &gt;= _aggregate.Count ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">object</span> <span class=\"title\">CurrentItem</span>(<span class=\"params\"></span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> _aggregate[_current];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 客户端调用</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        ConcreteAggregate ca = <span class=\"keyword\">new</span> ConcreteAggregate();</div><div class=\"line\">        ca[<span class=\"number\">0</span>] = <span class=\"string\">\"AspNet3.5 揭秘\"</span>;</div><div class=\"line\">        ca[<span class=\"number\">0</span>] = <span class=\"string\">\"重构：改善既有代码的设计\"</span>;</div><div class=\"line\">        ca[<span class=\"number\">2</span>] = <span class=\"string\">\"设计模式\"</span>;</div><div class=\"line\">        ca[<span class=\"number\">3</span>] = <span class=\"string\">\"人月神话\"</span>;</div><div class=\"line\">        ca[<span class=\"number\">4</span>] = <span class=\"string\">\"代码大全2\"</span>;</div><div class=\"line\">        Iterator i = <span class=\"keyword\">new</span> ConcreteIterator(ca);</div><div class=\"line\">        <span class=\"keyword\">while</span> (!i.IsDone())</div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"要读的书:\"</span> + i.CurrentItem());</div><div class=\"line\">            i.Next();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的代码是根据结构图实现的基础代码，在设计的运用中可以使用Net框架给我们提供的相关接口IEnumerable和IEnumerator，这两个接口在Net中的实现代码如下：<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IEnumerable</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\">IEmumerator <span class=\"title\">GetEnumerator</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IEmumerator</span></div><div class=\"line\">&#123;</div><div class=\"line\">    Object Current &#123; <span class=\"keyword\">get</span>; &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">MoveNext</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Reset</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在Net中List实现了IEnumerable接口，下面的代码将List作为数据的容器来实现遍历：<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">class</span> Program</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        List&lt;<span class=\"built_in\">string</span>&gt; <span class=\"built_in\">list</span> = <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">string</span>&gt;</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"string\">\"AspNet3.5 揭秘\"</span>,<span class=\"string\">\"重构：改善既有代码的设计\"</span>,<span class=\"string\">\"设计模式\"</span>,</div><div class=\"line\">            <span class=\"string\">\"人月神话\"</span>,<span class=\"string\">\"代码大全2\"</span></div><div class=\"line\">        &#125;;</div><div class=\"line\"></div><div class=\"line\">        IEnumerator i = <span class=\"built_in\">list</span>.GetEnumerator();</div><div class=\"line\">        <span class=\"keyword\">while</span> (i.MoveNext())</div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"要读的书：\"</span> + i.Current);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>上面的代码中试调用List的GetEnumerator方法返回IEmumerator类型的集合，然后取遍历，这样仍然显得比较麻烦，其实在Net中foreach已经实现了这样的功能，代码如下：<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        List&lt;<span class=\"keyword\">string</span>&gt; list = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">string</span>&gt;</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"string\">\"AspNet3.5 揭秘\"</span>,<span class=\"string\">\"重构：改善既有代码的设计\"</span>,<span class=\"string\">\"设计模式\"</span>,</div><div class=\"line\">            <span class=\"string\">\"人月神话\"</span>,<span class=\"string\">\"代码大全2\"</span></div><div class=\"line\">        &#125;;</div><div class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">string</span> s <span class=\"keyword\">in</span> list)</div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"要读的书：\"</span> + s);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>可以看出foreach其实就是实现了下面这段代码<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">IEnumerator i = list.GetEnumerator()<span class=\"comment\">;</span></div><div class=\"line\">while (i.<span class=\"keyword\">MoveNext())</span></div><div class=\"line\">&#123;</div><div class=\"line\">    Console.WriteLine(<span class=\"string\">\"要读的书：\"</span> + i.Current)<span class=\"comment\">;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Iterator模式的几个要点</p>\n<ul>\n<li>迭代抽象：访问一个聚合对象的内容而无需暴露它的内部表示。</li>\n<li>迭代多态：为遍历不同的集合结构提供一个统一的接口，从而支持同样的算法在不同的集合结构上进行操作。</li>\n<li>迭代器的健壮性考虑：遍历的同时更改迭代器所在的集合结构，会导致问题。</li>\n</ul>\n","excerpt":"<p>Gof定义</p>\n<p>提供一种方法顺序访问一个聚合对象中的各个元素， 而又不暴露该对象的内部表示。</p>\n<h1 id=\"动机\"><a href=\"#动机\" class=\"headerlink\" title=\"动机\"></a>动机</h1><p>在软件构建过程中，集合对象内部结构常常变化各异。但对于这些集合对象，我们希望在不暴露其内部结构的同时，可以让外部客户代码透明地访问其中包含的元素；同时这种“透明遍历”也为“同一种算法在多种集合对象上进行操作”提供了可能。使用面向对象技术将这种遍历机制抽象为“迭代器对象”为“应对变化中的集合对象”提供了一种优雅的方式。<br>","more":"<br>迭代器模式结构图：</p>\n<p><img src=\"http://blog.fwhyy.com/wp-content/uploads/2010/01/2010-12-29_113434.png\" alt=\"tool-manager\"></p>\n<ul>\n<li>Aggregate:集合结构接口</li>\n<li>Iterator:迭代器接口</li>\n<li>Concreteaggregate:集合结构的具体类，继承Aggregate接口</li>\n<li>ConcreteIteator:具体的迭代器类<br>代码实现：</li>\n</ul>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 集合结构接口</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">Aggregate</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\">Iterator <span class=\"title\">CreateIterator</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 迭代器接口</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">Iterator</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">object</span> <span class=\"title\">First</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">object</span> <span class=\"title\">Next</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">IsDone</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">object</span> <span class=\"title\">CurrentItem</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 集合结构的具体类</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteAggregate</span> : <span class=\"title\">Aggregate</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> List&lt;<span class=\"keyword\">object</span>&gt; items = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">object</span>&gt;();</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Iterator <span class=\"title\">CreateIterator</span>(<span class=\"params\"></span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ConcreteIterator(<span class=\"keyword\">this</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> Count</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> items.Count; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">object</span> <span class=\"keyword\">this</span>[<span class=\"keyword\">int</span> index]</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> items[index]; &#125;</div><div class=\"line\">        <span class=\"keyword\">set</span> &#123; items.Insert(index, <span class=\"keyword\">value</span>); &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 具体的迭代器类</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteIterator</span> : <span class=\"title\">Iterator</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> ConcreteAggregate _aggregate;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _current = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ConcreteIterator</span>(<span class=\"params\">ConcreteAggregate aggregate</span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._aggregate = aggregate;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">object</span> <span class=\"title\">First</span>(<span class=\"params\"></span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> _aggregate[<span class=\"number\">0</span>];</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">object</span> <span class=\"title\">Next</span>(<span class=\"params\"></span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">object</span> r = <span class=\"literal\">null</span>;</div><div class=\"line\">        _current++;</div><div class=\"line\">        <span class=\"keyword\">if</span> (_current &lt; _aggregate.Count)</div><div class=\"line\">        &#123;</div><div class=\"line\">            r = _aggregate[_current];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> r;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">IsDone</span>(<span class=\"params\"></span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> _current &gt;= _aggregate.Count ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">object</span> <span class=\"title\">CurrentItem</span>(<span class=\"params\"></span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> _aggregate[_current];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 客户端调用</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        ConcreteAggregate ca = <span class=\"keyword\">new</span> ConcreteAggregate();</div><div class=\"line\">        ca[<span class=\"number\">0</span>] = <span class=\"string\">\"AspNet3.5 揭秘\"</span>;</div><div class=\"line\">        ca[<span class=\"number\">0</span>] = <span class=\"string\">\"重构：改善既有代码的设计\"</span>;</div><div class=\"line\">        ca[<span class=\"number\">2</span>] = <span class=\"string\">\"设计模式\"</span>;</div><div class=\"line\">        ca[<span class=\"number\">3</span>] = <span class=\"string\">\"人月神话\"</span>;</div><div class=\"line\">        ca[<span class=\"number\">4</span>] = <span class=\"string\">\"代码大全2\"</span>;</div><div class=\"line\">        Iterator i = <span class=\"keyword\">new</span> ConcreteIterator(ca);</div><div class=\"line\">        <span class=\"keyword\">while</span> (!i.IsDone())</div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"要读的书:\"</span> + i.CurrentItem());</div><div class=\"line\">            i.Next();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的代码是根据结构图实现的基础代码，在设计的运用中可以使用Net框架给我们提供的相关接口IEnumerable和IEnumerator，这两个接口在Net中的实现代码如下：<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IEnumerable</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\">IEmumerator <span class=\"title\">GetEnumerator</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IEmumerator</span></div><div class=\"line\">&#123;</div><div class=\"line\">    Object Current &#123; <span class=\"keyword\">get</span>; &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">MoveNext</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Reset</span>(<span class=\"params\"></span>)</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在Net中List实现了IEnumerable接口，下面的代码将List作为数据的容器来实现遍历：<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">class</span> Program</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        List&lt;<span class=\"built_in\">string</span>&gt; <span class=\"built_in\">list</span> = <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">string</span>&gt;</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"string\">\"AspNet3.5 揭秘\"</span>,<span class=\"string\">\"重构：改善既有代码的设计\"</span>,<span class=\"string\">\"设计模式\"</span>,</div><div class=\"line\">            <span class=\"string\">\"人月神话\"</span>,<span class=\"string\">\"代码大全2\"</span></div><div class=\"line\">        &#125;;</div><div class=\"line\"></div><div class=\"line\">        IEnumerator i = <span class=\"built_in\">list</span>.GetEnumerator();</div><div class=\"line\">        <span class=\"keyword\">while</span> (i.MoveNext())</div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"要读的书：\"</span> + i.Current);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>上面的代码中试调用List的GetEnumerator方法返回IEmumerator类型的集合，然后取遍历，这样仍然显得比较麻烦，其实在Net中foreach已经实现了这样的功能，代码如下：<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        List&lt;<span class=\"keyword\">string</span>&gt; list = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">string</span>&gt;</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"string\">\"AspNet3.5 揭秘\"</span>,<span class=\"string\">\"重构：改善既有代码的设计\"</span>,<span class=\"string\">\"设计模式\"</span>,</div><div class=\"line\">            <span class=\"string\">\"人月神话\"</span>,<span class=\"string\">\"代码大全2\"</span></div><div class=\"line\">        &#125;;</div><div class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">string</span> s <span class=\"keyword\">in</span> list)</div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"要读的书：\"</span> + s);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>可以看出foreach其实就是实现了下面这段代码<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">IEnumerator i = list.GetEnumerator()<span class=\"comment\">;</span></div><div class=\"line\">while (i.<span class=\"keyword\">MoveNext())</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    Console.WriteLine(<span class=\"string\">\"要读的书：\"</span> + i.Current)<span class=\"comment\">;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Iterator模式的几个要点</p>\n<ul>\n<li>迭代抽象：访问一个聚合对象的内容而无需暴露它的内部表示。</li>\n<li>迭代多态：为遍历不同的集合结构提供一个统一的接口，从而支持同样的算法在不同的集合结构上进行操作。</li>\n<li>迭代器的健壮性考虑：遍历的同时更改迭代器所在的集合结构，会导致问题。</li>\n</ul>"},{"title":"DotNet 3.0 框架介绍","date":"2007-08-09T16:00:00.000Z","_content":"\n微软.NET的最新版本，.NET Framework 3.0，为开发下一代业务解决方案软件系统开启了新的可能。它的设计目标是：提高生产力，降低基础设施复杂性，提供一个一致的元系统，让企业级服务、工作流解决方案和用户体验软件系统的开发更容易。\n<!--more-->\n在我和大量的构架师讨论的过程中，我听到解决方案构架师非常关心安全、开放的标准、互操作性、面向服务的构架、关键技术间的关系(例如Workflow Foundation和Biztalk)和生产力。在这篇文章当中，我将按照构架师社区最感兴趣的领域来逐一介绍.NET 3.0。\n\n## .NET 的相关版本\n\n自从微软推出第一个版本的.NET Framework，已经过去差不多6年了。3.0 是第一个随操作系统发布的框架，它附带在每个Windows Vista中，也可以支持Windows XP SP2 和 Windows Server 2003。直到.NET 3.0，以前的每个版本的.NET Framework都会伴随着一个新的通用语言运行时(Common Language Runtime)，后面将简称为CLR。但这次，微软没有修改.NET Framework 3.0 版本中的CLR(译者注：而是基于.NET 2.0的CLR)，这一点需要重点注意。\n\n![2010-12-30_191941](http://oec2003.qiniudn.com/2010-12-30_191941.gif)\n\n由于.NET 2.0和3.0共享同样的CLR，在.NET 2.0中编写的任何程序都可以运行于.NET 3.0中，这是和以前版本的一个重要而显著的区别。以改变来看，对于那些喜欢代数方程的人来说，它们之间的关系可以总结为下面的公式：\n\n.NET 3.0 = .NET 2.0 + WCF + WPF + WCS + WF\n\n我会为每个缩写提供一个定义，不过当你任何时候对.NET 2.0和3.0之间的关系感到困惑时，只要记住上面的这个方程式就好了。.NET 3.0其后的哲学之一就是提供一些功能让“基础设施结构”成为框架的一部分。它让你可以只关注你的关键的业务问题。\n\n.NET Framework 3.0通过4个关键的、以标准为基础的支柱来对应我们客户要求和验证的领域，以达成上述目标。它也包含了一个重要的叫做XAML的新语言。XAML是一个基于XML的声明性语言，通过XML定义对象和它们的属性，允许客户声明性地开发工作流(WF)和身临其境的用户体验(WPF)。让我们来浏览一下.NET 3.0框架中关键支柱的更详细内容。\n\n## Windows Communication Foundation (WCF)\n\nWCF允许你通过提供一个基于标准的框架和一个组合的架构来构建服务。WCF的3个关键设计理念是互操作性、生产力和面向服务的开发。\n\n![2010-12-30_192023](http://oec2003.qiniudn.com/2010-12-30_192023.gif)\n\n微软提供了若干个可以轻易添加和删除的消息层通道和服务模型层行为。你也可以定义自己的自定义实例，比如你能编写或者购买一个自定义ASCII编码器，把它作为可重用通道插入到消息层中，让多个系统都能使用。WCF可以和现有的投资互操作，并结合和扩展现存的微软分布式系统技术，如：Enterprise Services、System.Messaging、Microsoft .NET Remoting、ASMX和Web Services Extensions (WSE)。这样的改变预示着，你能使用单一的模型来处理不同类型的应用程序行为，这将显著降低应用程序开发的复杂性。通过支持WS-I 基本概要(WS-I Basic Profile)和大量的额外WS-*标准，WCF也提供和非微软应用程序的互操作能力。\n\n最后，从生产力来看，使用WCF来开发安全的事务性网络服务，你将获得生产力在级别上的显著提高。想想看，要实现类似WCF的功能你需要开发、生成和维护上万行代码，而现在WCF却已经作为基础框架的一部分提供给你了。WCF已经为你提供了一个首要的核心编程框架，以应付逐步增长的面向服务的开发。\n\n## Windows Workflow (WF)\n\n![2010-12-30_192056](http://oec2003.qiniudn.com/2010-12-30_192056.gif)\n\nWorkflow Foundation是一个企业级工作流开发框架和引擎，它首次把声明性工作流引向主流。WF支持有人参与的(Human)、系统的(System)、连续的(Sequential )和状态机(State-Machine)工作流。它提供了运行时基础、灵活的工作流控制机制、长时间运行和状态化工作流、对用户而言运行时和设计时的透明性，以及用于规则遵从和记录管理过程的审核能力。\n\nWorkflow Foundation允许你把一个工作流定义为一系列的活动。活动即是执行的单元，并被允许轻易地进行重用和组合。基本活动是在一个工作流里面的一些步骤，而组合活动可以包含其他活动。你甚至可以在工作流已经处于运行过程中时添加和删除活动，这将使你在面对改变的时候具有巨大的灵活性。Workflow Foundation提供了一个开箱即用的基础活动库，以及一个让合作伙伴和客户容易创建自定义活动的框架。\n\n在创建方式的选择方面，你可以用纯XAML标记、标记加代码或者纯代码。Visual Studio 2005 Designer for Workflow Foundation作为一个插件程序已经可以下载了，它提供了一个拖拽方式(drag-and-drop )的设计界面、直观的图形工具、并集成了属性(Properties)窗口、调试和图形注释功能。\n\n![2010-12-30_192132](http://oec2003.qiniudn.com/2010-12-30_192132.gif)\n\n许多构架师曾向我询问关于Workflow Foundation、Biztalk、Microsoft Office SharePoint Server 2007(MOSS 2007)和Windows SharePoint Services (WSS)之间关系的问题。\n\nWorkflow Foundation(WF)，是由微软开发Biztalk工作流引擎的同一个团队开发的，它倾向于被未来版本的Biztalk Server使用。\n\nWF提供了一个基础，用于实现在一个应用程序和在特定的情况下多个应用程序间的大部分工作流场景。Biztalk允许你自动化你的业务过程，通过适配器来编排由不同技术实现的系统所混合而成的过程，并提供了高级的业务活动监控能力。\n\n对于MOSS 2007和WSS，MOSS 2007构建于WF之上并使用WF作为基础功能提供了额外的功能和特性。Windows SharePoint Services作为Windows Server的添加项提供了一个MOSS 2007的功能子集。简言之，WSS提供了简单的文档管理和工作流能力。\n\n![2010-12-30_192205](http://oec2003.qiniudn.com/2010-12-30_192205.gif)\n\n## Windows Presentation Foundation (WPF)\n\nWindows Presentation Foundation试图弥合在游戏和娱乐产业中常见的身临其境的用户体验和在业务软件世界中静态又难用的界面之间的差距。WPF利用XAML让你无需成为图形设计师就能尽情地开发下一代界面。\n\n我建议你去看一个WPF应用程序的演示，来理解我指的下一代用户界面是什么意思。例如，你可以查看一下收藏于不列颠图书馆里面的15大最珍贵图书，其中包括了莫扎特和达芬奇的手稿。这个阅读器是一个基于WPF的应用程序，运行在Internet Explorer浏览器中，就是指所谓的XBAP(可扩展浏览器应用程序)——这是一个用于代替浏览器中的ActiveX功能的技术。WPF的重要不同之处是，它不是一个最终产品，或者一个美妙的丰富界面，而是一种开发和维护应用程序代码的方式。\n\n从构架的角度看，WPF通过分离图形元素和业务逻辑来保持一个非常清晰的划分。一个设计师可以使用Expression产品线和XAML来创建视图，而开发人员可以使用Visual Studio和VB.NET或C#来编写代码。\n\n近来另外一个需要更多关注的技术是WPF Everywhere(WPF/E)，它现在的官方名字叫SilverLight。请记住，SilverLight不是.NET 3.0框架的一部分。SilverLight是一个具有自己运行时的跨浏览器、跨平台的插件，它用于开发下一代微软基于.NET的多媒体程序和丰富交互的Web应用程序。你能在http://www.microsoft.com/silverlight中找到更多信息并观看一些演示。\n\n## Windows Card Spaces (WCS)\n\n在今天的世界中，每个人都携带着大量的自我声明和第三方颁发的身份标识。身份标识的例子包括驾驶证、信用卡、电影卡和其他类似的卡。\n\n我们把这些由自己控制的信息提供给请求方来证明我们的身份。Windows Card Spaces把用户控制的这个概念扩展到了数字世界。WCS创建了一个身份标识元系统，能显著改善在组织内部和组织之间的企业身份管理的方式。为了理解它的潜力，一位微软著名的评论家指出“这是自加密技术出现以来对计算机安全最重要的贡献之一”。\n\n在数字世界，身份标识被表述为对象(谁)、身份要求和安全令牌(对象和要求的数字表示)。WCS使用自我声明和托管两种概念的身份标识，一个自我声明的数字身份标识卡可以用于登陆类似Hotmail这样的服务，而托管的身份标识可能是一个由银行颁发的信用卡。\n\n下面的图片描述了被用于在不同的实体当中交换信息的协议。请记住在这个例子当中，身份提供者能使用Kerberos、X509或一个自定义的机制。类似的，中转方可以用SAML或者使用HTTPS post来发送安全令牌。\n\nWCS为不同的身份标识管理技术实现提供了一个总体的框架，以让它们共同工作。在Java One(世界上最大的Java会议)上，Sun和微软做了一个联合主题，演示了基于WS-*标准的互操作机制。我会把这个演示的链接和工具包贴到我在此文结束时提到的博客中。\n\n![2010-12-30_192236](http://oec2003.qiniudn.com/2010-12-30_192236.gif)\n\n## 结论\n\n.NET 3.0 Framework为构架师和开发人员开启了一个具有无限可能的新世界。它旨在让你开发、集成和维护应用程序更加容易。微软计划在.NET Framework未来的版本中继续推行这样的理念，来降低基础设施结构复杂性，并同时提高互操作性和标准支持。关于支持标准的完整列表和本文中描述的各个主题的详细资源，可以访问http://blogs.msdn.com/mohammadakif和点击.NET 3.0分类来获取。\n\n","source":"_posts/dotnet-3-0-framework-introduce.md","raw":"---\ntitle: DotNet 3.0 框架介绍\ndate: 2007-08-10\ncategories: [DotNet]\ntags: [DotNet,DotNet3.0]\n---\n\n微软.NET的最新版本，.NET Framework 3.0，为开发下一代业务解决方案软件系统开启了新的可能。它的设计目标是：提高生产力，降低基础设施复杂性，提供一个一致的元系统，让企业级服务、工作流解决方案和用户体验软件系统的开发更容易。\n<!--more-->\n在我和大量的构架师讨论的过程中，我听到解决方案构架师非常关心安全、开放的标准、互操作性、面向服务的构架、关键技术间的关系(例如Workflow Foundation和Biztalk)和生产力。在这篇文章当中，我将按照构架师社区最感兴趣的领域来逐一介绍.NET 3.0。\n\n## .NET 的相关版本\n\n自从微软推出第一个版本的.NET Framework，已经过去差不多6年了。3.0 是第一个随操作系统发布的框架，它附带在每个Windows Vista中，也可以支持Windows XP SP2 和 Windows Server 2003。直到.NET 3.0，以前的每个版本的.NET Framework都会伴随着一个新的通用语言运行时(Common Language Runtime)，后面将简称为CLR。但这次，微软没有修改.NET Framework 3.0 版本中的CLR(译者注：而是基于.NET 2.0的CLR)，这一点需要重点注意。\n\n![2010-12-30_191941](http://oec2003.qiniudn.com/2010-12-30_191941.gif)\n\n由于.NET 2.0和3.0共享同样的CLR，在.NET 2.0中编写的任何程序都可以运行于.NET 3.0中，这是和以前版本的一个重要而显著的区别。以改变来看，对于那些喜欢代数方程的人来说，它们之间的关系可以总结为下面的公式：\n\n.NET 3.0 = .NET 2.0 + WCF + WPF + WCS + WF\n\n我会为每个缩写提供一个定义，不过当你任何时候对.NET 2.0和3.0之间的关系感到困惑时，只要记住上面的这个方程式就好了。.NET 3.0其后的哲学之一就是提供一些功能让“基础设施结构”成为框架的一部分。它让你可以只关注你的关键的业务问题。\n\n.NET Framework 3.0通过4个关键的、以标准为基础的支柱来对应我们客户要求和验证的领域，以达成上述目标。它也包含了一个重要的叫做XAML的新语言。XAML是一个基于XML的声明性语言，通过XML定义对象和它们的属性，允许客户声明性地开发工作流(WF)和身临其境的用户体验(WPF)。让我们来浏览一下.NET 3.0框架中关键支柱的更详细内容。\n\n## Windows Communication Foundation (WCF)\n\nWCF允许你通过提供一个基于标准的框架和一个组合的架构来构建服务。WCF的3个关键设计理念是互操作性、生产力和面向服务的开发。\n\n![2010-12-30_192023](http://oec2003.qiniudn.com/2010-12-30_192023.gif)\n\n微软提供了若干个可以轻易添加和删除的消息层通道和服务模型层行为。你也可以定义自己的自定义实例，比如你能编写或者购买一个自定义ASCII编码器，把它作为可重用通道插入到消息层中，让多个系统都能使用。WCF可以和现有的投资互操作，并结合和扩展现存的微软分布式系统技术，如：Enterprise Services、System.Messaging、Microsoft .NET Remoting、ASMX和Web Services Extensions (WSE)。这样的改变预示着，你能使用单一的模型来处理不同类型的应用程序行为，这将显著降低应用程序开发的复杂性。通过支持WS-I 基本概要(WS-I Basic Profile)和大量的额外WS-*标准，WCF也提供和非微软应用程序的互操作能力。\n\n最后，从生产力来看，使用WCF来开发安全的事务性网络服务，你将获得生产力在级别上的显著提高。想想看，要实现类似WCF的功能你需要开发、生成和维护上万行代码，而现在WCF却已经作为基础框架的一部分提供给你了。WCF已经为你提供了一个首要的核心编程框架，以应付逐步增长的面向服务的开发。\n\n## Windows Workflow (WF)\n\n![2010-12-30_192056](http://oec2003.qiniudn.com/2010-12-30_192056.gif)\n\nWorkflow Foundation是一个企业级工作流开发框架和引擎，它首次把声明性工作流引向主流。WF支持有人参与的(Human)、系统的(System)、连续的(Sequential )和状态机(State-Machine)工作流。它提供了运行时基础、灵活的工作流控制机制、长时间运行和状态化工作流、对用户而言运行时和设计时的透明性，以及用于规则遵从和记录管理过程的审核能力。\n\nWorkflow Foundation允许你把一个工作流定义为一系列的活动。活动即是执行的单元，并被允许轻易地进行重用和组合。基本活动是在一个工作流里面的一些步骤，而组合活动可以包含其他活动。你甚至可以在工作流已经处于运行过程中时添加和删除活动，这将使你在面对改变的时候具有巨大的灵活性。Workflow Foundation提供了一个开箱即用的基础活动库，以及一个让合作伙伴和客户容易创建自定义活动的框架。\n\n在创建方式的选择方面，你可以用纯XAML标记、标记加代码或者纯代码。Visual Studio 2005 Designer for Workflow Foundation作为一个插件程序已经可以下载了，它提供了一个拖拽方式(drag-and-drop )的设计界面、直观的图形工具、并集成了属性(Properties)窗口、调试和图形注释功能。\n\n![2010-12-30_192132](http://oec2003.qiniudn.com/2010-12-30_192132.gif)\n\n许多构架师曾向我询问关于Workflow Foundation、Biztalk、Microsoft Office SharePoint Server 2007(MOSS 2007)和Windows SharePoint Services (WSS)之间关系的问题。\n\nWorkflow Foundation(WF)，是由微软开发Biztalk工作流引擎的同一个团队开发的，它倾向于被未来版本的Biztalk Server使用。\n\nWF提供了一个基础，用于实现在一个应用程序和在特定的情况下多个应用程序间的大部分工作流场景。Biztalk允许你自动化你的业务过程，通过适配器来编排由不同技术实现的系统所混合而成的过程，并提供了高级的业务活动监控能力。\n\n对于MOSS 2007和WSS，MOSS 2007构建于WF之上并使用WF作为基础功能提供了额外的功能和特性。Windows SharePoint Services作为Windows Server的添加项提供了一个MOSS 2007的功能子集。简言之，WSS提供了简单的文档管理和工作流能力。\n\n![2010-12-30_192205](http://oec2003.qiniudn.com/2010-12-30_192205.gif)\n\n## Windows Presentation Foundation (WPF)\n\nWindows Presentation Foundation试图弥合在游戏和娱乐产业中常见的身临其境的用户体验和在业务软件世界中静态又难用的界面之间的差距。WPF利用XAML让你无需成为图形设计师就能尽情地开发下一代界面。\n\n我建议你去看一个WPF应用程序的演示，来理解我指的下一代用户界面是什么意思。例如，你可以查看一下收藏于不列颠图书馆里面的15大最珍贵图书，其中包括了莫扎特和达芬奇的手稿。这个阅读器是一个基于WPF的应用程序，运行在Internet Explorer浏览器中，就是指所谓的XBAP(可扩展浏览器应用程序)——这是一个用于代替浏览器中的ActiveX功能的技术。WPF的重要不同之处是，它不是一个最终产品，或者一个美妙的丰富界面，而是一种开发和维护应用程序代码的方式。\n\n从构架的角度看，WPF通过分离图形元素和业务逻辑来保持一个非常清晰的划分。一个设计师可以使用Expression产品线和XAML来创建视图，而开发人员可以使用Visual Studio和VB.NET或C#来编写代码。\n\n近来另外一个需要更多关注的技术是WPF Everywhere(WPF/E)，它现在的官方名字叫SilverLight。请记住，SilverLight不是.NET 3.0框架的一部分。SilverLight是一个具有自己运行时的跨浏览器、跨平台的插件，它用于开发下一代微软基于.NET的多媒体程序和丰富交互的Web应用程序。你能在http://www.microsoft.com/silverlight中找到更多信息并观看一些演示。\n\n## Windows Card Spaces (WCS)\n\n在今天的世界中，每个人都携带着大量的自我声明和第三方颁发的身份标识。身份标识的例子包括驾驶证、信用卡、电影卡和其他类似的卡。\n\n我们把这些由自己控制的信息提供给请求方来证明我们的身份。Windows Card Spaces把用户控制的这个概念扩展到了数字世界。WCS创建了一个身份标识元系统，能显著改善在组织内部和组织之间的企业身份管理的方式。为了理解它的潜力，一位微软著名的评论家指出“这是自加密技术出现以来对计算机安全最重要的贡献之一”。\n\n在数字世界，身份标识被表述为对象(谁)、身份要求和安全令牌(对象和要求的数字表示)。WCS使用自我声明和托管两种概念的身份标识，一个自我声明的数字身份标识卡可以用于登陆类似Hotmail这样的服务，而托管的身份标识可能是一个由银行颁发的信用卡。\n\n下面的图片描述了被用于在不同的实体当中交换信息的协议。请记住在这个例子当中，身份提供者能使用Kerberos、X509或一个自定义的机制。类似的，中转方可以用SAML或者使用HTTPS post来发送安全令牌。\n\nWCS为不同的身份标识管理技术实现提供了一个总体的框架，以让它们共同工作。在Java One(世界上最大的Java会议)上，Sun和微软做了一个联合主题，演示了基于WS-*标准的互操作机制。我会把这个演示的链接和工具包贴到我在此文结束时提到的博客中。\n\n![2010-12-30_192236](http://oec2003.qiniudn.com/2010-12-30_192236.gif)\n\n## 结论\n\n.NET 3.0 Framework为构架师和开发人员开启了一个具有无限可能的新世界。它旨在让你开发、集成和维护应用程序更加容易。微软计划在.NET Framework未来的版本中继续推行这样的理念，来降低基础设施结构复杂性，并同时提高互操作性和标准支持。关于支持标准的完整列表和本文中描述的各个主题的详细资源，可以访问http://blogs.msdn.com/mohammadakif和点击.NET 3.0分类来获取。\n\n","slug":"dotnet-3-0-framework-introduce","published":1,"updated":"2016-08-13T08:12:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz91u004jxfynvnolerl5","content":"<p>微软.NET的最新版本，.NET Framework 3.0，为开发下一代业务解决方案软件系统开启了新的可能。它的设计目标是：提高生产力，降低基础设施复杂性，提供一个一致的元系统，让企业级服务、工作流解决方案和用户体验软件系统的开发更容易。<br><a id=\"more\"></a><br>在我和大量的构架师讨论的过程中，我听到解决方案构架师非常关心安全、开放的标准、互操作性、面向服务的构架、关键技术间的关系(例如Workflow Foundation和Biztalk)和生产力。在这篇文章当中，我将按照构架师社区最感兴趣的领域来逐一介绍.NET 3.0。</p>\n<h2 id=\"NET-的相关版本\"><a href=\"#NET-的相关版本\" class=\"headerlink\" title=\".NET 的相关版本\"></a>.NET 的相关版本</h2><p>自从微软推出第一个版本的.NET Framework，已经过去差不多6年了。3.0 是第一个随操作系统发布的框架，它附带在每个Windows Vista中，也可以支持Windows XP SP2 和 Windows Server 2003。直到.NET 3.0，以前的每个版本的.NET Framework都会伴随着一个新的通用语言运行时(Common Language Runtime)，后面将简称为CLR。但这次，微软没有修改.NET Framework 3.0 版本中的CLR(译者注：而是基于.NET 2.0的CLR)，这一点需要重点注意。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_191941.gif\" alt=\"2010-12-30_191941\"></p>\n<p>由于.NET 2.0和3.0共享同样的CLR，在.NET 2.0中编写的任何程序都可以运行于.NET 3.0中，这是和以前版本的一个重要而显著的区别。以改变来看，对于那些喜欢代数方程的人来说，它们之间的关系可以总结为下面的公式：</p>\n<p>.NET 3.0 = .NET 2.0 + WCF + WPF + WCS + WF</p>\n<p>我会为每个缩写提供一个定义，不过当你任何时候对.NET 2.0和3.0之间的关系感到困惑时，只要记住上面的这个方程式就好了。.NET 3.0其后的哲学之一就是提供一些功能让“基础设施结构”成为框架的一部分。它让你可以只关注你的关键的业务问题。</p>\n<p>.NET Framework 3.0通过4个关键的、以标准为基础的支柱来对应我们客户要求和验证的领域，以达成上述目标。它也包含了一个重要的叫做XAML的新语言。XAML是一个基于XML的声明性语言，通过XML定义对象和它们的属性，允许客户声明性地开发工作流(WF)和身临其境的用户体验(WPF)。让我们来浏览一下.NET 3.0框架中关键支柱的更详细内容。</p>\n<h2 id=\"Windows-Communication-Foundation-WCF\"><a href=\"#Windows-Communication-Foundation-WCF\" class=\"headerlink\" title=\"Windows Communication Foundation (WCF)\"></a>Windows Communication Foundation (WCF)</h2><p>WCF允许你通过提供一个基于标准的框架和一个组合的架构来构建服务。WCF的3个关键设计理念是互操作性、生产力和面向服务的开发。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_192023.gif\" alt=\"2010-12-30_192023\"></p>\n<p>微软提供了若干个可以轻易添加和删除的消息层通道和服务模型层行为。你也可以定义自己的自定义实例，比如你能编写或者购买一个自定义ASCII编码器，把它作为可重用通道插入到消息层中，让多个系统都能使用。WCF可以和现有的投资互操作，并结合和扩展现存的微软分布式系统技术，如：Enterprise Services、System.Messaging、Microsoft .NET Remoting、ASMX和Web Services Extensions (WSE)。这样的改变预示着，你能使用单一的模型来处理不同类型的应用程序行为，这将显著降低应用程序开发的复杂性。通过支持WS-I 基本概要(WS-I Basic Profile)和大量的额外WS-*标准，WCF也提供和非微软应用程序的互操作能力。</p>\n<p>最后，从生产力来看，使用WCF来开发安全的事务性网络服务，你将获得生产力在级别上的显著提高。想想看，要实现类似WCF的功能你需要开发、生成和维护上万行代码，而现在WCF却已经作为基础框架的一部分提供给你了。WCF已经为你提供了一个首要的核心编程框架，以应付逐步增长的面向服务的开发。</p>\n<h2 id=\"Windows-Workflow-WF\"><a href=\"#Windows-Workflow-WF\" class=\"headerlink\" title=\"Windows Workflow (WF)\"></a>Windows Workflow (WF)</h2><p><img src=\"http://oec2003.qiniudn.com/2010-12-30_192056.gif\" alt=\"2010-12-30_192056\"></p>\n<p>Workflow Foundation是一个企业级工作流开发框架和引擎，它首次把声明性工作流引向主流。WF支持有人参与的(Human)、系统的(System)、连续的(Sequential )和状态机(State-Machine)工作流。它提供了运行时基础、灵活的工作流控制机制、长时间运行和状态化工作流、对用户而言运行时和设计时的透明性，以及用于规则遵从和记录管理过程的审核能力。</p>\n<p>Workflow Foundation允许你把一个工作流定义为一系列的活动。活动即是执行的单元，并被允许轻易地进行重用和组合。基本活动是在一个工作流里面的一些步骤，而组合活动可以包含其他活动。你甚至可以在工作流已经处于运行过程中时添加和删除活动，这将使你在面对改变的时候具有巨大的灵活性。Workflow Foundation提供了一个开箱即用的基础活动库，以及一个让合作伙伴和客户容易创建自定义活动的框架。</p>\n<p>在创建方式的选择方面，你可以用纯XAML标记、标记加代码或者纯代码。Visual Studio 2005 Designer for Workflow Foundation作为一个插件程序已经可以下载了，它提供了一个拖拽方式(drag-and-drop )的设计界面、直观的图形工具、并集成了属性(Properties)窗口、调试和图形注释功能。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_192132.gif\" alt=\"2010-12-30_192132\"></p>\n<p>许多构架师曾向我询问关于Workflow Foundation、Biztalk、Microsoft Office SharePoint Server 2007(MOSS 2007)和Windows SharePoint Services (WSS)之间关系的问题。</p>\n<p>Workflow Foundation(WF)，是由微软开发Biztalk工作流引擎的同一个团队开发的，它倾向于被未来版本的Biztalk Server使用。</p>\n<p>WF提供了一个基础，用于实现在一个应用程序和在特定的情况下多个应用程序间的大部分工作流场景。Biztalk允许你自动化你的业务过程，通过适配器来编排由不同技术实现的系统所混合而成的过程，并提供了高级的业务活动监控能力。</p>\n<p>对于MOSS 2007和WSS，MOSS 2007构建于WF之上并使用WF作为基础功能提供了额外的功能和特性。Windows SharePoint Services作为Windows Server的添加项提供了一个MOSS 2007的功能子集。简言之，WSS提供了简单的文档管理和工作流能力。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_192205.gif\" alt=\"2010-12-30_192205\"></p>\n<h2 id=\"Windows-Presentation-Foundation-WPF\"><a href=\"#Windows-Presentation-Foundation-WPF\" class=\"headerlink\" title=\"Windows Presentation Foundation (WPF)\"></a>Windows Presentation Foundation (WPF)</h2><p>Windows Presentation Foundation试图弥合在游戏和娱乐产业中常见的身临其境的用户体验和在业务软件世界中静态又难用的界面之间的差距。WPF利用XAML让你无需成为图形设计师就能尽情地开发下一代界面。</p>\n<p>我建议你去看一个WPF应用程序的演示，来理解我指的下一代用户界面是什么意思。例如，你可以查看一下收藏于不列颠图书馆里面的15大最珍贵图书，其中包括了莫扎特和达芬奇的手稿。这个阅读器是一个基于WPF的应用程序，运行在Internet Explorer浏览器中，就是指所谓的XBAP(可扩展浏览器应用程序)——这是一个用于代替浏览器中的ActiveX功能的技术。WPF的重要不同之处是，它不是一个最终产品，或者一个美妙的丰富界面，而是一种开发和维护应用程序代码的方式。</p>\n<p>从构架的角度看，WPF通过分离图形元素和业务逻辑来保持一个非常清晰的划分。一个设计师可以使用Expression产品线和XAML来创建视图，而开发人员可以使用Visual Studio和VB.NET或C#来编写代码。</p>\n<p>近来另外一个需要更多关注的技术是WPF Everywhere(WPF/E)，它现在的官方名字叫SilverLight。请记住，SilverLight不是.NET 3.0框架的一部分。SilverLight是一个具有自己运行时的跨浏览器、跨平台的插件，它用于开发下一代微软基于.NET的多媒体程序和丰富交互的Web应用程序。你能在<a href=\"http://www.microsoft.com/silverlight中找到更多信息并观看一些演示。\" target=\"_blank\" rel=\"external\">http://www.microsoft.com/silverlight中找到更多信息并观看一些演示。</a></p>\n<h2 id=\"Windows-Card-Spaces-WCS\"><a href=\"#Windows-Card-Spaces-WCS\" class=\"headerlink\" title=\"Windows Card Spaces (WCS)\"></a>Windows Card Spaces (WCS)</h2><p>在今天的世界中，每个人都携带着大量的自我声明和第三方颁发的身份标识。身份标识的例子包括驾驶证、信用卡、电影卡和其他类似的卡。</p>\n<p>我们把这些由自己控制的信息提供给请求方来证明我们的身份。Windows Card Spaces把用户控制的这个概念扩展到了数字世界。WCS创建了一个身份标识元系统，能显著改善在组织内部和组织之间的企业身份管理的方式。为了理解它的潜力，一位微软著名的评论家指出“这是自加密技术出现以来对计算机安全最重要的贡献之一”。</p>\n<p>在数字世界，身份标识被表述为对象(谁)、身份要求和安全令牌(对象和要求的数字表示)。WCS使用自我声明和托管两种概念的身份标识，一个自我声明的数字身份标识卡可以用于登陆类似Hotmail这样的服务，而托管的身份标识可能是一个由银行颁发的信用卡。</p>\n<p>下面的图片描述了被用于在不同的实体当中交换信息的协议。请记住在这个例子当中，身份提供者能使用Kerberos、X509或一个自定义的机制。类似的，中转方可以用SAML或者使用HTTPS post来发送安全令牌。</p>\n<p>WCS为不同的身份标识管理技术实现提供了一个总体的框架，以让它们共同工作。在Java One(世界上最大的Java会议)上，Sun和微软做了一个联合主题，演示了基于WS-*标准的互操作机制。我会把这个演示的链接和工具包贴到我在此文结束时提到的博客中。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_192236.gif\" alt=\"2010-12-30_192236\"></p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>.NET 3.0 Framework为构架师和开发人员开启了一个具有无限可能的新世界。它旨在让你开发、集成和维护应用程序更加容易。微软计划在.NET Framework未来的版本中继续推行这样的理念，来降低基础设施结构复杂性，并同时提高互操作性和标准支持。关于支持标准的完整列表和本文中描述的各个主题的详细资源，可以访问<a href=\"http://blogs.msdn.com/mohammadakif和点击.NET\" target=\"_blank\" rel=\"external\">http://blogs.msdn.com/mohammadakif和点击.NET</a> 3.0分类来获取。</p>\n","excerpt":"<p>微软.NET的最新版本，.NET Framework 3.0，为开发下一代业务解决方案软件系统开启了新的可能。它的设计目标是：提高生产力，降低基础设施复杂性，提供一个一致的元系统，让企业级服务、工作流解决方案和用户体验软件系统的开发更容易。<br>","more":"<br>在我和大量的构架师讨论的过程中，我听到解决方案构架师非常关心安全、开放的标准、互操作性、面向服务的构架、关键技术间的关系(例如Workflow Foundation和Biztalk)和生产力。在这篇文章当中，我将按照构架师社区最感兴趣的领域来逐一介绍.NET 3.0。</p>\n<h2 id=\"NET-的相关版本\"><a href=\"#NET-的相关版本\" class=\"headerlink\" title=\".NET 的相关版本\"></a>.NET 的相关版本</h2><p>自从微软推出第一个版本的.NET Framework，已经过去差不多6年了。3.0 是第一个随操作系统发布的框架，它附带在每个Windows Vista中，也可以支持Windows XP SP2 和 Windows Server 2003。直到.NET 3.0，以前的每个版本的.NET Framework都会伴随着一个新的通用语言运行时(Common Language Runtime)，后面将简称为CLR。但这次，微软没有修改.NET Framework 3.0 版本中的CLR(译者注：而是基于.NET 2.0的CLR)，这一点需要重点注意。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_191941.gif\" alt=\"2010-12-30_191941\"></p>\n<p>由于.NET 2.0和3.0共享同样的CLR，在.NET 2.0中编写的任何程序都可以运行于.NET 3.0中，这是和以前版本的一个重要而显著的区别。以改变来看，对于那些喜欢代数方程的人来说，它们之间的关系可以总结为下面的公式：</p>\n<p>.NET 3.0 = .NET 2.0 + WCF + WPF + WCS + WF</p>\n<p>我会为每个缩写提供一个定义，不过当你任何时候对.NET 2.0和3.0之间的关系感到困惑时，只要记住上面的这个方程式就好了。.NET 3.0其后的哲学之一就是提供一些功能让“基础设施结构”成为框架的一部分。它让你可以只关注你的关键的业务问题。</p>\n<p>.NET Framework 3.0通过4个关键的、以标准为基础的支柱来对应我们客户要求和验证的领域，以达成上述目标。它也包含了一个重要的叫做XAML的新语言。XAML是一个基于XML的声明性语言，通过XML定义对象和它们的属性，允许客户声明性地开发工作流(WF)和身临其境的用户体验(WPF)。让我们来浏览一下.NET 3.0框架中关键支柱的更详细内容。</p>\n<h2 id=\"Windows-Communication-Foundation-WCF\"><a href=\"#Windows-Communication-Foundation-WCF\" class=\"headerlink\" title=\"Windows Communication Foundation (WCF)\"></a>Windows Communication Foundation (WCF)</h2><p>WCF允许你通过提供一个基于标准的框架和一个组合的架构来构建服务。WCF的3个关键设计理念是互操作性、生产力和面向服务的开发。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_192023.gif\" alt=\"2010-12-30_192023\"></p>\n<p>微软提供了若干个可以轻易添加和删除的消息层通道和服务模型层行为。你也可以定义自己的自定义实例，比如你能编写或者购买一个自定义ASCII编码器，把它作为可重用通道插入到消息层中，让多个系统都能使用。WCF可以和现有的投资互操作，并结合和扩展现存的微软分布式系统技术，如：Enterprise Services、System.Messaging、Microsoft .NET Remoting、ASMX和Web Services Extensions (WSE)。这样的改变预示着，你能使用单一的模型来处理不同类型的应用程序行为，这将显著降低应用程序开发的复杂性。通过支持WS-I 基本概要(WS-I Basic Profile)和大量的额外WS-*标准，WCF也提供和非微软应用程序的互操作能力。</p>\n<p>最后，从生产力来看，使用WCF来开发安全的事务性网络服务，你将获得生产力在级别上的显著提高。想想看，要实现类似WCF的功能你需要开发、生成和维护上万行代码，而现在WCF却已经作为基础框架的一部分提供给你了。WCF已经为你提供了一个首要的核心编程框架，以应付逐步增长的面向服务的开发。</p>\n<h2 id=\"Windows-Workflow-WF\"><a href=\"#Windows-Workflow-WF\" class=\"headerlink\" title=\"Windows Workflow (WF)\"></a>Windows Workflow (WF)</h2><p><img src=\"http://oec2003.qiniudn.com/2010-12-30_192056.gif\" alt=\"2010-12-30_192056\"></p>\n<p>Workflow Foundation是一个企业级工作流开发框架和引擎，它首次把声明性工作流引向主流。WF支持有人参与的(Human)、系统的(System)、连续的(Sequential )和状态机(State-Machine)工作流。它提供了运行时基础、灵活的工作流控制机制、长时间运行和状态化工作流、对用户而言运行时和设计时的透明性，以及用于规则遵从和记录管理过程的审核能力。</p>\n<p>Workflow Foundation允许你把一个工作流定义为一系列的活动。活动即是执行的单元，并被允许轻易地进行重用和组合。基本活动是在一个工作流里面的一些步骤，而组合活动可以包含其他活动。你甚至可以在工作流已经处于运行过程中时添加和删除活动，这将使你在面对改变的时候具有巨大的灵活性。Workflow Foundation提供了一个开箱即用的基础活动库，以及一个让合作伙伴和客户容易创建自定义活动的框架。</p>\n<p>在创建方式的选择方面，你可以用纯XAML标记、标记加代码或者纯代码。Visual Studio 2005 Designer for Workflow Foundation作为一个插件程序已经可以下载了，它提供了一个拖拽方式(drag-and-drop )的设计界面、直观的图形工具、并集成了属性(Properties)窗口、调试和图形注释功能。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_192132.gif\" alt=\"2010-12-30_192132\"></p>\n<p>许多构架师曾向我询问关于Workflow Foundation、Biztalk、Microsoft Office SharePoint Server 2007(MOSS 2007)和Windows SharePoint Services (WSS)之间关系的问题。</p>\n<p>Workflow Foundation(WF)，是由微软开发Biztalk工作流引擎的同一个团队开发的，它倾向于被未来版本的Biztalk Server使用。</p>\n<p>WF提供了一个基础，用于实现在一个应用程序和在特定的情况下多个应用程序间的大部分工作流场景。Biztalk允许你自动化你的业务过程，通过适配器来编排由不同技术实现的系统所混合而成的过程，并提供了高级的业务活动监控能力。</p>\n<p>对于MOSS 2007和WSS，MOSS 2007构建于WF之上并使用WF作为基础功能提供了额外的功能和特性。Windows SharePoint Services作为Windows Server的添加项提供了一个MOSS 2007的功能子集。简言之，WSS提供了简单的文档管理和工作流能力。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_192205.gif\" alt=\"2010-12-30_192205\"></p>\n<h2 id=\"Windows-Presentation-Foundation-WPF\"><a href=\"#Windows-Presentation-Foundation-WPF\" class=\"headerlink\" title=\"Windows Presentation Foundation (WPF)\"></a>Windows Presentation Foundation (WPF)</h2><p>Windows Presentation Foundation试图弥合在游戏和娱乐产业中常见的身临其境的用户体验和在业务软件世界中静态又难用的界面之间的差距。WPF利用XAML让你无需成为图形设计师就能尽情地开发下一代界面。</p>\n<p>我建议你去看一个WPF应用程序的演示，来理解我指的下一代用户界面是什么意思。例如，你可以查看一下收藏于不列颠图书馆里面的15大最珍贵图书，其中包括了莫扎特和达芬奇的手稿。这个阅读器是一个基于WPF的应用程序，运行在Internet Explorer浏览器中，就是指所谓的XBAP(可扩展浏览器应用程序)——这是一个用于代替浏览器中的ActiveX功能的技术。WPF的重要不同之处是，它不是一个最终产品，或者一个美妙的丰富界面，而是一种开发和维护应用程序代码的方式。</p>\n<p>从构架的角度看，WPF通过分离图形元素和业务逻辑来保持一个非常清晰的划分。一个设计师可以使用Expression产品线和XAML来创建视图，而开发人员可以使用Visual Studio和VB.NET或C#来编写代码。</p>\n<p>近来另外一个需要更多关注的技术是WPF Everywhere(WPF/E)，它现在的官方名字叫SilverLight。请记住，SilverLight不是.NET 3.0框架的一部分。SilverLight是一个具有自己运行时的跨浏览器、跨平台的插件，它用于开发下一代微软基于.NET的多媒体程序和丰富交互的Web应用程序。你能在<a href=\"http://www.microsoft.com/silverlight中找到更多信息并观看一些演示。\">http://www.microsoft.com/silverlight中找到更多信息并观看一些演示。</a></p>\n<h2 id=\"Windows-Card-Spaces-WCS\"><a href=\"#Windows-Card-Spaces-WCS\" class=\"headerlink\" title=\"Windows Card Spaces (WCS)\"></a>Windows Card Spaces (WCS)</h2><p>在今天的世界中，每个人都携带着大量的自我声明和第三方颁发的身份标识。身份标识的例子包括驾驶证、信用卡、电影卡和其他类似的卡。</p>\n<p>我们把这些由自己控制的信息提供给请求方来证明我们的身份。Windows Card Spaces把用户控制的这个概念扩展到了数字世界。WCS创建了一个身份标识元系统，能显著改善在组织内部和组织之间的企业身份管理的方式。为了理解它的潜力，一位微软著名的评论家指出“这是自加密技术出现以来对计算机安全最重要的贡献之一”。</p>\n<p>在数字世界，身份标识被表述为对象(谁)、身份要求和安全令牌(对象和要求的数字表示)。WCS使用自我声明和托管两种概念的身份标识，一个自我声明的数字身份标识卡可以用于登陆类似Hotmail这样的服务，而托管的身份标识可能是一个由银行颁发的信用卡。</p>\n<p>下面的图片描述了被用于在不同的实体当中交换信息的协议。请记住在这个例子当中，身份提供者能使用Kerberos、X509或一个自定义的机制。类似的，中转方可以用SAML或者使用HTTPS post来发送安全令牌。</p>\n<p>WCS为不同的身份标识管理技术实现提供了一个总体的框架，以让它们共同工作。在Java One(世界上最大的Java会议)上，Sun和微软做了一个联合主题，演示了基于WS-*标准的互操作机制。我会把这个演示的链接和工具包贴到我在此文结束时提到的博客中。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_192236.gif\" alt=\"2010-12-30_192236\"></p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>.NET 3.0 Framework为构架师和开发人员开启了一个具有无限可能的新世界。它旨在让你开发、集成和维护应用程序更加容易。微软计划在.NET Framework未来的版本中继续推行这样的理念，来降低基础设施结构复杂性，并同时提高互操作性和标准支持。关于支持标准的完整列表和本文中描述的各个主题的详细资源，可以访问<a href=\"http://blogs.msdn.com/mohammadakif和点击.NET\">http://blogs.msdn.com/mohammadakif和点击.NET</a> 3.0分类来获取。</p>"},{"title":"动态添加GridView行","date":"2008-02-14T16:00:00.000Z","_content":"\n## C#代码:\n\n```\nusing System;\nusing System.Data;\nusing System.Configuration;\nusing System.Web;\nusing System.Web.Security;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\nusing System.Web.UI.HtmlControls;\nusing System.Data.SqlClient;\n\npublic partial class _Default : System.Web.UI.Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        if (!this.IsPostBack)\n        {\n            BindGrid();\n        }\n    }\n\n    private DataTable ReadGridView()\n    {\n        DataTable dt = new DataTable();\n        DataRow dr;\n        dt.Columns.Add(new DataColumn(\"ProductID\", typeof(string)));\n        dt.Columns.Add(new DataColumn(\"ProductName\", typeof(string)));\n        dt.Columns.Add(new DataColumn(\"CategoryID\", typeof(string)));\n        for (int i = 0; i < this.GridView1.Rows.Count; i++)\n        {\n            dr = dt.NewRow();\n            dr[0] = this.GridView1.Rows[i].Cells[0].Text.Trim();\n            dr[1] = this.GridView1.Rows[i].Cells[1].Text.Trim();\n            dr[2] = this.GridView1.Rows[i].Cells[2].Text.Trim();\n            dt.Rows.Add(dr);\n        }\n        return dt;\n    }\n    protected void Button1_Click(object sender, EventArgs e)\n    {\n        DataTable dt = ReadGridView();\n        //this.GridView1.DataSource = dt;\n        //this.GridView1.DataBind();\n        DataRow row = dt.NewRow();\n        row.ItemArray = new object[] { \"oec2003\", \"oec2003\", \"oec2003\" };\n        dt.Rows.InsertAt(row, 0);\n        dt.AcceptChanges();\n        this.GridView1.DataSource = dt;\n        this.GridView1.DataBind();\n    }\n\n    private void BindGrid()\n    {\n        string str = ConfigurationManager.ConnectionStrings[\"NorthwindConnectionString\"].ToString();\n        using (SqlConnection con = new SqlConnection(str))\n        {\n            SqlCommand cmd = new SqlCommand(\"SELECT top 1  [ProductID], [ProductName], [CategoryID] FROM [Products]\", con);\n            SqlDataAdapter sda = new SqlDataAdapter(cmd);\n            DataSet ds = new DataSet();\n            sda.Fill(ds);\n            this.GridView1.DataSource = ds.Tables[0].DefaultView;\n            this.GridView1.DataBind();\n            sda.Dispose();\n            ds.Dispose();\n        }\n\n    }\n}\n```\n\n## Html代码\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"Default.aspx.cs\" Inherits=\"_Default\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" 、\n    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head id=\"Head1\" runat=\"server\">\n    <title>无标题页</title>\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\">\n    <div>\n        <asp:Button ID=\"Button1\" runat=\"server\" OnClick=\"Button1_Click\" Text=\"Button\" />\n        <asp:GridView ID=\"GridView2\" runat=\"server\" AutoGenerateColumns=\"False\" DataKeyNames=\"ProductID\">\n            <Columns>\n                <asp:BoundField DataField=\"ProductID\" HeaderText=\"ProductID\" InsertVisible=\"False\"\n                    ReadOnly=\"True\" SortExpression=\"ProductID\" />\n                <asp:BoundField DataField=\"ProductName\" HeaderText=\"ProductName\" SortExpression=\"ProductName\" />\n                <asp:BoundField DataField=\"CategoryID\" HeaderText=\"CategoryID\" SortExpression=\"CategoryID\" />\n            </Columns>\n        </asp:GridView>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n## 数据库连接字串\n\n```\n<connectionStrings>\n <add name=\"NorthwindConnectionString\"\n      connectionString=\"Data Source=FENGWEI;Initial Catalog=Northwind;User ID=sa;Password=1234\"\n      providerName=\"System.Data.SqlClient\"/>\n</connectionStrings>\n```\n\n[AddRow.rar](http://files.cnblogs.com/oec2003/AddRow.rar)\n\n\n","source":"_posts/dynamically-add-tow-to-gridview.md","raw":"---\ntitle: 动态添加GridView行\ndate: 2008-02-15\ncategories: [Asp.Net]\ntags: [AspNet,GrdiView]\n---\n\n## C#代码:\n\n```\nusing System;\nusing System.Data;\nusing System.Configuration;\nusing System.Web;\nusing System.Web.Security;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\nusing System.Web.UI.HtmlControls;\nusing System.Data.SqlClient;\n\npublic partial class _Default : System.Web.UI.Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        if (!this.IsPostBack)\n        {\n            BindGrid();\n        }\n    }\n\n    private DataTable ReadGridView()\n    {\n        DataTable dt = new DataTable();\n        DataRow dr;\n        dt.Columns.Add(new DataColumn(\"ProductID\", typeof(string)));\n        dt.Columns.Add(new DataColumn(\"ProductName\", typeof(string)));\n        dt.Columns.Add(new DataColumn(\"CategoryID\", typeof(string)));\n        for (int i = 0; i < this.GridView1.Rows.Count; i++)\n        {\n            dr = dt.NewRow();\n            dr[0] = this.GridView1.Rows[i].Cells[0].Text.Trim();\n            dr[1] = this.GridView1.Rows[i].Cells[1].Text.Trim();\n            dr[2] = this.GridView1.Rows[i].Cells[2].Text.Trim();\n            dt.Rows.Add(dr);\n        }\n        return dt;\n    }\n    protected void Button1_Click(object sender, EventArgs e)\n    {\n        DataTable dt = ReadGridView();\n        //this.GridView1.DataSource = dt;\n        //this.GridView1.DataBind();\n        DataRow row = dt.NewRow();\n        row.ItemArray = new object[] { \"oec2003\", \"oec2003\", \"oec2003\" };\n        dt.Rows.InsertAt(row, 0);\n        dt.AcceptChanges();\n        this.GridView1.DataSource = dt;\n        this.GridView1.DataBind();\n    }\n\n    private void BindGrid()\n    {\n        string str = ConfigurationManager.ConnectionStrings[\"NorthwindConnectionString\"].ToString();\n        using (SqlConnection con = new SqlConnection(str))\n        {\n            SqlCommand cmd = new SqlCommand(\"SELECT top 1  [ProductID], [ProductName], [CategoryID] FROM [Products]\", con);\n            SqlDataAdapter sda = new SqlDataAdapter(cmd);\n            DataSet ds = new DataSet();\n            sda.Fill(ds);\n            this.GridView1.DataSource = ds.Tables[0].DefaultView;\n            this.GridView1.DataBind();\n            sda.Dispose();\n            ds.Dispose();\n        }\n\n    }\n}\n```\n\n## Html代码\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"Default.aspx.cs\" Inherits=\"_Default\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" 、\n    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head id=\"Head1\" runat=\"server\">\n    <title>无标题页</title>\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\">\n    <div>\n        <asp:Button ID=\"Button1\" runat=\"server\" OnClick=\"Button1_Click\" Text=\"Button\" />\n        <asp:GridView ID=\"GridView2\" runat=\"server\" AutoGenerateColumns=\"False\" DataKeyNames=\"ProductID\">\n            <Columns>\n                <asp:BoundField DataField=\"ProductID\" HeaderText=\"ProductID\" InsertVisible=\"False\"\n                    ReadOnly=\"True\" SortExpression=\"ProductID\" />\n                <asp:BoundField DataField=\"ProductName\" HeaderText=\"ProductName\" SortExpression=\"ProductName\" />\n                <asp:BoundField DataField=\"CategoryID\" HeaderText=\"CategoryID\" SortExpression=\"CategoryID\" />\n            </Columns>\n        </asp:GridView>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n## 数据库连接字串\n\n```\n<connectionStrings>\n <add name=\"NorthwindConnectionString\"\n      connectionString=\"Data Source=FENGWEI;Initial Catalog=Northwind;User ID=sa;Password=1234\"\n      providerName=\"System.Data.SqlClient\"/>\n</connectionStrings>\n```\n\n[AddRow.rar](http://files.cnblogs.com/oec2003/AddRow.rar)\n\n\n","slug":"dynamically-add-tow-to-gridview","published":1,"updated":"2016-08-13T14:31:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz91w004oxfynoq6h6wk2","content":"<h2 id=\"C-代码\"><a href=\"#C-代码\" class=\"headerlink\" title=\"C#代码:\"></a>C#代码:</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Data;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Configuration;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Security;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls.WebParts;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.HtmlControls;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Data.SqlClient;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> <span class=\"number\">_</span>Default : System.Web.UI.Page</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.IsPostBack)</div><div class=\"line\">        &#123;</div><div class=\"line\">            BindGrid();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> DataTable <span class=\"title\">ReadGridView</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        DataTable dt = <span class=\"keyword\">new</span> DataTable();</div><div class=\"line\">        DataRow dr;</div><div class=\"line\">        dt.Columns.Add(<span class=\"keyword\">new</span> DataColumn(<span class=\"string\">\"ProductID\"</span>, typeof(<span class=\"built_in\">string</span>)));</div><div class=\"line\">        dt.Columns.Add(<span class=\"keyword\">new</span> DataColumn(<span class=\"string\">\"ProductName\"</span>, typeof(<span class=\"built_in\">string</span>)));</div><div class=\"line\">        dt.Columns.Add(<span class=\"keyword\">new</span> DataColumn(<span class=\"string\">\"CategoryID\"</span>, typeof(<span class=\"built_in\">string</span>)));</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">this</span>.GridView1.Rows.Count; i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            dr = dt.NewRow();</div><div class=\"line\">            dr[<span class=\"number\">0</span>] = <span class=\"keyword\">this</span>.GridView1.Rows[i].Cells[<span class=\"number\">0</span>].Text.Trim();</div><div class=\"line\">            dr[<span class=\"number\">1</span>] = <span class=\"keyword\">this</span>.GridView1.Rows[i].Cells[<span class=\"number\">1</span>].Text.Trim();</div><div class=\"line\">            dr[<span class=\"number\">2</span>] = <span class=\"keyword\">this</span>.GridView1.Rows[i].Cells[<span class=\"number\">2</span>].Text.Trim();</div><div class=\"line\">            dt.Rows.Add(dr);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> dt;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Button1_Click</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        DataTable dt = ReadGridView();</div><div class=\"line\">        <span class=\"comment\">//this.GridView1.DataSource = dt;</span></div><div class=\"line\">        <span class=\"comment\">//this.GridView1.DataBind();</span></div><div class=\"line\">        DataRow row = dt.NewRow();</div><div class=\"line\">        row.ItemArray = <span class=\"keyword\">new</span> object[] &#123; <span class=\"string\">\"oec2003\"</span>, <span class=\"string\">\"oec2003\"</span>, <span class=\"string\">\"oec2003\"</span> &#125;;</div><div class=\"line\">        dt.Rows.InsertAt(row, <span class=\"number\">0</span>);</div><div class=\"line\">        dt.AcceptChanges();</div><div class=\"line\">        <span class=\"keyword\">this</span>.GridView1.DataSource = dt;</div><div class=\"line\">        <span class=\"keyword\">this</span>.GridView1.DataBind();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">BindGrid</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">string</span> str = ConfigurationManager.ConnectionStrings[<span class=\"string\">\"NorthwindConnectionString\"</span>].ToString();</div><div class=\"line\">        <span class=\"keyword\">using</span> (SqlConnection con = <span class=\"keyword\">new</span> SqlConnection(str))</div><div class=\"line\">        &#123;</div><div class=\"line\">            SqlCommand cmd = <span class=\"keyword\">new</span> SqlCommand(<span class=\"string\">\"SELECT top 1  [ProductID], [ProductName], [CategoryID] FROM [Products]\"</span>, con);</div><div class=\"line\">            SqlDataAdapter sda = <span class=\"keyword\">new</span> SqlDataAdapter(cmd);</div><div class=\"line\">            DataSet ds = <span class=\"keyword\">new</span> DataSet();</div><div class=\"line\">            sda.Fill(ds);</div><div class=\"line\">            <span class=\"keyword\">this</span>.GridView1.DataSource = ds.Tables[<span class=\"number\">0</span>].DefaultView;</div><div class=\"line\">            <span class=\"keyword\">this</span>.GridView1.DataBind();</div><div class=\"line\">            sda.Dispose();</div><div class=\"line\">            ds.Dispose();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Html代码\"><a href=\"#Html代码\" class=\"headerlink\" title=\"Html代码\"></a>Html代码</h2><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"Default.aspx.cs\"</span> Inherits=<span class=\"string\">\"_Default\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" 、</span></div><div class=\"line\">    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>无标题页<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">asp:Button</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Button1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">OnClick</span>=<span class=\"string\">\"Button1_Click\"</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"Button\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">asp:GridView</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"GridView2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">AutoGenerateColumns</span>=<span class=\"string\">\"False\"</span> <span class=\"attr\">DataKeyNames</span>=<span class=\"string\">\"ProductID\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Columns</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">asp:BoundField</span> <span class=\"attr\">DataField</span>=<span class=\"string\">\"ProductID\"</span> <span class=\"attr\">HeaderText</span>=<span class=\"string\">\"ProductID\"</span> <span class=\"attr\">InsertVisible</span>=<span class=\"string\">\"False\"</span></span></div><div class=\"line\">                    <span class=\"attr\">ReadOnly</span>=<span class=\"string\">\"True\"</span> <span class=\"attr\">SortExpression</span>=<span class=\"string\">\"ProductID\"</span> /&gt;</div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">asp:BoundField</span> <span class=\"attr\">DataField</span>=<span class=\"string\">\"ProductName\"</span> <span class=\"attr\">HeaderText</span>=<span class=\"string\">\"ProductName\"</span> <span class=\"attr\">SortExpression</span>=<span class=\"string\">\"ProductName\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">asp:BoundField</span> <span class=\"attr\">DataField</span>=<span class=\"string\">\"CategoryID\"</span> <span class=\"attr\">HeaderText</span>=<span class=\"string\">\"CategoryID\"</span> <span class=\"attr\">SortExpression</span>=<span class=\"string\">\"CategoryID\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">Columns</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">asp:GridView</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"数据库连接字串\"><a href=\"#数据库连接字串\" class=\"headerlink\" title=\"数据库连接字串\"></a>数据库连接字串</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">connectionStrings</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">add</span> <span class=\"attr\">name</span>=<span class=\"string\">\"NorthwindConnectionString\"</span></span></div><div class=\"line\">      <span class=\"attr\">connectionString</span>=<span class=\"string\">\"Data Source=FENGWEI;Initial Catalog=Northwind;User ID=sa;Password=1234\"</span></div><div class=\"line\">      <span class=\"attr\">providerName</span>=<span class=\"string\">\"System.Data.SqlClient\"</span>/&gt;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">connectionStrings</span>&gt;</span></div></pre></td></tr></table></figure>\n<p><a href=\"http://files.cnblogs.com/oec2003/AddRow.rar\" target=\"_blank\" rel=\"external\">AddRow.rar</a></p>\n","excerpt":"","more":"<h2 id=\"C-代码\"><a href=\"#C-代码\" class=\"headerlink\" title=\"C#代码:\"></a>C#代码:</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Data;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Configuration;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Security;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls.WebParts;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.HtmlControls;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Data.SqlClient;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> <span class=\"number\">_</span>Default : System.Web.UI.Page</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.IsPostBack)</div><div class=\"line\">        &#123;</div><div class=\"line\">            BindGrid();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> DataTable <span class=\"title\">ReadGridView</span><span class=\"params\">()</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        DataTable dt = <span class=\"keyword\">new</span> DataTable();</div><div class=\"line\">        DataRow dr;</div><div class=\"line\">        dt.Columns.Add(<span class=\"keyword\">new</span> DataColumn(<span class=\"string\">\"ProductID\"</span>, typeof(<span class=\"built_in\">string</span>)));</div><div class=\"line\">        dt.Columns.Add(<span class=\"keyword\">new</span> DataColumn(<span class=\"string\">\"ProductName\"</span>, typeof(<span class=\"built_in\">string</span>)));</div><div class=\"line\">        dt.Columns.Add(<span class=\"keyword\">new</span> DataColumn(<span class=\"string\">\"CategoryID\"</span>, typeof(<span class=\"built_in\">string</span>)));</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">this</span>.GridView1.Rows.Count; i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            dr = dt.NewRow();</div><div class=\"line\">            dr[<span class=\"number\">0</span>] = <span class=\"keyword\">this</span>.GridView1.Rows[i].Cells[<span class=\"number\">0</span>].Text.Trim();</div><div class=\"line\">            dr[<span class=\"number\">1</span>] = <span class=\"keyword\">this</span>.GridView1.Rows[i].Cells[<span class=\"number\">1</span>].Text.Trim();</div><div class=\"line\">            dr[<span class=\"number\">2</span>] = <span class=\"keyword\">this</span>.GridView1.Rows[i].Cells[<span class=\"number\">2</span>].Text.Trim();</div><div class=\"line\">            dt.Rows.Add(dr);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> dt;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Button1_Click</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        DataTable dt = ReadGridView();</div><div class=\"line\">        <span class=\"comment\">//this.GridView1.DataSource = dt;</span></div><div class=\"line\">        <span class=\"comment\">//this.GridView1.DataBind();</span></div><div class=\"line\">        DataRow row = dt.NewRow();</div><div class=\"line\">        row.ItemArray = <span class=\"keyword\">new</span> object[] &#123; <span class=\"string\">\"oec2003\"</span>, <span class=\"string\">\"oec2003\"</span>, <span class=\"string\">\"oec2003\"</span> &#125;;</div><div class=\"line\">        dt.Rows.InsertAt(row, <span class=\"number\">0</span>);</div><div class=\"line\">        dt.AcceptChanges();</div><div class=\"line\">        <span class=\"keyword\">this</span>.GridView1.DataSource = dt;</div><div class=\"line\">        <span class=\"keyword\">this</span>.GridView1.DataBind();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">BindGrid</span><span class=\"params\">()</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">string</span> str = ConfigurationManager.ConnectionStrings[<span class=\"string\">\"NorthwindConnectionString\"</span>].ToString();</div><div class=\"line\">        <span class=\"keyword\">using</span> (SqlConnection con = <span class=\"keyword\">new</span> SqlConnection(str))</div><div class=\"line\">        &#123;</div><div class=\"line\">            SqlCommand cmd = <span class=\"keyword\">new</span> SqlCommand(<span class=\"string\">\"SELECT top 1  [ProductID], [ProductName], [CategoryID] FROM [Products]\"</span>, con);</div><div class=\"line\">            SqlDataAdapter sda = <span class=\"keyword\">new</span> SqlDataAdapter(cmd);</div><div class=\"line\">            DataSet ds = <span class=\"keyword\">new</span> DataSet();</div><div class=\"line\">            sda.Fill(ds);</div><div class=\"line\">            <span class=\"keyword\">this</span>.GridView1.DataSource = ds.Tables[<span class=\"number\">0</span>].DefaultView;</div><div class=\"line\">            <span class=\"keyword\">this</span>.GridView1.DataBind();</div><div class=\"line\">            sda.Dispose();</div><div class=\"line\">            ds.Dispose();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Html代码\"><a href=\"#Html代码\" class=\"headerlink\" title=\"Html代码\"></a>Html代码</h2><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"Default.aspx.cs\"</span> Inherits=<span class=\"string\">\"_Default\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" 、</div><div class=\"line\">    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>无标题页<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">asp:Button</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Button1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">OnClick</span>=<span class=\"string\">\"Button1_Click\"</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"Button\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">asp:GridView</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"GridView2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">AutoGenerateColumns</span>=<span class=\"string\">\"False\"</span> <span class=\"attr\">DataKeyNames</span>=<span class=\"string\">\"ProductID\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Columns</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">asp:BoundField</span> <span class=\"attr\">DataField</span>=<span class=\"string\">\"ProductID\"</span> <span class=\"attr\">HeaderText</span>=<span class=\"string\">\"ProductID\"</span> <span class=\"attr\">InsertVisible</span>=<span class=\"string\">\"False\"</span></div><div class=\"line\">                    <span class=\"attr\">ReadOnly</span>=<span class=\"string\">\"True\"</span> <span class=\"attr\">SortExpression</span>=<span class=\"string\">\"ProductID\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">asp:BoundField</span> <span class=\"attr\">DataField</span>=<span class=\"string\">\"ProductName\"</span> <span class=\"attr\">HeaderText</span>=<span class=\"string\">\"ProductName\"</span> <span class=\"attr\">SortExpression</span>=<span class=\"string\">\"ProductName\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">asp:BoundField</span> <span class=\"attr\">DataField</span>=<span class=\"string\">\"CategoryID\"</span> <span class=\"attr\">HeaderText</span>=<span class=\"string\">\"CategoryID\"</span> <span class=\"attr\">SortExpression</span>=<span class=\"string\">\"CategoryID\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">Columns</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">asp:GridView</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<h2 id=\"数据库连接字串\"><a href=\"#数据库连接字串\" class=\"headerlink\" title=\"数据库连接字串\"></a>数据库连接字串</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">connectionStrings</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">add</span> <span class=\"attr\">name</span>=<span class=\"string\">\"NorthwindConnectionString\"</span></div><div class=\"line\">      <span class=\"attr\">connectionString</span>=<span class=\"string\">\"Data Source=FENGWEI;Initial Catalog=Northwind;User ID=sa;Password=1234\"</span></div><div class=\"line\">      <span class=\"attr\">providerName</span>=<span class=\"string\">\"System.Data.SqlClient\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">connectionStrings</span>&gt;</span></div></pre></td></tr></table></figure>\n<p><a href=\"http://files.cnblogs.com/oec2003/AddRow.rar\">AddRow.rar</a></p>\n"},{"title":"将服务器控件在后台生成html","date":"2008-05-27T16:00:00.000Z","_content":"\n这个方法很有用，在做一些Ajax应用的时候，可以在后台将gridview 生成hmtl后回传到客户端，可以实现分页的功能。\n<!--more-->\n\n代码如下：\n\n```\nSystem.Text.StringBuilder strb = new System.Text.StringBuilder();\nSystem.IO.StringWriter sw = new System.IO.StringWriter(strb);\nSystem.Web.UI.HtmlTextWriter htw = new HtmlTextWriter(sw);\n//执行控件的render并输出到HtmlTextWriter里\nthis.GridView.RenderControl(htw);\nstring s = strb.ToString();\n```\n\n","source":"_posts/generate-html-server-controls-in-the-background.md","raw":"---\ntitle: 将服务器控件在后台生成html\ndate: 2008-05-28\ncategories: [Asp.Net]\ntags: [AspNet]\n---\n\n这个方法很有用，在做一些Ajax应用的时候，可以在后台将gridview 生成hmtl后回传到客户端，可以实现分页的功能。\n<!--more-->\n\n代码如下：\n\n```\nSystem.Text.StringBuilder strb = new System.Text.StringBuilder();\nSystem.IO.StringWriter sw = new System.IO.StringWriter(strb);\nSystem.Web.UI.HtmlTextWriter htw = new HtmlTextWriter(sw);\n//执行控件的render并输出到HtmlTextWriter里\nthis.GridView.RenderControl(htw);\nstring s = strb.ToString();\n```\n\n","slug":"generate-html-server-controls-in-the-background","published":1,"updated":"2016-08-14T06:39:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz91x004rxfyn2bxlnidu","content":"<p>这个方法很有用，在做一些Ajax应用的时候，可以在后台将gridview 生成hmtl后回传到客户端，可以实现分页的功能。<br><a id=\"more\"></a></p>\n<p>代码如下：</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">System</span>.Text.StringBuilder strb = <span class=\"keyword\">new</span> <span class=\"keyword\">System</span>.Text.StringBuilder();</div><div class=\"line\"><span class=\"keyword\">System</span>.IO.StringWriter sw = <span class=\"keyword\">new</span> <span class=\"keyword\">System</span>.IO.StringWriter(strb);</div><div class=\"line\"><span class=\"keyword\">System</span>.Web.UI.HtmlTextWriter htw = <span class=\"keyword\">new</span> HtmlTextWriter(sw);</div><div class=\"line\"><span class=\"comment\">//执行控件的render并输出到HtmlTextWriter里</span></div><div class=\"line\">this.GridView.RenderControl(htw);</div><div class=\"line\"><span class=\"keyword\">string</span> s = strb.ToString();</div></pre></td></tr></table></figure>\n","excerpt":"<p>这个方法很有用，在做一些Ajax应用的时候，可以在后台将gridview 生成hmtl后回传到客户端，可以实现分页的功能。<br>","more":"</p>\n<p>代码如下：</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">System</span>.Text.StringBuilder strb = <span class=\"keyword\">new</span> <span class=\"keyword\">System</span>.Text.StringBuilder();</div><div class=\"line\"><span class=\"keyword\">System</span>.IO.StringWriter sw = <span class=\"keyword\">new</span> <span class=\"keyword\">System</span>.IO.StringWriter(strb);</div><div class=\"line\"><span class=\"keyword\">System</span>.Web.UI.HtmlTextWriter htw = <span class=\"keyword\">new</span> HtmlTextWriter(sw);</div><div class=\"line\"><span class=\"comment\">//执行控件的render并输出到HtmlTextWriter里</span></div><div class=\"line\">this.GridView.RenderControl(htw);</div><div class=\"line\"><span class=\"keyword\">string</span> s = strb.ToString();</div></pre></td></tr></table></figure>"},{"title":"开发总结—Javascript篇","date":"2008-05-24T16:00:00.000Z","_content":"\n本文是我在平时工作中所遇到的javascript方面的一些知识总结，主要针对在asp.net中使用脚本。\n<!--more-->\n\n1.TextBox的验证（这个其实算是正则的内容了）\n\n```\n<!--用正则表达式限制只能输入中文-->\n<input type=\"text\" onkeyup=\"value=value.replace(/[^\\u4E00-\\u9FA5]/g,'')\"\nonbeforepaste=\"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\\u4E00-\\u9FA5]/g,''))\" />\n\n<!--用正则表达式限制只能输入数字-->\n<input type=\"text\" onkeyup=\"value=value.replace([^\\d]/g,'') \"\nonbeforepaste=\"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\\d]/g,''))\" />\n\n<!--用正则表达式限制只能输入数字和英文-->\n<input type=\"text\" onkeyup=\"value=value.replace([\\W]/g,'') \"\nonbeforepaste=\"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\\d]/g,''))\" />\n\n<!--驗證數字和小數點-->\n<input   type=\"text\"  ID=\"Text1\"   onkeyup=\"value=value.replace(/[^\\d|^\\.]/g,'')\"\nonbeforepaste=\"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\\d|^\\.]/g,''))\">\n```\n\n上面代码中 onbeforepaste属性是防止复制粘贴\n\n2. 判断CheckBoxList有没有选择\n\n```\n//id为CheckBoxList控件的ID\n//return true 说明没有选择\nfunction checkLocCate(id) {\n    var status = true;\n    var inputs = document.getElementById(id).getElementsByTagName(\"input\");\n    for (var i = 0; i < inputs.length; i++) {\n        if (inputs[i].type == \"checkbox\" && inputs[i].checked == true) {\n            status = false;\n        }\n    }\n    return status;\n}\n```\n\n3.为DropDownList添加项\n\n```\n//id为DropDownList控件的ID\nfunction addOptions(id) {\n    var ddl = document.getElementById(id);\n    //将DropDownList的内容清空\n    ddl.options.length = 0;\n    for (var i = 0; i < 10; i++) {\n        //Options的第一个参数为Text值，第二个参数为Value值\n        ddl.add(new Option(i, i));\n    }\n}\n```\n\n4.为table添加行和列\n\n在javascript中添加行和列是通过insertRow和inertCell来实现的，看下面一个例子\n\n```\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head id=\"Head1\" runat=\"server\">\n    <title>AddRow</title>\n    <style type=\"text/css\">\n        .BlackBorder\n        {\n            background-color: #000;\n            font-size: 12px;\n        }\n        .BlackBorder tr\n        {\n            background-color: #fff;\n        }\n    </style>\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\">\n    <div>\n        <table width=\"400px\">\n            <tr>\n                <td>\n                    姓名：\n                    <input id=\"txtName\" style=\"width: 100px;\" />\n                    年龄：\n                    <input id=\"txtAge\" style=\"width: 50px;\" />\n                    <input id=\"txtAdd\" type=\"button\" value=\"新增\" onclick=\"return insertRow()\" />\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <table id=\"tMemInfo\" width=\"100%\" class=\"BlackBorder\" cellpadding=\"0\" cellspacing=\"1\"\n                        border=\"0\" style=\"padding-left: 5px;\">\n                        <tr style=\"background-color: #E0E0E0;\">\n                            <td style=\"width: 150px;\">\n                                姓名\n                            </td>\n                            <td style=\"width: 100px;\">\n                                年龄\n                            </td>\n                            <td>\n                                管理\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n        </table>\n    </div>\n    </form>\n\n    <script type=\"text/javascript\">\n\n        function insertRow() {\n\n            var name = document.getElementById(\"txtName\").value;\n            var age = document.getElementById(\"txtAge\").value;\n\n            if (name == \"\") {\n                alert(\"請填寫姓名\");\n                document.getElementById(\"txtName\").focus();\n                return false;\n            }\n            if (age == \"\") {\n                alert(\"請填寫年龄\");\n                document.getElementById(\"txtAge\").focus();\n                return false;\n            }\n\n            var myTable = document.getElementById(\"tMemInfo\");\n            var objRow = myTable.insertRow(1);\n            var objCell = objRow.insertCell(0);\n            objCell.innerHTML = \"<input type='text' style='width:100px;'  style='display:none'/><span >\"\n                                      + name + \"</span>\";\n            var objCell = objRow.insertCell(1);\n            objCell.innerHTML = \"<input type='text' style='width:50px;'  style='display:none'/><span >\"\n                                      + age + \"</span>\";\n            var objCell = objRow.insertCell(2);\n            objCell.innerHTML = \" <input type='button' value='取消' onclick='cancel()' style='display:none'/> \" +\n                     \" <input type='button' value='儲存' onclick='save()' style='display:none'/>\" +\n                     \" <input type='button' value='修改' onclick='edit()'  />\" +\n                     \" <input type='button' value='删除' onclick='deleteRow()' />\";\n\n            document.getElementById(\"txtName\").value = \"\";\n            document.getElementById(\"txtAge\").value = \"\";\n            document.getElementById(\"txtName\").focus();\n        }\n\n        //删除行\n        function deleteRow() {\n            var myTable = document.getElementById(\"tMemInfo\");\n            var trList = myTable.getElementsByTagName(\"tr\");\n            var row = 0;\n            for (var i = 0; i < trList.length; i++) {\n                if (event.srcElement.parentNode.parentNode == trList[i])\n                    row = i;\n            }\n            myTable.deleteRow(row);\n        }\n\n        function cancel() {\n            var e = event.srcElement.parentElement.parentElement;\n            e.childNodes[0].childNodes[0].style.display = \"none\";\n            e.childNodes[0].childNodes[1].style.display = \"\";\n            e.childNodes[1].childNodes[0].style.display = \"none\";\n            e.childNodes[1].childNodes[1].style.display = \"\";\n            e.childNodes[2].childNodes[0].style.display = \"none\";\n            e.childNodes[2].childNodes[2].style.display = \"none\";\n            e.childNodes[2].childNodes[4].style.display = \"\";\n            e.childNodes[2].childNodes[6].style.display = \"\";\n\n        }\n\n        function save() {\n            var e = event.srcElement.parentElement.parentElement;\n            e.childNodes[0].childNodes[0].style.display = \"none\";\n            e.childNodes[0].childNodes[1].style.display = \"\";\n            e.childNodes[1].childNodes[0].style.display = \"none\";\n            e.childNodes[1].childNodes[1].style.display = \"\";\n            e.childNodes[2].childNodes[0].style.display = \"none\";\n            e.childNodes[2].childNodes[2].style.display = \"none\";\n            e.childNodes[2].childNodes[4].style.display = \"\";\n            e.childNodes[2].childNodes[6].style.display = \"\";\n            e.childNodes[0].childNodes[1].innerHTML = e.childNodes[0].childNodes[0].value;\n            e.childNodes[1].childNodes[1].innerHTML = e.childNodes[1].childNodes[0].value;\n        }\n\n        function edit() {\n            var e = event.srcElement.parentElement.parentElement;\n            e.childNodes[0].childNodes[0].style.display = \"\";\n            e.childNodes[0].childNodes[1].style.display = \"none\";\n            e.childNodes[1].childNodes[0].style.display = \"\";\n            e.childNodes[1].childNodes[1].style.display = \"none\";\n            e.childNodes[2].childNodes[0].style.display = \"\";\n            e.childNodes[2].childNodes[2].style.display = \"\";\n            e.childNodes[2].childNodes[4].style.display = \"none\";\n            e.childNodes[2].childNodes[6].style.display = \"none\";\n            e.childNodes[0].childNodes[0].value = e.childNodes[0].childNodes[1].innerHTML;\n            e.childNodes[1].childNodes[0].value = e.childNodes[1].childNodes[1].innerHTML;\n        }\n    </script>\n\n</body>\n</html>\n```\n\n5 在javascript中setTimeOut和setInterval的區別\n\n```\n//1秒钟执行一次函数1\nwindow.setInterval(\"函數1\", 1000);\n\n//延迟1秒钟执行函数2\nwindow.setTiemout(\"函數2\", 1000);\n```\n\n6 js获取字符串的长度\n\n```\nvar str = str.replace(/[^\\x00-\\xff]/g, \"**\").length;\n```\n\n7 javascript中的一些验证\n\n```\n//去空格\nfunction trim(str) {\n    return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n}\n//validate email\nfunction IsMail(mail)\n{\n    var patrn = /^w+([-+.]w+)*@w+([-.]w+)*.w+([-.]w+)*$/;\n    return patrn.test(mail);\n}\n\n//validate url\nfunction IsURL(url)\n{\n    var regexp = /^http://[A-Za-z0-9]+.[A-Za-z0-9]+[/=?%-&_~`@[]':+!]*([^<>\"\"])*$/;\n    return regexp.test(url);\n}\n```\n\n不断更新中……\n\n\n\n","source":"_posts/development-summary-javascript.md","raw":"---\ntitle: 开发总结—Javascript篇\ndate: 2008-05-25\ncategories: [Javascript]\ntags: [javascript,小技巧]\n---\n\n本文是我在平时工作中所遇到的javascript方面的一些知识总结，主要针对在asp.net中使用脚本。\n<!--more-->\n\n1.TextBox的验证（这个其实算是正则的内容了）\n\n```\n<!--用正则表达式限制只能输入中文-->\n<input type=\"text\" onkeyup=\"value=value.replace(/[^\\u4E00-\\u9FA5]/g,'')\"\nonbeforepaste=\"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\\u4E00-\\u9FA5]/g,''))\" />\n\n<!--用正则表达式限制只能输入数字-->\n<input type=\"text\" onkeyup=\"value=value.replace([^\\d]/g,'') \"\nonbeforepaste=\"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\\d]/g,''))\" />\n\n<!--用正则表达式限制只能输入数字和英文-->\n<input type=\"text\" onkeyup=\"value=value.replace([\\W]/g,'') \"\nonbeforepaste=\"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\\d]/g,''))\" />\n\n<!--驗證數字和小數點-->\n<input   type=\"text\"  ID=\"Text1\"   onkeyup=\"value=value.replace(/[^\\d|^\\.]/g,'')\"\nonbeforepaste=\"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\\d|^\\.]/g,''))\">\n```\n\n上面代码中 onbeforepaste属性是防止复制粘贴\n\n2. 判断CheckBoxList有没有选择\n\n```\n//id为CheckBoxList控件的ID\n//return true 说明没有选择\nfunction checkLocCate(id) {\n    var status = true;\n    var inputs = document.getElementById(id).getElementsByTagName(\"input\");\n    for (var i = 0; i < inputs.length; i++) {\n        if (inputs[i].type == \"checkbox\" && inputs[i].checked == true) {\n            status = false;\n        }\n    }\n    return status;\n}\n```\n\n3.为DropDownList添加项\n\n```\n//id为DropDownList控件的ID\nfunction addOptions(id) {\n    var ddl = document.getElementById(id);\n    //将DropDownList的内容清空\n    ddl.options.length = 0;\n    for (var i = 0; i < 10; i++) {\n        //Options的第一个参数为Text值，第二个参数为Value值\n        ddl.add(new Option(i, i));\n    }\n}\n```\n\n4.为table添加行和列\n\n在javascript中添加行和列是通过insertRow和inertCell来实现的，看下面一个例子\n\n```\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head id=\"Head1\" runat=\"server\">\n    <title>AddRow</title>\n    <style type=\"text/css\">\n        .BlackBorder\n        {\n            background-color: #000;\n            font-size: 12px;\n        }\n        .BlackBorder tr\n        {\n            background-color: #fff;\n        }\n    </style>\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\">\n    <div>\n        <table width=\"400px\">\n            <tr>\n                <td>\n                    姓名：\n                    <input id=\"txtName\" style=\"width: 100px;\" />\n                    年龄：\n                    <input id=\"txtAge\" style=\"width: 50px;\" />\n                    <input id=\"txtAdd\" type=\"button\" value=\"新增\" onclick=\"return insertRow()\" />\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <table id=\"tMemInfo\" width=\"100%\" class=\"BlackBorder\" cellpadding=\"0\" cellspacing=\"1\"\n                        border=\"0\" style=\"padding-left: 5px;\">\n                        <tr style=\"background-color: #E0E0E0;\">\n                            <td style=\"width: 150px;\">\n                                姓名\n                            </td>\n                            <td style=\"width: 100px;\">\n                                年龄\n                            </td>\n                            <td>\n                                管理\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n        </table>\n    </div>\n    </form>\n\n    <script type=\"text/javascript\">\n\n        function insertRow() {\n\n            var name = document.getElementById(\"txtName\").value;\n            var age = document.getElementById(\"txtAge\").value;\n\n            if (name == \"\") {\n                alert(\"請填寫姓名\");\n                document.getElementById(\"txtName\").focus();\n                return false;\n            }\n            if (age == \"\") {\n                alert(\"請填寫年龄\");\n                document.getElementById(\"txtAge\").focus();\n                return false;\n            }\n\n            var myTable = document.getElementById(\"tMemInfo\");\n            var objRow = myTable.insertRow(1);\n            var objCell = objRow.insertCell(0);\n            objCell.innerHTML = \"<input type='text' style='width:100px;'  style='display:none'/><span >\"\n                                      + name + \"</span>\";\n            var objCell = objRow.insertCell(1);\n            objCell.innerHTML = \"<input type='text' style='width:50px;'  style='display:none'/><span >\"\n                                      + age + \"</span>\";\n            var objCell = objRow.insertCell(2);\n            objCell.innerHTML = \" <input type='button' value='取消' onclick='cancel()' style='display:none'/> \" +\n                     \" <input type='button' value='儲存' onclick='save()' style='display:none'/>\" +\n                     \" <input type='button' value='修改' onclick='edit()'  />\" +\n                     \" <input type='button' value='删除' onclick='deleteRow()' />\";\n\n            document.getElementById(\"txtName\").value = \"\";\n            document.getElementById(\"txtAge\").value = \"\";\n            document.getElementById(\"txtName\").focus();\n        }\n\n        //删除行\n        function deleteRow() {\n            var myTable = document.getElementById(\"tMemInfo\");\n            var trList = myTable.getElementsByTagName(\"tr\");\n            var row = 0;\n            for (var i = 0; i < trList.length; i++) {\n                if (event.srcElement.parentNode.parentNode == trList[i])\n                    row = i;\n            }\n            myTable.deleteRow(row);\n        }\n\n        function cancel() {\n            var e = event.srcElement.parentElement.parentElement;\n            e.childNodes[0].childNodes[0].style.display = \"none\";\n            e.childNodes[0].childNodes[1].style.display = \"\";\n            e.childNodes[1].childNodes[0].style.display = \"none\";\n            e.childNodes[1].childNodes[1].style.display = \"\";\n            e.childNodes[2].childNodes[0].style.display = \"none\";\n            e.childNodes[2].childNodes[2].style.display = \"none\";\n            e.childNodes[2].childNodes[4].style.display = \"\";\n            e.childNodes[2].childNodes[6].style.display = \"\";\n\n        }\n\n        function save() {\n            var e = event.srcElement.parentElement.parentElement;\n            e.childNodes[0].childNodes[0].style.display = \"none\";\n            e.childNodes[0].childNodes[1].style.display = \"\";\n            e.childNodes[1].childNodes[0].style.display = \"none\";\n            e.childNodes[1].childNodes[1].style.display = \"\";\n            e.childNodes[2].childNodes[0].style.display = \"none\";\n            e.childNodes[2].childNodes[2].style.display = \"none\";\n            e.childNodes[2].childNodes[4].style.display = \"\";\n            e.childNodes[2].childNodes[6].style.display = \"\";\n            e.childNodes[0].childNodes[1].innerHTML = e.childNodes[0].childNodes[0].value;\n            e.childNodes[1].childNodes[1].innerHTML = e.childNodes[1].childNodes[0].value;\n        }\n\n        function edit() {\n            var e = event.srcElement.parentElement.parentElement;\n            e.childNodes[0].childNodes[0].style.display = \"\";\n            e.childNodes[0].childNodes[1].style.display = \"none\";\n            e.childNodes[1].childNodes[0].style.display = \"\";\n            e.childNodes[1].childNodes[1].style.display = \"none\";\n            e.childNodes[2].childNodes[0].style.display = \"\";\n            e.childNodes[2].childNodes[2].style.display = \"\";\n            e.childNodes[2].childNodes[4].style.display = \"none\";\n            e.childNodes[2].childNodes[6].style.display = \"none\";\n            e.childNodes[0].childNodes[0].value = e.childNodes[0].childNodes[1].innerHTML;\n            e.childNodes[1].childNodes[0].value = e.childNodes[1].childNodes[1].innerHTML;\n        }\n    </script>\n\n</body>\n</html>\n```\n\n5 在javascript中setTimeOut和setInterval的區別\n\n```\n//1秒钟执行一次函数1\nwindow.setInterval(\"函數1\", 1000);\n\n//延迟1秒钟执行函数2\nwindow.setTiemout(\"函數2\", 1000);\n```\n\n6 js获取字符串的长度\n\n```\nvar str = str.replace(/[^\\x00-\\xff]/g, \"**\").length;\n```\n\n7 javascript中的一些验证\n\n```\n//去空格\nfunction trim(str) {\n    return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n}\n//validate email\nfunction IsMail(mail)\n{\n    var patrn = /^w+([-+.]w+)*@w+([-.]w+)*.w+([-.]w+)*$/;\n    return patrn.test(mail);\n}\n\n//validate url\nfunction IsURL(url)\n{\n    var regexp = /^http://[A-Za-z0-9]+.[A-Za-z0-9]+[/=?%-&_~`@[]':+!]*([^<>\"\"])*$/;\n    return regexp.test(url);\n}\n```\n\n不断更新中……\n\n\n\n","slug":"development-summary-javascript","published":1,"updated":"2016-08-14T06:37:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz91z004vxfynwxf4ti53","content":"<p>本文是我在平时工作中所遇到的javascript方面的一些知识总结，主要针对在asp.net中使用脚本。<br><a id=\"more\"></a></p>\n<p>1.TextBox的验证（这个其实算是正则的内容了）</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!--用正则表达式限制只能输入中文--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">onkeyup</span>=<span class=\"string\">\"value=value.replace(/[^\\u4E00-\\u9FA5]/g,'')\"</span></span></div><div class=\"line\"><span class=\"attr\">onbeforepaste</span>=<span class=\"string\">\"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\\u4E00-\\u9FA5]/g,''))\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!--用正则表达式限制只能输入数字--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">onkeyup</span>=<span class=\"string\">\"value=value.replace([^\\d]/g,'') \"</span></span></div><div class=\"line\"><span class=\"attr\">onbeforepaste</span>=<span class=\"string\">\"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\\d]/g,''))\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!--用正则表达式限制只能输入数字和英文--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">onkeyup</span>=<span class=\"string\">\"value=value.replace([\\W]/g,'') \"</span></span></div><div class=\"line\"><span class=\"attr\">onbeforepaste</span>=<span class=\"string\">\"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\\d]/g,''))\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!--驗證數字和小數點--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span>   <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span>  <span class=\"attr\">ID</span>=<span class=\"string\">\"Text1\"</span>   <span class=\"attr\">onkeyup</span>=<span class=\"string\">\"value=value.replace(/[^\\d|^\\.]/g,'')\"</span></span></div><div class=\"line\"><span class=\"attr\">onbeforepaste</span>=<span class=\"string\">\"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\\d|^\\.]/g,''))\"</span>&gt;</div></pre></td></tr></table></figure>\n<p>上面代码中 onbeforepaste属性是防止复制粘贴</p>\n<ol>\n<li>判断CheckBoxList有没有选择</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//id为CheckBoxList控件的ID</span></div><div class=\"line\"><span class=\"comment\">//return true 说明没有选择</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkLocCate</span>(<span class=\"params\">id</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> status = <span class=\"literal\">true</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> inputs = <span class=\"built_in\">document</span>.getElementById(id).getElementsByTagName(<span class=\"string\">\"input\"</span>);</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; inputs.length; i++) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (inputs[i].type == <span class=\"string\">\"checkbox\"</span> &amp;&amp; inputs[i].checked == <span class=\"literal\">true</span>) &#123;</div><div class=\"line\">            status = <span class=\"literal\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> status;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>3.为DropDownList添加项</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//id为DropDownList控件的ID</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addOptions</span>(<span class=\"params\">id</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> ddl = <span class=\"built_in\">document</span>.getElementById(id);</div><div class=\"line\">    <span class=\"comment\">//将DropDownList的内容清空</span></div><div class=\"line\">    ddl.options.length = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</div><div class=\"line\">        <span class=\"comment\">//Options的第一个参数为Text值，第二个参数为Value值</span></div><div class=\"line\">        ddl.add(<span class=\"keyword\">new</span> Option(i, i));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>4.为table添加行和列</p>\n<p>在javascript中添加行和列是通过insertRow和inertCell来实现的，看下面一个例子</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>AddRow<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"css\"></span></div><div class=\"line\">        <span class=\"selector-class\">.BlackBorder</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#000</span>;</div><div class=\"line\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"selector-class\">.BlackBorder</span> <span class=\"selector-tag\">tr</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">width</span>=<span class=\"string\">\"400px\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    姓名：</div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txtName\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 100px;\"</span> /&gt;</span></div><div class=\"line\">                    年龄：</div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txtAge\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 50px;\"</span> /&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txtAdd\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"新增\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"return insertRow()\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">id</span>=<span class=\"string\">\"tMemInfo\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"BlackBorder\"</span> <span class=\"attr\">cellpadding</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"1\"</span></span></div><div class=\"line\">                        <span class=\"attr\">border</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"padding-left: 5px;\"</span>&gt;</div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background-color: #E0E0E0;\"</span>&gt;</span></div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 150px;\"</span>&gt;</span></div><div class=\"line\">                                姓名</div><div class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 100px;\"</span>&gt;</span></div><div class=\"line\">                                年龄</div><div class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                                管理</div><div class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insertRow</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">var</span> name = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txtName\"</span>).value;</div><div class=\"line\">            <span class=\"keyword\">var</span> age = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txtAge\"</span>).value;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (name == <span class=\"string\">\"\"</span>) &#123;</div><div class=\"line\">                alert(<span class=\"string\">\"請填寫姓名\"</span>);</div><div class=\"line\">                <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txtName\"</span>).focus();</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">if</span> (age == <span class=\"string\">\"\"</span>) &#123;</div><div class=\"line\">                alert(<span class=\"string\">\"請填寫年龄\"</span>);</div><div class=\"line\">                <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txtAge\"</span>).focus();</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">var</span> myTable = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"tMemInfo\"</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> objRow = myTable.insertRow(<span class=\"number\">1</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> objCell = objRow.insertCell(<span class=\"number\">0</span>);</div><div class=\"line\">            objCell.innerHTML = <span class=\"string\">\"&lt;input type='text' style='width:100px;'  style='display:none'/&gt;&lt;span &gt;\"</span></div><div class=\"line\">                                      + name + <span class=\"string\">\"&lt;/span&gt;\"</span>;</div><div class=\"line\">            <span class=\"keyword\">var</span> objCell = objRow.insertCell(<span class=\"number\">1</span>);</div><div class=\"line\">            objCell.innerHTML = <span class=\"string\">\"&lt;input type='text' style='width:50px;'  style='display:none'/&gt;&lt;span &gt;\"</span></div><div class=\"line\">                                      + age + <span class=\"string\">\"&lt;/span&gt;\"</span>;</div><div class=\"line\">            <span class=\"keyword\">var</span> objCell = objRow.insertCell(<span class=\"number\">2</span>);</div><div class=\"line\">            objCell.innerHTML = <span class=\"string\">\" &lt;input type='button' value='取消' onclick='cancel()' style='display:none'/&gt; \"</span> +</div><div class=\"line\">                     <span class=\"string\">\" &lt;input type='button' value='儲存' onclick='save()' style='display:none'/&gt;\"</span> +</div><div class=\"line\">                     <span class=\"string\">\" &lt;input type='button' value='修改' onclick='edit()'  /&gt;\"</span> +</div><div class=\"line\">                     <span class=\"string\">\" &lt;input type='button' value='删除' onclick='deleteRow()' /&gt;\"</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txtName\"</span>).value = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txtAge\"</span>).value = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txtName\"</span>).focus();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//删除行</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deleteRow</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> myTable = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"tMemInfo\"</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> trList = myTable.getElementsByTagName(<span class=\"string\">\"tr\"</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> row = <span class=\"number\">0</span>;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; trList.length; i++) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (event.srcElement.parentNode.parentNode == trList[i])</div><div class=\"line\">                    row = i;</div><div class=\"line\">            &#125;</div><div class=\"line\">            myTable.deleteRow(row);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cancel</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> e = event.srcElement.parentElement.parentElement;</div><div class=\"line\">            e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">1</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">1</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">2</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">4</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">6</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">save</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> e = event.srcElement.parentElement.parentElement;</div><div class=\"line\">            e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">1</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">1</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">2</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">4</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">6</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">1</span>].innerHTML = e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">0</span>].value;</div><div class=\"line\">            e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">1</span>].innerHTML = e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">0</span>].value;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">edit</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> e = event.srcElement.parentElement.parentElement;</div><div class=\"line\">            e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">1</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">1</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">2</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">4</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">6</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">0</span>].value = e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">1</span>].innerHTML;</div><div class=\"line\">            e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">0</span>].value = e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">1</span>].innerHTML;</div><div class=\"line\">        &#125;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>5 在javascript中setTimeOut和setInterval的區別</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//1秒钟执行一次函数1</span></div><div class=\"line\">window<span class=\"selector-class\">.setInterval</span>(<span class=\"string\">\"函數1\"</span>, <span class=\"number\">1000</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//延迟1秒钟执行函数2</span></div><div class=\"line\">window<span class=\"selector-class\">.setTiemout</span>(<span class=\"string\">\"函數2\"</span>, <span class=\"number\">1000</span>);</div></pre></td></tr></table></figure>\n<p>6 js获取字符串的长度</p>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">var</span> <span class=\"keyword\">str </span>= <span class=\"keyword\">str.replace(/[^\\x00-\\xff]/g, </span><span class=\"string\">\"**\"</span>).length<span class=\"comment\">;</span></div></pre></td></tr></table></figure>\n<p>7 javascript中的一些验证</p>\n<figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//去空格</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">trim</span>(<span class=\"params\">str</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> str.replace(<span class=\"regexp\">/(^\\s*)|(\\s*$)/g</span>, <span class=\"string\">\"\"</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//validate email</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IsMail</span>(<span class=\"params\">mail</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"built_in\">var</span> patrn = <span class=\"regexp\">/^w+([-+.]w+)*@w+([-.]w+)*.w+([-.]w+)*$/</span>;</div><div class=\"line\">    <span class=\"keyword\">return</span> patrn.test(mail);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//validate url</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IsURL</span>(<span class=\"params\">url</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"built_in\">var</span> regexp = <span class=\"regexp\">/^http:/</span><span class=\"regexp\">/[A-Za-z0-9]+.[A-Za-z0-9]+[/=?%-&amp;_~`@[]':+!]*([^&lt;&gt;\"\"])*$/</span>;</div><div class=\"line\">    <span class=\"keyword\">return</span> regexp.test(<span class=\"built_in\">url</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>不断更新中……</p>\n","excerpt":"<p>本文是我在平时工作中所遇到的javascript方面的一些知识总结，主要针对在asp.net中使用脚本。<br>","more":"</p>\n<p>1.TextBox的验证（这个其实算是正则的内容了）</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!--用正则表达式限制只能输入中文--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">onkeyup</span>=<span class=\"string\">\"value=value.replace(/[^\\u4E00-\\u9FA5]/g,'')\"</span></div><div class=\"line\"><span class=\"attr\">onbeforepaste</span>=<span class=\"string\">\"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\\u4E00-\\u9FA5]/g,''))\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!--用正则表达式限制只能输入数字--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">onkeyup</span>=<span class=\"string\">\"value=value.replace([^\\d]/g,'') \"</span></div><div class=\"line\"><span class=\"attr\">onbeforepaste</span>=<span class=\"string\">\"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\\d]/g,''))\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!--用正则表达式限制只能输入数字和英文--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">onkeyup</span>=<span class=\"string\">\"value=value.replace([\\W]/g,'') \"</span></div><div class=\"line\"><span class=\"attr\">onbeforepaste</span>=<span class=\"string\">\"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\\d]/g,''))\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">&lt;!--驗證數字和小數點--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span>   <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span>  <span class=\"attr\">ID</span>=<span class=\"string\">\"Text1\"</span>   <span class=\"attr\">onkeyup</span>=<span class=\"string\">\"value=value.replace(/[^\\d|^\\.]/g,'')\"</span></div><div class=\"line\"><span class=\"attr\">onbeforepaste</span>=<span class=\"string\">\"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\\d|^\\.]/g,''))\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>上面代码中 onbeforepaste属性是防止复制粘贴</p>\n<ol>\n<li>判断CheckBoxList有没有选择</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//id为CheckBoxList控件的ID</span></div><div class=\"line\"><span class=\"comment\">//return true 说明没有选择</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkLocCate</span>(<span class=\"params\">id</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> status = <span class=\"literal\">true</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> inputs = <span class=\"built_in\">document</span>.getElementById(id).getElementsByTagName(<span class=\"string\">\"input\"</span>);</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; inputs.length; i++) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (inputs[i].type == <span class=\"string\">\"checkbox\"</span> &amp;&amp; inputs[i].checked == <span class=\"literal\">true</span>) &#123;</div><div class=\"line\">            status = <span class=\"literal\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> status;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>3.为DropDownList添加项</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//id为DropDownList控件的ID</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addOptions</span>(<span class=\"params\">id</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> ddl = <span class=\"built_in\">document</span>.getElementById(id);</div><div class=\"line\">    <span class=\"comment\">//将DropDownList的内容清空</span></div><div class=\"line\">    ddl.options.length = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</div><div class=\"line\">        <span class=\"comment\">//Options的第一个参数为Text值，第二个参数为Value值</span></div><div class=\"line\">        ddl.add(<span class=\"keyword\">new</span> Option(i, i));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>4.为table添加行和列</p>\n<p>在javascript中添加行和列是通过insertRow和inertCell来实现的，看下面一个例子</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>AddRow<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"css\"></div><div class=\"line\">        <span class=\"selector-class\">.BlackBorder</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#000</span>;</div><div class=\"line\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"selector-class\">.BlackBorder</span> <span class=\"selector-tag\">tr</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">width</span>=<span class=\"string\">\"400px\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    姓名：</div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txtName\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 100px;\"</span> /&gt;</span></div><div class=\"line\">                    年龄：</div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txtAge\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 50px;\"</span> /&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txtAdd\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"新增\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"return insertRow()\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">id</span>=<span class=\"string\">\"tMemInfo\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"BlackBorder\"</span> <span class=\"attr\">cellpadding</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"1\"</span></div><div class=\"line\">                        <span class=\"attr\">border</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"padding-left: 5px;\"</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background-color: #E0E0E0;\"</span>&gt;</span></div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 150px;\"</span>&gt;</span></div><div class=\"line\">                                姓名</div><div class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 100px;\"</span>&gt;</span></div><div class=\"line\">                                年龄</div><div class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                                管理</div><div class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insertRow</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">var</span> name = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txtName\"</span>).value;</div><div class=\"line\">            <span class=\"keyword\">var</span> age = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txtAge\"</span>).value;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (name == <span class=\"string\">\"\"</span>) &#123;</div><div class=\"line\">                alert(<span class=\"string\">\"請填寫姓名\"</span>);</div><div class=\"line\">                <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txtName\"</span>).focus();</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">if</span> (age == <span class=\"string\">\"\"</span>) &#123;</div><div class=\"line\">                alert(<span class=\"string\">\"請填寫年龄\"</span>);</div><div class=\"line\">                <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txtAge\"</span>).focus();</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">var</span> myTable = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"tMemInfo\"</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> objRow = myTable.insertRow(<span class=\"number\">1</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> objCell = objRow.insertCell(<span class=\"number\">0</span>);</div><div class=\"line\">            objCell.innerHTML = <span class=\"string\">\"&lt;input type='text' style='width:100px;'  style='display:none'/&gt;&lt;span &gt;\"</span></div><div class=\"line\">                                      + name + <span class=\"string\">\"&lt;/span&gt;\"</span>;</div><div class=\"line\">            <span class=\"keyword\">var</span> objCell = objRow.insertCell(<span class=\"number\">1</span>);</div><div class=\"line\">            objCell.innerHTML = <span class=\"string\">\"&lt;input type='text' style='width:50px;'  style='display:none'/&gt;&lt;span &gt;\"</span></div><div class=\"line\">                                      + age + <span class=\"string\">\"&lt;/span&gt;\"</span>;</div><div class=\"line\">            <span class=\"keyword\">var</span> objCell = objRow.insertCell(<span class=\"number\">2</span>);</div><div class=\"line\">            objCell.innerHTML = <span class=\"string\">\" &lt;input type='button' value='取消' onclick='cancel()' style='display:none'/&gt; \"</span> +</div><div class=\"line\">                     <span class=\"string\">\" &lt;input type='button' value='儲存' onclick='save()' style='display:none'/&gt;\"</span> +</div><div class=\"line\">                     <span class=\"string\">\" &lt;input type='button' value='修改' onclick='edit()'  /&gt;\"</span> +</div><div class=\"line\">                     <span class=\"string\">\" &lt;input type='button' value='删除' onclick='deleteRow()' /&gt;\"</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txtName\"</span>).value = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txtAge\"</span>).value = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"txtName\"</span>).focus();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//删除行</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deleteRow</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> myTable = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"tMemInfo\"</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> trList = myTable.getElementsByTagName(<span class=\"string\">\"tr\"</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> row = <span class=\"number\">0</span>;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; trList.length; i++) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (event.srcElement.parentNode.parentNode == trList[i])</div><div class=\"line\">                    row = i;</div><div class=\"line\">            &#125;</div><div class=\"line\">            myTable.deleteRow(row);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cancel</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> e = event.srcElement.parentElement.parentElement;</div><div class=\"line\">            e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">1</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">1</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">2</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">4</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">6</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">save</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> e = event.srcElement.parentElement.parentElement;</div><div class=\"line\">            e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">1</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">1</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">2</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">4</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">6</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">1</span>].innerHTML = e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">0</span>].value;</div><div class=\"line\">            e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">1</span>].innerHTML = e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">0</span>].value;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">edit</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> e = event.srcElement.parentElement.parentElement;</div><div class=\"line\">            e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">1</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">1</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">0</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">2</span>].style.display = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">4</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">2</span>].childNodes[<span class=\"number\">6</span>].style.display = <span class=\"string\">\"none\"</span>;</div><div class=\"line\">            e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">0</span>].value = e.childNodes[<span class=\"number\">0</span>].childNodes[<span class=\"number\">1</span>].innerHTML;</div><div class=\"line\">            e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">0</span>].value = e.childNodes[<span class=\"number\">1</span>].childNodes[<span class=\"number\">1</span>].innerHTML;</div><div class=\"line\">        &#125;</div><div class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>5 在javascript中setTimeOut和setInterval的區別</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//1秒钟执行一次函数1</span></div><div class=\"line\">window<span class=\"selector-class\">.setInterval</span>(<span class=\"string\">\"函數1\"</span>, <span class=\"number\">1000</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//延迟1秒钟执行函数2</span></div><div class=\"line\">window<span class=\"selector-class\">.setTiemout</span>(<span class=\"string\">\"函數2\"</span>, <span class=\"number\">1000</span>);</div></pre></td></tr></table></figure>\n<p>6 js获取字符串的长度</p>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">var</span> <span class=\"keyword\">str </span>= <span class=\"keyword\">str.replace(/[^\\x00-\\xff]/g, </span><span class=\"string\">\"**\"</span>).length<span class=\"comment\">;</span></div></pre></td></tr></table></figure>\n<p>7 javascript中的一些验证</p>\n<figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//去空格</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">trim</span>(<span class=\"params\">str</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> str.replace(<span class=\"regexp\">/(^\\s*)|(\\s*$)/g</span>, <span class=\"string\">\"\"</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//validate email</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IsMail</span>(<span class=\"params\">mail</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"built_in\">var</span> patrn = <span class=\"regexp\">/^w+([-+.]w+)*@w+([-.]w+)*.w+([-.]w+)*$/</span>;</div><div class=\"line\">    <span class=\"keyword\">return</span> patrn.test(mail);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//validate url</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IsURL</span>(<span class=\"params\">url</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"built_in\">var</span> regexp = <span class=\"regexp\">/^http:/</span><span class=\"regexp\">/[A-Za-z0-9]+.[A-Za-z0-9]+[/=?%-&amp;_~`@[]':+!]*([^&lt;&gt;\"\"])*$/</span>;</div><div class=\"line\">    <span class=\"keyword\">return</span> regexp.test(<span class=\"built_in\">url</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>不断更新中……</p>"},{"title":"实现鼠标悬停高亮显示—分别在gridview和datagrid中","date":"2007-05-06T16:00:00.000Z","_content":"\n在datagrid中的ItemDataBound事件中写如下代码：\n\n```\nprivate void DataGrid1_ItemDataBound(object sender, System.Web.UI.WebControls.DataGridItemEventArgs e)\n{\n    if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)\n    {\n        e.Item.Attributes.Add(\"onmouseover\", \"c=this.style.backgroundColor;this.style.backgroundColor='#66CCFF'\");\n        e.Item.Attributes.Add(\"onmouseout\", \"this.style.backgroundColor=c\");\n    }\n}\n```\n\n在girdview中的RowDataBound事件中写下如下代码：\n\n```\nprotected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)\n{\n    if (e.Row.RowType == DataControlRowType.DataRow)\n    {\n        e.Row.Attributes.Add(\"onmouseover\", \"currentcolor=this.style.backgroundColor;this.style.backgroundColor='#6699ff';\");\n        e.Row.Attributes.Add(\"onmouseout\", \"this.style.backgroundColor=currentcolor;\");\n    }\n}\n```\n\n","source":"_posts/implement-mouseover-highlight-respectively-in-the-gridview-and-the-datagrid.md","raw":"---\ntitle: 实现鼠标悬停高亮显示—分别在gridview和datagrid中\ndate: 2007-05-07\ncategories: [Asp.Net]\ntags: [AspNet,GrdiView,小技巧]\n---\n\n在datagrid中的ItemDataBound事件中写如下代码：\n\n```\nprivate void DataGrid1_ItemDataBound(object sender, System.Web.UI.WebControls.DataGridItemEventArgs e)\n{\n    if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)\n    {\n        e.Item.Attributes.Add(\"onmouseover\", \"c=this.style.backgroundColor;this.style.backgroundColor='#66CCFF'\");\n        e.Item.Attributes.Add(\"onmouseout\", \"this.style.backgroundColor=c\");\n    }\n}\n```\n\n在girdview中的RowDataBound事件中写下如下代码：\n\n```\nprotected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)\n{\n    if (e.Row.RowType == DataControlRowType.DataRow)\n    {\n        e.Row.Attributes.Add(\"onmouseover\", \"currentcolor=this.style.backgroundColor;this.style.backgroundColor='#6699ff';\");\n        e.Row.Attributes.Add(\"onmouseout\", \"this.style.backgroundColor=currentcolor;\");\n    }\n}\n```\n\n","slug":"implement-mouseover-highlight-respectively-in-the-gridview-and-the-datagrid","published":1,"updated":"2016-08-12T16:12:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz920004yxfyn9i5avuvb","content":"<p>在datagrid中的ItemDataBound事件中写如下代码：</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">private</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">DataGrid1_ItemDataBound</span>(object sender, System.Web.UI.WebControls.DataGridItemEventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"selector-tag\">if</span> (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)</div><div class=\"line\">    &#123;</div><div class=\"line\">        e<span class=\"selector-class\">.Item</span><span class=\"selector-class\">.Attributes</span><span class=\"selector-class\">.Add</span>(<span class=\"string\">\"onmouseover\"</span>, <span class=\"string\">\"c=this.style.backgroundColor;this.style.backgroundColor='#66CCFF'\"</span>);</div><div class=\"line\">        e<span class=\"selector-class\">.Item</span><span class=\"selector-class\">.Attributes</span><span class=\"selector-class\">.Add</span>(<span class=\"string\">\"onmouseout\"</span>, <span class=\"string\">\"this.style.backgroundColor=c\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在girdview中的RowDataBound事件中写下如下代码：</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">protected</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">GridView1_RowDataBound</span>(object sender, GridViewRowEventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"selector-tag\">if</span> (e.Row.RowType == DataControlRowType.DataRow)</div><div class=\"line\">    &#123;</div><div class=\"line\">        e<span class=\"selector-class\">.Row</span><span class=\"selector-class\">.Attributes</span><span class=\"selector-class\">.Add</span>(<span class=\"string\">\"onmouseover\"</span>, <span class=\"string\">\"currentcolor=this.style.backgroundColor;this.style.backgroundColor='#6699ff';\"</span>);</div><div class=\"line\">        e<span class=\"selector-class\">.Row</span><span class=\"selector-class\">.Attributes</span><span class=\"selector-class\">.Add</span>(<span class=\"string\">\"onmouseout\"</span>, <span class=\"string\">\"this.style.backgroundColor=currentcolor;\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>在datagrid中的ItemDataBound事件中写如下代码：</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">private</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">DataGrid1_ItemDataBound</span>(object sender, System.Web.UI.WebControls.DataGridItemEventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"selector-tag\">if</span> (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)</div><div class=\"line\">    &#123;</div><div class=\"line\">        e<span class=\"selector-class\">.Item</span><span class=\"selector-class\">.Attributes</span><span class=\"selector-class\">.Add</span>(<span class=\"string\">\"onmouseover\"</span>, <span class=\"string\">\"c=this.style.backgroundColor;this.style.backgroundColor='#66CCFF'\"</span>);</div><div class=\"line\">        e<span class=\"selector-class\">.Item</span><span class=\"selector-class\">.Attributes</span><span class=\"selector-class\">.Add</span>(<span class=\"string\">\"onmouseout\"</span>, <span class=\"string\">\"this.style.backgroundColor=c\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在girdview中的RowDataBound事件中写下如下代码：</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">protected</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">GridView1_RowDataBound</span>(object sender, GridViewRowEventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"selector-tag\">if</span> (e.Row.RowType == DataControlRowType.DataRow)</div><div class=\"line\">    &#123;</div><div class=\"line\">        e<span class=\"selector-class\">.Row</span><span class=\"selector-class\">.Attributes</span><span class=\"selector-class\">.Add</span>(<span class=\"string\">\"onmouseover\"</span>, <span class=\"string\">\"currentcolor=this.style.backgroundColor;this.style.backgroundColor='#6699ff';\"</span>);</div><div class=\"line\">        e<span class=\"selector-class\">.Row</span><span class=\"selector-class\">.Attributes</span><span class=\"selector-class\">.Add</span>(<span class=\"string\">\"onmouseout\"</span>, <span class=\"string\">\"this.style.backgroundColor=currentcolor;\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"该死的英语四级","date":"2006-12-13T16:00:00.000Z","_content":"\n还有十几天就是全国四级考试了，看起来好像和我这样一个快要毕业的人没有什么关系，但我却是这次考试的考生之一，说起来惭愧，从可以报名参加四级考试开始一直到现在，虽然每次的分数都有点长进，但却始终没能跨过去。好在身边一直有人在鼓励着我，才使一次次想放弃的我又一次次地走进考场然后又一次次地令他们失望。一个多星期的时间是很快的，但我现在却没有心思静下来做几套模拟题或是听几套真题的听力，不管结果怎么样，这次应该是我最后一次走进四级考场。能通过当然好，即使没有过至少心里的压力可也以得以释放。\r<!--more-->\n\r英语对于一个编程的人来说当然是很重要的，很多开发软件的帮助文档是英文的，很多的先进技术也是最先在英文的网站上发布出来的。我也相信我会学习好英语但并不是英语四级，我也不认为一个四级证书或是一张有着很高分数的四级成绩单就能证明英语水平有多高，一些过了四级的人却不能看懂计算机相关的英文资料或是英文网站，而有的人能看懂这些四级分数却很底，这些身边的例子也许就是最好的证明。然而现在很多的企业还是很看中英语四级，还把有没有四级证做为选拔人才的一个条件，我认为没有必要，一个人的能力绝对比一张四级成绩单要重要，而且现在的四级成绩单还有很多这种情况：听力和作文几乎为0分除此之外几乎是满分，不说大家也应该知道是什么意思了，但不管通过什么途径只要能考过甚至拿到高分都是一种能力，我好象没有这种能力。曾看过一篇报道，因为英语四级，有很多的大学生在学校的四年里把大量的时间放在考英语四级上从而让专业课荒废了。现在四级已经不和学位挂钩了，这就说明了国家也意识到了四级的一些弊端，也许以后会取消，但这需要一个过程，说实话我很期待这样一天的到来，同时我也希望能有一些能够实际提高大家英语水平的教学方法的出现，而不是像现在这样只是会做英语试卷而已。\r\r我从来就没有否认英语的重要性，但我还是要鄙视四级。都说兴趣是最好的老师，但是现在整天埋头狂啃英语四级模拟试卷的人又有多少是对做试卷很感兴趣的，恐怕没有几个，之所以会这样执着还是因为想有有个高分的成绩单。试问既然不是由兴趣而去学习的又怎么能学的好呢？\r\r就象前面已经说过的英语是很重要的，我也是在通过各种途径来提高自己的英语水平，因为不懂英语很可能在不久的将来会被淘汰，所以对英语的学习是不会放弃的。现在不管是对四级的不满还是对现在英语教育制度的不认可，也只能在blog上写点文字发泄发泄，人还是要适应社会的，该学习还是得学习。我照样还是每次都走进四级的考场虽然我对四级深恶痛疾，希望所有这次考四级的人都能通过。也希望四级考试早日滚蛋吧！\n\n","source":"_posts/english-cet-4.md","raw":"---\ntitle: 该死的英语四级\ndate: 2006-12-14\ncategories: [心情日记]\ntags: [英语]\n---\n\n还有十几天就是全国四级考试了，看起来好像和我这样一个快要毕业的人没有什么关系，但我却是这次考试的考生之一，说起来惭愧，从可以报名参加四级考试开始一直到现在，虽然每次的分数都有点长进，但却始终没能跨过去。好在身边一直有人在鼓励着我，才使一次次想放弃的我又一次次地走进考场然后又一次次地令他们失望。一个多星期的时间是很快的，但我现在却没有心思静下来做几套模拟题或是听几套真题的听力，不管结果怎么样，这次应该是我最后一次走进四级考场。能通过当然好，即使没有过至少心里的压力可也以得以释放。\r<!--more-->\n\r英语对于一个编程的人来说当然是很重要的，很多开发软件的帮助文档是英文的，很多的先进技术也是最先在英文的网站上发布出来的。我也相信我会学习好英语但并不是英语四级，我也不认为一个四级证书或是一张有着很高分数的四级成绩单就能证明英语水平有多高，一些过了四级的人却不能看懂计算机相关的英文资料或是英文网站，而有的人能看懂这些四级分数却很底，这些身边的例子也许就是最好的证明。然而现在很多的企业还是很看中英语四级，还把有没有四级证做为选拔人才的一个条件，我认为没有必要，一个人的能力绝对比一张四级成绩单要重要，而且现在的四级成绩单还有很多这种情况：听力和作文几乎为0分除此之外几乎是满分，不说大家也应该知道是什么意思了，但不管通过什么途径只要能考过甚至拿到高分都是一种能力，我好象没有这种能力。曾看过一篇报道，因为英语四级，有很多的大学生在学校的四年里把大量的时间放在考英语四级上从而让专业课荒废了。现在四级已经不和学位挂钩了，这就说明了国家也意识到了四级的一些弊端，也许以后会取消，但这需要一个过程，说实话我很期待这样一天的到来，同时我也希望能有一些能够实际提高大家英语水平的教学方法的出现，而不是像现在这样只是会做英语试卷而已。\r\r我从来就没有否认英语的重要性，但我还是要鄙视四级。都说兴趣是最好的老师，但是现在整天埋头狂啃英语四级模拟试卷的人又有多少是对做试卷很感兴趣的，恐怕没有几个，之所以会这样执着还是因为想有有个高分的成绩单。试问既然不是由兴趣而去学习的又怎么能学的好呢？\r\r就象前面已经说过的英语是很重要的，我也是在通过各种途径来提高自己的英语水平，因为不懂英语很可能在不久的将来会被淘汰，所以对英语的学习是不会放弃的。现在不管是对四级的不满还是对现在英语教育制度的不认可，也只能在blog上写点文字发泄发泄，人还是要适应社会的，该学习还是得学习。我照样还是每次都走进四级的考场虽然我对四级深恶痛疾，希望所有这次考四级的人都能通过。也希望四级考试早日滚蛋吧！\n\n","slug":"english-cet-4","published":1,"updated":"2016-08-12T04:49:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz9220053xfyngckn2qfi","content":"<p>还有十几天就是全国四级考试了，看起来好像和我这样一个快要毕业的人没有什么关系，但我却是这次考试的考生之一，说起来惭愧，从可以报名参加四级考试开始一直到现在，虽然每次的分数都有点长进，但却始终没能跨过去。好在身边一直有人在鼓励着我，才使一次次想放弃的我又一次次地走进考场然后又一次次地令他们失望。一个多星期的时间是很快的，但我现在却没有心思静下来做几套模拟题或是听几套真题的听力，不管结果怎么样，这次应该是我最后一次走进四级考场。能通过当然好，即使没有过至少心里的压力可也以得以释放。<br><a id=\"more\"></a></p>\n<p>英语对于一个编程的人来说当然是很重要的，很多开发软件的帮助文档是英文的，很多的先进技术也是最先在英文的网站上发布出来的。我也相信我会学习好英语但并不是英语四级，我也不认为一个四级证书或是一张有着很高分数的四级成绩单就能证明英语水平有多高，一些过了四级的人却不能看懂计算机相关的英文资料或是英文网站，而有的人能看懂这些四级分数却很底，这些身边的例子也许就是最好的证明。然而现在很多的企业还是很看中英语四级，还把有没有四级证做为选拔人才的一个条件，我认为没有必要，一个人的能力绝对比一张四级成绩单要重要，而且现在的四级成绩单还有很多这种情况：听力和作文几乎为0分除此之外几乎是满分，不说大家也应该知道是什么意思了，但不管通过什么途径只要能考过甚至拿到高分都是一种能力，我好象没有这种能力。曾看过一篇报道，因为英语四级，有很多的大学生在学校的四年里把大量的时间放在考英语四级上从而让专业课荒废了。现在四级已经不和学位挂钩了，这就说明了国家也意识到了四级的一些弊端，也许以后会取消，但这需要一个过程，说实话我很期待这样一天的到来，同时我也希望能有一些能够实际提高大家英语水平的教学方法的出现，而不是像现在这样只是会做英语试卷而已。</p>\n<p>我从来就没有否认英语的重要性，但我还是要鄙视四级。都说兴趣是最好的老师，但是现在整天埋头狂啃英语四级模拟试卷的人又有多少是对做试卷很感兴趣的，恐怕没有几个，之所以会这样执着还是因为想有有个高分的成绩单。试问既然不是由兴趣而去学习的又怎么能学的好呢？</p>\n<p>就象前面已经说过的英语是很重要的，我也是在通过各种途径来提高自己的英语水平，因为不懂英语很可能在不久的将来会被淘汰，所以对英语的学习是不会放弃的。现在不管是对四级的不满还是对现在英语教育制度的不认可，也只能在blog上写点文字发泄发泄，人还是要适应社会的，该学习还是得学习。我照样还是每次都走进四级的考场虽然我对四级深恶痛疾，希望所有这次考四级的人都能通过。也希望四级考试早日滚蛋吧！</p>\n","excerpt":"<p>还有十几天就是全国四级考试了，看起来好像和我这样一个快要毕业的人没有什么关系，但我却是这次考试的考生之一，说起来惭愧，从可以报名参加四级考试开始一直到现在，虽然每次的分数都有点长进，但却始终没能跨过去。好在身边一直有人在鼓励着我，才使一次次想放弃的我又一次次地走进考场然后又一次次地令他们失望。一个多星期的时间是很快的，但我现在却没有心思静下来做几套模拟题或是听几套真题的听力，不管结果怎么样，这次应该是我最后一次走进四级考场。能通过当然好，即使没有过至少心里的压力可也以得以释放。<br>","more":"</p>\n<p>英语对于一个编程的人来说当然是很重要的，很多开发软件的帮助文档是英文的，很多的先进技术也是最先在英文的网站上发布出来的。我也相信我会学习好英语但并不是英语四级，我也不认为一个四级证书或是一张有着很高分数的四级成绩单就能证明英语水平有多高，一些过了四级的人却不能看懂计算机相关的英文资料或是英文网站，而有的人能看懂这些四级分数却很底，这些身边的例子也许就是最好的证明。然而现在很多的企业还是很看中英语四级，还把有没有四级证做为选拔人才的一个条件，我认为没有必要，一个人的能力绝对比一张四级成绩单要重要，而且现在的四级成绩单还有很多这种情况：听力和作文几乎为0分除此之外几乎是满分，不说大家也应该知道是什么意思了，但不管通过什么途径只要能考过甚至拿到高分都是一种能力，我好象没有这种能力。曾看过一篇报道，因为英语四级，有很多的大学生在学校的四年里把大量的时间放在考英语四级上从而让专业课荒废了。现在四级已经不和学位挂钩了，这就说明了国家也意识到了四级的一些弊端，也许以后会取消，但这需要一个过程，说实话我很期待这样一天的到来，同时我也希望能有一些能够实际提高大家英语水平的教学方法的出现，而不是像现在这样只是会做英语试卷而已。</p>\n<p>我从来就没有否认英语的重要性，但我还是要鄙视四级。都说兴趣是最好的老师，但是现在整天埋头狂啃英语四级模拟试卷的人又有多少是对做试卷很感兴趣的，恐怕没有几个，之所以会这样执着还是因为想有有个高分的成绩单。试问既然不是由兴趣而去学习的又怎么能学的好呢？</p>\n<p>就象前面已经说过的英语是很重要的，我也是在通过各种途径来提高自己的英语水平，因为不懂英语很可能在不久的将来会被淘汰，所以对英语的学习是不会放弃的。现在不管是对四级的不满还是对现在英语教育制度的不认可，也只能在blog上写点文字发泄发泄，人还是要适应社会的，该学习还是得学习。我照样还是每次都走进四级的考场虽然我对四级深恶痛疾，希望所有这次考四级的人都能通过。也希望四级考试早日滚蛋吧！</p>"},{"title":"毕业答辩","date":"2007-06-22T16:00:00.000Z","_content":"\n为了毕业答辩我提前好多天就回到了学校，很多人都在紧张地准备着，因为从已经答辩过的同学那里可以看到在我们这个专业通过答辩并不是那么容易.不过我到是一点都不担心，毕竟我的系统是我自己做的,不管老师提出什么问题我相信我一定能回答上来。\n<!--more-->\n很幸运我的答辩时间排在5月30号的上午最后一个,那天我很早就去了,在后面坐着听前面的同学答辩，看着老师把一些同学问得说不出话来，而且在我前面的十来个人有5个需要重新答辩,当时的确有点紧张。终于到我了，我以很快的速度说完了陈述报告词以及演示了程序,然后就是老师提问，不知道是老师的肚子饿了想去吃饭还是因为看我的设计是自己做的，老师就问了我两个问题，而且问的问题我感觉不是很难，就这样轻松通过了答辩。\n\n","source":"_posts/graduation-reply.md","raw":"---\ntitle: 毕业答辩\ndate: 2007-06-23\ncategories: [心情日记]\ntags:\n---\n\n为了毕业答辩我提前好多天就回到了学校，很多人都在紧张地准备着，因为从已经答辩过的同学那里可以看到在我们这个专业通过答辩并不是那么容易.不过我到是一点都不担心，毕竟我的系统是我自己做的,不管老师提出什么问题我相信我一定能回答上来。\n<!--more-->\n很幸运我的答辩时间排在5月30号的上午最后一个,那天我很早就去了,在后面坐着听前面的同学答辩，看着老师把一些同学问得说不出话来，而且在我前面的十来个人有5个需要重新答辩,当时的确有点紧张。终于到我了，我以很快的速度说完了陈述报告词以及演示了程序,然后就是老师提问，不知道是老师的肚子饿了想去吃饭还是因为看我的设计是自己做的，老师就问了我两个问题，而且问的问题我感觉不是很难，就这样轻松通过了答辩。\n\n","slug":"graduation-reply","published":1,"updated":"2016-08-12T16:18:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz9230055xfyna1rjrezj","content":"<p>为了毕业答辩我提前好多天就回到了学校，很多人都在紧张地准备着，因为从已经答辩过的同学那里可以看到在我们这个专业通过答辩并不是那么容易.不过我到是一点都不担心，毕竟我的系统是我自己做的,不管老师提出什么问题我相信我一定能回答上来。<br><a id=\"more\"></a><br>很幸运我的答辩时间排在5月30号的上午最后一个,那天我很早就去了,在后面坐着听前面的同学答辩，看着老师把一些同学问得说不出话来，而且在我前面的十来个人有5个需要重新答辩,当时的确有点紧张。终于到我了，我以很快的速度说完了陈述报告词以及演示了程序,然后就是老师提问，不知道是老师的肚子饿了想去吃饭还是因为看我的设计是自己做的，老师就问了我两个问题，而且问的问题我感觉不是很难，就这样轻松通过了答辩。</p>\n","excerpt":"<p>为了毕业答辩我提前好多天就回到了学校，很多人都在紧张地准备着，因为从已经答辩过的同学那里可以看到在我们这个专业通过答辩并不是那么容易.不过我到是一点都不担心，毕竟我的系统是我自己做的,不管老师提出什么问题我相信我一定能回答上来。<br>","more":"<br>很幸运我的答辩时间排在5月30号的上午最后一个,那天我很早就去了,在后面坐着听前面的同学答辩，看着老师把一些同学问得说不出话来，而且在我前面的十来个人有5个需要重新答辩,当时的确有点紧张。终于到我了，我以很快的速度说完了陈述报告词以及演示了程序,然后就是老师提问，不知道是老师的肚子饿了想去吃饭还是因为看我的设计是自己做的，老师就问了我两个问题，而且问的问题我感觉不是很难，就这样轻松通过了答辩。</p>"},{"title":"消除window.close()的提示窗口","date":"2009-01-07T16:00:00.000Z","_content":"\nWindow.close()这句脚本是用来关闭当前窗口，如果是在window.open的窗口中执行Window.close()，将会很顺利地将窗口关闭，但如果是在一非window.open打开的窗口中执行Window.close()，将会弹出一个提示窗口，如下：\n\n![2010-12-30_124855](http://oec2003.qiniudn.com/2010-12-30_124855.gif)\n\n要在程序中消除这个提示框也很简单，不过在IE6和IE7稍有不同\n\n1. IE6\n\n```\n<html xmlns=\"http://www.w3.org/1999/xhtml\" >\n<head id=\"Head1\" runat=\"server\">\n    <title>IE6Close</title>\n    <script type=\"text/javascript\">\n    function closeWin()\n    {\n        window.opener=null;\n        window.close();\n    }\n    </script>\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\">\n    <div>\n        <input id=\"btnClose\" type=\"button\" value=\"close\"  onclick=\"closeWin()\"/>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n2.IE7\n\n```\n<html xmlns=\"http://www.w3.org/1999/xhtml\" >\n<head id=\"Head1\" runat=\"server\">\n    <title>IE7Colse</title>\n    <script type=\"text/javascript\">\n    function closeWin()\n    {\n        window.open('','_self','');\n        window.close();\n    }\n    </script>\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\">\n    <div>\n        <input id=\"btnClose\" type=\"button\" value=\"close\" onclick=\"closeWin()\"/>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n\n","source":"_posts/eliminate-the-prompt-window.md","raw":"---\ntitle: 消除window.close()的提示窗口\ndate: 2009-01-08\ncategories: [Javascript]\ntags: [javascript]\n---\n\nWindow.close()这句脚本是用来关闭当前窗口，如果是在window.open的窗口中执行Window.close()，将会很顺利地将窗口关闭，但如果是在一非window.open打开的窗口中执行Window.close()，将会弹出一个提示窗口，如下：\n\n![2010-12-30_124855](http://oec2003.qiniudn.com/2010-12-30_124855.gif)\n\n要在程序中消除这个提示框也很简单，不过在IE6和IE7稍有不同\n\n1. IE6\n\n```\n<html xmlns=\"http://www.w3.org/1999/xhtml\" >\n<head id=\"Head1\" runat=\"server\">\n    <title>IE6Close</title>\n    <script type=\"text/javascript\">\n    function closeWin()\n    {\n        window.opener=null;\n        window.close();\n    }\n    </script>\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\">\n    <div>\n        <input id=\"btnClose\" type=\"button\" value=\"close\"  onclick=\"closeWin()\"/>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n2.IE7\n\n```\n<html xmlns=\"http://www.w3.org/1999/xhtml\" >\n<head id=\"Head1\" runat=\"server\">\n    <title>IE7Colse</title>\n    <script type=\"text/javascript\">\n    function closeWin()\n    {\n        window.open('','_self','');\n        window.close();\n    }\n    </script>\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\">\n    <div>\n        <input id=\"btnClose\" type=\"button\" value=\"close\" onclick=\"closeWin()\"/>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n\n","slug":"eliminate-the-prompt-window","published":1,"updated":"2016-08-14T07:35:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz9270058xfyn92cvbmmj","content":"<p>Window.close()这句脚本是用来关闭当前窗口，如果是在window.open的窗口中执行Window.close()，将会很顺利地将窗口关闭，但如果是在一非window.open打开的窗口中执行Window.close()，将会弹出一个提示窗口，如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_124855.gif\" alt=\"2010-12-30_124855\"></p>\n<p>要在程序中消除这个提示框也很简单，不过在IE6和IE7稍有不同</p>\n<ol>\n<li>IE6</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span> &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>IE6Close<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">closeWin</span>(<span class=\"params\"></span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">window</span>.opener=<span class=\"literal\">null</span>;</div><div class=\"line\">        <span class=\"built_in\">window</span>.close();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btnClose\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"close\"</span>  <span class=\"attr\">onclick</span>=<span class=\"string\">\"closeWin()\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>2.IE7</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span> &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>IE7Colse<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">closeWin</span>(<span class=\"params\"></span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">window</span>.open(<span class=\"string\">''</span>,<span class=\"string\">'_self'</span>,<span class=\"string\">''</span>);</div><div class=\"line\">        <span class=\"built_in\">window</span>.close();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btnClose\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"close\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"closeWin()\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>Window.close()这句脚本是用来关闭当前窗口，如果是在window.open的窗口中执行Window.close()，将会很顺利地将窗口关闭，但如果是在一非window.open打开的窗口中执行Window.close()，将会弹出一个提示窗口，如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_124855.gif\" alt=\"2010-12-30_124855\"></p>\n<p>要在程序中消除这个提示框也很简单，不过在IE6和IE7稍有不同</p>\n<ol>\n<li>IE6</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span> &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>IE6Close<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">closeWin</span>(<span class=\"params\"></span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">window</span>.opener=<span class=\"literal\">null</span>;</div><div class=\"line\">        <span class=\"built_in\">window</span>.close();</div><div class=\"line\">    &#125;</div><div class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btnClose\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"close\"</span>  <span class=\"attr\">onclick</span>=<span class=\"string\">\"closeWin()\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>2.IE7</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span> &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>IE7Colse<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">closeWin</span>(<span class=\"params\"></span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">window</span>.open(<span class=\"string\">''</span>,<span class=\"string\">'_self'</span>,<span class=\"string\">''</span>);</div><div class=\"line\">        <span class=\"built_in\">window</span>.close();</div><div class=\"line\">    &#125;</div><div class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btnClose\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"close\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"closeWin()\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n"},{"title":"在vs2008中设置jquery智能提示","date":"2009-05-19T16:00:00.000Z","_content":"\n1  要确保您的vs2008已经打了sp1补丁，可以点击[这里](http://www.microsoft.com/downloads/details.aspx?FamilyID=27673C47-B3B5-4C67-BD99-84E525B5CE61&displaylang=zh-cn)下载\n\n2  下载 jQuery-vsdoc.js ，如果您安装了asp.net mvc ，可以在mvc的项目下的srcipts目下找到，或是点击[这里](http://docs.jquery.com/Downloading_jQuery#Download_jQuery)下载。\n\n![2010-12-30_104425](http://oec2003.qiniudn.com/2010-12-30_104425.gif)\n\n3 下载安装一个vs2008支持 -vsdoc.js 智能提示的一个补丁 ，可以点击这里下载\n\n4 准备工作已经做完，现在就可以来试试jquery的智能提示了，用vs2008新建一个项目，在页面的head标签里添加对jquery-1.3.2-vsdoc.js的引用\n\n![2010-12-30_104506](http://oec2003.qiniudn.com/2010-12-30_104506.gif)\n\n5 现在在js的方法中敲一个$符号，智能提示就会弹出来。\n\n![2010-12-30_104541](http://oec2003.qiniudn.com/2010-12-30_104541.gif)\n\n参考文章：[http://weblogs.asp.net/scottgu/archive/2008/11/21/jquery-intellisense-in-vs-2008.aspx](http://weblogs.asp.net/scottgu/archive/2008/11/21/jquery-intellisense-in-vs-2008.aspx)\n\n\n","source":"_posts/in-setting-the-jquery-vs2008-intellisense.md","raw":"---\ntitle: 在vs2008中设置jquery智能提示\ndate: 2009-05-20\ncategories: [DotNet, JQuery]\ntags: [DotNet, JQuery]\n---\n\n1  要确保您的vs2008已经打了sp1补丁，可以点击[这里](http://www.microsoft.com/downloads/details.aspx?FamilyID=27673C47-B3B5-4C67-BD99-84E525B5CE61&displaylang=zh-cn)下载\n\n2  下载 jQuery-vsdoc.js ，如果您安装了asp.net mvc ，可以在mvc的项目下的srcipts目下找到，或是点击[这里](http://docs.jquery.com/Downloading_jQuery#Download_jQuery)下载。\n\n![2010-12-30_104425](http://oec2003.qiniudn.com/2010-12-30_104425.gif)\n\n3 下载安装一个vs2008支持 -vsdoc.js 智能提示的一个补丁 ，可以点击这里下载\n\n4 准备工作已经做完，现在就可以来试试jquery的智能提示了，用vs2008新建一个项目，在页面的head标签里添加对jquery-1.3.2-vsdoc.js的引用\n\n![2010-12-30_104506](http://oec2003.qiniudn.com/2010-12-30_104506.gif)\n\n5 现在在js的方法中敲一个$符号，智能提示就会弹出来。\n\n![2010-12-30_104541](http://oec2003.qiniudn.com/2010-12-30_104541.gif)\n\n参考文章：[http://weblogs.asp.net/scottgu/archive/2008/11/21/jquery-intellisense-in-vs-2008.aspx](http://weblogs.asp.net/scottgu/archive/2008/11/21/jquery-intellisense-in-vs-2008.aspx)\n\n\n","slug":"in-setting-the-jquery-vs2008-intellisense","published":1,"updated":"2016-08-15T13:38:57.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz929005cxfynvdn3m4me","content":"<p>1  要确保您的vs2008已经打了sp1补丁，可以点击<a href=\"http://www.microsoft.com/downloads/details.aspx?FamilyID=27673C47-B3B5-4C67-BD99-84E525B5CE61&amp;displaylang=zh-cn\" target=\"_blank\" rel=\"external\">这里</a>下载</p>\n<p>2  下载 jQuery-vsdoc.js ，如果您安装了asp.net mvc ，可以在mvc的项目下的srcipts目下找到，或是点击<a href=\"http://docs.jquery.com/Downloading_jQuery#Download_jQuery\" target=\"_blank\" rel=\"external\">这里</a>下载。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_104425.gif\" alt=\"2010-12-30_104425\"></p>\n<p>3 下载安装一个vs2008支持 -vsdoc.js 智能提示的一个补丁 ，可以点击这里下载</p>\n<p>4 准备工作已经做完，现在就可以来试试jquery的智能提示了，用vs2008新建一个项目，在页面的head标签里添加对jquery-1.3.2-vsdoc.js的引用</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_104506.gif\" alt=\"2010-12-30_104506\"></p>\n<p>5 现在在js的方法中敲一个$符号，智能提示就会弹出来。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_104541.gif\" alt=\"2010-12-30_104541\"></p>\n<p>参考文章：<a href=\"http://weblogs.asp.net/scottgu/archive/2008/11/21/jquery-intellisense-in-vs-2008.aspx\" target=\"_blank\" rel=\"external\">http://weblogs.asp.net/scottgu/archive/2008/11/21/jquery-intellisense-in-vs-2008.aspx</a></p>\n","excerpt":"","more":"<p>1  要确保您的vs2008已经打了sp1补丁，可以点击<a href=\"http://www.microsoft.com/downloads/details.aspx?FamilyID=27673C47-B3B5-4C67-BD99-84E525B5CE61&amp;displaylang=zh-cn\">这里</a>下载</p>\n<p>2  下载 jQuery-vsdoc.js ，如果您安装了asp.net mvc ，可以在mvc的项目下的srcipts目下找到，或是点击<a href=\"http://docs.jquery.com/Downloading_jQuery#Download_jQuery\">这里</a>下载。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_104425.gif\" alt=\"2010-12-30_104425\"></p>\n<p>3 下载安装一个vs2008支持 -vsdoc.js 智能提示的一个补丁 ，可以点击这里下载</p>\n<p>4 准备工作已经做完，现在就可以来试试jquery的智能提示了，用vs2008新建一个项目，在页面的head标签里添加对jquery-1.3.2-vsdoc.js的引用</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_104506.gif\" alt=\"2010-12-30_104506\"></p>\n<p>5 现在在js的方法中敲一个$符号，智能提示就会弹出来。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_104541.gif\" alt=\"2010-12-30_104541\"></p>\n<p>参考文章：<a href=\"http://weblogs.asp.net/scottgu/archive/2008/11/21/jquery-intellisense-in-vs-2008.aspx\">http://weblogs.asp.net/scottgu/archive/2008/11/21/jquery-intellisense-in-vs-2008.aspx</a></p>\n"},{"title":"C#3.0学习(2)—对象集合初始化器","date":"2008-02-24T16:00:00.000Z","_content":"\n创建一个对象时可以包含一个对象初始化器或集合初始化器，用于初始化所创建对象的成员或新创建的集合的元素。使用初始化器可以让我们的代码变得更简洁。\n<!--more-->\n\n## 对象初始化器\n\n在以前如果定义了一个类，并将类实例化，我们会像下面这样做\n\n```\npublic class oec2003\n{\n    int x,y;\n    public int X\n    {\n        get{return x;}\n        set{x=value;}\n    }\n    public int Y\n    {\n        get{return x;}\n        set{x=value;}\n    }\n\n}\n```\n\n调用\n\n```\noec2003 o=new oec2003();\no.X=2003;\no.Y=2004;\n```\n\n使用对象初始化器\n\n```\npublic class oec2003\n{\n    int x, y;\n    public int X\n    {\n        get { return x; }\n        set { x = value; }\n    }\n    public int Y\n    {\n        get { return x; }\n        set { x = value; }\n    }\n}\n```\n\n调用\n\n```\nvar o=new oec2003{X=2003,Y=2004};\n```\n\n对象初时化器是利用了编译器对对象中的对外可见的字段或属性进行按序赋值，在编译还是隐式调用了构造函数，对字段或属性的赋值可以是一个或是多个。\n\n## 集合初时化器\n\n集合初始化器会对初始化器中的元素进行按序调用，下面是一个集合初时化器的例子\n\n```\nList<int> num= new List<int> { 0, 1, 2, 6, 7, 8, 9 };\n```\n\n应用集合初始化器的对象的类型必须实现了System.Collections.Generic.ICollections<T>接口并指定了确定的T。集合初始化器将依次对每个指定的元素调用ICollection<T>.Add(T)。\n\n有下面这样一个类，记录一个人的个人信息\n\n```\npublic class Oec2003Info\n{\n    string name;\n    int age;\n    List<string> phoneNumbers = new List<string>();\n\n    public string Name\n    {\n        get { return name; }\n        set { name = value; }\n    }\n    public string Age\n    {\n        get { return age; }\n        set { age = value; }\n    }\n    public List<string> PhoneNumbers\n    {\n        get { return phoneNumbers; }\n    }\n}\n```\n\n以前的做法\n\n```\nvar oec2003infos = new List<Oec2003Info>();\n\nvar tmp1= new Oec2003Info();\ntmp1.Name = \"oec2003\";\ntmp1.Age=100;\ntmp1.PhoneNumbers.Add(\"\ntmp1.PhoneNumbers.Add(\"1592********\");\nOec2003Info.Add(tmp1);\n\nvar tmp2 = new Oec2003Info();\ntmp2 .Name = \"oec2003\";\n  tmp2.Age=100;\ntmp2.PhoneNumbers.Add(\"1593********\");\ntmp3.PhoneNumbers.Add(\"1594********\");\nOec2003Info.Add(tmp2);\n```\n\n使用对象初始化器\n\n```\nvar oec2003infos= new List<Oec2003Info>\n{\n    new Oec2003Info\n    {\n        Name = \"oec2003\",\n        Age=100;\n        PhoneNumbers={\"1591********\",\"1592**********\"}\n\n    },\n\n    new Oec2003Info\n    {\n        Name = \"oec2003\",\n        Age=100;\n        PhoneNumbers = { \"1593********\",\"1594*********\"}\n\n    }\n};\n```\n\n","source":"_posts/learning-c-3-0-2-object-collection-initializer.md","raw":"---\ntitle: C#3.0学习(2)—对象集合初始化器\ndate: 2008-02-25\ncategories: [C#]\ntags: [C#,DotNet3.0]\n---\n\n创建一个对象时可以包含一个对象初始化器或集合初始化器，用于初始化所创建对象的成员或新创建的集合的元素。使用初始化器可以让我们的代码变得更简洁。\n<!--more-->\n\n## 对象初始化器\n\n在以前如果定义了一个类，并将类实例化，我们会像下面这样做\n\n```\npublic class oec2003\n{\n    int x,y;\n    public int X\n    {\n        get{return x;}\n        set{x=value;}\n    }\n    public int Y\n    {\n        get{return x;}\n        set{x=value;}\n    }\n\n}\n```\n\n调用\n\n```\noec2003 o=new oec2003();\no.X=2003;\no.Y=2004;\n```\n\n使用对象初始化器\n\n```\npublic class oec2003\n{\n    int x, y;\n    public int X\n    {\n        get { return x; }\n        set { x = value; }\n    }\n    public int Y\n    {\n        get { return x; }\n        set { x = value; }\n    }\n}\n```\n\n调用\n\n```\nvar o=new oec2003{X=2003,Y=2004};\n```\n\n对象初时化器是利用了编译器对对象中的对外可见的字段或属性进行按序赋值，在编译还是隐式调用了构造函数，对字段或属性的赋值可以是一个或是多个。\n\n## 集合初时化器\n\n集合初始化器会对初始化器中的元素进行按序调用，下面是一个集合初时化器的例子\n\n```\nList<int> num= new List<int> { 0, 1, 2, 6, 7, 8, 9 };\n```\n\n应用集合初始化器的对象的类型必须实现了System.Collections.Generic.ICollections<T>接口并指定了确定的T。集合初始化器将依次对每个指定的元素调用ICollection<T>.Add(T)。\n\n有下面这样一个类，记录一个人的个人信息\n\n```\npublic class Oec2003Info\n{\n    string name;\n    int age;\n    List<string> phoneNumbers = new List<string>();\n\n    public string Name\n    {\n        get { return name; }\n        set { name = value; }\n    }\n    public string Age\n    {\n        get { return age; }\n        set { age = value; }\n    }\n    public List<string> PhoneNumbers\n    {\n        get { return phoneNumbers; }\n    }\n}\n```\n\n以前的做法\n\n```\nvar oec2003infos = new List<Oec2003Info>();\n\nvar tmp1= new Oec2003Info();\ntmp1.Name = \"oec2003\";\ntmp1.Age=100;\ntmp1.PhoneNumbers.Add(\"\ntmp1.PhoneNumbers.Add(\"1592********\");\nOec2003Info.Add(tmp1);\n\nvar tmp2 = new Oec2003Info();\ntmp2 .Name = \"oec2003\";\n  tmp2.Age=100;\ntmp2.PhoneNumbers.Add(\"1593********\");\ntmp3.PhoneNumbers.Add(\"1594********\");\nOec2003Info.Add(tmp2);\n```\n\n使用对象初始化器\n\n```\nvar oec2003infos= new List<Oec2003Info>\n{\n    new Oec2003Info\n    {\n        Name = \"oec2003\",\n        Age=100;\n        PhoneNumbers={\"1591********\",\"1592**********\"}\n\n    },\n\n    new Oec2003Info\n    {\n        Name = \"oec2003\",\n        Age=100;\n        PhoneNumbers = { \"1593********\",\"1594*********\"}\n\n    }\n};\n```\n\n","slug":"learning-c-3-0-2-object-collection-initializer","published":1,"updated":"2016-08-13T14:39:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz92a005gxfyn52zyudm9","content":"<p>创建一个对象时可以包含一个对象初始化器或集合初始化器，用于初始化所创建对象的成员或新创建的集合的元素。使用初始化器可以让我们的代码变得更简洁。<br><a id=\"more\"></a></p>\n<h2 id=\"对象初始化器\"><a href=\"#对象初始化器\" class=\"headerlink\" title=\"对象初始化器\"></a>对象初始化器</h2><p>在以前如果定义了一个类，并将类实例化，我们会像下面这样做</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">oec2003</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> x,y;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> X</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span>&#123;<span class=\"keyword\">return</span> x;&#125;</div><div class=\"line\">        <span class=\"keyword\">set</span>&#123;x=<span class=\"keyword\">value</span>;&#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> Y</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span>&#123;<span class=\"keyword\">return</span> x;&#125;</div><div class=\"line\">        <span class=\"keyword\">set</span>&#123;x=<span class=\"keyword\">value</span>;&#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>调用</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">oec2003 o=new oec2003()<span class=\"comment\">;</span></div><div class=\"line\">o.X=<span class=\"number\">2003</span><span class=\"comment\">;</span></div><div class=\"line\">o.Y=<span class=\"number\">2004</span><span class=\"comment\">;</span></div></pre></td></tr></table></figure>\n<p>使用对象初始化器</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">oec2003</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> x, y;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> X</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> x; &#125;</div><div class=\"line\">        <span class=\"keyword\">set</span> &#123; x = <span class=\"keyword\">value</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> Y</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> x; &#125;</div><div class=\"line\">        <span class=\"keyword\">set</span> &#123; x = <span class=\"keyword\">value</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>调用</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> o=<span class=\"keyword\">new</span> oec2003&#123;X=<span class=\"number\">2003</span>,Y=<span class=\"number\">2004</span>&#125;;</div></pre></td></tr></table></figure>\n<p>对象初时化器是利用了编译器对对象中的对外可见的字段或属性进行按序赋值，在编译还是隐式调用了构造函数，对字段或属性的赋值可以是一个或是多个。</p>\n<h2 id=\"集合初时化器\"><a href=\"#集合初时化器\" class=\"headerlink\" title=\"集合初时化器\"></a>集合初时化器</h2><p>集合初始化器会对初始化器中的元素进行按序调用，下面是一个集合初时化器的例子</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">List&lt;int&gt; num= new List&lt;int&gt; &#123; <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span> &#125;;</div></pre></td></tr></table></figure>\n<p>应用集合初始化器的对象的类型必须实现了System.Collections.Generic.ICollections<t>接口并指定了确定的T。集合初始化器将依次对每个指定的元素调用ICollection<t>.Add(T)。</t></t></p>\n<p>有下面这样一个类，记录一个人的个人信息</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Oec2003Info</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">string</span> name;</div><div class=\"line\">    <span class=\"keyword\">int</span> age;</div><div class=\"line\">    List&lt;<span class=\"keyword\">string</span>&gt; phoneNumbers = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">string</span>&gt;();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Name</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> name; &#125;</div><div class=\"line\">        <span class=\"keyword\">set</span> &#123; name = <span class=\"keyword\">value</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Age</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> age; &#125;</div><div class=\"line\">        <span class=\"keyword\">set</span> &#123; age = <span class=\"keyword\">value</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> List&lt;<span class=\"keyword\">string</span>&gt; PhoneNumbers</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> phoneNumbers; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>以前的做法</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">var oec2003infos = new List&lt;Oec2003Info&gt;()<span class=\"comment\">;</span></div><div class=\"line\"></div><div class=\"line\">var tmp1= new Oec2003Info()<span class=\"comment\">;</span></div><div class=\"line\">tmp1.Name = <span class=\"string\">\"oec2003\"</span><span class=\"comment\">;</span></div><div class=\"line\">tmp1.Age=<span class=\"number\">100</span><span class=\"comment\">;</span></div><div class=\"line\">tmp1.PhoneNumbers.<span class=\"keyword\">Add(\"</span></div><div class=\"line\">tmp1.PhoneNumbers.<span class=\"keyword\">Add(\"1592********\");</span></div><div class=\"line\">Oec2003Info.<span class=\"keyword\">Add(tmp1);</span></div><div class=\"line\"></div><div class=\"line\">var tmp2 = new Oec2003Info()<span class=\"comment\">;</span></div><div class=\"line\">tmp2 .Name = <span class=\"string\">\"oec2003\"</span><span class=\"comment\">;</span></div><div class=\"line\">  tmp2.Age=<span class=\"number\">100</span><span class=\"comment\">;</span></div><div class=\"line\">tmp2.PhoneNumbers.<span class=\"keyword\">Add(\"1593********\");</span></div><div class=\"line\">tmp3.PhoneNumbers.<span class=\"keyword\">Add(\"1594********\");</span></div><div class=\"line\">Oec2003Info.<span class=\"keyword\">Add(tmp2);</span></div></pre></td></tr></table></figure>\n<p>使用对象初始化器</p>\n<figure class=\"highlight protobuf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">var oec2003infos= new List&lt;Oec2003Info&gt;</div><div class=\"line\">&#123;</div><div class=\"line\">    new Oec2003Info</div><div class=\"line\">    &#123;</div><div class=\"line\">        Name = <span class=\"string\">\"oec2003\"</span>,</div><div class=\"line\">        Age=<span class=\"number\">100</span>;</div><div class=\"line\">        PhoneNumbers=&#123;<span class=\"string\">\"1591********\"</span>,<span class=\"string\">\"1592**********\"</span>&#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;,</div><div class=\"line\"></div><div class=\"line\">    new Oec2003Info</div><div class=\"line\">    &#123;</div><div class=\"line\">        Name = <span class=\"string\">\"oec2003\"</span>,</div><div class=\"line\">        Age=<span class=\"number\">100</span>;</div><div class=\"line\">        PhoneNumbers = &#123; <span class=\"string\">\"1593********\"</span>,<span class=\"string\">\"1594*********\"</span>&#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n","excerpt":"<p>创建一个对象时可以包含一个对象初始化器或集合初始化器，用于初始化所创建对象的成员或新创建的集合的元素。使用初始化器可以让我们的代码变得更简洁。<br>","more":"</p>\n<h2 id=\"对象初始化器\"><a href=\"#对象初始化器\" class=\"headerlink\" title=\"对象初始化器\"></a>对象初始化器</h2><p>在以前如果定义了一个类，并将类实例化，我们会像下面这样做</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">oec2003</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> x,y;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> X</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span>&#123;<span class=\"keyword\">return</span> x;&#125;</div><div class=\"line\">        <span class=\"keyword\">set</span>&#123;x=<span class=\"keyword\">value</span>;&#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> Y</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span>&#123;<span class=\"keyword\">return</span> x;&#125;</div><div class=\"line\">        <span class=\"keyword\">set</span>&#123;x=<span class=\"keyword\">value</span>;&#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>调用</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">oec2003 o=new oec2003()<span class=\"comment\">;</span></div><div class=\"line\">o.X=<span class=\"number\">2003</span><span class=\"comment\">;</span></div><div class=\"line\">o.Y=<span class=\"number\">2004</span><span class=\"comment\">;</span></div></pre></td></tr></table></figure>\n<p>使用对象初始化器</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">oec2003</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> x, y;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> X</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> x; &#125;</div><div class=\"line\">        <span class=\"keyword\">set</span> &#123; x = <span class=\"keyword\">value</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> Y</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> x; &#125;</div><div class=\"line\">        <span class=\"keyword\">set</span> &#123; x = <span class=\"keyword\">value</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>调用</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> o=<span class=\"keyword\">new</span> oec2003&#123;X=<span class=\"number\">2003</span>,Y=<span class=\"number\">2004</span>&#125;;</div></pre></td></tr></table></figure>\n<p>对象初时化器是利用了编译器对对象中的对外可见的字段或属性进行按序赋值，在编译还是隐式调用了构造函数，对字段或属性的赋值可以是一个或是多个。</p>\n<h2 id=\"集合初时化器\"><a href=\"#集合初时化器\" class=\"headerlink\" title=\"集合初时化器\"></a>集合初时化器</h2><p>集合初始化器会对初始化器中的元素进行按序调用，下面是一个集合初时化器的例子</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">List&lt;int&gt; num= new List&lt;int&gt; &#123; <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span> &#125;;</div></pre></td></tr></table></figure>\n<p>应用集合初始化器的对象的类型必须实现了System.Collections.Generic.ICollections<T>接口并指定了确定的T。集合初始化器将依次对每个指定的元素调用ICollection<T>.Add(T)。</p>\n<p>有下面这样一个类，记录一个人的个人信息</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Oec2003Info</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">string</span> name;</div><div class=\"line\">    <span class=\"keyword\">int</span> age;</div><div class=\"line\">    List&lt;<span class=\"keyword\">string</span>&gt; phoneNumbers = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">string</span>&gt;();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Name</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> name; &#125;</div><div class=\"line\">        <span class=\"keyword\">set</span> &#123; name = <span class=\"keyword\">value</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Age</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> age; &#125;</div><div class=\"line\">        <span class=\"keyword\">set</span> &#123; age = <span class=\"keyword\">value</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> List&lt;<span class=\"keyword\">string</span>&gt; PhoneNumbers</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> phoneNumbers; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>以前的做法</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">var oec2003infos = new List&lt;Oec2003Info&gt;()<span class=\"comment\">;</span></div><div class=\"line\"></div><div class=\"line\">var tmp1= new Oec2003Info()<span class=\"comment\">;</span></div><div class=\"line\">tmp1.Name = <span class=\"string\">\"oec2003\"</span><span class=\"comment\">;</span></div><div class=\"line\">tmp1.Age=<span class=\"number\">100</span><span class=\"comment\">;</span></div><div class=\"line\">tmp1.PhoneNumbers.<span class=\"keyword\">Add(\"</div><div class=\"line\"></span>tmp1.PhoneNumbers.<span class=\"keyword\">Add(\"1592********\");</div><div class=\"line\"></span>Oec2003Info.<span class=\"keyword\">Add(tmp1);</div><div class=\"line\"></span></div><div class=\"line\">var tmp2 = new Oec2003Info()<span class=\"comment\">;</span></div><div class=\"line\">tmp2 .Name = <span class=\"string\">\"oec2003\"</span><span class=\"comment\">;</span></div><div class=\"line\">  tmp2.Age=<span class=\"number\">100</span><span class=\"comment\">;</span></div><div class=\"line\">tmp2.PhoneNumbers.<span class=\"keyword\">Add(\"1593********\");</div><div class=\"line\"></span>tmp3.PhoneNumbers.<span class=\"keyword\">Add(\"1594********\");</div><div class=\"line\"></span>Oec2003Info.<span class=\"keyword\">Add(tmp2);</span></div></pre></td></tr></table></figure>\n<p>使用对象初始化器</p>\n<figure class=\"highlight protobuf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">var oec2003infos= new List&lt;Oec2003Info&gt;</div><div class=\"line\">&#123;</div><div class=\"line\">    new Oec2003Info</div><div class=\"line\">    &#123;</div><div class=\"line\">        Name = <span class=\"string\">\"oec2003\"</span>,</div><div class=\"line\">        Age=<span class=\"number\">100</span>;</div><div class=\"line\">        PhoneNumbers=&#123;<span class=\"string\">\"1591********\"</span>,<span class=\"string\">\"1592**********\"</span>&#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;,</div><div class=\"line\"></div><div class=\"line\">    new Oec2003Info</div><div class=\"line\">    &#123;</div><div class=\"line\">        Name = <span class=\"string\">\"oec2003\"</span>,</div><div class=\"line\">        Age=<span class=\"number\">100</span>;</div><div class=\"line\">        PhoneNumbers = &#123; <span class=\"string\">\"1593********\"</span>,<span class=\"string\">\"1594*********\"</span>&#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>"},{"title":"C#3.0学习(3)—匿名类型","date":"2008-03-08T16:00:00.000Z","_content":"\n匿名类型是在初始化的时候根据初始化列表自动产生类型的一种机制，利用对象初始化器来创建匿名对象的对象。如:\n<!--more-->\n\n```\nvar oec=new {Name=\"oec2003\", Age=100}\n```\n\n在创建对象的语句中用到了var和new两个关键字，\n\nvar关键字用来声明一个匿名类型的对象名字，var和Object不同，她是一种强类型，在此是起到了一个占位符的作用，编译时编译器会推断出实际类型。\n\nnew关键字后直接是一对大括号，并不是类型名称，因为匿名类型的名字是在编译时由编译器自动生成。大括号里的Name和Age为匿名类型的属性，可以看到是在Name和Age的后面直接赋值，并没有指明类型，也将由编译器来推断出他们的类型，比如编译后会将Name推断为string型，Age推断为Int型。所以我们可以看到匿名类型给我们带来了很大的方面和灵活性，同时也将使代码变得不易看懂。\n\n上面的代码经过编译后会产生类似如下代码\n\n```\nclass Anonymous1\n{\n    private int _name = oec2003;\n    private int _age = 100;\n\n    public int a\n    {\n        get { return _name; }\n        set { _name = value; }\n    }\n    public int b\n    {\n        get { return _age; }\n        set { _age = value; }\n    }\n}\n```\n\n在同一个程序中如果定义的不同匿名类型中的对象初始化器中的名称，类型，和顺序都相同，将会长生同一个匿名类型的不同实例，如下:\n\n```\nvar oec1=new {Name=\"oec2003\" ,Age=100}\nvar oec2=new {Name=\"oec2004\" ,Age=200}\noec1=oec2\n```\n\n我们可以这样来访问匿名类型中的成员\n\n```\nvar oec=new {Name=\"oec2003\", Age=100}\nstring name=oec.Name;\nint age=oec.Age\n```\n\n","source":"_posts/learning-csharp-3-0-3-anonymous-types.md","raw":"---\ntitle: C#3.0学习(3)—匿名类型\ndate: 2008-03-09\ncategories: [C#]\ntags: [C#,DotNet3.0]\n---\n\n匿名类型是在初始化的时候根据初始化列表自动产生类型的一种机制，利用对象初始化器来创建匿名对象的对象。如:\n<!--more-->\n\n```\nvar oec=new {Name=\"oec2003\", Age=100}\n```\n\n在创建对象的语句中用到了var和new两个关键字，\n\nvar关键字用来声明一个匿名类型的对象名字，var和Object不同，她是一种强类型，在此是起到了一个占位符的作用，编译时编译器会推断出实际类型。\n\nnew关键字后直接是一对大括号，并不是类型名称，因为匿名类型的名字是在编译时由编译器自动生成。大括号里的Name和Age为匿名类型的属性，可以看到是在Name和Age的后面直接赋值，并没有指明类型，也将由编译器来推断出他们的类型，比如编译后会将Name推断为string型，Age推断为Int型。所以我们可以看到匿名类型给我们带来了很大的方面和灵活性，同时也将使代码变得不易看懂。\n\n上面的代码经过编译后会产生类似如下代码\n\n```\nclass Anonymous1\n{\n    private int _name = oec2003;\n    private int _age = 100;\n\n    public int a\n    {\n        get { return _name; }\n        set { _name = value; }\n    }\n    public int b\n    {\n        get { return _age; }\n        set { _age = value; }\n    }\n}\n```\n\n在同一个程序中如果定义的不同匿名类型中的对象初始化器中的名称，类型，和顺序都相同，将会长生同一个匿名类型的不同实例，如下:\n\n```\nvar oec1=new {Name=\"oec2003\" ,Age=100}\nvar oec2=new {Name=\"oec2004\" ,Age=200}\noec1=oec2\n```\n\n我们可以这样来访问匿名类型中的成员\n\n```\nvar oec=new {Name=\"oec2003\", Age=100}\nstring name=oec.Name;\nint age=oec.Age\n```\n\n","slug":"learning-csharp-3-0-3-anonymous-types","published":1,"updated":"2016-08-13T14:47:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz92b005jxfyn2h4btwek","content":"<p>匿名类型是在初始化的时候根据初始化列表自动产生类型的一种机制，利用对象初始化器来创建匿名对象的对象。如:<br><a id=\"more\"></a></p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oec=<span class=\"keyword\">new</span> &#123;Name=<span class=\"string\">\"oec2003\"</span>, Age=<span class=\"number\">100</span>&#125;</div></pre></td></tr></table></figure>\n<p>在创建对象的语句中用到了var和new两个关键字，</p>\n<p>var关键字用来声明一个匿名类型的对象名字，var和Object不同，她是一种强类型，在此是起到了一个占位符的作用，编译时编译器会推断出实际类型。</p>\n<p>new关键字后直接是一对大括号，并不是类型名称，因为匿名类型的名字是在编译时由编译器自动生成。大括号里的Name和Age为匿名类型的属性，可以看到是在Name和Age的后面直接赋值，并没有指明类型，也将由编译器来推断出他们的类型，比如编译后会将Name推断为string型，Age推断为Int型。所以我们可以看到匿名类型给我们带来了很大的方面和灵活性，同时也将使代码变得不易看懂。</p>\n<p>上面的代码经过编译后会产生类似如下代码</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Anonymous1</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _name = oec2003;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _age = <span class=\"number\">100</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> a</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> _name; &#125;</div><div class=\"line\">        <span class=\"keyword\">set</span> &#123; _name = <span class=\"keyword\">value</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> b</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> _age; &#125;</div><div class=\"line\">        <span class=\"keyword\">set</span> &#123; _age = <span class=\"keyword\">value</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在同一个程序中如果定义的不同匿名类型中的对象初始化器中的名称，类型，和顺序都相同，将会长生同一个匿名类型的不同实例，如下:</p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">var <span class=\"attr\">oec1=new</span> &#123;<span class=\"attr\">Name=\"oec2003\"</span> ,<span class=\"attr\">Age=100&#125;</span></div><div class=\"line\">var <span class=\"attr\">oec2=new</span> &#123;<span class=\"attr\">Name=\"oec2004\"</span> ,<span class=\"attr\">Age=200&#125;</span></div><div class=\"line\"><span class=\"attr\">oec1=oec2</span></div></pre></td></tr></table></figure>\n<p>我们可以这样来访问匿名类型中的成员</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oec=<span class=\"keyword\">new</span> &#123;Name=<span class=\"string\">\"oec2003\"</span>, Age=<span class=\"number\">100</span>&#125;</div><div class=\"line\"><span class=\"keyword\">string</span> name=oec.Name;</div><div class=\"line\"><span class=\"keyword\">int</span> age=oec.Age</div></pre></td></tr></table></figure>\n","excerpt":"<p>匿名类型是在初始化的时候根据初始化列表自动产生类型的一种机制，利用对象初始化器来创建匿名对象的对象。如:<br>","more":"</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oec=<span class=\"keyword\">new</span> &#123;Name=<span class=\"string\">\"oec2003\"</span>, Age=<span class=\"number\">100</span>&#125;</div></pre></td></tr></table></figure>\n<p>在创建对象的语句中用到了var和new两个关键字，</p>\n<p>var关键字用来声明一个匿名类型的对象名字，var和Object不同，她是一种强类型，在此是起到了一个占位符的作用，编译时编译器会推断出实际类型。</p>\n<p>new关键字后直接是一对大括号，并不是类型名称，因为匿名类型的名字是在编译时由编译器自动生成。大括号里的Name和Age为匿名类型的属性，可以看到是在Name和Age的后面直接赋值，并没有指明类型，也将由编译器来推断出他们的类型，比如编译后会将Name推断为string型，Age推断为Int型。所以我们可以看到匿名类型给我们带来了很大的方面和灵活性，同时也将使代码变得不易看懂。</p>\n<p>上面的代码经过编译后会产生类似如下代码</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Anonymous1</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _name = oec2003;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _age = <span class=\"number\">100</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> a</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> _name; &#125;</div><div class=\"line\">        <span class=\"keyword\">set</span> &#123; _name = <span class=\"keyword\">value</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> b</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> _age; &#125;</div><div class=\"line\">        <span class=\"keyword\">set</span> &#123; _age = <span class=\"keyword\">value</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在同一个程序中如果定义的不同匿名类型中的对象初始化器中的名称，类型，和顺序都相同，将会长生同一个匿名类型的不同实例，如下:</p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">var <span class=\"attr\">oec1=new</span> &#123;<span class=\"attr\">Name=\"oec2003\"</span> ,<span class=\"attr\">Age=100&#125;</span></div><div class=\"line\">var <span class=\"attr\">oec2=new</span> &#123;<span class=\"attr\">Name=\"oec2004\"</span> ,<span class=\"attr\">Age=200&#125;</span></div><div class=\"line\"><span class=\"attr\">oec1=oec2</span></div></pre></td></tr></table></figure>\n<p>我们可以这样来访问匿名类型中的成员</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oec=<span class=\"keyword\">new</span> &#123;Name=<span class=\"string\">\"oec2003\"</span>, Age=<span class=\"number\">100</span>&#125;</div><div class=\"line\"><span class=\"keyword\">string</span> name=oec.Name;</div><div class=\"line\"><span class=\"keyword\">int</span> age=oec.Age</div></pre></td></tr></table></figure>"},{"title":"C#3.0学习(1)—隐含类型局部变量和扩展方法","date":"2008-02-21T16:00:00.000Z","_content":"\n## 隐含类型局部变量\n\n隐含类型的局部变量是用var关键字来声明的，如下：\n\n```\nvar i = 123;\nvar h=123.123;\nvar s = “oec2003\";\nvar intArr = new[] {1,2,3,4} ;\nvar a = new[] { 1, 10, 100, 1000 };\n```\n\n乍一看有点像javascript中的声明方式，虽然关键字一样但是有着本质区别。\n\n在c#3.0中用var关键字声明的变量被赋值后，在编译时编译器会根据变量值的类型自动推断出变量的类型。所以仍然是强类型，这点和object不同。其实var 关键字并不是一个具体的类型，只是起到了一个占位符的作用，编译后将替换成相应的类型。要注意的一点是用var声明的变量一定要赋初始值，否则会出现编译错误，因为如果不赋值就无法根据值来推断变量的类型。\n\nvar只能声明局部变量，而且可以在foreach中使用，如：\n\n```\nvar nums=new []{1,2,3,4,5};\nforeach(var i in nums)\n{\n\n}\n```\n\n## 扩展方法\n\n这是个非常有用的特性，扩展方法允许我们在不改变源码的情况下添加现有类型中的实例方法。扩展方法所在的类必须为静态类。如下：\n\n```\npublic static class oec2003Extensions\n{\n    public static bool IsValidEmail(this String s)\n    {\n        Regex regex = new Regex(@\"^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\");\n        return regex.IsMatch(s);\n    }\n}\n```\n\n上面的IsValidEmail静态方法在静态类oec2003Extensions类中，这个类可以在任何的名称空间下，在要用的地方引用名称空间就行。IsValidEmail方法的作用是用来验证电子邮件。方法中有三个参数：this  String  s 。this只是一个编译上的要求，作为一个提示来告诉编译器此方法有可能作为扩展方法来使用；String就是我们需要扩展的类型；s则为要验证邮件的内容。下面来看看怎样来使用此扩展方法。\n\n```\nprotected void Button2_Click(object sender, EventArgs e)\n{\n    if (this.TextBox1.Text.Trim().IsValidEmail())\n    {\n        Response.Write(\"email is right\");\n    }\n    else\n    {\n        Response.Write(\"email is error\");\n    }\n}\n```\n\n是不是很神奇，在string类型中就多了一个刚才添加的IsValidEmail方法，可以直接调用，用来实现邮件地址的验证。\n\n","source":"_posts/learning-csharp-3-0-1-implied-type-of-local-variables-and-extension-methods.md","raw":"---\ntitle: C#3.0学习(1)—隐含类型局部变量和扩展方法\ndate: 2008-02-22\ncategories: [C#]\ntags: [C#,DotNet3.0]\n---\n\n## 隐含类型局部变量\n\n隐含类型的局部变量是用var关键字来声明的，如下：\n\n```\nvar i = 123;\nvar h=123.123;\nvar s = “oec2003\";\nvar intArr = new[] {1,2,3,4} ;\nvar a = new[] { 1, 10, 100, 1000 };\n```\n\n乍一看有点像javascript中的声明方式，虽然关键字一样但是有着本质区别。\n\n在c#3.0中用var关键字声明的变量被赋值后，在编译时编译器会根据变量值的类型自动推断出变量的类型。所以仍然是强类型，这点和object不同。其实var 关键字并不是一个具体的类型，只是起到了一个占位符的作用，编译后将替换成相应的类型。要注意的一点是用var声明的变量一定要赋初始值，否则会出现编译错误，因为如果不赋值就无法根据值来推断变量的类型。\n\nvar只能声明局部变量，而且可以在foreach中使用，如：\n\n```\nvar nums=new []{1,2,3,4,5};\nforeach(var i in nums)\n{\n\n}\n```\n\n## 扩展方法\n\n这是个非常有用的特性，扩展方法允许我们在不改变源码的情况下添加现有类型中的实例方法。扩展方法所在的类必须为静态类。如下：\n\n```\npublic static class oec2003Extensions\n{\n    public static bool IsValidEmail(this String s)\n    {\n        Regex regex = new Regex(@\"^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\");\n        return regex.IsMatch(s);\n    }\n}\n```\n\n上面的IsValidEmail静态方法在静态类oec2003Extensions类中，这个类可以在任何的名称空间下，在要用的地方引用名称空间就行。IsValidEmail方法的作用是用来验证电子邮件。方法中有三个参数：this  String  s 。this只是一个编译上的要求，作为一个提示来告诉编译器此方法有可能作为扩展方法来使用；String就是我们需要扩展的类型；s则为要验证邮件的内容。下面来看看怎样来使用此扩展方法。\n\n```\nprotected void Button2_Click(object sender, EventArgs e)\n{\n    if (this.TextBox1.Text.Trim().IsValidEmail())\n    {\n        Response.Write(\"email is right\");\n    }\n    else\n    {\n        Response.Write(\"email is error\");\n    }\n}\n```\n\n是不是很神奇，在string类型中就多了一个刚才添加的IsValidEmail方法，可以直接调用，用来实现邮件地址的验证。\n\n","slug":"learning-csharp-3-0-1-implied-type-of-local-variables-and-extension-methods","published":1,"updated":"2016-08-13T14:35:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz92c005mxfyn25pp33ik","content":"<h2 id=\"隐含类型局部变量\"><a href=\"#隐含类型局部变量\" class=\"headerlink\" title=\"隐含类型局部变量\"></a>隐含类型局部变量</h2><p>隐含类型的局部变量是用var关键字来声明的，如下：</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> i = 123;</div><div class=\"line\"><span class=\"keyword\">var</span> <span class=\"keyword\">h</span>=123.123;</div><div class=\"line\"><span class=\"keyword\">var</span> s = “oec2003\";</div><div class=\"line\"><span class=\"keyword\">var</span> intArr = new[] &#123;1,2,3,4&#125; ;</div><div class=\"line\"><span class=\"keyword\">var</span> a = new[] &#123; 1, 10, 100, 1000 &#125;;</div></pre></td></tr></table></figure>\n<p>乍一看有点像javascript中的声明方式，虽然关键字一样但是有着本质区别。</p>\n<p>在c#3.0中用var关键字声明的变量被赋值后，在编译时编译器会根据变量值的类型自动推断出变量的类型。所以仍然是强类型，这点和object不同。其实var 关键字并不是一个具体的类型，只是起到了一个占位符的作用，编译后将替换成相应的类型。要注意的一点是用var声明的变量一定要赋初始值，否则会出现编译错误，因为如果不赋值就无法根据值来推断变量的类型。</p>\n<p>var只能声明局部变量，而且可以在foreach中使用，如：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> nums=<span class=\"keyword\">new</span> []&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</div><div class=\"line\"><span class=\"keyword\">foreach</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> nums)</div><div class=\"line\">&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"扩展方法\"><a href=\"#扩展方法\" class=\"headerlink\" title=\"扩展方法\"></a>扩展方法</h2><p>这是个非常有用的特性，扩展方法允许我们在不改变源码的情况下添加现有类型中的实例方法。扩展方法所在的类必须为静态类。如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">oec2003Extensions</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">IsValidEmail</span>(<span class=\"params\"><span class=\"keyword\">this</span> String s</span>)</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        Regex regex = <span class=\"keyword\">new</span> Regex(<span class=\"string\">@\"^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]&#123;2,4&#125;$\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> regex.IsMatch(s);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的IsValidEmail静态方法在静态类oec2003Extensions类中，这个类可以在任何的名称空间下，在要用的地方引用名称空间就行。IsValidEmail方法的作用是用来验证电子邮件。方法中有三个参数：this  String  s 。this只是一个编译上的要求，作为一个提示来告诉编译器此方法有可能作为扩展方法来使用；String就是我们需要扩展的类型；s则为要验证邮件的内容。下面来看看怎样来使用此扩展方法。</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">protected</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">Button2_Click</span>(object sender, EventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"selector-tag\">if</span> (this.TextBox1.Text.Trim().IsValidEmail())</div><div class=\"line\">    &#123;</div><div class=\"line\">        Response<span class=\"selector-class\">.Write</span>(<span class=\"string\">\"email is right\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"selector-tag\">else</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        Response<span class=\"selector-class\">.Write</span>(<span class=\"string\">\"email is error\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>是不是很神奇，在string类型中就多了一个刚才添加的IsValidEmail方法，可以直接调用，用来实现邮件地址的验证。</p>\n","excerpt":"","more":"<h2 id=\"隐含类型局部变量\"><a href=\"#隐含类型局部变量\" class=\"headerlink\" title=\"隐含类型局部变量\"></a>隐含类型局部变量</h2><p>隐含类型的局部变量是用var关键字来声明的，如下：</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> i = 123;</div><div class=\"line\"><span class=\"keyword\">var</span> <span class=\"keyword\">h</span>=123.123;</div><div class=\"line\"><span class=\"keyword\">var</span> s = “oec2003\";</div><div class=\"line\"><span class=\"keyword\">var</span> intArr = new[] &#123;1,2,3,4&#125; ;</div><div class=\"line\"><span class=\"keyword\">var</span> a = new[] &#123; 1, 10, 100, 1000 &#125;;</div></pre></td></tr></table></figure>\n<p>乍一看有点像javascript中的声明方式，虽然关键字一样但是有着本质区别。</p>\n<p>在c#3.0中用var关键字声明的变量被赋值后，在编译时编译器会根据变量值的类型自动推断出变量的类型。所以仍然是强类型，这点和object不同。其实var 关键字并不是一个具体的类型，只是起到了一个占位符的作用，编译后将替换成相应的类型。要注意的一点是用var声明的变量一定要赋初始值，否则会出现编译错误，因为如果不赋值就无法根据值来推断变量的类型。</p>\n<p>var只能声明局部变量，而且可以在foreach中使用，如：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> nums=<span class=\"keyword\">new</span> []&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</div><div class=\"line\"><span class=\"keyword\">foreach</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> nums)</div><div class=\"line\">&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"扩展方法\"><a href=\"#扩展方法\" class=\"headerlink\" title=\"扩展方法\"></a>扩展方法</h2><p>这是个非常有用的特性，扩展方法允许我们在不改变源码的情况下添加现有类型中的实例方法。扩展方法所在的类必须为静态类。如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">oec2003Extensions</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">IsValidEmail</span>(<span class=\"params\"><span class=\"keyword\">this</span> String s</span>)</div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        Regex regex = <span class=\"keyword\">new</span> Regex(<span class=\"string\">@\"^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]&#123;2,4&#125;$\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> regex.IsMatch(s);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的IsValidEmail静态方法在静态类oec2003Extensions类中，这个类可以在任何的名称空间下，在要用的地方引用名称空间就行。IsValidEmail方法的作用是用来验证电子邮件。方法中有三个参数：this  String  s 。this只是一个编译上的要求，作为一个提示来告诉编译器此方法有可能作为扩展方法来使用；String就是我们需要扩展的类型；s则为要验证邮件的内容。下面来看看怎样来使用此扩展方法。</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">protected</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">Button2_Click</span>(object sender, EventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"selector-tag\">if</span> (this.TextBox1.Text.Trim().IsValidEmail())</div><div class=\"line\">    &#123;</div><div class=\"line\">        Response<span class=\"selector-class\">.Write</span>(<span class=\"string\">\"email is right\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"selector-tag\">else</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        Response<span class=\"selector-class\">.Write</span>(<span class=\"string\">\"email is error\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>是不是很神奇，在string类型中就多了一个刚才添加的IsValidEmail方法，可以直接调用，用来实现邮件地址的验证。</p>\n"},{"title":"MasterPage 小谈","date":"2008-12-05T16:00:00.000Z","_content":"\n## 设置Title\n\n1 如果想所有使用了masterpage的页面都是用一个title ，可以在masterpage页中设置title，并将内容页中的title去掉，否则内容页中的title会将masterpage中的title覆盖。\n<!--more-->\n\n```\n<%@ Page Language=\"C#\" MasterPageFile=\"~/MasterPage.master\" AutoEventWireup=\"true\"\nCodeFile=\"MasterpageTest.aspx.cs\" Inherits=\"MasterpageTest\" Title=\"Test\"%>\n```\n\n改成\n\n```\n<%@ Page Language=\"C#\" MasterPageFile=\"~/MasterPage.master\"\nAutoEventWireup=\"true\" CodeFile=\"MasterpageTest.aspx.cs\" Inherits=\"MasterpageTest\" %>\n```\n\n2 如果想每个页面中使用不同等title就比较简单，在内容页中设置就可以，masterpage中的title不用去管 ，应为最终会被内容页中的覆盖掉。\n\n## 在内容页取 masterpage中的属性和字段\n\n在内容页中取masterpage中的属性或字段应该是比较常用的。创建一个masterpage页MasterTest.master 和内容页Test.aspx，在MasterTest.master的后台代码中添加一个属性，如下：\n\n```\nprivate string m_Name;\npublic string Name\n{\n    get { return m_Name; }\n    set { m_Name = value; }\n}\n```\n\n然后在内容页的后台代码中你会发现不能访问masterpage中的属性，这时切换到内容页的源里 在上面添加\n\n```\n<%@ MasterType VirtualPath=\"~/MasterTest.master\" %>\n```\n\n再切换到后台中 就可以访问masterpage中的属性了。\n\n## MasterPage页的作用范围\n\n1 页面级 通常情况下我们使用masterpage都是页面级的，就是在每个内容页中都会来指定masterpage的名字，通过MastPageFile属性来设置，如下：\n\n```\n<%@ Page Language=\"C#\" MasterPageFile=\"~/MasterPage.master\"  %>\n```\n\n2 应用程序级 这中就是只需在webconfig文件中做相应配置，全站所有的内容页都会引用设置的masterpage，如在webconfig中添加如下代码：\n\n```\n<configuration>\n        <system.web>\n            <pages masterPageFile=\"~/Test.master\" />\n        </system.web>\n</configuration>\n```\n\n这样在内容页中就不用再去设置MastPageFile属性了，所有的内容页都会使用Test.master 。如果有些页面比较特殊需要用其他的masterpage ，可以这是MastPageFile属性，将会覆盖在webconfig中的配置。\n\n用这种方法也可以对某些文件夹中的所有文件来进行设置，配置如下：\n\n```\n<configuration>\n  <location path=\"Admin\">\n    <system.web>\n      <pages masterPageFile=\"~/ Test.master \" />\n    </system.web>\n  </location>\n</configuration>\n```\n\nLocation的path属性设置路径\n\n\n","source":"_posts/masterpage-introduction.md","raw":"---\ntitle: MasterPage 小谈\ndate: 2008-12-06\ncategories: [Asp.Net]\ntags: [AspNet,MasterPage]\n---\n\n## 设置Title\n\n1 如果想所有使用了masterpage的页面都是用一个title ，可以在masterpage页中设置title，并将内容页中的title去掉，否则内容页中的title会将masterpage中的title覆盖。\n<!--more-->\n\n```\n<%@ Page Language=\"C#\" MasterPageFile=\"~/MasterPage.master\" AutoEventWireup=\"true\"\nCodeFile=\"MasterpageTest.aspx.cs\" Inherits=\"MasterpageTest\" Title=\"Test\"%>\n```\n\n改成\n\n```\n<%@ Page Language=\"C#\" MasterPageFile=\"~/MasterPage.master\"\nAutoEventWireup=\"true\" CodeFile=\"MasterpageTest.aspx.cs\" Inherits=\"MasterpageTest\" %>\n```\n\n2 如果想每个页面中使用不同等title就比较简单，在内容页中设置就可以，masterpage中的title不用去管 ，应为最终会被内容页中的覆盖掉。\n\n## 在内容页取 masterpage中的属性和字段\n\n在内容页中取masterpage中的属性或字段应该是比较常用的。创建一个masterpage页MasterTest.master 和内容页Test.aspx，在MasterTest.master的后台代码中添加一个属性，如下：\n\n```\nprivate string m_Name;\npublic string Name\n{\n    get { return m_Name; }\n    set { m_Name = value; }\n}\n```\n\n然后在内容页的后台代码中你会发现不能访问masterpage中的属性，这时切换到内容页的源里 在上面添加\n\n```\n<%@ MasterType VirtualPath=\"~/MasterTest.master\" %>\n```\n\n再切换到后台中 就可以访问masterpage中的属性了。\n\n## MasterPage页的作用范围\n\n1 页面级 通常情况下我们使用masterpage都是页面级的，就是在每个内容页中都会来指定masterpage的名字，通过MastPageFile属性来设置，如下：\n\n```\n<%@ Page Language=\"C#\" MasterPageFile=\"~/MasterPage.master\"  %>\n```\n\n2 应用程序级 这中就是只需在webconfig文件中做相应配置，全站所有的内容页都会引用设置的masterpage，如在webconfig中添加如下代码：\n\n```\n<configuration>\n        <system.web>\n            <pages masterPageFile=\"~/Test.master\" />\n        </system.web>\n</configuration>\n```\n\n这样在内容页中就不用再去设置MastPageFile属性了，所有的内容页都会使用Test.master 。如果有些页面比较特殊需要用其他的masterpage ，可以这是MastPageFile属性，将会覆盖在webconfig中的配置。\n\n用这种方法也可以对某些文件夹中的所有文件来进行设置，配置如下：\n\n```\n<configuration>\n  <location path=\"Admin\">\n    <system.web>\n      <pages masterPageFile=\"~/ Test.master \" />\n    </system.web>\n  </location>\n</configuration>\n```\n\nLocation的path属性设置路径\n\n\n","slug":"masterpage-introduction","published":1,"updated":"2016-08-14T07:21:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz92e005qxfyn0vko6yp1","content":"<h2 id=\"设置Title\"><a href=\"#设置Title\" class=\"headerlink\" title=\"设置Title\"></a>设置Title</h2><p>1 如果想所有使用了masterpage的页面都是用一个title ，可以在masterpage页中设置title，并将内容页中的title去掉，否则内容页中的title会将masterpage中的title覆盖。<br><a id=\"more\"></a></p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> MasterPageFile=<span class=\"string\">\"~/MasterPage.master\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span></span></div><div class=\"line\">CodeFile=<span class=\"string\">\"MasterpageTest.aspx.cs\"</span> Inherits=<span class=\"string\">\"MasterpageTest\"</span> Title=<span class=\"string\">\"Test\"</span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> MasterPageFile=<span class=\"string\">\"~/MasterPage.master\"</span></span></div><div class=\"line\">AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"MasterpageTest.aspx.cs\"</span> Inherits=<span class=\"string\">\"MasterpageTest\"</span> <span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div></pre></td></tr></table></figure>\n<p>2 如果想每个页面中使用不同等title就比较简单，在内容页中设置就可以，masterpage中的title不用去管 ，应为最终会被内容页中的覆盖掉。</p>\n<h2 id=\"在内容页取-masterpage中的属性和字段\"><a href=\"#在内容页取-masterpage中的属性和字段\" class=\"headerlink\" title=\"在内容页取 masterpage中的属性和字段\"></a>在内容页取 masterpage中的属性和字段</h2><p>在内容页中取masterpage中的属性或字段应该是比较常用的。创建一个masterpage页MasterTest.master 和内容页Test.aspx，在MasterTest.master的后台代码中添加一个属性，如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">string</span> m_Name;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Name</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> m_Name; &#125;</div><div class=\"line\">    <span class=\"keyword\">set</span> &#123; m_Name = <span class=\"keyword\">value</span>; &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>然后在内容页的后台代码中你会发现不能访问masterpage中的属性，这时切换到内容页的源里 在上面添加</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ MasterType VirtualPath=<span class=\"string\">\"~/MasterTest.master\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div></pre></td></tr></table></figure>\n<p>再切换到后台中 就可以访问masterpage中的属性了。</p>\n<h2 id=\"MasterPage页的作用范围\"><a href=\"#MasterPage页的作用范围\" class=\"headerlink\" title=\"MasterPage页的作用范围\"></a>MasterPage页的作用范围</h2><p>1 页面级 通常情况下我们使用masterpage都是页面级的，就是在每个内容页中都会来指定masterpage的名字，通过MastPageFile属性来设置，如下：</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> MasterPageFile=<span class=\"string\">\"~/MasterPage.master\"</span>  </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div></pre></td></tr></table></figure>\n<p>2 应用程序级 这中就是只需在webconfig文件中做相应配置，全站所有的内容页都会引用设置的masterpage，如在webconfig中添加如下代码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">system.web</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">pages</span> <span class=\"attr\">masterPageFile</span>=<span class=\"string\">\"~/Test.master\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">system.web</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>这样在内容页中就不用再去设置MastPageFile属性了，所有的内容页都会使用Test.master 。如果有些页面比较特殊需要用其他的masterpage ，可以这是MastPageFile属性，将会覆盖在webconfig中的配置。</p>\n<p>用这种方法也可以对某些文件夹中的所有文件来进行设置，配置如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">location</span> <span class=\"attr\">path</span>=<span class=\"string\">\"Admin\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">system.web</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">pages</span> <span class=\"attr\">masterPageFile</span>=<span class=\"string\">\"~/ Test.master \"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">system.web</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">location</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Location的path属性设置路径</p>\n","excerpt":"<h2 id=\"设置Title\"><a href=\"#设置Title\" class=\"headerlink\" title=\"设置Title\"></a>设置Title</h2><p>1 如果想所有使用了masterpage的页面都是用一个title ，可以在masterpage页中设置title，并将内容页中的title去掉，否则内容页中的title会将masterpage中的title覆盖。<br>","more":"</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> MasterPageFile=<span class=\"string\">\"~/MasterPage.master\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span></div><div class=\"line\">CodeFile=<span class=\"string\">\"MasterpageTest.aspx.cs\"</span> Inherits=<span class=\"string\">\"MasterpageTest\"</span> Title=<span class=\"string\">\"Test\"</span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> MasterPageFile=<span class=\"string\">\"~/MasterPage.master\"</span></div><div class=\"line\">AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"MasterpageTest.aspx.cs\"</span> Inherits=<span class=\"string\">\"MasterpageTest\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div></pre></td></tr></table></figure>\n<p>2 如果想每个页面中使用不同等title就比较简单，在内容页中设置就可以，masterpage中的title不用去管 ，应为最终会被内容页中的覆盖掉。</p>\n<h2 id=\"在内容页取-masterpage中的属性和字段\"><a href=\"#在内容页取-masterpage中的属性和字段\" class=\"headerlink\" title=\"在内容页取 masterpage中的属性和字段\"></a>在内容页取 masterpage中的属性和字段</h2><p>在内容页中取masterpage中的属性或字段应该是比较常用的。创建一个masterpage页MasterTest.master 和内容页Test.aspx，在MasterTest.master的后台代码中添加一个属性，如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">string</span> m_Name;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Name</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> m_Name; &#125;</div><div class=\"line\">    <span class=\"keyword\">set</span> &#123; m_Name = <span class=\"keyword\">value</span>; &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>然后在内容页的后台代码中你会发现不能访问masterpage中的属性，这时切换到内容页的源里 在上面添加</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ MasterType VirtualPath=<span class=\"string\">\"~/MasterTest.master\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div></pre></td></tr></table></figure>\n<p>再切换到后台中 就可以访问masterpage中的属性了。</p>\n<h2 id=\"MasterPage页的作用范围\"><a href=\"#MasterPage页的作用范围\" class=\"headerlink\" title=\"MasterPage页的作用范围\"></a>MasterPage页的作用范围</h2><p>1 页面级 通常情况下我们使用masterpage都是页面级的，就是在每个内容页中都会来指定masterpage的名字，通过MastPageFile属性来设置，如下：</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> MasterPageFile=<span class=\"string\">\"~/MasterPage.master\"</span>  </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div></pre></td></tr></table></figure>\n<p>2 应用程序级 这中就是只需在webconfig文件中做相应配置，全站所有的内容页都会引用设置的masterpage，如在webconfig中添加如下代码：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">system.web</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">pages</span> <span class=\"attr\">masterPageFile</span>=<span class=\"string\">\"~/Test.master\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">system.web</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>这样在内容页中就不用再去设置MastPageFile属性了，所有的内容页都会使用Test.master 。如果有些页面比较特殊需要用其他的masterpage ，可以这是MastPageFile属性，将会覆盖在webconfig中的配置。</p>\n<p>用这种方法也可以对某些文件夹中的所有文件来进行设置，配置如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">location</span> <span class=\"attr\">path</span>=<span class=\"string\">\"Admin\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">system.web</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">pages</span> <span class=\"attr\">masterPageFile</span>=<span class=\"string\">\"~/ Test.master \"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">system.web</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">location</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>Location的path属性设置路径</p>"},{"title":".Net泛型编程简介","date":"2007-05-21T16:00:00.000Z","_content":"\n.NET泛型编程已经离我们不远了，在微软最近随SQL Server Yukon Beta1发行的.NET Framework 1.2中就已经有了泛型的影子。虽然现在它还是问题多多，但是相信随着新版.NET Framework的正式发行（正式发行时的版本号会是2.0），这些问题会得到解决。因此我们也该为.NET泛型编程做些准备了。\n<!--more-->\n.NET系统是一个单根继承系统，所有的类型都派生自Object。我以前一直认为在单根继承系统中用不着泛型。既然所有的东西都可以作为Object传递，又何必使用泛型呢？只是增加复杂度而已，除了看起来高深一点，似乎没有别的什么好处了。但是，当两个最著名的单根系统，Java和.NET，都势不可挡地要加入泛型编程时，我不免要重新审视这个问题——为什么一定要泛型编程？\n\n归纳起来，泛型比非泛型具有下面两个优点：\n\n1、 更加安全\n\n在非泛型编程中，虽然所有的东西都可以作为Object传递，但是在传递的过程中免不了要进行类型转换。而类型转换在运行时是不安全的。使用泛型编程将可以减少不必要的类型转换，从而提高安全性。\n\n2、 效率更高\n\n在非泛型编程中，将简单类型作为Object传递时会引起Boxing和Unboxing操作，这两个过程都是具有很大开销的。使用泛型编程就不必进行Boxing和Unboxing操作了。\n\n.NET泛型具有很好的二进制重用性。这一点得益于.NET将泛型内建在CLR之中。C++泛型和评估中Java泛型所依靠的是它们各自的编译器所提供的特性，编译器在编译泛型代码时将确切的类型展开，这就难免会出现代码膨胀的问题。而.NET的泛型代码是在运行时由JIT即时编译的，这样CLR就可以为不同类型重用大部分的即时编译代码了。\n\n","source":"_posts/net-generic-programming.md","raw":"---\ntitle: .Net泛型编程简介\ndate: 2007-05-22\ncategories: [C#,DotNet]\ntags: [C#,DotNet,泛型]\n---\n\n.NET泛型编程已经离我们不远了，在微软最近随SQL Server Yukon Beta1发行的.NET Framework 1.2中就已经有了泛型的影子。虽然现在它还是问题多多，但是相信随着新版.NET Framework的正式发行（正式发行时的版本号会是2.0），这些问题会得到解决。因此我们也该为.NET泛型编程做些准备了。\n<!--more-->\n.NET系统是一个单根继承系统，所有的类型都派生自Object。我以前一直认为在单根继承系统中用不着泛型。既然所有的东西都可以作为Object传递，又何必使用泛型呢？只是增加复杂度而已，除了看起来高深一点，似乎没有别的什么好处了。但是，当两个最著名的单根系统，Java和.NET，都势不可挡地要加入泛型编程时，我不免要重新审视这个问题——为什么一定要泛型编程？\n\n归纳起来，泛型比非泛型具有下面两个优点：\n\n1、 更加安全\n\n在非泛型编程中，虽然所有的东西都可以作为Object传递，但是在传递的过程中免不了要进行类型转换。而类型转换在运行时是不安全的。使用泛型编程将可以减少不必要的类型转换，从而提高安全性。\n\n2、 效率更高\n\n在非泛型编程中，将简单类型作为Object传递时会引起Boxing和Unboxing操作，这两个过程都是具有很大开销的。使用泛型编程就不必进行Boxing和Unboxing操作了。\n\n.NET泛型具有很好的二进制重用性。这一点得益于.NET将泛型内建在CLR之中。C++泛型和评估中Java泛型所依靠的是它们各自的编译器所提供的特性，编译器在编译泛型代码时将确切的类型展开，这就难免会出现代码膨胀的问题。而.NET的泛型代码是在运行时由JIT即时编译的，这样CLR就可以为不同类型重用大部分的即时编译代码了。\n\n","slug":"net-generic-programming","published":1,"updated":"2016-08-12T16:16:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz92g005txfyn931xxg98","content":"<p>.NET泛型编程已经离我们不远了，在微软最近随SQL Server Yukon Beta1发行的.NET Framework 1.2中就已经有了泛型的影子。虽然现在它还是问题多多，但是相信随着新版.NET Framework的正式发行（正式发行时的版本号会是2.0），这些问题会得到解决。因此我们也该为.NET泛型编程做些准备了。<br><a id=\"more\"></a><br>.NET系统是一个单根继承系统，所有的类型都派生自Object。我以前一直认为在单根继承系统中用不着泛型。既然所有的东西都可以作为Object传递，又何必使用泛型呢？只是增加复杂度而已，除了看起来高深一点，似乎没有别的什么好处了。但是，当两个最著名的单根系统，Java和.NET，都势不可挡地要加入泛型编程时，我不免要重新审视这个问题——为什么一定要泛型编程？</p>\n<p>归纳起来，泛型比非泛型具有下面两个优点：</p>\n<p>1、 更加安全</p>\n<p>在非泛型编程中，虽然所有的东西都可以作为Object传递，但是在传递的过程中免不了要进行类型转换。而类型转换在运行时是不安全的。使用泛型编程将可以减少不必要的类型转换，从而提高安全性。</p>\n<p>2、 效率更高</p>\n<p>在非泛型编程中，将简单类型作为Object传递时会引起Boxing和Unboxing操作，这两个过程都是具有很大开销的。使用泛型编程就不必进行Boxing和Unboxing操作了。</p>\n<p>.NET泛型具有很好的二进制重用性。这一点得益于.NET将泛型内建在CLR之中。C++泛型和评估中Java泛型所依靠的是它们各自的编译器所提供的特性，编译器在编译泛型代码时将确切的类型展开，这就难免会出现代码膨胀的问题。而.NET的泛型代码是在运行时由JIT即时编译的，这样CLR就可以为不同类型重用大部分的即时编译代码了。</p>\n","excerpt":"<p>.NET泛型编程已经离我们不远了，在微软最近随SQL Server Yukon Beta1发行的.NET Framework 1.2中就已经有了泛型的影子。虽然现在它还是问题多多，但是相信随着新版.NET Framework的正式发行（正式发行时的版本号会是2.0），这些问题会得到解决。因此我们也该为.NET泛型编程做些准备了。<br>","more":"<br>.NET系统是一个单根继承系统，所有的类型都派生自Object。我以前一直认为在单根继承系统中用不着泛型。既然所有的东西都可以作为Object传递，又何必使用泛型呢？只是增加复杂度而已，除了看起来高深一点，似乎没有别的什么好处了。但是，当两个最著名的单根系统，Java和.NET，都势不可挡地要加入泛型编程时，我不免要重新审视这个问题——为什么一定要泛型编程？</p>\n<p>归纳起来，泛型比非泛型具有下面两个优点：</p>\n<p>1、 更加安全</p>\n<p>在非泛型编程中，虽然所有的东西都可以作为Object传递，但是在传递的过程中免不了要进行类型转换。而类型转换在运行时是不安全的。使用泛型编程将可以减少不必要的类型转换，从而提高安全性。</p>\n<p>2、 效率更高</p>\n<p>在非泛型编程中，将简单类型作为Object传递时会引起Boxing和Unboxing操作，这两个过程都是具有很大开销的。使用泛型编程就不必进行Boxing和Unboxing操作了。</p>\n<p>.NET泛型具有很好的二进制重用性。这一点得益于.NET将泛型内建在CLR之中。C++泛型和评估中Java泛型所依靠的是它们各自的编译器所提供的特性，编译器在编译泛型代码时将确切的类型展开，这就难免会出现代码膨胀的问题。而.NET的泛型代码是在运行时由JIT即时编译的，这样CLR就可以为不同类型重用大部分的即时编译代码了。</p>"},{"title":"强大的VS插件—Resharper","date":"2009-10-16T16:00:00.000Z","_content":"\nReSharper是一款Visual.net的插件，主要提升VS.net代码编辑能力，包括对C#、VB.net、XML、XAML和ASP.net，并包括这些语言的交叉关联引用。ReSharper让Visual Studio开发人员更加便捷，包括代码分析、单元测试方案、Goto Symbol支持、To-do探测器等各种特性，ReSharper可以说是辅助Visual Studio开发的一把瑞士军刀，将IntelliJ IDEA在代码编辑方面的智能特性全面带入到Visual Studio中，积极提升.net开发人员的工作效率。ReSharper提供三个版本：Full, C#和VB.net，这样开发人员可以更精准地选择所需的特性。\n\n很早就听同事说过这个插件很好用，但是听说安装后会拖慢vs的速度，所以就迟迟没敢装，最近还是经不住诱惑装上了这个插件，果然没让我失望。\n\n下载地址：[http://www.jetbrains.com/resharper/download/](http://www.jetbrains.com/resharper/download/)\n\n需要注意的是Resharper是收费的，不过网上可以很容易找到注册码，这里就不提供链接了\n\n博客园的飞刀针对1.0版自己写过注册机，有兴趣的朋友可以研究下。\n\n[http://www.cnblogs.com/feidao/archive/2004/08/12/32537.aspx](http://www.cnblogs.com/feidao/archive/2004/08/12/32537.aspx)\n\n\n","source":"_posts/powerful-vs-plug-in-resharper.md","raw":"---\ntitle: 强大的VS插件—Resharper\ndate: 2009-10-17\ncategories: [软件推荐]\ntags: [Resharper, visual studio, 软件推荐]\n---\n\nReSharper是一款Visual.net的插件，主要提升VS.net代码编辑能力，包括对C#、VB.net、XML、XAML和ASP.net，并包括这些语言的交叉关联引用。ReSharper让Visual Studio开发人员更加便捷，包括代码分析、单元测试方案、Goto Symbol支持、To-do探测器等各种特性，ReSharper可以说是辅助Visual Studio开发的一把瑞士军刀，将IntelliJ IDEA在代码编辑方面的智能特性全面带入到Visual Studio中，积极提升.net开发人员的工作效率。ReSharper提供三个版本：Full, C#和VB.net，这样开发人员可以更精准地选择所需的特性。\n\n很早就听同事说过这个插件很好用，但是听说安装后会拖慢vs的速度，所以就迟迟没敢装，最近还是经不住诱惑装上了这个插件，果然没让我失望。\n\n下载地址：[http://www.jetbrains.com/resharper/download/](http://www.jetbrains.com/resharper/download/)\n\n需要注意的是Resharper是收费的，不过网上可以很容易找到注册码，这里就不提供链接了\n\n博客园的飞刀针对1.0版自己写过注册机，有兴趣的朋友可以研究下。\n\n[http://www.cnblogs.com/feidao/archive/2004/08/12/32537.aspx](http://www.cnblogs.com/feidao/archive/2004/08/12/32537.aspx)\n\n\n","slug":"powerful-vs-plug-in-resharper","published":1,"updated":"2016-08-16T14:40:14.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz92m005xxfyn9a6fy6mg","content":"<p>ReSharper是一款Visual.net的插件，主要提升VS.net代码编辑能力，包括对C#、VB.net、XML、XAML和ASP.net，并包括这些语言的交叉关联引用。ReSharper让Visual Studio开发人员更加便捷，包括代码分析、单元测试方案、Goto Symbol支持、To-do探测器等各种特性，ReSharper可以说是辅助Visual Studio开发的一把瑞士军刀，将IntelliJ IDEA在代码编辑方面的智能特性全面带入到Visual Studio中，积极提升.net开发人员的工作效率。ReSharper提供三个版本：Full, C#和VB.net，这样开发人员可以更精准地选择所需的特性。</p>\n<p>很早就听同事说过这个插件很好用，但是听说安装后会拖慢vs的速度，所以就迟迟没敢装，最近还是经不住诱惑装上了这个插件，果然没让我失望。</p>\n<p>下载地址：<a href=\"http://www.jetbrains.com/resharper/download/\" target=\"_blank\" rel=\"external\">http://www.jetbrains.com/resharper/download/</a></p>\n<p>需要注意的是Resharper是收费的，不过网上可以很容易找到注册码，这里就不提供链接了</p>\n<p>博客园的飞刀针对1.0版自己写过注册机，有兴趣的朋友可以研究下。</p>\n<p><a href=\"http://www.cnblogs.com/feidao/archive/2004/08/12/32537.aspx\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/feidao/archive/2004/08/12/32537.aspx</a></p>\n","excerpt":"","more":"<p>ReSharper是一款Visual.net的插件，主要提升VS.net代码编辑能力，包括对C#、VB.net、XML、XAML和ASP.net，并包括这些语言的交叉关联引用。ReSharper让Visual Studio开发人员更加便捷，包括代码分析、单元测试方案、Goto Symbol支持、To-do探测器等各种特性，ReSharper可以说是辅助Visual Studio开发的一把瑞士军刀，将IntelliJ IDEA在代码编辑方面的智能特性全面带入到Visual Studio中，积极提升.net开发人员的工作效率。ReSharper提供三个版本：Full, C#和VB.net，这样开发人员可以更精准地选择所需的特性。</p>\n<p>很早就听同事说过这个插件很好用，但是听说安装后会拖慢vs的速度，所以就迟迟没敢装，最近还是经不住诱惑装上了这个插件，果然没让我失望。</p>\n<p>下载地址：<a href=\"http://www.jetbrains.com/resharper/download/\">http://www.jetbrains.com/resharper/download/</a></p>\n<p>需要注意的是Resharper是收费的，不过网上可以很容易找到注册码，这里就不提供链接了</p>\n<p>博客园的飞刀针对1.0版自己写过注册机，有兴趣的朋友可以研究下。</p>\n<p><a href=\"http://www.cnblogs.com/feidao/archive/2004/08/12/32537.aspx\">http://www.cnblogs.com/feidao/archive/2004/08/12/32537.aspx</a></p>\n"},{"title":"越狱","url":"/2006/11/prison-break/","date":"2006-11-28T16:00:00.000Z","comments":1,"_content":"\n哈哈，越狱也终于在我们宿舍上演了，最近被炒得很火，班里同学都疯狂下载。昨天晚上看的第一集，和璐璐一起，当然也是在他的电脑上，因为宿舍就他一个台式电脑。我们约定每天只看一集，目的是为了到最后不受到要等一个星期才能看到新的一集的那种煎熬。片也是璐璐去找来的，真的很感谢他，在这个马上就要离别的日子里，电视剧也许能让我们坐在一起有点东西可以谈，其实不止是电视剧，像其他比如篮球也能达到同样的效果。虽然这些对于大四考研的人来说好象有点浪费时间，但我觉得这是有必要的。宿舍除了我，其他都考研，希望他们在两个月后的考试中都能取得好成绩。期待晚上的第二集越狱吧！！\n\n","source":"_posts/prison-break.md","raw":"---\ntitle: 越狱\nurl:  /2006/11/prison-break/\ndate: 2006-11-29 \ncategories: [心情日记]\ntags:\ncomments: true\n---\n\n哈哈，越狱也终于在我们宿舍上演了，最近被炒得很火，班里同学都疯狂下载。昨天晚上看的第一集，和璐璐一起，当然也是在他的电脑上，因为宿舍就他一个台式电脑。我们约定每天只看一集，目的是为了到最后不受到要等一个星期才能看到新的一集的那种煎熬。片也是璐璐去找来的，真的很感谢他，在这个马上就要离别的日子里，电视剧也许能让我们坐在一起有点东西可以谈，其实不止是电视剧，像其他比如篮球也能达到同样的效果。虽然这些对于大四考研的人来说好象有点浪费时间，但我觉得这是有必要的。宿舍除了我，其他都考研，希望他们在两个月后的考试中都能取得好成绩。期待晚上的第二集越狱吧！！\n\n","slug":"prison-break","published":1,"updated":"2016-08-12T01:48:53.000Z","layout":"post","photos":[],"link":"","_id":"cirxkz92n005zxfynp8ypfy8m","content":"<p>哈哈，越狱也终于在我们宿舍上演了，最近被炒得很火，班里同学都疯狂下载。昨天晚上看的第一集，和璐璐一起，当然也是在他的电脑上，因为宿舍就他一个台式电脑。我们约定每天只看一集，目的是为了到最后不受到要等一个星期才能看到新的一集的那种煎熬。片也是璐璐去找来的，真的很感谢他，在这个马上就要离别的日子里，电视剧也许能让我们坐在一起有点东西可以谈，其实不止是电视剧，像其他比如篮球也能达到同样的效果。虽然这些对于大四考研的人来说好象有点浪费时间，但我觉得这是有必要的。宿舍除了我，其他都考研，希望他们在两个月后的考试中都能取得好成绩。期待晚上的第二集越狱吧！！</p>\n","excerpt":"","more":"<p>哈哈，越狱也终于在我们宿舍上演了，最近被炒得很火，班里同学都疯狂下载。昨天晚上看的第一集，和璐璐一起，当然也是在他的电脑上，因为宿舍就他一个台式电脑。我们约定每天只看一集，目的是为了到最后不受到要等一个星期才能看到新的一集的那种煎熬。片也是璐璐去找来的，真的很感谢他，在这个马上就要离别的日子里，电视剧也许能让我们坐在一起有点东西可以谈，其实不止是电视剧，像其他比如篮球也能达到同样的效果。虽然这些对于大四考研的人来说好象有点浪费时间，但我觉得这是有必要的。宿舍除了我，其他都考研，希望他们在两个月后的考试中都能取得好成绩。期待晚上的第二集越狱吧！！</p>\n"},{"title":"程序员—真的过不了35吗？","date":"2006-12-08T16:00:00.000Z","_content":"\n现在在网上经常会看到一些有关程序员年龄的问题，大部分都是说程序员的年龄超不过35岁，到了这个年的程序员要么转行做管理，要么去创业。在一些招聘的网站上，一些IT公司的招聘条件上大多也会有年龄的限制。这对我这样一个马上就要毕业走上程序员之路的人来说或多或少有一点压力。当看到搜狐开发团队的平均年龄只有24岁时，我感到自己好象“老”了，尽管现在我还没有毕业。但我一直都坚信从现在做起一切都不晚，并且我也不认为35岁就是程序员年龄的一个上限。在国外有很多的人40、50多岁还在一线做开发工作，那么为什么在中国就不行了。我认为大致有这么几个原因。\r<!--more-->\r1 最主要的原因当然是跟钱挂钩了，据了解在国外程序员特别是资深程序员的待  遇都不错，对于一些对技术非常热爱的人来说就没有必要在35岁以后就转行了  ，而在国内程序员一直被认为是IT届的蓝领，也就是说钱不是很多。所以我认  为在国内许多程序员应该是被迫才该行的。\r\r2 我认为跟精力有关，在中国的程序员如果不加班到是不正常了，说起程序员的  加班我有以下几点看法\r\r* 因为喜欢这份工作，自愿地加班，这种人是值得鼓励的。\r* 加班是为了表现，来得到老板的好感。这种现象在IT企业中普遍存在，毕竟  谁都想加薪和升职。\r* 没有按计划把上班该做的事做完，不得不加班。\r* 加班成为了一种企业文化，在公司里从上司到同事都加班，自己不加有点不  好意思了。\n\r人的精力是有限的特别是在上了年纪以后，所以也有人是在30多岁以后受不了  这种高强度的工作才转行的。\r\r3 我认为应该和中国现在还不是很成熟的IT行业有关，在国外一些程序员在一  个企业一干可能就有十几年或几十年，企业可能更愿意留住这样的人，因为他  们有经验，也比较熟悉公司的工作流程。到最后这些老的程序员可能成为某一  个领域的专家，虽然在精力和学习能力上比年轻人差点，但他们对企业来说更  有吸引力。而在中国没有这样的一个平台。\r\r4 是程序员自己的原因，在中国程序员很多，但水平高的程序员去不多，如果在  30多岁水平达不到一定的高度，加上精力和学习能力的下降，被淘汰也是正常  的\r\r中国的IT行业发展还是非常迅速的。所以以后中国程序员的平均年龄也会越来越大的。相信热中于技术的人都会期待这一天的到来。\n\n","source":"_posts/programmers-not-really-35.md","raw":"---\ntitle: 程序员—真的过不了35吗？\ndate: 2006-12-09\ncategories: [随笔杂谈]\ntags:\n---\n\n现在在网上经常会看到一些有关程序员年龄的问题，大部分都是说程序员的年龄超不过35岁，到了这个年的程序员要么转行做管理，要么去创业。在一些招聘的网站上，一些IT公司的招聘条件上大多也会有年龄的限制。这对我这样一个马上就要毕业走上程序员之路的人来说或多或少有一点压力。当看到搜狐开发团队的平均年龄只有24岁时，我感到自己好象“老”了，尽管现在我还没有毕业。但我一直都坚信从现在做起一切都不晚，并且我也不认为35岁就是程序员年龄的一个上限。在国外有很多的人40、50多岁还在一线做开发工作，那么为什么在中国就不行了。我认为大致有这么几个原因。\r<!--more-->\r1 最主要的原因当然是跟钱挂钩了，据了解在国外程序员特别是资深程序员的待  遇都不错，对于一些对技术非常热爱的人来说就没有必要在35岁以后就转行了  ，而在国内程序员一直被认为是IT届的蓝领，也就是说钱不是很多。所以我认  为在国内许多程序员应该是被迫才该行的。\r\r2 我认为跟精力有关，在中国的程序员如果不加班到是不正常了，说起程序员的  加班我有以下几点看法\r\r* 因为喜欢这份工作，自愿地加班，这种人是值得鼓励的。\r* 加班是为了表现，来得到老板的好感。这种现象在IT企业中普遍存在，毕竟  谁都想加薪和升职。\r* 没有按计划把上班该做的事做完，不得不加班。\r* 加班成为了一种企业文化，在公司里从上司到同事都加班，自己不加有点不  好意思了。\n\r人的精力是有限的特别是在上了年纪以后，所以也有人是在30多岁以后受不了  这种高强度的工作才转行的。\r\r3 我认为应该和中国现在还不是很成熟的IT行业有关，在国外一些程序员在一  个企业一干可能就有十几年或几十年，企业可能更愿意留住这样的人，因为他  们有经验，也比较熟悉公司的工作流程。到最后这些老的程序员可能成为某一  个领域的专家，虽然在精力和学习能力上比年轻人差点，但他们对企业来说更  有吸引力。而在中国没有这样的一个平台。\r\r4 是程序员自己的原因，在中国程序员很多，但水平高的程序员去不多，如果在  30多岁水平达不到一定的高度，加上精力和学习能力的下降，被淘汰也是正常  的\r\r中国的IT行业发展还是非常迅速的。所以以后中国程序员的平均年龄也会越来越大的。相信热中于技术的人都会期待这一天的到来。\n\n","slug":"programmers-not-really-35","published":1,"updated":"2016-08-12T04:41:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz92q0063xfynx1xgbhc9","content":"<p>现在在网上经常会看到一些有关程序员年龄的问题，大部分都是说程序员的年龄超不过35岁，到了这个年的程序员要么转行做管理，要么去创业。在一些招聘的网站上，一些IT公司的招聘条件上大多也会有年龄的限制。这对我这样一个马上就要毕业走上程序员之路的人来说或多或少有一点压力。当看到搜狐开发团队的平均年龄只有24岁时，我感到自己好象“老”了，尽管现在我还没有毕业。但我一直都坚信从现在做起一切都不晚，并且我也不认为35岁就是程序员年龄的一个上限。在国外有很多的人40、50多岁还在一线做开发工作，那么为什么在中国就不行了。我认为大致有这么几个原因。<br><a id=\"more\"></a><br>1 最主要的原因当然是跟钱挂钩了，据了解在国外程序员特别是资深程序员的待  遇都不错，对于一些对技术非常热爱的人来说就没有必要在35岁以后就转行了  ，而在国内程序员一直被认为是IT届的蓝领，也就是说钱不是很多。所以我认  为在国内许多程序员应该是被迫才该行的。</p>\n<p>2 我认为跟精力有关，在中国的程序员如果不加班到是不正常了，说起程序员的  加班我有以下几点看法</p>\n<ul>\n<li>因为喜欢这份工作，自愿地加班，这种人是值得鼓励的。</li>\n<li>加班是为了表现，来得到老板的好感。这种现象在IT企业中普遍存在，毕竟  谁都想加薪和升职。</li>\n<li>没有按计划把上班该做的事做完，不得不加班。</li>\n<li>加班成为了一种企业文化，在公司里从上司到同事都加班，自己不加有点不  好意思了。</li>\n</ul>\n<p>人的精力是有限的特别是在上了年纪以后，所以也有人是在30多岁以后受不了  这种高强度的工作才转行的。</p>\n<p>3 我认为应该和中国现在还不是很成熟的IT行业有关，在国外一些程序员在一  个企业一干可能就有十几年或几十年，企业可能更愿意留住这样的人，因为他  们有经验，也比较熟悉公司的工作流程。到最后这些老的程序员可能成为某一  个领域的专家，虽然在精力和学习能力上比年轻人差点，但他们对企业来说更  有吸引力。而在中国没有这样的一个平台。</p>\n<p>4 是程序员自己的原因，在中国程序员很多，但水平高的程序员去不多，如果在  30多岁水平达不到一定的高度，加上精力和学习能力的下降，被淘汰也是正常  的</p>\n<p>中国的IT行业发展还是非常迅速的。所以以后中国程序员的平均年龄也会越来越大的。相信热中于技术的人都会期待这一天的到来。</p>\n","excerpt":"<p>现在在网上经常会看到一些有关程序员年龄的问题，大部分都是说程序员的年龄超不过35岁，到了这个年的程序员要么转行做管理，要么去创业。在一些招聘的网站上，一些IT公司的招聘条件上大多也会有年龄的限制。这对我这样一个马上就要毕业走上程序员之路的人来说或多或少有一点压力。当看到搜狐开发团队的平均年龄只有24岁时，我感到自己好象“老”了，尽管现在我还没有毕业。但我一直都坚信从现在做起一切都不晚，并且我也不认为35岁就是程序员年龄的一个上限。在国外有很多的人40、50多岁还在一线做开发工作，那么为什么在中国就不行了。我认为大致有这么几个原因。<br>","more":"<br>1 最主要的原因当然是跟钱挂钩了，据了解在国外程序员特别是资深程序员的待  遇都不错，对于一些对技术非常热爱的人来说就没有必要在35岁以后就转行了  ，而在国内程序员一直被认为是IT届的蓝领，也就是说钱不是很多。所以我认  为在国内许多程序员应该是被迫才该行的。</p>\n<p>2 我认为跟精力有关，在中国的程序员如果不加班到是不正常了，说起程序员的  加班我有以下几点看法</p>\n<ul>\n<li>因为喜欢这份工作，自愿地加班，这种人是值得鼓励的。</li>\n<li>加班是为了表现，来得到老板的好感。这种现象在IT企业中普遍存在，毕竟  谁都想加薪和升职。</li>\n<li>没有按计划把上班该做的事做完，不得不加班。</li>\n<li>加班成为了一种企业文化，在公司里从上司到同事都加班，自己不加有点不  好意思了。</li>\n</ul>\n<p>人的精力是有限的特别是在上了年纪以后，所以也有人是在30多岁以后受不了  这种高强度的工作才转行的。</p>\n<p>3 我认为应该和中国现在还不是很成熟的IT行业有关，在国外一些程序员在一  个企业一干可能就有十几年或几十年，企业可能更愿意留住这样的人，因为他  们有经验，也比较熟悉公司的工作流程。到最后这些老的程序员可能成为某一  个领域的专家，虽然在精力和学习能力上比年轻人差点，但他们对企业来说更  有吸引力。而在中国没有这样的一个平台。</p>\n<p>4 是程序员自己的原因，在中国程序员很多，但水平高的程序员去不多，如果在  30多岁水平达不到一定的高度，加上精力和学习能力的下降，被淘汰也是正常  的</p>\n<p>中国的IT行业发展还是非常迅速的。所以以后中国程序员的平均年龄也会越来越大的。相信热中于技术的人都会期待这一天的到来。</p>"},{"title":"难得的公司小活动—羽毛球比赛","date":"2009-10-16T16:00:00.000Z","_content":"\n前几天人事就通知在这周末公司内部组织一次羽毛球比赛，确实非常期待啊，毕竟好久都没怎么运动了。昨天下午下班后我们就来到了光谷体育馆的羽毛球馆，先进行了一些热身就进行了分组比赛，我的搭档是公司的一位女同事，水平当然是没我好了，呵呵！！！ 在经过一轮紧张激烈的比赛后，我们很幸运的拿到了第一，不过说实话我的羽毛球水平实在是不怎么样啊，运气比较好而已啦。除了拿到冠军外感到最高兴的是身体得到锻炼。\n\n希望公司以后经常组织下活动，呵呵 。睡觉咯 ，下午和约了同事打篮球了，得养好精神。\n\n","source":"_posts/rare-small-company-activities-badminton-match.md","raw":"---\ntitle: 难得的公司小活动—羽毛球比赛\ndate: 2009-10-17\ncategories: [心情日记]\ntags:\n---\n\n前几天人事就通知在这周末公司内部组织一次羽毛球比赛，确实非常期待啊，毕竟好久都没怎么运动了。昨天下午下班后我们就来到了光谷体育馆的羽毛球馆，先进行了一些热身就进行了分组比赛，我的搭档是公司的一位女同事，水平当然是没我好了，呵呵！！！ 在经过一轮紧张激烈的比赛后，我们很幸运的拿到了第一，不过说实话我的羽毛球水平实在是不怎么样啊，运气比较好而已啦。除了拿到冠军外感到最高兴的是身体得到锻炼。\n\n希望公司以后经常组织下活动，呵呵 。睡觉咯 ，下午和约了同事打篮球了，得养好精神。\n\n","slug":"rare-small-company-activities-badminton-match","published":1,"updated":"2016-08-16T14:41:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz92r0065xfynoajahhv5","content":"<p>前几天人事就通知在这周末公司内部组织一次羽毛球比赛，确实非常期待啊，毕竟好久都没怎么运动了。昨天下午下班后我们就来到了光谷体育馆的羽毛球馆，先进行了一些热身就进行了分组比赛，我的搭档是公司的一位女同事，水平当然是没我好了，呵呵！！！ 在经过一轮紧张激烈的比赛后，我们很幸运的拿到了第一，不过说实话我的羽毛球水平实在是不怎么样啊，运气比较好而已啦。除了拿到冠军外感到最高兴的是身体得到锻炼。</p>\n<p>希望公司以后经常组织下活动，呵呵 。睡觉咯 ，下午和约了同事打篮球了，得养好精神。</p>\n","excerpt":"","more":"<p>前几天人事就通知在这周末公司内部组织一次羽毛球比赛，确实非常期待啊，毕竟好久都没怎么运动了。昨天下午下班后我们就来到了光谷体育馆的羽毛球馆，先进行了一些热身就进行了分组比赛，我的搭档是公司的一位女同事，水平当然是没我好了，呵呵！！！ 在经过一轮紧张激烈的比赛后，我们很幸运的拿到了第一，不过说实话我的羽毛球水平实在是不怎么样啊，运气比较好而已啦。除了拿到冠军外感到最高兴的是身体得到锻炼。</p>\n<p>希望公司以后经常组织下活动，呵呵 。睡觉咯 ，下午和约了同事打篮球了，得养好精神。</p>\n"},{"title":"推荐一款小巧的截图工具","date":"2009-05-14T16:00:00.000Z","_content":"\n用过很多的截图工具，发现FastStone算是比较出色的一款，无论是功能还是易用性都非常不错。在最新的版本中还添加了屏幕录制功能。\n\n[下载地址](http://www.faststone.org/FSCapturerDownload.htm)\n\n用户名:www.orsoon.com\n注册码:KPYME-ISDUO-CSBYM-MNHEB\n\n\n","source":"_posts/recommend-a-small-screenshots-tools.md","raw":"---\ntitle: 推荐一款小巧的截图工具\ndate: 2009-05-15\ncategories: [软件推荐]\ntags: [FastStone, 软件推荐]\n---\n\n用过很多的截图工具，发现FastStone算是比较出色的一款，无论是功能还是易用性都非常不错。在最新的版本中还添加了屏幕录制功能。\n\n[下载地址](http://www.faststone.org/FSCapturerDownload.htm)\n\n用户名:www.orsoon.com\n注册码:KPYME-ISDUO-CSBYM-MNHEB\n\n\n","slug":"recommend-a-small-screenshots-tools","published":1,"updated":"2016-08-15T13:35:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz92s0069xfynsry75hxe","content":"<p>用过很多的截图工具，发现FastStone算是比较出色的一款，无论是功能还是易用性都非常不错。在最新的版本中还添加了屏幕录制功能。</p>\n<p><a href=\"http://www.faststone.org/FSCapturerDownload.htm\" target=\"_blank\" rel=\"external\">下载地址</a></p>\n<p>用户名:www.orsoon.com<br>注册码:KPYME-ISDUO-CSBYM-MNHEB</p>\n","excerpt":"","more":"<p>用过很多的截图工具，发现FastStone算是比较出色的一款，无论是功能还是易用性都非常不错。在最新的版本中还添加了屏幕录制功能。</p>\n<p><a href=\"http://www.faststone.org/FSCapturerDownload.htm\">下载地址</a></p>\n<p>用户名:www.orsoon.com<br>注册码:KPYME-ISDUO-CSBYM-MNHEB</p>\n"},{"title":"清除上传控件 File 的值","date":"2008-07-03T16:00:00.000Z","_content":"\n因为File控件的value值是只读的，所以用document.getElementById(“File1″).value=”” 并不能清楚file控件的值。\n<!--more-->\n\n可以用一下方法实现\n\n```\n<script type=\"text/javascript\">\n    function clear() {\n\n        var file1 = document.getElementById(\"File1\");\n\n        file1.select();\n\n        document.execCommand('Delete')\n\n    }\n</script>\n<input id=\"File1\" type=\"file\" runat=\"server\" />\n\n<input id=\"btnClear\" value=\"清空\" onclick=\"clear()\" />\n```\n\n\n\n","source":"_posts/remove-the-file-upload-control-values.md","raw":"---\ntitle: 清除上传控件 File 的值\ndate: 2008-07-04\ncategories: [Javascript]\ntags: [javascript]\n---\n\n因为File控件的value值是只读的，所以用document.getElementById(“File1″).value=”” 并不能清楚file控件的值。\n<!--more-->\n\n可以用一下方法实现\n\n```\n<script type=\"text/javascript\">\n    function clear() {\n\n        var file1 = document.getElementById(\"File1\");\n\n        file1.select();\n\n        document.execCommand('Delete')\n\n    }\n</script>\n<input id=\"File1\" type=\"file\" runat=\"server\" />\n\n<input id=\"btnClear\" value=\"清空\" onclick=\"clear()\" />\n```\n\n\n\n","slug":"remove-the-file-upload-control-values","published":1,"updated":"2016-08-14T06:43:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz92t006cxfyn23pp9zxo","content":"<p>因为File控件的value值是只读的，所以用document.getElementById(“File1″).value=”” 并不能清楚file控件的值。<br><a id=\"more\"></a></p>\n<p>可以用一下方法实现</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">clear</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">var</span> file1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"File1\"</span>);</div><div class=\"line\"></div><div class=\"line\">        file1.select();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"built_in\">document</span>.execCommand(<span class=\"string\">'Delete'</span>)</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"File1\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btnClear\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"清空\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"clear()\"</span> /&gt;</span></div></pre></td></tr></table></figure>\n","excerpt":"<p>因为File控件的value值是只读的，所以用document.getElementById(“File1″).value=”” 并不能清楚file控件的值。<br>","more":"</p>\n<p>可以用一下方法实现</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">clear</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">var</span> file1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"File1\"</span>);</div><div class=\"line\"></div><div class=\"line\">        file1.select();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"built_in\">document</span>.execCommand(<span class=\"string\">'Delete'</span>)</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"File1\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btnClear\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"清空\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"clear()\"</span> /&gt;</span></div></pre></td></tr></table></figure>"},{"title":"Response.Redirect在新窗口打开 && 3.0扩展方法","date":"2009-01-06T16:00:00.000Z","_content":"\nResponse.Rederect在默认情况下是在本页跳转，所以除了在js中用window.open 或是给A标签添加target属性之外，在后台似乎不能来打开新的页面，其实不然，通过设置form的target属性同样可以让Response.Rederect所指向的url在新的窗口打开。下面用三种方法来实现。\n<!--more-->\n\n1 .给form指定target属性，那么本页面中所有的Response.Rederect都将在新的窗口中打开。代码如下：\n\n```\nprotected void Page_Load(object sender, EventArgs e)\n{\n    form1.Target = \"_blank\";\n}\n```\n\n或\n```\n<form id=\"form2\" runat=\"server\" target=\"_blank\">\n```\n\n2 .用脚本针对某个控件来指定form的target，代码如下：\n\nhtml代码：\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Default.aspx.cs\"\nInherits=\"ResponseRedirectDemo._Default\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\" >\n<head id=\"Head1\" runat=\"server\">\n    <title>ResponseRedirectDemo</title>\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\" target=\"_blank\">\n    <div>\n        <asp:Button ID=\"Button1\" runat=\"server\" OnClick=\"Button1_Click\"\n            Text=\"OpenNewWindow\"/>\n        <asp:Button ID=\"Button2\" runat=\"server\" OnClick=\"Button2_Click\"\n            Text=\"OpenOldWindow\" />\n    </div>\n    </form>\n</body>\n</html>\n```\n\nC#代码：\n\n```\nnamespace ResponseRedirectDemo\n{\n    public partial class _Default : System.Web.UI.Page\n    {\n        protected void Page_Load(object sender, EventArgs e)\n        {\n            Button1.Attributes.Add(\"onclick\", \"this.form.target='_blank'\");\n            Button2.Attributes.Add(\"onclick\", \"this.form.target=''\");\n        }\n\n        protected void Button1_Click(object sender, EventArgs e)\n        {\n            Response.Redirect(\"http://oec2003.cnblogs.com\");\n        }\n\n        protected void Button2_Click(object sender, EventArgs e)\n        {\n            Response.Redirect(\"http://oec2003.cnblogs.com\");\n        }\n    }\n}\n```\n\n上面的代码中点击button1在新窗口打开，点击button2在本页打开。\n\n3 .除了设置form的target属性，要在新的窗口打开页面就只能用open，可以写个通用的方法来实现，如下：\n\n```\npublic class RedirectHelper\n{\n    public static void Redirect(string url,\n        string target, string windowFeatures)\n    {\n        HttpContext context = HttpContext.Current;\n        if ((String.IsNullOrEmpty(target) ||\n            target.Equals(\"_self\", StringComparison.OrdinalIgnoreCase)) &&\n            String.IsNullOrEmpty(windowFeatures))\n        {\n            context.Response.Redirect(url);\n        }\n        else\n        {\n            Page page = (Page)context.Handler;\n            if (page == null)\n            {\n                throw new\n                InvalidOperationException(\"Cannot redirect to new window.\");\n            }\n            url = page.ResolveClientUrl(url);\n            string script;\n            if (!String.IsNullOrEmpty(windowFeatures))\n            {\n                script = @\"window.open(\"\"{0}\"\", \"\"{1}\"\", \"\"{2}\"\");\";\n            }\n            else\n            {\n                script = @\"window.open(\"\"{0}\"\", \"\"{1}\"\");\";\n            }\n            script = String.Format(script, url, target, windowFeatures);\n            page.ClientScript.RegisterStartupScript(page.GetType(),\n                \"Redirect\", script, true);\n\n        }\n    }\n}\n```\n\n这样就可以在程序中使用RedirectHelper.Redirect(“oec2003.aspx”, “_blank”, “”); 第三个参数为open窗口的一些属性 。但这样好像还不是很方便，在.net3.5中提供了扩展方法的特性，在这里也可以借用一下，将上面的静态方法实现为Response.Redirect的一个重载。具体代码如下：\n\n```\npublic static class RedirectHelper\n{\n    public static void Redirect(this HttpResponse response,\n        string url, string target, string windowFeatures)\n    {\n        if ((String.IsNullOrEmpty(target) ||\n            target.Equals(\"_self\", StringComparison.OrdinalIgnoreCase)) &&\n            String.IsNullOrEmpty(windowFeatures))\n        {\n            response.Redirect(url);\n        }\n        else\n        {\n            Page page = (Page)HttpContext.Current.Handler; if (page == null)\n            {\n                throw new\n                InvalidOperationException(\"Cannot redirect to new window .\");\n            }\n            url = page.ResolveClientUrl(url);\n            string script;\n            if (!String.IsNullOrEmpty(windowFeatures))\n            {\n                script = @\"window.open(\"\"{0}\"\", \"\"{1}\"\", \"\"{2}\"\");\";\n            }\n            else\n            {\n                script = @\"window.open(\"\"{0}\"\", \"\"{1}\"\");\";\n            }\n            script = String.Format(script, url, target, windowFeatures);\n            ScriptManager.RegisterStartupScript(page,\n                typeof(Page), \"Redirect\", script, true);\n        }\n    }\n}\n```\n\n将该类添加到项目中后，在程序中输入Response.Redirect会发现该方法有三个重载了，这样再结合前面的form的target 就非常方便了。\n\n","source":"_posts/response-redirect-in-a-new-window-open-3-0-extension-methods.md","raw":"---\ntitle: Response.Redirect在新窗口打开 && 3.0扩展方法\ndate: 2009-01-07\ncategories: [Asp.Net]\ntags: [AspNet, DotNet3.0]\n---\n\nResponse.Rederect在默认情况下是在本页跳转，所以除了在js中用window.open 或是给A标签添加target属性之外，在后台似乎不能来打开新的页面，其实不然，通过设置form的target属性同样可以让Response.Rederect所指向的url在新的窗口打开。下面用三种方法来实现。\n<!--more-->\n\n1 .给form指定target属性，那么本页面中所有的Response.Rederect都将在新的窗口中打开。代码如下：\n\n```\nprotected void Page_Load(object sender, EventArgs e)\n{\n    form1.Target = \"_blank\";\n}\n```\n\n或\n```\n<form id=\"form2\" runat=\"server\" target=\"_blank\">\n```\n\n2 .用脚本针对某个控件来指定form的target，代码如下：\n\nhtml代码：\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Default.aspx.cs\"\nInherits=\"ResponseRedirectDemo._Default\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\" >\n<head id=\"Head1\" runat=\"server\">\n    <title>ResponseRedirectDemo</title>\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\" target=\"_blank\">\n    <div>\n        <asp:Button ID=\"Button1\" runat=\"server\" OnClick=\"Button1_Click\"\n            Text=\"OpenNewWindow\"/>\n        <asp:Button ID=\"Button2\" runat=\"server\" OnClick=\"Button2_Click\"\n            Text=\"OpenOldWindow\" />\n    </div>\n    </form>\n</body>\n</html>\n```\n\nC#代码：\n\n```\nnamespace ResponseRedirectDemo\n{\n    public partial class _Default : System.Web.UI.Page\n    {\n        protected void Page_Load(object sender, EventArgs e)\n        {\n            Button1.Attributes.Add(\"onclick\", \"this.form.target='_blank'\");\n            Button2.Attributes.Add(\"onclick\", \"this.form.target=''\");\n        }\n\n        protected void Button1_Click(object sender, EventArgs e)\n        {\n            Response.Redirect(\"http://oec2003.cnblogs.com\");\n        }\n\n        protected void Button2_Click(object sender, EventArgs e)\n        {\n            Response.Redirect(\"http://oec2003.cnblogs.com\");\n        }\n    }\n}\n```\n\n上面的代码中点击button1在新窗口打开，点击button2在本页打开。\n\n3 .除了设置form的target属性，要在新的窗口打开页面就只能用open，可以写个通用的方法来实现，如下：\n\n```\npublic class RedirectHelper\n{\n    public static void Redirect(string url,\n        string target, string windowFeatures)\n    {\n        HttpContext context = HttpContext.Current;\n        if ((String.IsNullOrEmpty(target) ||\n            target.Equals(\"_self\", StringComparison.OrdinalIgnoreCase)) &&\n            String.IsNullOrEmpty(windowFeatures))\n        {\n            context.Response.Redirect(url);\n        }\n        else\n        {\n            Page page = (Page)context.Handler;\n            if (page == null)\n            {\n                throw new\n                InvalidOperationException(\"Cannot redirect to new window.\");\n            }\n            url = page.ResolveClientUrl(url);\n            string script;\n            if (!String.IsNullOrEmpty(windowFeatures))\n            {\n                script = @\"window.open(\"\"{0}\"\", \"\"{1}\"\", \"\"{2}\"\");\";\n            }\n            else\n            {\n                script = @\"window.open(\"\"{0}\"\", \"\"{1}\"\");\";\n            }\n            script = String.Format(script, url, target, windowFeatures);\n            page.ClientScript.RegisterStartupScript(page.GetType(),\n                \"Redirect\", script, true);\n\n        }\n    }\n}\n```\n\n这样就可以在程序中使用RedirectHelper.Redirect(“oec2003.aspx”, “_blank”, “”); 第三个参数为open窗口的一些属性 。但这样好像还不是很方便，在.net3.5中提供了扩展方法的特性，在这里也可以借用一下，将上面的静态方法实现为Response.Redirect的一个重载。具体代码如下：\n\n```\npublic static class RedirectHelper\n{\n    public static void Redirect(this HttpResponse response,\n        string url, string target, string windowFeatures)\n    {\n        if ((String.IsNullOrEmpty(target) ||\n            target.Equals(\"_self\", StringComparison.OrdinalIgnoreCase)) &&\n            String.IsNullOrEmpty(windowFeatures))\n        {\n            response.Redirect(url);\n        }\n        else\n        {\n            Page page = (Page)HttpContext.Current.Handler; if (page == null)\n            {\n                throw new\n                InvalidOperationException(\"Cannot redirect to new window .\");\n            }\n            url = page.ResolveClientUrl(url);\n            string script;\n            if (!String.IsNullOrEmpty(windowFeatures))\n            {\n                script = @\"window.open(\"\"{0}\"\", \"\"{1}\"\", \"\"{2}\"\");\";\n            }\n            else\n            {\n                script = @\"window.open(\"\"{0}\"\", \"\"{1}\"\");\";\n            }\n            script = String.Format(script, url, target, windowFeatures);\n            ScriptManager.RegisterStartupScript(page,\n                typeof(Page), \"Redirect\", script, true);\n        }\n    }\n}\n```\n\n将该类添加到项目中后，在程序中输入Response.Redirect会发现该方法有三个重载了，这样再结合前面的form的target 就非常方便了。\n\n","slug":"response-redirect-in-a-new-window-open-3-0-extension-methods","published":1,"updated":"2016-08-14T07:31:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz92v006hxfynft3vi3qe","content":"<p>Response.Rederect在默认情况下是在本页跳转，所以除了在js中用window.open 或是给A标签添加target属性之外，在后台似乎不能来打开新的页面，其实不然，通过设置form的target属性同样可以让Response.Rederect所指向的url在新的窗口打开。下面用三种方法来实现。<br><a id=\"more\"></a></p>\n<p>1 .给form指定target属性，那么本页面中所有的Response.Rederect都将在新的窗口中打开。代码如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    form1.Target = <span class=\"string\">\"_blank\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>或<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"selector-tag\">form</span> id=<span class=\"string\">\"form2\"</span> runat=<span class=\"string\">\"server\"</span> target=<span class=\"string\">\"_blank\"</span>&gt;</div></pre></td></tr></table></figure></p>\n<p>2 .用脚本针对某个控件来指定form的target，代码如下：</p>\n<p>html代码：</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeBehind=<span class=\"string\">\"Default.aspx.cs\"</span></span></div><div class=\"line\">Inherits=<span class=\"string\">\"ResponseRedirectDemo._Default\"</span> <span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"</span></div><div class=\"line\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span> &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>ResponseRedirectDemo<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">target</span>=<span class=\"string\">\"_blank\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">asp:Button</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Button1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">OnClick</span>=<span class=\"string\">\"Button1_Click\"</span></span></div><div class=\"line\">            <span class=\"attr\">Text</span>=<span class=\"string\">\"OpenNewWindow\"</span>/&gt;</div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">asp:Button</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Button2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">OnClick</span>=<span class=\"string\">\"Button2_Click\"</span></span></div><div class=\"line\">            <span class=\"attr\">Text</span>=<span class=\"string\">\"OpenOldWindow\"</span> /&gt;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>C#代码：</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">namespace</span> <span class=\"selector-tag\">ResponseRedirectDemo</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"selector-tag\">public</span> <span class=\"selector-tag\">partial</span> <span class=\"selector-tag\">class</span> <span class=\"selector-tag\">_Default</span> : <span class=\"selector-tag\">System</span><span class=\"selector-class\">.Web</span><span class=\"selector-class\">.UI</span><span class=\"selector-class\">.Page</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"selector-tag\">protected</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">Page_Load</span>(object sender, EventArgs e)</div><div class=\"line\">        &#123;</div><div class=\"line\">            Button1<span class=\"selector-class\">.Attributes</span><span class=\"selector-class\">.Add</span>(<span class=\"string\">\"onclick\"</span>, <span class=\"string\">\"this.form.target='_blank'\"</span>);</div><div class=\"line\">            Button2<span class=\"selector-class\">.Attributes</span><span class=\"selector-class\">.Add</span>(<span class=\"string\">\"onclick\"</span>, <span class=\"string\">\"this.form.target=''\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"selector-tag\">protected</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">Button1_Click</span>(object sender, EventArgs e)</div><div class=\"line\">        &#123;</div><div class=\"line\">            Response<span class=\"selector-class\">.Redirect</span>(<span class=\"string\">\"http://oec2003.cnblogs.com\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"selector-tag\">protected</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">Button2_Click</span>(object sender, EventArgs e)</div><div class=\"line\">        &#123;</div><div class=\"line\">            Response<span class=\"selector-class\">.Redirect</span>(<span class=\"string\">\"http://oec2003.cnblogs.com\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的代码中点击button1在新窗口打开，点击button2在本页打开。</p>\n<p>3 .除了设置form的target属性，要在新的窗口打开页面就只能用open，可以写个通用的方法来实现，如下：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> RedirectHelper</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">void</span> Redirect(<span class=\"built_in\">string</span> url,</div><div class=\"line\">        <span class=\"built_in\">string</span> target, <span class=\"built_in\">string</span> windowFeatures)</div><div class=\"line\">    &#123;</div><div class=\"line\">        HttpContext context = HttpContext.Current;</div><div class=\"line\">        <span class=\"keyword\">if</span> ((<span class=\"built_in\">String</span>.IsNullOrEmpty(target) ||</div><div class=\"line\">            target.Equals(<span class=\"string\">\"_self\"</span>, StringComparison.OrdinalIgnoreCase)) &amp;&amp;</div><div class=\"line\">            <span class=\"built_in\">String</span>.IsNullOrEmpty(windowFeatures))</div><div class=\"line\">        &#123;</div><div class=\"line\">            context.Response.Redirect(url);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Page page = (Page)context.Handler;</div><div class=\"line\">            <span class=\"keyword\">if</span> (page == <span class=\"literal\">null</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span></div><div class=\"line\">                InvalidOperationException(<span class=\"string\">\"Cannot redirect to new window.\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">            url = page.ResolveClientUrl(url);</div><div class=\"line\">            <span class=\"built_in\">string</span> script;</div><div class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"built_in\">String</span>.IsNullOrEmpty(windowFeatures))</div><div class=\"line\">            &#123;</div><div class=\"line\">                script = @<span class=\"string\">\"window.open(\"</span><span class=\"string\">\"&#123;0&#125;\"</span><span class=\"string\">\", \"</span><span class=\"string\">\"&#123;1&#125;\"</span><span class=\"string\">\", \"</span><span class=\"string\">\"&#123;2&#125;\"</span><span class=\"string\">\");\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                script = @<span class=\"string\">\"window.open(\"</span><span class=\"string\">\"&#123;0&#125;\"</span><span class=\"string\">\", \"</span><span class=\"string\">\"&#123;1&#125;\"</span><span class=\"string\">\");\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            script = <span class=\"built_in\">String</span>.Format(script, url, target, windowFeatures);</div><div class=\"line\">            page.ClientScript.RegisterStartupScript(page.GetType(),</div><div class=\"line\">                <span class=\"string\">\"Redirect\"</span>, script, <span class=\"literal\">true</span>);</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这样就可以在程序中使用RedirectHelper.Redirect(“oec2003.aspx”, “_blank”, “”); 第三个参数为open窗口的一些属性 。但这样好像还不是很方便，在.net3.5中提供了扩展方法的特性，在这里也可以借用一下，将上面的静态方法实现为Response.Redirect的一个重载。具体代码如下：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> RedirectHelper</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">void</span> Redirect(<span class=\"keyword\">this</span> HttpResponse response,</div><div class=\"line\">        <span class=\"built_in\">string</span> url, <span class=\"built_in\">string</span> target, <span class=\"built_in\">string</span> windowFeatures)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> ((<span class=\"built_in\">String</span>.IsNullOrEmpty(target) ||</div><div class=\"line\">            target.Equals(<span class=\"string\">\"_self\"</span>, StringComparison.OrdinalIgnoreCase)) &amp;&amp;</div><div class=\"line\">            <span class=\"built_in\">String</span>.IsNullOrEmpty(windowFeatures))</div><div class=\"line\">        &#123;</div><div class=\"line\">            response.Redirect(url);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Page page = (Page)HttpContext.Current.Handler; <span class=\"keyword\">if</span> (page == <span class=\"literal\">null</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span></div><div class=\"line\">                InvalidOperationException(<span class=\"string\">\"Cannot redirect to new window .\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">            url = page.ResolveClientUrl(url);</div><div class=\"line\">            <span class=\"built_in\">string</span> script;</div><div class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"built_in\">String</span>.IsNullOrEmpty(windowFeatures))</div><div class=\"line\">            &#123;</div><div class=\"line\">                script = @<span class=\"string\">\"window.open(\"</span><span class=\"string\">\"&#123;0&#125;\"</span><span class=\"string\">\", \"</span><span class=\"string\">\"&#123;1&#125;\"</span><span class=\"string\">\", \"</span><span class=\"string\">\"&#123;2&#125;\"</span><span class=\"string\">\");\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                script = @<span class=\"string\">\"window.open(\"</span><span class=\"string\">\"&#123;0&#125;\"</span><span class=\"string\">\", \"</span><span class=\"string\">\"&#123;1&#125;\"</span><span class=\"string\">\");\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            script = <span class=\"built_in\">String</span>.Format(script, url, target, windowFeatures);</div><div class=\"line\">            ScriptManager.RegisterStartupScript(page,</div><div class=\"line\">                <span class=\"keyword\">typeof</span>(Page), <span class=\"string\">\"Redirect\"</span>, script, <span class=\"literal\">true</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>将该类添加到项目中后，在程序中输入Response.Redirect会发现该方法有三个重载了，这样再结合前面的form的target 就非常方便了。</p>\n","excerpt":"<p>Response.Rederect在默认情况下是在本页跳转，所以除了在js中用window.open 或是给A标签添加target属性之外，在后台似乎不能来打开新的页面，其实不然，通过设置form的target属性同样可以让Response.Rederect所指向的url在新的窗口打开。下面用三种方法来实现。<br>","more":"</p>\n<p>1 .给form指定target属性，那么本页面中所有的Response.Rederect都将在新的窗口中打开。代码如下：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    form1.Target = <span class=\"string\">\"_blank\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>或<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"selector-tag\">form</span> id=<span class=\"string\">\"form2\"</span> runat=<span class=\"string\">\"server\"</span> target=<span class=\"string\">\"_blank\"</span>&gt;</div></pre></td></tr></table></figure></p>\n<p>2 .用脚本针对某个控件来指定form的target，代码如下：</p>\n<p>html代码：</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeBehind=<span class=\"string\">\"Default.aspx.cs\"</span></div><div class=\"line\">Inherits=<span class=\"string\">\"ResponseRedirectDemo._Default\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"</div><div class=\"line\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span> &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>ResponseRedirectDemo<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">target</span>=<span class=\"string\">\"_blank\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">asp:Button</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Button1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">OnClick</span>=<span class=\"string\">\"Button1_Click\"</span></div><div class=\"line\">            <span class=\"attr\">Text</span>=<span class=\"string\">\"OpenNewWindow\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">asp:Button</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Button2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">OnClick</span>=<span class=\"string\">\"Button2_Click\"</span></div><div class=\"line\">            <span class=\"attr\">Text</span>=<span class=\"string\">\"OpenOldWindow\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>C#代码：</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">namespace</span> <span class=\"selector-tag\">ResponseRedirectDemo</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"selector-tag\">public</span> <span class=\"selector-tag\">partial</span> <span class=\"selector-tag\">class</span> <span class=\"selector-tag\">_Default</span> : <span class=\"selector-tag\">System</span><span class=\"selector-class\">.Web</span><span class=\"selector-class\">.UI</span><span class=\"selector-class\">.Page</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"selector-tag\">protected</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">Page_Load</span>(object sender, EventArgs e)</div><div class=\"line\">        &#123;</div><div class=\"line\">            Button1<span class=\"selector-class\">.Attributes</span><span class=\"selector-class\">.Add</span>(<span class=\"string\">\"onclick\"</span>, <span class=\"string\">\"this.form.target='_blank'\"</span>);</div><div class=\"line\">            Button2<span class=\"selector-class\">.Attributes</span><span class=\"selector-class\">.Add</span>(<span class=\"string\">\"onclick\"</span>, <span class=\"string\">\"this.form.target=''\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"selector-tag\">protected</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">Button1_Click</span>(object sender, EventArgs e)</div><div class=\"line\">        &#123;</div><div class=\"line\">            Response<span class=\"selector-class\">.Redirect</span>(<span class=\"string\">\"http://oec2003.cnblogs.com\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"selector-tag\">protected</span> <span class=\"selector-tag\">void</span> <span class=\"selector-tag\">Button2_Click</span>(object sender, EventArgs e)</div><div class=\"line\">        &#123;</div><div class=\"line\">            Response<span class=\"selector-class\">.Redirect</span>(<span class=\"string\">\"http://oec2003.cnblogs.com\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的代码中点击button1在新窗口打开，点击button2在本页打开。</p>\n<p>3 .除了设置form的target属性，要在新的窗口打开页面就只能用open，可以写个通用的方法来实现，如下：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> RedirectHelper</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">void</span> Redirect(<span class=\"built_in\">string</span> url,</div><div class=\"line\">        <span class=\"built_in\">string</span> target, <span class=\"built_in\">string</span> windowFeatures)</div><div class=\"line\">    &#123;</div><div class=\"line\">        HttpContext context = HttpContext.Current;</div><div class=\"line\">        <span class=\"keyword\">if</span> ((<span class=\"built_in\">String</span>.IsNullOrEmpty(target) ||</div><div class=\"line\">            target.Equals(<span class=\"string\">\"_self\"</span>, StringComparison.OrdinalIgnoreCase)) &amp;&amp;</div><div class=\"line\">            <span class=\"built_in\">String</span>.IsNullOrEmpty(windowFeatures))</div><div class=\"line\">        &#123;</div><div class=\"line\">            context.Response.Redirect(url);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Page page = (Page)context.Handler;</div><div class=\"line\">            <span class=\"keyword\">if</span> (page == <span class=\"literal\">null</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span></div><div class=\"line\">                InvalidOperationException(<span class=\"string\">\"Cannot redirect to new window.\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">            url = page.ResolveClientUrl(url);</div><div class=\"line\">            <span class=\"built_in\">string</span> script;</div><div class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"built_in\">String</span>.IsNullOrEmpty(windowFeatures))</div><div class=\"line\">            &#123;</div><div class=\"line\">                script = @<span class=\"string\">\"window.open(\"</span><span class=\"string\">\"&#123;0&#125;\"</span><span class=\"string\">\", \"</span><span class=\"string\">\"&#123;1&#125;\"</span><span class=\"string\">\", \"</span><span class=\"string\">\"&#123;2&#125;\"</span><span class=\"string\">\");\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                script = @<span class=\"string\">\"window.open(\"</span><span class=\"string\">\"&#123;0&#125;\"</span><span class=\"string\">\", \"</span><span class=\"string\">\"&#123;1&#125;\"</span><span class=\"string\">\");\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            script = <span class=\"built_in\">String</span>.Format(script, url, target, windowFeatures);</div><div class=\"line\">            page.ClientScript.RegisterStartupScript(page.GetType(),</div><div class=\"line\">                <span class=\"string\">\"Redirect\"</span>, script, <span class=\"literal\">true</span>);</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这样就可以在程序中使用RedirectHelper.Redirect(“oec2003.aspx”, “_blank”, “”); 第三个参数为open窗口的一些属性 。但这样好像还不是很方便，在.net3.5中提供了扩展方法的特性，在这里也可以借用一下，将上面的静态方法实现为Response.Redirect的一个重载。具体代码如下：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> RedirectHelper</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">void</span> Redirect(<span class=\"keyword\">this</span> HttpResponse response,</div><div class=\"line\">        <span class=\"built_in\">string</span> url, <span class=\"built_in\">string</span> target, <span class=\"built_in\">string</span> windowFeatures)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> ((<span class=\"built_in\">String</span>.IsNullOrEmpty(target) ||</div><div class=\"line\">            target.Equals(<span class=\"string\">\"_self\"</span>, StringComparison.OrdinalIgnoreCase)) &amp;&amp;</div><div class=\"line\">            <span class=\"built_in\">String</span>.IsNullOrEmpty(windowFeatures))</div><div class=\"line\">        &#123;</div><div class=\"line\">            response.Redirect(url);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Page page = (Page)HttpContext.Current.Handler; <span class=\"keyword\">if</span> (page == <span class=\"literal\">null</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span></div><div class=\"line\">                InvalidOperationException(<span class=\"string\">\"Cannot redirect to new window .\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">            url = page.ResolveClientUrl(url);</div><div class=\"line\">            <span class=\"built_in\">string</span> script;</div><div class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"built_in\">String</span>.IsNullOrEmpty(windowFeatures))</div><div class=\"line\">            &#123;</div><div class=\"line\">                script = @<span class=\"string\">\"window.open(\"</span><span class=\"string\">\"&#123;0&#125;\"</span><span class=\"string\">\", \"</span><span class=\"string\">\"&#123;1&#125;\"</span><span class=\"string\">\", \"</span><span class=\"string\">\"&#123;2&#125;\"</span><span class=\"string\">\");\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                script = @<span class=\"string\">\"window.open(\"</span><span class=\"string\">\"&#123;0&#125;\"</span><span class=\"string\">\", \"</span><span class=\"string\">\"&#123;1&#125;\"</span><span class=\"string\">\");\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            script = <span class=\"built_in\">String</span>.Format(script, url, target, windowFeatures);</div><div class=\"line\">            ScriptManager.RegisterStartupScript(page,</div><div class=\"line\">                <span class=\"keyword\">typeof</span>(Page), <span class=\"string\">\"Redirect\"</span>, script, <span class=\"literal\">true</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>将该类添加到项目中后，在程序中输入Response.Redirect会发现该方法有三个重载了，这样再结合前面的form的target 就非常方便了。</p>"},{"title":"看姚明受伤后的火箭","date":"2007-01-07T16:00:00.000Z","_content":"\n姚明受伤了，这是在几个星期以前的事了，没有姚明的火箭让我们看火箭的比赛总象少点什么。受伤前姚明曾差点连续四场比赛拿下30＋10的数据，但是火箭的战绩并不是很好。后来姚明伤了，这对喜欢火箭，喜欢姚明的人来说无疑事个不好的消息。麦迪的伤愈复出给火箭带来了希望，而且付出后的表现也是最好的证明，连续四场比赛打出30＋，还带领火箭取得五连胜的成绩，虽然今天在加时赛输给了森林狼。\n<!--more-->\n这样的情况引起了很多的争论，姚明在对时候战绩不好，而现在姚明受伤了反而取得了五连胜，网上也在激烈地讨论在姚明复出后以谁为核心的问题，甚至有些人对姚明的能力产生了怀疑的态度。作为一个中国人我是支持姚明的，我认为以谁为核心并不重要，关键是球队能够取得胜利，毕竟篮球是一个集体的运动。\n\n对于姚明复出后以谁为核心的问题我有一些个人的想法，何不分别针对姚明和麦迪指定两套战术可以在比赛中轮流使用，前几节分着上场，到最后一节两人同时上，这样即可以保证他们的体力，也可以让对手很难适应火箭的节奏和战术。当然这只是我个人观点，并不一定行得通。总之希望姚明刚快伤愈复出，希望姚麦联手共创火箭佳绩。\n\n","source":"_posts/see-yaos-injury-after-the-rockets.md","raw":"---\ntitle: 看姚明受伤后的火箭\ndate: 2007-01-08\ncategories: [篮球]\ntags: [NBA,篮球]\n---\n\n姚明受伤了，这是在几个星期以前的事了，没有姚明的火箭让我们看火箭的比赛总象少点什么。受伤前姚明曾差点连续四场比赛拿下30＋10的数据，但是火箭的战绩并不是很好。后来姚明伤了，这对喜欢火箭，喜欢姚明的人来说无疑事个不好的消息。麦迪的伤愈复出给火箭带来了希望，而且付出后的表现也是最好的证明，连续四场比赛打出30＋，还带领火箭取得五连胜的成绩，虽然今天在加时赛输给了森林狼。\n<!--more-->\n这样的情况引起了很多的争论，姚明在对时候战绩不好，而现在姚明受伤了反而取得了五连胜，网上也在激烈地讨论在姚明复出后以谁为核心的问题，甚至有些人对姚明的能力产生了怀疑的态度。作为一个中国人我是支持姚明的，我认为以谁为核心并不重要，关键是球队能够取得胜利，毕竟篮球是一个集体的运动。\n\n对于姚明复出后以谁为核心的问题我有一些个人的想法，何不分别针对姚明和麦迪指定两套战术可以在比赛中轮流使用，前几节分着上场，到最后一节两人同时上，这样即可以保证他们的体力，也可以让对手很难适应火箭的节奏和战术。当然这只是我个人观点，并不一定行得通。总之希望姚明刚快伤愈复出，希望姚麦联手共创火箭佳绩。\n\n","slug":"see-yaos-injury-after-the-rockets","published":1,"updated":"2016-08-12T16:01:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz92v006kxfynx64gqwrf","content":"<p>姚明受伤了，这是在几个星期以前的事了，没有姚明的火箭让我们看火箭的比赛总象少点什么。受伤前姚明曾差点连续四场比赛拿下30＋10的数据，但是火箭的战绩并不是很好。后来姚明伤了，这对喜欢火箭，喜欢姚明的人来说无疑事个不好的消息。麦迪的伤愈复出给火箭带来了希望，而且付出后的表现也是最好的证明，连续四场比赛打出30＋，还带领火箭取得五连胜的成绩，虽然今天在加时赛输给了森林狼。<br><a id=\"more\"></a><br>这样的情况引起了很多的争论，姚明在对时候战绩不好，而现在姚明受伤了反而取得了五连胜，网上也在激烈地讨论在姚明复出后以谁为核心的问题，甚至有些人对姚明的能力产生了怀疑的态度。作为一个中国人我是支持姚明的，我认为以谁为核心并不重要，关键是球队能够取得胜利，毕竟篮球是一个集体的运动。</p>\n<p>对于姚明复出后以谁为核心的问题我有一些个人的想法，何不分别针对姚明和麦迪指定两套战术可以在比赛中轮流使用，前几节分着上场，到最后一节两人同时上，这样即可以保证他们的体力，也可以让对手很难适应火箭的节奏和战术。当然这只是我个人观点，并不一定行得通。总之希望姚明刚快伤愈复出，希望姚麦联手共创火箭佳绩。</p>\n","excerpt":"<p>姚明受伤了，这是在几个星期以前的事了，没有姚明的火箭让我们看火箭的比赛总象少点什么。受伤前姚明曾差点连续四场比赛拿下30＋10的数据，但是火箭的战绩并不是很好。后来姚明伤了，这对喜欢火箭，喜欢姚明的人来说无疑事个不好的消息。麦迪的伤愈复出给火箭带来了希望，而且付出后的表现也是最好的证明，连续四场比赛打出30＋，还带领火箭取得五连胜的成绩，虽然今天在加时赛输给了森林狼。<br>","more":"<br>这样的情况引起了很多的争论，姚明在对时候战绩不好，而现在姚明受伤了反而取得了五连胜，网上也在激烈地讨论在姚明复出后以谁为核心的问题，甚至有些人对姚明的能力产生了怀疑的态度。作为一个中国人我是支持姚明的，我认为以谁为核心并不重要，关键是球队能够取得胜利，毕竟篮球是一个集体的运动。</p>\n<p>对于姚明复出后以谁为核心的问题我有一些个人的想法，何不分别针对姚明和麦迪指定两套战术可以在比赛中轮流使用，前几节分着上场，到最后一节两人同时上，这样即可以保证他们的体力，也可以让对手很难适应火箭的节奏和战术。当然这只是我个人观点，并不一定行得通。总之希望姚明刚快伤愈复出，希望姚麦联手共创火箭佳绩。</p>"},{"title":"Sql中分隔字串–>查询–>组合字串","date":"2008-03-17T16:00:00.000Z","_content":"\n最近在工作遇到一个数据库查询的问题，大概如下:表Table1中有字段No和Title，每一个No对应一个Title，表Table2中有NoAll字段，NoAll字段的value是No的组合，以逗号隔开，如”111,222,333″，现在要查询Table2，根据NoAll将其中的每一个No所对应的Title查询出来也以逗号分隔显示，如：”oec2003,oec2004,oec2004″。表定义如下：\n<!--more-->\n\n```\nCREATE TABLE Table1\n(\n    No VARCHAR(5),\n    Title VARCHAR(20)\n)\n\nCREATE TABLE Table2\n(\n    NoAll VARCHAR(100)\n)\n\nINSERT INTO Table1 VALUES('111','oec2003')\nINSERT INTO Table1 VALUES('222','oec2004')\nINSERT INTO Table1 VALUES('333','oec2005')\n\nINSERT INTO Table2 VALUES('111,222,333')\n```\n\n因为NoAll是用逗号分隔的，所以要查询其中的每一个No就要将NoAll进行拆分，就想到了写一个split函数，如下：\n\n```\nCREATE FUNCTION Split\n(\n    @SourceSql varchar(8000),\n    @StrSeprate varchar(10)\n)\nRETURNS @temp TABLE(F1 VARCHAR(100))\nAS\nBEGIN\n    DECLARE @i INT\n    SET @SourceSql=rtrim(ltrim(@SourceSql))\n    SET @i=charindex(@StrSeprate,@SourceSql)\n    WHILE @i>=1\n        BEGIN\n            INSERT @temp VALUES(left(@SourceSql,@i-1))\n            SET @SourceSql=substring(@SourceSql,@i+1,len(@SourceSql)-@i)\n            SET @i=charindex(@StrSeprate,@SourceSql)\n        END\n    IF @SourceSql<>''\n        INSERT @temp VALUES(@SourceSql)\n    RETURN\nEND\n```\n\n将NoAll拆分了后返回的是一个Table，Table中的每一行是一个No值，要查出每个No对应的Title就要遍历这个Table，首先想到的就是使用游标，在这里我也是将游标写在了一个函数里，如下：\n\n```\nCREATE FUNCTION GetTitle(@NoAll NVARCHAR(2000))\n    RETURNS NVARCHAR(2000)\nAS\nBEGIN\n    DECLARE @result VARCHAR(2000)\n    SET @result=''\n    DECLARE getTitle CURSOR\n    FOR\n    SELECT * FROM split(@NoAll,',')\n    OPEN getTitle\n\n    DECLARE @No SYSNAME\n\n    FETCH FROM getTitle INTO @No\n    WHILE @@fetch_status=0\n    BEGIN\n\n    SET @result=@result+(SELECT Title FROM Table1 WHERE No=@No)+','\n    FETCH FROM getTitle INTO @No\n    END\n    CLOSE getTitle\n    SET @result= substring(@result,0,len(@result))\n\n    DEALLOCATE getTitle\n\n    RETURN @result\nEND\n```\n\n最后执行下面语句出想要的结果,如下：\n\n```\nSELECT\n    NoAll,\n    dbo.GetTitle(No) AS TitleAll\nFROM\n    Table2\n```\n\n结果：\n\n![2010-12-30_150932](http://oec2003.qiniudn.com/2010-12-30_150932.gif)\n\n\n\n","source":"_posts/separate-strings-in-sql.md","raw":"---\ntitle: Sql中分隔字串–>查询–>组合字串\ndate: 2008-03-18\ncategories: [SqlServer]\ntags: [Sql,小技巧]\n---\n\n最近在工作遇到一个数据库查询的问题，大概如下:表Table1中有字段No和Title，每一个No对应一个Title，表Table2中有NoAll字段，NoAll字段的value是No的组合，以逗号隔开，如”111,222,333″，现在要查询Table2，根据NoAll将其中的每一个No所对应的Title查询出来也以逗号分隔显示，如：”oec2003,oec2004,oec2004″。表定义如下：\n<!--more-->\n\n```\nCREATE TABLE Table1\n(\n    No VARCHAR(5),\n    Title VARCHAR(20)\n)\n\nCREATE TABLE Table2\n(\n    NoAll VARCHAR(100)\n)\n\nINSERT INTO Table1 VALUES('111','oec2003')\nINSERT INTO Table1 VALUES('222','oec2004')\nINSERT INTO Table1 VALUES('333','oec2005')\n\nINSERT INTO Table2 VALUES('111,222,333')\n```\n\n因为NoAll是用逗号分隔的，所以要查询其中的每一个No就要将NoAll进行拆分，就想到了写一个split函数，如下：\n\n```\nCREATE FUNCTION Split\n(\n    @SourceSql varchar(8000),\n    @StrSeprate varchar(10)\n)\nRETURNS @temp TABLE(F1 VARCHAR(100))\nAS\nBEGIN\n    DECLARE @i INT\n    SET @SourceSql=rtrim(ltrim(@SourceSql))\n    SET @i=charindex(@StrSeprate,@SourceSql)\n    WHILE @i>=1\n        BEGIN\n            INSERT @temp VALUES(left(@SourceSql,@i-1))\n            SET @SourceSql=substring(@SourceSql,@i+1,len(@SourceSql)-@i)\n            SET @i=charindex(@StrSeprate,@SourceSql)\n        END\n    IF @SourceSql<>''\n        INSERT @temp VALUES(@SourceSql)\n    RETURN\nEND\n```\n\n将NoAll拆分了后返回的是一个Table，Table中的每一行是一个No值，要查出每个No对应的Title就要遍历这个Table，首先想到的就是使用游标，在这里我也是将游标写在了一个函数里，如下：\n\n```\nCREATE FUNCTION GetTitle(@NoAll NVARCHAR(2000))\n    RETURNS NVARCHAR(2000)\nAS\nBEGIN\n    DECLARE @result VARCHAR(2000)\n    SET @result=''\n    DECLARE getTitle CURSOR\n    FOR\n    SELECT * FROM split(@NoAll,',')\n    OPEN getTitle\n\n    DECLARE @No SYSNAME\n\n    FETCH FROM getTitle INTO @No\n    WHILE @@fetch_status=0\n    BEGIN\n\n    SET @result=@result+(SELECT Title FROM Table1 WHERE No=@No)+','\n    FETCH FROM getTitle INTO @No\n    END\n    CLOSE getTitle\n    SET @result= substring(@result,0,len(@result))\n\n    DEALLOCATE getTitle\n\n    RETURN @result\nEND\n```\n\n最后执行下面语句出想要的结果,如下：\n\n```\nSELECT\n    NoAll,\n    dbo.GetTitle(No) AS TitleAll\nFROM\n    Table2\n```\n\n结果：\n\n![2010-12-30_150932](http://oec2003.qiniudn.com/2010-12-30_150932.gif)\n\n\n\n","slug":"separate-strings-in-sql","published":1,"updated":"2016-08-16T14:47:38.000Z","_id":"cirxkz92z006nxfynvzvs379x","comments":1,"layout":"post","photos":[],"link":"","content":"<p>最近在工作遇到一个数据库查询的问题，大概如下:表Table1中有字段No和Title，每一个No对应一个Title，表Table2中有NoAll字段，NoAll字段的value是No的组合，以逗号隔开，如”111,222,333″，现在要查询Table2，根据NoAll将其中的每一个No所对应的Title查询出来也以逗号分隔显示，如：”oec2003,oec2004,oec2004″。表定义如下：<br><a id=\"more\"></a></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Table1</div><div class=\"line\">(</div><div class=\"line\">    <span class=\"keyword\">No</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">5</span>),</div><div class=\"line\">    Title <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">20</span>)</div><div class=\"line\">)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Table2</div><div class=\"line\">(</div><div class=\"line\">    NoAll <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>)</div><div class=\"line\">)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> Table1 <span class=\"keyword\">VALUES</span>(<span class=\"string\">'111'</span>,<span class=\"string\">'oec2003'</span>)</div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> Table1 <span class=\"keyword\">VALUES</span>(<span class=\"string\">'222'</span>,<span class=\"string\">'oec2004'</span>)</div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> Table1 <span class=\"keyword\">VALUES</span>(<span class=\"string\">'333'</span>,<span class=\"string\">'oec2005'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> Table2 <span class=\"keyword\">VALUES</span>(<span class=\"string\">'111,222,333'</span>)</div></pre></td></tr></table></figure>\n<p>因为NoAll是用逗号分隔的，所以要查询其中的每一个No就要将NoAll进行拆分，就想到了写一个split函数，如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">FUNCTION</span> <span class=\"keyword\">Split</span></div><div class=\"line\">(</div><div class=\"line\">    @SourceSql <span class=\"built_in\">varchar</span>(<span class=\"number\">8000</span>),</div><div class=\"line\">    @StrSeprate <span class=\"built_in\">varchar</span>(<span class=\"number\">10</span>)</div><div class=\"line\">)</div><div class=\"line\"><span class=\"keyword\">RETURNS</span> @temp <span class=\"keyword\">TABLE</span>(F1 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>))</div><div class=\"line\"><span class=\"keyword\">AS</span></div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">    <span class=\"keyword\">DECLARE</span> @i <span class=\"built_in\">INT</span></div><div class=\"line\">    <span class=\"keyword\">SET</span> @SourceSql=<span class=\"keyword\">rtrim</span>(<span class=\"keyword\">ltrim</span>(@SourceSql))</div><div class=\"line\">    <span class=\"keyword\">SET</span> @i=<span class=\"keyword\">charindex</span>(@StrSeprate,@SourceSql)</div><div class=\"line\">    <span class=\"keyword\">WHILE</span> @i&gt;=<span class=\"number\">1</span></div><div class=\"line\">        <span class=\"keyword\">BEGIN</span></div><div class=\"line\">            <span class=\"keyword\">INSERT</span> @temp <span class=\"keyword\">VALUES</span>(<span class=\"keyword\">left</span>(@SourceSql,@i<span class=\"number\">-1</span>))</div><div class=\"line\">            <span class=\"keyword\">SET</span> @SourceSql=<span class=\"keyword\">substring</span>(@SourceSql,@i+<span class=\"number\">1</span>,<span class=\"keyword\">len</span>(@SourceSql)-@i)</div><div class=\"line\">            <span class=\"keyword\">SET</span> @i=<span class=\"keyword\">charindex</span>(@StrSeprate,@SourceSql)</div><div class=\"line\">        <span class=\"keyword\">END</span></div><div class=\"line\">    <span class=\"keyword\">IF</span> @SourceSql&lt;&gt;<span class=\"string\">''</span></div><div class=\"line\">        <span class=\"keyword\">INSERT</span> @temp <span class=\"keyword\">VALUES</span>(@SourceSql)</div><div class=\"line\">    <span class=\"keyword\">RETURN</span></div><div class=\"line\"><span class=\"keyword\">END</span></div></pre></td></tr></table></figure>\n<p>将NoAll拆分了后返回的是一个Table，Table中的每一行是一个No值，要查出每个No对应的Title就要遍历这个Table，首先想到的就是使用游标，在这里我也是将游标写在了一个函数里，如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">FUNCTION</span> GetTitle(@NoAll <span class=\"keyword\">NVARCHAR</span>(<span class=\"number\">2000</span>))</div><div class=\"line\">    <span class=\"keyword\">RETURNS</span> <span class=\"keyword\">NVARCHAR</span>(<span class=\"number\">2000</span>)</div><div class=\"line\"><span class=\"keyword\">AS</span></div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">    <span class=\"keyword\">DECLARE</span> @<span class=\"keyword\">result</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">2000</span>)</div><div class=\"line\">    <span class=\"keyword\">SET</span> @<span class=\"keyword\">result</span>=<span class=\"string\">''</span></div><div class=\"line\">    <span class=\"keyword\">DECLARE</span> getTitle <span class=\"keyword\">CURSOR</span></div><div class=\"line\">    <span class=\"keyword\">FOR</span></div><div class=\"line\">    <span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">split</span>(@NoAll,<span class=\"string\">','</span>)</div><div class=\"line\">    <span class=\"keyword\">OPEN</span> getTitle</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">DECLARE</span> @<span class=\"keyword\">No</span> SYSNAME</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">FETCH</span> <span class=\"keyword\">FROM</span> getTitle <span class=\"keyword\">INTO</span> @<span class=\"keyword\">No</span></div><div class=\"line\">    <span class=\"keyword\">WHILE</span> @@fetch_status=<span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">BEGIN</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">SET</span> @<span class=\"keyword\">result</span>=@<span class=\"keyword\">result</span>+(<span class=\"keyword\">SELECT</span> Title <span class=\"keyword\">FROM</span> Table1 <span class=\"keyword\">WHERE</span> <span class=\"keyword\">No</span>=@<span class=\"keyword\">No</span>)+<span class=\"string\">','</span></div><div class=\"line\">    <span class=\"keyword\">FETCH</span> <span class=\"keyword\">FROM</span> getTitle <span class=\"keyword\">INTO</span> @<span class=\"keyword\">No</span></div><div class=\"line\">    <span class=\"keyword\">END</span></div><div class=\"line\">    <span class=\"keyword\">CLOSE</span> getTitle</div><div class=\"line\">    <span class=\"keyword\">SET</span> @<span class=\"keyword\">result</span>= <span class=\"keyword\">substring</span>(@<span class=\"keyword\">result</span>,<span class=\"number\">0</span>,<span class=\"keyword\">len</span>(@<span class=\"keyword\">result</span>))</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">DEALLOCATE</span> getTitle</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">RETURN</span> @<span class=\"keyword\">result</span></div><div class=\"line\"><span class=\"keyword\">END</span></div></pre></td></tr></table></figure>\n<p>最后执行下面语句出想要的结果,如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">SELECT</span></div><div class=\"line\">    NoAll,</div><div class=\"line\">    dbo.GetTitle(<span class=\"keyword\">No</span>) <span class=\"keyword\">AS</span> TitleAll</div><div class=\"line\"><span class=\"keyword\">FROM</span></div><div class=\"line\">    Table2</div></pre></td></tr></table></figure>\n<p>结果：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_150932.gif\" alt=\"2010-12-30_150932\"></p>\n","excerpt":"<p>最近在工作遇到一个数据库查询的问题，大概如下:表Table1中有字段No和Title，每一个No对应一个Title，表Table2中有NoAll字段，NoAll字段的value是No的组合，以逗号隔开，如”111,222,333″，现在要查询Table2，根据NoAll将其中的每一个No所对应的Title查询出来也以逗号分隔显示，如：”oec2003,oec2004,oec2004″。表定义如下：<br>","more":"</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Table1</div><div class=\"line\">(</div><div class=\"line\">    <span class=\"keyword\">No</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">5</span>),</div><div class=\"line\">    Title <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">20</span>)</div><div class=\"line\">)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Table2</div><div class=\"line\">(</div><div class=\"line\">    NoAll <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>)</div><div class=\"line\">)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> Table1 <span class=\"keyword\">VALUES</span>(<span class=\"string\">'111'</span>,<span class=\"string\">'oec2003'</span>)</div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> Table1 <span class=\"keyword\">VALUES</span>(<span class=\"string\">'222'</span>,<span class=\"string\">'oec2004'</span>)</div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> Table1 <span class=\"keyword\">VALUES</span>(<span class=\"string\">'333'</span>,<span class=\"string\">'oec2005'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> Table2 <span class=\"keyword\">VALUES</span>(<span class=\"string\">'111,222,333'</span>)</div></pre></td></tr></table></figure>\n<p>因为NoAll是用逗号分隔的，所以要查询其中的每一个No就要将NoAll进行拆分，就想到了写一个split函数，如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">FUNCTION</span> <span class=\"keyword\">Split</span></div><div class=\"line\">(</div><div class=\"line\">    @SourceSql <span class=\"built_in\">varchar</span>(<span class=\"number\">8000</span>),</div><div class=\"line\">    @StrSeprate <span class=\"built_in\">varchar</span>(<span class=\"number\">10</span>)</div><div class=\"line\">)</div><div class=\"line\"><span class=\"keyword\">RETURNS</span> @temp <span class=\"keyword\">TABLE</span>(F1 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>))</div><div class=\"line\"><span class=\"keyword\">AS</span></div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">    <span class=\"keyword\">DECLARE</span> @i <span class=\"built_in\">INT</span></div><div class=\"line\">    <span class=\"keyword\">SET</span> @SourceSql=<span class=\"keyword\">rtrim</span>(<span class=\"keyword\">ltrim</span>(@SourceSql))</div><div class=\"line\">    <span class=\"keyword\">SET</span> @i=<span class=\"keyword\">charindex</span>(@StrSeprate,@SourceSql)</div><div class=\"line\">    <span class=\"keyword\">WHILE</span> @i&gt;=<span class=\"number\">1</span></div><div class=\"line\">        <span class=\"keyword\">BEGIN</span></div><div class=\"line\">            <span class=\"keyword\">INSERT</span> @temp <span class=\"keyword\">VALUES</span>(<span class=\"keyword\">left</span>(@SourceSql,@i<span class=\"number\">-1</span>))</div><div class=\"line\">            <span class=\"keyword\">SET</span> @SourceSql=<span class=\"keyword\">substring</span>(@SourceSql,@i+<span class=\"number\">1</span>,<span class=\"keyword\">len</span>(@SourceSql)-@i)</div><div class=\"line\">            <span class=\"keyword\">SET</span> @i=<span class=\"keyword\">charindex</span>(@StrSeprate,@SourceSql)</div><div class=\"line\">        <span class=\"keyword\">END</span></div><div class=\"line\">    <span class=\"keyword\">IF</span> @SourceSql&lt;&gt;<span class=\"string\">''</span></div><div class=\"line\">        <span class=\"keyword\">INSERT</span> @temp <span class=\"keyword\">VALUES</span>(@SourceSql)</div><div class=\"line\">    <span class=\"keyword\">RETURN</span></div><div class=\"line\"><span class=\"keyword\">END</span></div></pre></td></tr></table></figure>\n<p>将NoAll拆分了后返回的是一个Table，Table中的每一行是一个No值，要查出每个No对应的Title就要遍历这个Table，首先想到的就是使用游标，在这里我也是将游标写在了一个函数里，如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">FUNCTION</span> GetTitle(@NoAll <span class=\"keyword\">NVARCHAR</span>(<span class=\"number\">2000</span>))</div><div class=\"line\">    <span class=\"keyword\">RETURNS</span> <span class=\"keyword\">NVARCHAR</span>(<span class=\"number\">2000</span>)</div><div class=\"line\"><span class=\"keyword\">AS</span></div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">    <span class=\"keyword\">DECLARE</span> @<span class=\"keyword\">result</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">2000</span>)</div><div class=\"line\">    <span class=\"keyword\">SET</span> @<span class=\"keyword\">result</span>=<span class=\"string\">''</span></div><div class=\"line\">    <span class=\"keyword\">DECLARE</span> getTitle <span class=\"keyword\">CURSOR</span></div><div class=\"line\">    <span class=\"keyword\">FOR</span></div><div class=\"line\">    <span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> <span class=\"keyword\">split</span>(@NoAll,<span class=\"string\">','</span>)</div><div class=\"line\">    <span class=\"keyword\">OPEN</span> getTitle</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">DECLARE</span> @<span class=\"keyword\">No</span> SYSNAME</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">FETCH</span> <span class=\"keyword\">FROM</span> getTitle <span class=\"keyword\">INTO</span> @<span class=\"keyword\">No</span></div><div class=\"line\">    <span class=\"keyword\">WHILE</span> @@fetch_status=<span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">BEGIN</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">SET</span> @<span class=\"keyword\">result</span>=@<span class=\"keyword\">result</span>+(<span class=\"keyword\">SELECT</span> Title <span class=\"keyword\">FROM</span> Table1 <span class=\"keyword\">WHERE</span> <span class=\"keyword\">No</span>=@<span class=\"keyword\">No</span>)+<span class=\"string\">','</span></div><div class=\"line\">    <span class=\"keyword\">FETCH</span> <span class=\"keyword\">FROM</span> getTitle <span class=\"keyword\">INTO</span> @<span class=\"keyword\">No</span></div><div class=\"line\">    <span class=\"keyword\">END</span></div><div class=\"line\">    <span class=\"keyword\">CLOSE</span> getTitle</div><div class=\"line\">    <span class=\"keyword\">SET</span> @<span class=\"keyword\">result</span>= <span class=\"keyword\">substring</span>(@<span class=\"keyword\">result</span>,<span class=\"number\">0</span>,<span class=\"keyword\">len</span>(@<span class=\"keyword\">result</span>))</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">DEALLOCATE</span> getTitle</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">RETURN</span> @<span class=\"keyword\">result</span></div><div class=\"line\"><span class=\"keyword\">END</span></div></pre></td></tr></table></figure>\n<p>最后执行下面语句出想要的结果,如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">SELECT</span></div><div class=\"line\">    NoAll,</div><div class=\"line\">    dbo.GetTitle(<span class=\"keyword\">No</span>) <span class=\"keyword\">AS</span> TitleAll</div><div class=\"line\"><span class=\"keyword\">FROM</span></div><div class=\"line\">    Table2</div></pre></td></tr></table></figure>\n<p>结果：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_150932.gif\" alt=\"2010-12-30_150932\"></p>"},{"title":"几个不同类型无刷新联动例子","date":"2007-11-29T16:00:00.000Z","_content":"\n## Iframe实现无刷新联动\n\niframe的无刷新其实是局部刷新，状态栏的滚动条还是会滚动，只是页面不会闪烁，这是一种比较老的技术了，在处理的数据两大的时候会比较慢，在本例中需要两个页面：oec2003index.aspx和oec2003frame.asapx,oec2003index.aspx用来显示界面，其中有一个iframe标记，指向oec2003frame.aspx页用来显示结果\n<!--more-->\n\n### oec2003index.aspx前台代码\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"oec2003Index.aspx.cs\" Inherits=\"_Default\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head id=\"Head1\" runat=\"server\">\n    <title>无标题页</title>\n\n    <script type=\"text/javascript\">\n        function Query() {\n            var ddlpro = document.getElementById('ddlPro');\n            var pro = ddlpro.options[ddlpro.selectedIndex].innerText;\n            if (pro != \"\") {\n                document.getElementById(\"iframe1\").src = \"oec2003frame.aspx?Pro=\" + pro;\n            }\n        }\n\n    </script>\n\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\">\n    <div>\n        <table border=\"1\" cellpadding=\"3\" cellspacing=\"0\" width=\"600px\">\n            <tr>\n                <td colspan=\"2\" align=\"center\">\n                    Iframe实现局部刷新\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    省份名称:\n                </td>\n                <td>\n                    <select id=\"ddlPro\" style=\"width: 201px\">\n                        <option value=\"湖北\">湖北</option>\n                        <option value=\"河北\">河北</option>\n                        <option value=\"广东\">广东</option>\n                        <option value=\"河南\">河南</option>\n                    </select>\n                    <input id=\"Button1\" type=\"button\" value=\"查询\" onclick=\"Query()\" />\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    显示城市列表\n                </td>\n                <td>\n                    <iframe src=\"oec2003frame.aspx\" style=\"text-align: center\" id=\"iframe1\" width=\"100%\"\n                        height=\"100%\" frameborder=\"0\" scrolling=\"no\" />\n                </td>\n            </tr>\n        </table>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n### oec2003frame.aspx的前台代码：\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"oec2003frame.aspx.cs\" Inherits=\"myframe\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\nhttp://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head id=\"Head1\" runat=\"server\">\n    <title>无标题页</title>\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\">\n    <div>\n        <asp:DropDownList ID=\"ddlCity\" runat=\"server\" Width=\"179px\">\n        </asp:DropDownList>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n### oec2003frame.aspx后台代码：\n\n```\nusing System;\nusing System.Data;\nusing System.Configuration;\nusing System.Collections;\nusing System.Web;\nusing System.Web.Security;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\nusing System.Web.UI.HtmlControls;\n\npublic partial class myframe : System.Web.UI.Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        string pro = Request.QueryString[\"pro\"];\n        switch (pro)\n        {\n            case \"湖北\":\n                this.ddlCity.Items.Clear();\n                this.ddlCity.Items.Add(\"武汉\");\n                this.ddlCity.Items.Add(\"黄冈\");\n                this.ddlCity.Items.Add(\"黄石\");\n                this.ddlCity.Items.Add(\"襄樊\");\n                break;\n            case \"河北\":\n                this.ddlCity.Items.Clear();\n                this.ddlCity.Items.Add(\"石家庄\");\n                this.ddlCity.Items.Add(\"唐山\");\n                this.ddlCity.Items.Add(\"承德\");\n                this.ddlCity.Items.Add(\"邯郸\");\n                break;\n            case \"广东\":\n                this.ddlCity.Items.Clear();\n                this.ddlCity.Items.Add(\"广州\");\n                this.ddlCity.Items.Add(\"佛山\");\n                this.ddlCity.Items.Add(\"深圳\");\n                this.ddlCity.Items.Add(\"珠海\");\n                break;\n            case \"河南\":\n                this.ddlCity.Items.Clear();\n                this.ddlCity.Items.Add(\"郑州\");\n                this.ddlCity.Items.Add(\"新乡\");\n                this.ddlCity.Items.Add(\"安阳\");\n                this.ddlCity.Items.Add(\"信阳\");\n                break;\n        }\n    }\n}\n```\n\n## Javascript无刷新联动\n\n### 前台页面代码：\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"oec2003index.aspx.cs\"\n Inherits=\"jacascript_Default\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head id=\"Head1\" runat=\"server\">\n    <title>无标题页</title>\n\n    <script type=\"text/javascript\">\n        function FillData(strcity) {\n\n            document.getElementById(\"ddlCity\").options.length = 0;\n            var indexofcity;\n            var city;\n            while (strcity.length > 0) {\n                indexofcity = strcity.indexOf(\",\");\n                if (indexofcity > 0) {\n                    city = strcity.substring(0, indexofcity);\n\n                    strcity = strcity.substring(indexofcity + 1);\n                    document.getElementById(\"ddlCity\").add(new Option(city, city));\n                }\n                else {\n                    document.getElementById(\"ddlCity\").add(new Option(strcity, strcity));\n                    break;\n                }\n\n            }\n        }\n    </script>\n\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\">\n    <div>\n        <table width=\"700px\" border=\"1\" cellpadding=\"5\" cellspacing=\"0\">\n            <tr>\n                <td colspan=\"2\" align=\"center\">\n                    脚本方法实现刷新\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    选择省份:\n                </td>\n                <td>\n                    <select id=\"ddlPro\" style=\"width: 201px\">\n                        <option value=\"湖北\">湖北</option>\n                        <option value=\"河北\">河北</option>\n                        <option value=\"广东\">广东</option>\n                        <option value=\"河南\">河南</option>\n                    </select>\n                    <input id=\"btnQuery\" type=\"button\" value=\" 查询\" onclick=\"City()\" />\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    城市:\n                </td>\n                <td>\n                    <asp:DropDownList ID=\"ddlCity\" runat=\"server\" Width=\"201px\">\n                    </asp:DropDownList>\n                </td>\n            </tr>\n        </table>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n### 后台代码：\n\n```\nusing System;\nusing System.Data;\nusing System.Configuration;\nusing System.Collections;\nusing System.Web;\nusing System.Web.Security;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\nusing System.Web.UI.HtmlControls;\nusing System.Text;\n\npublic partial class jacascript_Default : System.Web.UI.Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        StringBuilder myscript = new StringBuilder();\n        myscript.Append(\"function City() {\\n\");\n        myscript.Append(\"var ddlpro=document.getElementById('ddlPro');\\n\");\n        myscript.Append(\"var pro=ddlpro.options[ddlpro.selectedIndex].innerText;\\n\");\n        //myscript.Append(\"var pro=document.getElementById('txtPro').value;\\n\");\n        myscript.Append(\"switch(pro) { \\n\");\n        myscript.Append(\"case '湖北':\\n\");\n        myscript.Append(\"FillData('\" + GetCityStr(\"湖北\") + \"');\\n\");\n        myscript.Append(\"break;\\n\");\n        myscript.Append(\"case '河北':\\n\");\n        myscript.Append(\"FillData('\" + GetCityStr(\"河北\") + \"');\\n\");\n        myscript.Append(\"break;\\n\");\n        myscript.Append(\"case '广东':\\n\");\n        myscript.Append(\"FillData('\" + GetCityStr(\"广东\") + \"');\\n\");\n        myscript.Append(\"break;\\n\");\n        myscript.Append(\"case '河南':\\n\");\n        myscript.Append(\"FillData('\" + GetCityStr(\"河南\") + \"');\\n\");\n        myscript.Append(\"break;}\\n\");\n        myscript.Append(\"}\\n\");\n\n        Page.ClientScript.RegisterClientScriptBlock(typeof(string), \"city\", myscript.ToString(), true);\n\n    }\n\n    private string GetCityStr(string pro)\n    {\n        string city = \"\";\n        switch (pro)\n        {\n            case \"湖北\":\n                city = \"武汉,黄冈,黄石,襄樊\";\n                break;\n            case \"河北\":\n                city = \"石家庄,唐山,承德,邯郸\";\n                break;\n            case \"广东\":\n                city = \"广州,佛山,深圳,珠海\";\n                break;\n            case \"河南\":\n                city = \"郑州,新乡,安阳,信阳\";\n                break;\n        }\n        return city;\n    }\n}\n```\n\n## CallBack无刷新联动\n\n### 前台代码：\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"oec2003index.aspx.cs\"\nInherits=\"callback_Default\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head id=\"Head1\" runat=\"server\">\n    <title>无标题页</title>\n\n    <script type=\"text/javascript\">\n         function FillData()\n         {\n             var ddlpro=document.getElementById('ddlPro');\n             var pro=ddlpro.options[ddlpro.selectedIndex].value;\n             <% =ClientScript.GetCallbackEventReference(this,\"pro\",\"FillDll\",null) %>\n         } \n\n        function FillDll(strcity)\n        {\n            document.getElementById(\"ddlCity\").options.length=0;\n            var indexofcity;\n            var city;\n            while(strcity.length>0)\n            {\n                indexofcity=strcity.indexOf(\",\");\n                if(indexofcity>0)\n                {\n                    city=strcity.substring(0,indexofcity);\n                    strcity=strcity.substring(indexofcity+1);\n                    document.getElementById(\"ddlCity\").add(new Option(city,city));\n                }\n                else\n                {\n                    document.getElementById(\"ddlCity\").add(new Option(strcity,strcity));\n                    break;\n                }\n            }\n        }\n    </script>\n\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\">\n    <div>\n        <table width=\"700px\" border=\"1\" cellpadding=\"5\" cellspacing=\"0\">\n            <tr>\n                <td colspan=\"2\" align=\"center\">\n                    callback方法实现刷新\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    选择省份:\n                </td>\n                <td>\n                    <select id=\"ddlPro\" style=\"width: 200px\">\n                        <option value=\"湖北\">湖北</option>\n                        <option value=\"河北\">河北</option>\n                        <option value=\"广东\">广东</option>\n                        <option value=\"河南\">河南</option>\n                    </select>\n                    <input id=\"btnQuery\" type=\"button\" value=\" 查询\" onclick=\"FillData()\" />\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    城市:\n                </td>\n                <td>\n                    <asp:DropDownList ID=\"ddlCity\" runat=\"server\" Width=\"201px\">\n                    </asp:DropDownList>\n                </td>\n            </tr>\n        </table>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n### 后台代码：\n\n```\nusing System;\nusing System.Data;\nusing System.Configuration;\nusing System.Collections;\nusing System.Web;\nusing System.Web.Security;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\nusing System.Web.UI.HtmlControls; \n\npublic partial class callback_Default : System.Web.UI.Page,ICallbackEventHandler\n{\n private string _data;\n protected void Page_Load(object sender, EventArgs e)\n { \n\n } \n\n //ICallbackEventHandler 成员\n}\n```\n\n## Ajax无刷新联动\n\n该例子也要用到两个页面：oec203index.aspx和oec2003datapage.aspx. oec2003datapage.aspx主要用来回送要显示的数据\n\n### oec2003.aspx页面前台代码：\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"oec2003index.aspx.cs\"\nInherits=\"ajax_Default\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head id=\"Head1\" runat=\"server\">\n    <title>无标题页</title>\n\n    <script type=\"text/javascript\">\n        var xmlhttp;\n        function getData() {\n            var ddlpro = document.getElementById(\"ddlPro\");\n            var pro = ddlpro.options[ddlpro.selectedIndex].innerText;\n            xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\n            xmlhttp.onreadystatechange = statechange;\n            xmlhttp.Open(\"GET\", \"oec2003datapage.aspx?pro=\" + pro, true);\n            xmlhttp.Send();\n        }\n\n        function statechange() {\n            if (xmlhttp.readystate == 4) {\n                if (xmlhttp.status == 200) {\n                    FillData(xmlhttp.responseText);\n                }\n            }\n        }\n        function FillData(strcity) {\n            document.getElementById(\"ddlCity\").options.length = 0;\n            var indexofcity;\n            var city;\n            while (strcity.length > 0) {\n                indexofcity = strcity.indexOf(\",\");\n                if (indexofcity > 0) {\n                    city = strcity.substring(0, indexofcity);\n                    strcity = strcity.substring(indexofcity + 1);\n                    document.getElementById(\"ddlCity\").add(new Option(city, city));\n                }\n                else {\n                    document.getElementById(\"ddlCity\").add(new Option(strcity, strcity));\n                    break;\n                }\n            }\n        }\n    </script>\n\n</head>\n<body>\n    <form id=\"form1\" runat=\"server\">\n    <div>\n        <table width=\"700px\" border=\"1\" cellpadding=\"5\" cellspacing=\"0\">\n            <tr>\n                <td colspan=\"2\" align=\"center\">\n                    ajax方法实现刷新\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    选择省份:\n                </td>\n                <td>\n                    <select id=\"ddlPro\" style=\"width: 201px\">\n                        <option value=\"湖北\">湖北</option>\n                        <option value=\"河北\">河北</option>\n                        <option value=\"广东\">广东</option>\n                        <option value=\"河南\">河南</option>\n                    </select>\n                    <input id=\"btnQuery\" type=\"button\" value=\" 查询\" onclick=\"getData()\" />\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    城市:\n                </td>\n                <td>\n                    <asp:DropDownList ID=\"ddlCity\" runat=\"server\" Width=\"201px\">\n                    </asp:DropDownList>\n                </td>\n            </tr>\n        </table>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n### oec2003datapage.aspx后台代码：\n\n```\nusing System;\nusing System.Data;\nusing System.Configuration;\nusing System.Collections;\nusing System.Web;\nusing System.Web.Security;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\nusing System.Web.UI.HtmlControls;\n\npublic partial class ajax_datapage : System.Web.UI.Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        string pro = Request.QueryString[\"pro\"];\n        Response.Clear();\n        switch (pro)\n        {\n            case \"湖北\":\n                Response.Write(\"武汉,黄冈,黄石,襄樊\");\n                break;\n            case \"河北\":\n                Response.Write(\"石家庄,唐山,承德,邯郸\");\n                break;\n            case \"广东\":\n                Response.Write(\"广州,佛山,深圳,珠海\");\n                break;\n            case \"河南\":\n                Response.Write(\"郑州,新乡,安阳,信阳\");\n                break;\n        }\n    }\n}\n```\n\n","source":"_posts/several-different-types-without-refresh-linkage-example.md","raw":"---\ntitle: 几个不同类型无刷新联动例子\ndate: 2007-11-30\ncategories: [Asp.Net Ajax]\ntags: [Ajax, AspNet, 无刷新联动]\n---\n\n## Iframe实现无刷新联动\n\niframe的无刷新其实是局部刷新，状态栏的滚动条还是会滚动，只是页面不会闪烁，这是一种比较老的技术了，在处理的数据两大的时候会比较慢，在本例中需要两个页面：oec2003index.aspx和oec2003frame.asapx,oec2003index.aspx用来显示界面，其中有一个iframe标记，指向oec2003frame.aspx页用来显示结果\n<!--more-->\n\n### oec2003index.aspx前台代码\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"oec2003Index.aspx.cs\" Inherits=\"_Default\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head id=\"Head1\" runat=\"server\">\n    <title>无标题页</title>\n\n    <script type=\"text/javascript\">\n        function Query() {\n            var ddlpro = document.getElementById('ddlPro');\n            var pro = ddlpro.options[ddlpro.selectedIndex].innerText;\n            if (pro != \"\") {\n                document.getElementById(\"iframe1\").src = \"oec2003frame.aspx?Pro=\" + pro;\n            }\n        }\n\n    </script>\n\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\">\n    <div>\n        <table border=\"1\" cellpadding=\"3\" cellspacing=\"0\" width=\"600px\">\n            <tr>\n                <td colspan=\"2\" align=\"center\">\n                    Iframe实现局部刷新\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    省份名称:\n                </td>\n                <td>\n                    <select id=\"ddlPro\" style=\"width: 201px\">\n                        <option value=\"湖北\">湖北</option>\n                        <option value=\"河北\">河北</option>\n                        <option value=\"广东\">广东</option>\n                        <option value=\"河南\">河南</option>\n                    </select>\n                    <input id=\"Button1\" type=\"button\" value=\"查询\" onclick=\"Query()\" />\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    显示城市列表\n                </td>\n                <td>\n                    <iframe src=\"oec2003frame.aspx\" style=\"text-align: center\" id=\"iframe1\" width=\"100%\"\n                        height=\"100%\" frameborder=\"0\" scrolling=\"no\" />\n                </td>\n            </tr>\n        </table>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n### oec2003frame.aspx的前台代码：\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"oec2003frame.aspx.cs\" Inherits=\"myframe\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\nhttp://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head id=\"Head1\" runat=\"server\">\n    <title>无标题页</title>\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\">\n    <div>\n        <asp:DropDownList ID=\"ddlCity\" runat=\"server\" Width=\"179px\">\n        </asp:DropDownList>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n### oec2003frame.aspx后台代码：\n\n```\nusing System;\nusing System.Data;\nusing System.Configuration;\nusing System.Collections;\nusing System.Web;\nusing System.Web.Security;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\nusing System.Web.UI.HtmlControls;\n\npublic partial class myframe : System.Web.UI.Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        string pro = Request.QueryString[\"pro\"];\n        switch (pro)\n        {\n            case \"湖北\":\n                this.ddlCity.Items.Clear();\n                this.ddlCity.Items.Add(\"武汉\");\n                this.ddlCity.Items.Add(\"黄冈\");\n                this.ddlCity.Items.Add(\"黄石\");\n                this.ddlCity.Items.Add(\"襄樊\");\n                break;\n            case \"河北\":\n                this.ddlCity.Items.Clear();\n                this.ddlCity.Items.Add(\"石家庄\");\n                this.ddlCity.Items.Add(\"唐山\");\n                this.ddlCity.Items.Add(\"承德\");\n                this.ddlCity.Items.Add(\"邯郸\");\n                break;\n            case \"广东\":\n                this.ddlCity.Items.Clear();\n                this.ddlCity.Items.Add(\"广州\");\n                this.ddlCity.Items.Add(\"佛山\");\n                this.ddlCity.Items.Add(\"深圳\");\n                this.ddlCity.Items.Add(\"珠海\");\n                break;\n            case \"河南\":\n                this.ddlCity.Items.Clear();\n                this.ddlCity.Items.Add(\"郑州\");\n                this.ddlCity.Items.Add(\"新乡\");\n                this.ddlCity.Items.Add(\"安阳\");\n                this.ddlCity.Items.Add(\"信阳\");\n                break;\n        }\n    }\n}\n```\n\n## Javascript无刷新联动\n\n### 前台页面代码：\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"oec2003index.aspx.cs\"\n Inherits=\"jacascript_Default\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head id=\"Head1\" runat=\"server\">\n    <title>无标题页</title>\n\n    <script type=\"text/javascript\">\n        function FillData(strcity) {\n\n            document.getElementById(\"ddlCity\").options.length = 0;\n            var indexofcity;\n            var city;\n            while (strcity.length > 0) {\n                indexofcity = strcity.indexOf(\",\");\n                if (indexofcity > 0) {\n                    city = strcity.substring(0, indexofcity);\n\n                    strcity = strcity.substring(indexofcity + 1);\n                    document.getElementById(\"ddlCity\").add(new Option(city, city));\n                }\n                else {\n                    document.getElementById(\"ddlCity\").add(new Option(strcity, strcity));\n                    break;\n                }\n\n            }\n        }\n    </script>\n\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\">\n    <div>\n        <table width=\"700px\" border=\"1\" cellpadding=\"5\" cellspacing=\"0\">\n            <tr>\n                <td colspan=\"2\" align=\"center\">\n                    脚本方法实现刷新\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    选择省份:\n                </td>\n                <td>\n                    <select id=\"ddlPro\" style=\"width: 201px\">\n                        <option value=\"湖北\">湖北</option>\n                        <option value=\"河北\">河北</option>\n                        <option value=\"广东\">广东</option>\n                        <option value=\"河南\">河南</option>\n                    </select>\n                    <input id=\"btnQuery\" type=\"button\" value=\" 查询\" onclick=\"City()\" />\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    城市:\n                </td>\n                <td>\n                    <asp:DropDownList ID=\"ddlCity\" runat=\"server\" Width=\"201px\">\n                    </asp:DropDownList>\n                </td>\n            </tr>\n        </table>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n### 后台代码：\n\n```\nusing System;\nusing System.Data;\nusing System.Configuration;\nusing System.Collections;\nusing System.Web;\nusing System.Web.Security;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\nusing System.Web.UI.HtmlControls;\nusing System.Text;\n\npublic partial class jacascript_Default : System.Web.UI.Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        StringBuilder myscript = new StringBuilder();\n        myscript.Append(\"function City() {\\n\");\n        myscript.Append(\"var ddlpro=document.getElementById('ddlPro');\\n\");\n        myscript.Append(\"var pro=ddlpro.options[ddlpro.selectedIndex].innerText;\\n\");\n        //myscript.Append(\"var pro=document.getElementById('txtPro').value;\\n\");\n        myscript.Append(\"switch(pro) { \\n\");\n        myscript.Append(\"case '湖北':\\n\");\n        myscript.Append(\"FillData('\" + GetCityStr(\"湖北\") + \"');\\n\");\n        myscript.Append(\"break;\\n\");\n        myscript.Append(\"case '河北':\\n\");\n        myscript.Append(\"FillData('\" + GetCityStr(\"河北\") + \"');\\n\");\n        myscript.Append(\"break;\\n\");\n        myscript.Append(\"case '广东':\\n\");\n        myscript.Append(\"FillData('\" + GetCityStr(\"广东\") + \"');\\n\");\n        myscript.Append(\"break;\\n\");\n        myscript.Append(\"case '河南':\\n\");\n        myscript.Append(\"FillData('\" + GetCityStr(\"河南\") + \"');\\n\");\n        myscript.Append(\"break;}\\n\");\n        myscript.Append(\"}\\n\");\n\n        Page.ClientScript.RegisterClientScriptBlock(typeof(string), \"city\", myscript.ToString(), true);\n\n    }\n\n    private string GetCityStr(string pro)\n    {\n        string city = \"\";\n        switch (pro)\n        {\n            case \"湖北\":\n                city = \"武汉,黄冈,黄石,襄樊\";\n                break;\n            case \"河北\":\n                city = \"石家庄,唐山,承德,邯郸\";\n                break;\n            case \"广东\":\n                city = \"广州,佛山,深圳,珠海\";\n                break;\n            case \"河南\":\n                city = \"郑州,新乡,安阳,信阳\";\n                break;\n        }\n        return city;\n    }\n}\n```\n\n## CallBack无刷新联动\n\n### 前台代码：\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"oec2003index.aspx.cs\"\nInherits=\"callback_Default\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head id=\"Head1\" runat=\"server\">\n    <title>无标题页</title>\n\n    <script type=\"text/javascript\">\n         function FillData()\n         {\n             var ddlpro=document.getElementById('ddlPro');\n             var pro=ddlpro.options[ddlpro.selectedIndex].value;\n             <% =ClientScript.GetCallbackEventReference(this,\"pro\",\"FillDll\",null) %>\n         } \n\n        function FillDll(strcity)\n        {\n            document.getElementById(\"ddlCity\").options.length=0;\n            var indexofcity;\n            var city;\n            while(strcity.length>0)\n            {\n                indexofcity=strcity.indexOf(\",\");\n                if(indexofcity>0)\n                {\n                    city=strcity.substring(0,indexofcity);\n                    strcity=strcity.substring(indexofcity+1);\n                    document.getElementById(\"ddlCity\").add(new Option(city,city));\n                }\n                else\n                {\n                    document.getElementById(\"ddlCity\").add(new Option(strcity,strcity));\n                    break;\n                }\n            }\n        }\n    </script>\n\n</head>\n<body>\n    <form id=\"form2\" runat=\"server\">\n    <div>\n        <table width=\"700px\" border=\"1\" cellpadding=\"5\" cellspacing=\"0\">\n            <tr>\n                <td colspan=\"2\" align=\"center\">\n                    callback方法实现刷新\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    选择省份:\n                </td>\n                <td>\n                    <select id=\"ddlPro\" style=\"width: 200px\">\n                        <option value=\"湖北\">湖北</option>\n                        <option value=\"河北\">河北</option>\n                        <option value=\"广东\">广东</option>\n                        <option value=\"河南\">河南</option>\n                    </select>\n                    <input id=\"btnQuery\" type=\"button\" value=\" 查询\" onclick=\"FillData()\" />\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    城市:\n                </td>\n                <td>\n                    <asp:DropDownList ID=\"ddlCity\" runat=\"server\" Width=\"201px\">\n                    </asp:DropDownList>\n                </td>\n            </tr>\n        </table>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n### 后台代码：\n\n```\nusing System;\nusing System.Data;\nusing System.Configuration;\nusing System.Collections;\nusing System.Web;\nusing System.Web.Security;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\nusing System.Web.UI.HtmlControls; \n\npublic partial class callback_Default : System.Web.UI.Page,ICallbackEventHandler\n{\n private string _data;\n protected void Page_Load(object sender, EventArgs e)\n { \n\n } \n\n //ICallbackEventHandler 成员\n}\n```\n\n## Ajax无刷新联动\n\n该例子也要用到两个页面：oec203index.aspx和oec2003datapage.aspx. oec2003datapage.aspx主要用来回送要显示的数据\n\n### oec2003.aspx页面前台代码：\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"oec2003index.aspx.cs\"\nInherits=\"ajax_Default\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head id=\"Head1\" runat=\"server\">\n    <title>无标题页</title>\n\n    <script type=\"text/javascript\">\n        var xmlhttp;\n        function getData() {\n            var ddlpro = document.getElementById(\"ddlPro\");\n            var pro = ddlpro.options[ddlpro.selectedIndex].innerText;\n            xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\n            xmlhttp.onreadystatechange = statechange;\n            xmlhttp.Open(\"GET\", \"oec2003datapage.aspx?pro=\" + pro, true);\n            xmlhttp.Send();\n        }\n\n        function statechange() {\n            if (xmlhttp.readystate == 4) {\n                if (xmlhttp.status == 200) {\n                    FillData(xmlhttp.responseText);\n                }\n            }\n        }\n        function FillData(strcity) {\n            document.getElementById(\"ddlCity\").options.length = 0;\n            var indexofcity;\n            var city;\n            while (strcity.length > 0) {\n                indexofcity = strcity.indexOf(\",\");\n                if (indexofcity > 0) {\n                    city = strcity.substring(0, indexofcity);\n                    strcity = strcity.substring(indexofcity + 1);\n                    document.getElementById(\"ddlCity\").add(new Option(city, city));\n                }\n                else {\n                    document.getElementById(\"ddlCity\").add(new Option(strcity, strcity));\n                    break;\n                }\n            }\n        }\n    </script>\n\n</head>\n<body>\n    <form id=\"form1\" runat=\"server\">\n    <div>\n        <table width=\"700px\" border=\"1\" cellpadding=\"5\" cellspacing=\"0\">\n            <tr>\n                <td colspan=\"2\" align=\"center\">\n                    ajax方法实现刷新\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    选择省份:\n                </td>\n                <td>\n                    <select id=\"ddlPro\" style=\"width: 201px\">\n                        <option value=\"湖北\">湖北</option>\n                        <option value=\"河北\">河北</option>\n                        <option value=\"广东\">广东</option>\n                        <option value=\"河南\">河南</option>\n                    </select>\n                    <input id=\"btnQuery\" type=\"button\" value=\" 查询\" onclick=\"getData()\" />\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    城市:\n                </td>\n                <td>\n                    <asp:DropDownList ID=\"ddlCity\" runat=\"server\" Width=\"201px\">\n                    </asp:DropDownList>\n                </td>\n            </tr>\n        </table>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n### oec2003datapage.aspx后台代码：\n\n```\nusing System;\nusing System.Data;\nusing System.Configuration;\nusing System.Collections;\nusing System.Web;\nusing System.Web.Security;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\nusing System.Web.UI.HtmlControls;\n\npublic partial class ajax_datapage : System.Web.UI.Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        string pro = Request.QueryString[\"pro\"];\n        Response.Clear();\n        switch (pro)\n        {\n            case \"湖北\":\n                Response.Write(\"武汉,黄冈,黄石,襄樊\");\n                break;\n            case \"河北\":\n                Response.Write(\"石家庄,唐山,承德,邯郸\");\n                break;\n            case \"广东\":\n                Response.Write(\"广州,佛山,深圳,珠海\");\n                break;\n            case \"河南\":\n                Response.Write(\"郑州,新乡,安阳,信阳\");\n                break;\n        }\n    }\n}\n```\n\n","slug":"several-different-types-without-refresh-linkage-example","published":1,"updated":"2016-08-13T14:01:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz931006rxfyn4hfoywal","content":"<h2 id=\"Iframe实现无刷新联动\"><a href=\"#Iframe实现无刷新联动\" class=\"headerlink\" title=\"Iframe实现无刷新联动\"></a>Iframe实现无刷新联动</h2><p>iframe的无刷新其实是局部刷新，状态栏的滚动条还是会滚动，只是页面不会闪烁，这是一种比较老的技术了，在处理的数据两大的时候会比较慢，在本例中需要两个页面：oec2003index.aspx和oec2003frame.asapx,oec2003index.aspx用来显示界面，其中有一个iframe标记，指向oec2003frame.aspx页用来显示结果<br><a id=\"more\"></a></p>\n<h3 id=\"oec2003index-aspx前台代码\"><a href=\"#oec2003index-aspx前台代码\" class=\"headerlink\" title=\"oec2003index.aspx前台代码\"></a>oec2003index.aspx前台代码</h3><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"oec2003Index.aspx.cs\"</span> Inherits=<span class=\"string\">\"_Default\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"</span></div><div class=\"line\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>无标题页<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Query</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> ddlpro = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'ddlPro'</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> pro = ddlpro.options[ddlpro.selectedIndex].innerText;</div><div class=\"line\">            <span class=\"keyword\">if</span> (pro != <span class=\"string\">\"\"</span>) &#123;</div><div class=\"line\">                <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"iframe1\"</span>).src = <span class=\"string\">\"oec2003frame.aspx?Pro=\"</span> + pro;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">cellpadding</span>=<span class=\"string\">\"3\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"600px\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span>&gt;</span></div><div class=\"line\">                    Iframe实现局部刷新</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    省份名称:</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ddlPro\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 201px\"</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"湖北\"</span>&gt;</span>湖北<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"河北\"</span>&gt;</span>河北<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"广东\"</span>&gt;</span>广东<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"河南\"</span>&gt;</span>河南<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Button1\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"查询\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"Query()\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    显示城市列表</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">\"oec2003frame.aspx\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"text-align: center\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"iframe1\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span></span></div><div class=\"line\">                        <span class=\"attr\">height</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">scrolling</span>=<span class=\"string\">\"no\"</span> /&gt;</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"oec2003frame-aspx的前台代码：\"><a href=\"#oec2003frame-aspx的前台代码：\" class=\"headerlink\" title=\"oec2003frame.aspx的前台代码：\"></a>oec2003frame.aspx的前台代码：</h3><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"oec2003frame.aspx.cs\"</span> Inherits=<span class=\"string\">\"myframe\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"</span></div><div class=\"line\">http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>无标题页<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">asp:DropDownList</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"ddlCity\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"179px\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">asp:DropDownList</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"oec2003frame-aspx后台代码：\"><a href=\"#oec2003frame-aspx后台代码：\" class=\"headerlink\" title=\"oec2003frame.aspx后台代码：\"></a>oec2003frame.aspx后台代码：</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\">using System;</div><div class=\"line\">using System.Data;</div><div class=\"line\">using System.Configuration;</div><div class=\"line\">using System.Collections;</div><div class=\"line\">using System.Web;</div><div class=\"line\">using System.Web.Security;</div><div class=\"line\">using System.Web.UI;</div><div class=\"line\">using System.Web.UI.WebControls;</div><div class=\"line\">using System.Web.UI.WebControls.WebParts;</div><div class=\"line\">using System.Web.UI.HtmlControls;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">myframe</span> : <span class=\"type\">System.Web.UI.Page</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">protected</span> void Page_Load(<span class=\"keyword\">object</span> sender, EventArgs e)</div><div class=\"line\">    &#123;</div><div class=\"line\">        string pro = Request.QueryString[<span class=\"string\">\"pro\"</span>];</div><div class=\"line\">        switch (pro)</div><div class=\"line\">        &#123;</div><div class=\"line\">            case <span class=\"string\">\"湖北\"</span>:</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Clear();</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"武汉\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"黄冈\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"黄石\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"襄樊\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            case <span class=\"string\">\"河北\"</span>:</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Clear();</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"石家庄\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"唐山\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"承德\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"邯郸\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            case <span class=\"string\">\"广东\"</span>:</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Clear();</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"广州\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"佛山\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"深圳\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"珠海\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            case <span class=\"string\">\"河南\"</span>:</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Clear();</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"郑州\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"新乡\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"安阳\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"信阳\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Javascript无刷新联动\"><a href=\"#Javascript无刷新联动\" class=\"headerlink\" title=\"Javascript无刷新联动\"></a>Javascript无刷新联动</h2><h3 id=\"前台页面代码：\"><a href=\"#前台页面代码：\" class=\"headerlink\" title=\"前台页面代码：\"></a>前台页面代码：</h3><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"oec2003index.aspx.cs\"</span></span></div><div class=\"line\"> Inherits=<span class=\"string\">\"jacascript_Default\"</span> <span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"</span></div><div class=\"line\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>无标题页<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">FillData</span>(<span class=\"params\">strcity</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).options.length = <span class=\"number\">0</span>;</div><div class=\"line\">            <span class=\"keyword\">var</span> indexofcity;</div><div class=\"line\">            <span class=\"keyword\">var</span> city;</div><div class=\"line\">            <span class=\"keyword\">while</span> (strcity.length &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                indexofcity = strcity.indexOf(<span class=\"string\">\",\"</span>);</div><div class=\"line\">                <span class=\"keyword\">if</span> (indexofcity &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                    city = strcity.substring(<span class=\"number\">0</span>, indexofcity);</div><div class=\"line\"></div><div class=\"line\">                    strcity = strcity.substring(indexofcity + <span class=\"number\">1</span>);</div><div class=\"line\">                    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).add(<span class=\"keyword\">new</span> Option(city, city));</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).add(<span class=\"keyword\">new</span> Option(strcity, strcity));</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">width</span>=<span class=\"string\">\"700px\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">cellpadding</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"0\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span>&gt;</span></div><div class=\"line\">                    脚本方法实现刷新</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    选择省份:</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ddlPro\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 201px\"</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"湖北\"</span>&gt;</span>湖北<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"河北\"</span>&gt;</span>河北<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"广东\"</span>&gt;</span>广东<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"河南\"</span>&gt;</span>河南<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btnQuery\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\" 查询\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"City()\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    城市:</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">asp:DropDownList</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"ddlCity\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"201px\"</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">asp:DropDownList</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"后台代码：\"><a href=\"#后台代码：\" class=\"headerlink\" title=\"后台代码：\"></a>后台代码：</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Data;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Configuration;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Security;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls.WebParts;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.HtmlControls;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> jacascript_Default : System.Web.UI.Page</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        StringBuilder myscript = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"function City() &#123;\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"var ddlpro=document.getElementById('ddlPro');\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"var pro=ddlpro.options[ddlpro.selectedIndex].innerText;\\n\"</span>);</div><div class=\"line\">        <span class=\"comment\">//myscript.Append(\"var pro=document.getElementById('txtPro').value;\\n\");</span></div><div class=\"line\">        myscript.Append(<span class=\"string\">\"switch(pro) &#123; \\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"case '湖北':\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"FillData('\"</span> + GetCityStr(<span class=\"string\">\"湖北\"</span>) + <span class=\"string\">\"');\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"break;\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"case '河北':\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"FillData('\"</span> + GetCityStr(<span class=\"string\">\"河北\"</span>) + <span class=\"string\">\"');\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"break;\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"case '广东':\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"FillData('\"</span> + GetCityStr(<span class=\"string\">\"广东\"</span>) + <span class=\"string\">\"');\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"break;\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"case '河南':\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"FillData('\"</span> + GetCityStr(<span class=\"string\">\"河南\"</span>) + <span class=\"string\">\"');\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"break;&#125;\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"&#125;\\n\"</span>);</div><div class=\"line\"></div><div class=\"line\">        Page.ClientScript.RegisterClientScriptBlock(typeof(<span class=\"built_in\">string</span>), <span class=\"string\">\"city\"</span>, myscript.ToString(), <span class=\"literal\">true</span>);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"built_in\">string</span> <span class=\"title\">GetCityStr</span><span class=\"params\">(<span class=\"built_in\">string</span> pro)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">string</span> city = <span class=\"string\">\"\"</span>;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (pro)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"湖北\"</span>:</div><div class=\"line\">                city = <span class=\"string\">\"武汉,黄冈,黄石,襄樊\"</span>;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"河北\"</span>:</div><div class=\"line\">                city = <span class=\"string\">\"石家庄,唐山,承德,邯郸\"</span>;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"广东\"</span>:</div><div class=\"line\">                city = <span class=\"string\">\"广州,佛山,深圳,珠海\"</span>;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"河南\"</span>:</div><div class=\"line\">                city = <span class=\"string\">\"郑州,新乡,安阳,信阳\"</span>;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> city;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"CallBack无刷新联动\"><a href=\"#CallBack无刷新联动\" class=\"headerlink\" title=\"CallBack无刷新联动\"></a>CallBack无刷新联动</h2><h3 id=\"前台代码：\"><a href=\"#前台代码：\" class=\"headerlink\" title=\"前台代码：\"></a>前台代码：</h3><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"oec2003index.aspx.cs\"</span></span></div><div class=\"line\">Inherits=<span class=\"string\">\"callback_Default\"</span> <span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"</span></div><div class=\"line\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>无标题页<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">FillData</span>(<span class=\"params\"></span>)</span></div><div class=\"line\">         &#123;</div><div class=\"line\">             <span class=\"keyword\">var</span> ddlpro=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'ddlPro'</span>);</div><div class=\"line\">             <span class=\"keyword\">var</span> pro=ddlpro.options[ddlpro.selectedIndex].value;</div><div class=\"line\">             <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> =ClientScript.GetCallbackEventReference(this,<span class=\"string\">\"pro\"</span>,<span class=\"string\">\"FillDll\"</span>,null) </span><span class=\"xml\"><span class=\"javascript\">%&gt;</span></span></div><div class=\"line\">         &#125; </div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">FillDll</span>(<span class=\"params\">strcity</span>)</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).options.length=<span class=\"number\">0</span>;</div><div class=\"line\">            <span class=\"keyword\">var</span> indexofcity;</div><div class=\"line\">            <span class=\"keyword\">var</span> city;</div><div class=\"line\">            <span class=\"keyword\">while</span>(strcity.length&gt;<span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                indexofcity=strcity.indexOf(<span class=\"string\">\",\"</span>);</div><div class=\"line\">                <span class=\"keyword\">if</span>(indexofcity&gt;<span class=\"number\">0</span>)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    city=strcity.substring(<span class=\"number\">0</span>,indexofcity);</div><div class=\"line\">                    strcity=strcity.substring(indexofcity+<span class=\"number\">1</span>);</div><div class=\"line\">                    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).add(<span class=\"keyword\">new</span> Option(city,city));</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">else</span></div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).add(<span class=\"keyword\">new</span> Option(strcity,strcity));</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">width</span>=<span class=\"string\">\"700px\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">cellpadding</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"0\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span>&gt;</span></div><div class=\"line\">                    callback方法实现刷新</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    选择省份:</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ddlPro\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 200px\"</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"湖北\"</span>&gt;</span>湖北<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"河北\"</span>&gt;</span>河北<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"广东\"</span>&gt;</span>广东<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"河南\"</span>&gt;</span>河南<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btnQuery\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\" 查询\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"FillData()\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    城市:</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">asp:DropDownList</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"ddlCity\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"201px\"</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">asp:DropDownList</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"后台代码：-1\"><a href=\"#后台代码：-1\" class=\"headerlink\" title=\"后台代码：\"></a>后台代码：</h3><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Data;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Configuration;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Collections;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Web.Security;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Web.UI;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Web.UI.WebControls;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Web.UI.WebControls.WebParts;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Web.UI.HtmlControls; </div><div class=\"line\"></div><div class=\"line\">public partial class callback_Default : <span class=\"keyword\">System</span>.Web.UI.Page,ICallbackEventHandler</div><div class=\"line\">&#123;</div><div class=\"line\"> private string _data;</div><div class=\"line\"> protected void Page_Load(object sender, EventArgs e)</div><div class=\"line\"> &#123; </div><div class=\"line\"></div><div class=\"line\"> &#125; </div><div class=\"line\"></div><div class=\"line\"> <span class=\"comment\">//ICallbackEventHandler 成员</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Ajax无刷新联动\"><a href=\"#Ajax无刷新联动\" class=\"headerlink\" title=\"Ajax无刷新联动\"></a>Ajax无刷新联动</h2><p>该例子也要用到两个页面：oec203index.aspx和oec2003datapage.aspx. oec2003datapage.aspx主要用来回送要显示的数据</p>\n<h3 id=\"oec2003-aspx页面前台代码：\"><a href=\"#oec2003-aspx页面前台代码：\" class=\"headerlink\" title=\"oec2003.aspx页面前台代码：\"></a>oec2003.aspx页面前台代码：</h3><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"oec2003index.aspx.cs\"</span></span></div><div class=\"line\">Inherits=<span class=\"string\">\"ajax_Default\"</span> <span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"</span></div><div class=\"line\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>无标题页<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">        <span class=\"keyword\">var</span> xmlhttp;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getData</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> ddlpro = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlPro\"</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> pro = ddlpro.options[ddlpro.selectedIndex].innerText;</div><div class=\"line\">            xmlhttp = <span class=\"keyword\">new</span> ActiveXObject(<span class=\"string\">\"Microsoft.XMLHTTP\"</span>);</div><div class=\"line\">            xmlhttp.onreadystatechange = statechange;</div><div class=\"line\">            xmlhttp.Open(<span class=\"string\">\"GET\"</span>, <span class=\"string\">\"oec2003datapage.aspx?pro=\"</span> + pro, <span class=\"literal\">true</span>);</div><div class=\"line\">            xmlhttp.Send();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">statechange</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (xmlhttp.readystate == <span class=\"number\">4</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (xmlhttp.status == <span class=\"number\">200</span>) &#123;</div><div class=\"line\">                    FillData(xmlhttp.responseText);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">FillData</span>(<span class=\"params\">strcity</span>) </span>&#123;</div><div class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).options.length = <span class=\"number\">0</span>;</div><div class=\"line\">            <span class=\"keyword\">var</span> indexofcity;</div><div class=\"line\">            <span class=\"keyword\">var</span> city;</div><div class=\"line\">            <span class=\"keyword\">while</span> (strcity.length &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                indexofcity = strcity.indexOf(<span class=\"string\">\",\"</span>);</div><div class=\"line\">                <span class=\"keyword\">if</span> (indexofcity &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                    city = strcity.substring(<span class=\"number\">0</span>, indexofcity);</div><div class=\"line\">                    strcity = strcity.substring(indexofcity + <span class=\"number\">1</span>);</div><div class=\"line\">                    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).add(<span class=\"keyword\">new</span> Option(city, city));</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).add(<span class=\"keyword\">new</span> Option(strcity, strcity));</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">width</span>=<span class=\"string\">\"700px\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">cellpadding</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"0\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span>&gt;</span></div><div class=\"line\">                    ajax方法实现刷新</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    选择省份:</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ddlPro\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 201px\"</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"湖北\"</span>&gt;</span>湖北<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"河北\"</span>&gt;</span>河北<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"广东\"</span>&gt;</span>广东<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"河南\"</span>&gt;</span>河南<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btnQuery\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\" 查询\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"getData()\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    城市:</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">asp:DropDownList</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"ddlCity\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"201px\"</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">asp:DropDownList</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"oec2003datapage-aspx后台代码：\"><a href=\"#oec2003datapage-aspx后台代码：\" class=\"headerlink\" title=\"oec2003datapage.aspx后台代码：\"></a>oec2003datapage.aspx后台代码：</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Data;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Configuration;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Security;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls.WebParts;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.HtmlControls;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> ajax_datapage : System.Web.UI.Page</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">string</span> pro = Request.QueryString[<span class=\"string\">\"pro\"</span>];</div><div class=\"line\">        Response.Clear();</div><div class=\"line\">        <span class=\"keyword\">switch</span> (pro)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"湖北\"</span>:</div><div class=\"line\">                Response.Write(<span class=\"string\">\"武汉,黄冈,黄石,襄樊\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"河北\"</span>:</div><div class=\"line\">                Response.Write(<span class=\"string\">\"石家庄,唐山,承德,邯郸\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"广东\"</span>:</div><div class=\"line\">                Response.Write(<span class=\"string\">\"广州,佛山,深圳,珠海\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"河南\"</span>:</div><div class=\"line\">                Response.Write(<span class=\"string\">\"郑州,新乡,安阳,信阳\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"<h2 id=\"Iframe实现无刷新联动\"><a href=\"#Iframe实现无刷新联动\" class=\"headerlink\" title=\"Iframe实现无刷新联动\"></a>Iframe实现无刷新联动</h2><p>iframe的无刷新其实是局部刷新，状态栏的滚动条还是会滚动，只是页面不会闪烁，这是一种比较老的技术了，在处理的数据两大的时候会比较慢，在本例中需要两个页面：oec2003index.aspx和oec2003frame.asapx,oec2003index.aspx用来显示界面，其中有一个iframe标记，指向oec2003frame.aspx页用来显示结果<br>","more":"</p>\n<h3 id=\"oec2003index-aspx前台代码\"><a href=\"#oec2003index-aspx前台代码\" class=\"headerlink\" title=\"oec2003index.aspx前台代码\"></a>oec2003index.aspx前台代码</h3><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"oec2003Index.aspx.cs\"</span> Inherits=<span class=\"string\">\"_Default\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"</div><div class=\"line\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>无标题页<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Query</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> ddlpro = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'ddlPro'</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> pro = ddlpro.options[ddlpro.selectedIndex].innerText;</div><div class=\"line\">            <span class=\"keyword\">if</span> (pro != <span class=\"string\">\"\"</span>) &#123;</div><div class=\"line\">                <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"iframe1\"</span>).src = <span class=\"string\">\"oec2003frame.aspx?Pro=\"</span> + pro;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">cellpadding</span>=<span class=\"string\">\"3\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"600px\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span>&gt;</span></div><div class=\"line\">                    Iframe实现局部刷新</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    省份名称:</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ddlPro\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 201px\"</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"湖北\"</span>&gt;</span>湖北<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"河北\"</span>&gt;</span>河北<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"广东\"</span>&gt;</span>广东<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"河南\"</span>&gt;</span>河南<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Button1\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"查询\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"Query()\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    显示城市列表</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">\"oec2003frame.aspx\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"text-align: center\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"iframe1\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span></div><div class=\"line\">                        <span class=\"attr\">height</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">scrolling</span>=<span class=\"string\">\"no\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<h3 id=\"oec2003frame-aspx的前台代码：\"><a href=\"#oec2003frame-aspx的前台代码：\" class=\"headerlink\" title=\"oec2003frame.aspx的前台代码：\"></a>oec2003frame.aspx的前台代码：</h3><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"oec2003frame.aspx.cs\"</span> Inherits=<span class=\"string\">\"myframe\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"</div><div class=\"line\">http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>无标题页<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">asp:DropDownList</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"ddlCity\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"179px\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">asp:DropDownList</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<h3 id=\"oec2003frame-aspx后台代码：\"><a href=\"#oec2003frame-aspx后台代码：\" class=\"headerlink\" title=\"oec2003frame.aspx后台代码：\"></a>oec2003frame.aspx后台代码：</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\">using System;</div><div class=\"line\">using System.Data;</div><div class=\"line\">using System.Configuration;</div><div class=\"line\">using System.Collections;</div><div class=\"line\">using System.Web;</div><div class=\"line\">using System.Web.Security;</div><div class=\"line\">using System.Web.UI;</div><div class=\"line\">using System.Web.UI.WebControls;</div><div class=\"line\">using System.Web.UI.WebControls.WebParts;</div><div class=\"line\">using System.Web.UI.HtmlControls;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">myframe</span> : <span class=\"type\">System.Web.UI.Page</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">protected</span> void Page_Load(<span class=\"keyword\">object</span> sender, EventArgs e)</div><div class=\"line\">    &#123;</div><div class=\"line\">        string pro = Request.QueryString[<span class=\"string\">\"pro\"</span>];</div><div class=\"line\">        switch (pro)</div><div class=\"line\">        &#123;</div><div class=\"line\">            case <span class=\"string\">\"湖北\"</span>:</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Clear();</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"武汉\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"黄冈\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"黄石\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"襄樊\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            case <span class=\"string\">\"河北\"</span>:</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Clear();</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"石家庄\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"唐山\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"承德\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"邯郸\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            case <span class=\"string\">\"广东\"</span>:</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Clear();</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"广州\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"佛山\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"深圳\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"珠海\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            case <span class=\"string\">\"河南\"</span>:</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Clear();</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"郑州\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"新乡\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"安阳\"</span>);</div><div class=\"line\">                <span class=\"keyword\">this</span>.ddlCity.Items.Add(<span class=\"string\">\"信阳\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Javascript无刷新联动\"><a href=\"#Javascript无刷新联动\" class=\"headerlink\" title=\"Javascript无刷新联动\"></a>Javascript无刷新联动</h2><h3 id=\"前台页面代码：\"><a href=\"#前台页面代码：\" class=\"headerlink\" title=\"前台页面代码：\"></a>前台页面代码：</h3><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"oec2003index.aspx.cs\"</span></div><div class=\"line\"> Inherits=<span class=\"string\">\"jacascript_Default\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"</div><div class=\"line\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>无标题页<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">FillData</span>(<span class=\"params\">strcity</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).options.length = <span class=\"number\">0</span>;</div><div class=\"line\">            <span class=\"keyword\">var</span> indexofcity;</div><div class=\"line\">            <span class=\"keyword\">var</span> city;</div><div class=\"line\">            <span class=\"keyword\">while</span> (strcity.length &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                indexofcity = strcity.indexOf(<span class=\"string\">\",\"</span>);</div><div class=\"line\">                <span class=\"keyword\">if</span> (indexofcity &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                    city = strcity.substring(<span class=\"number\">0</span>, indexofcity);</div><div class=\"line\"></div><div class=\"line\">                    strcity = strcity.substring(indexofcity + <span class=\"number\">1</span>);</div><div class=\"line\">                    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).add(<span class=\"keyword\">new</span> Option(city, city));</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).add(<span class=\"keyword\">new</span> Option(strcity, strcity));</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">width</span>=<span class=\"string\">\"700px\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">cellpadding</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"0\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span>&gt;</span></div><div class=\"line\">                    脚本方法实现刷新</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    选择省份:</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ddlPro\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 201px\"</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"湖北\"</span>&gt;</span>湖北<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"河北\"</span>&gt;</span>河北<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"广东\"</span>&gt;</span>广东<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"河南\"</span>&gt;</span>河南<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btnQuery\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\" 查询\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"City()\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    城市:</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">asp:DropDownList</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"ddlCity\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"201px\"</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">asp:DropDownList</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<h3 id=\"后台代码：\"><a href=\"#后台代码：\" class=\"headerlink\" title=\"后台代码：\"></a>后台代码：</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Data;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Configuration;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Security;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls.WebParts;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.HtmlControls;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> jacascript_Default : System.Web.UI.Page</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        StringBuilder myscript = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"function City() &#123;\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"var ddlpro=document.getElementById('ddlPro');\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"var pro=ddlpro.options[ddlpro.selectedIndex].innerText;\\n\"</span>);</div><div class=\"line\">        <span class=\"comment\">//myscript.Append(\"var pro=document.getElementById('txtPro').value;\\n\");</span></div><div class=\"line\">        myscript.Append(<span class=\"string\">\"switch(pro) &#123; \\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"case '湖北':\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"FillData('\"</span> + GetCityStr(<span class=\"string\">\"湖北\"</span>) + <span class=\"string\">\"');\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"break;\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"case '河北':\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"FillData('\"</span> + GetCityStr(<span class=\"string\">\"河北\"</span>) + <span class=\"string\">\"');\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"break;\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"case '广东':\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"FillData('\"</span> + GetCityStr(<span class=\"string\">\"广东\"</span>) + <span class=\"string\">\"');\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"break;\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"case '河南':\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"FillData('\"</span> + GetCityStr(<span class=\"string\">\"河南\"</span>) + <span class=\"string\">\"');\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"break;&#125;\\n\"</span>);</div><div class=\"line\">        myscript.Append(<span class=\"string\">\"&#125;\\n\"</span>);</div><div class=\"line\"></div><div class=\"line\">        Page.ClientScript.RegisterClientScriptBlock(typeof(<span class=\"built_in\">string</span>), <span class=\"string\">\"city\"</span>, myscript.ToString(), <span class=\"literal\">true</span>);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"built_in\">string</span> <span class=\"title\">GetCityStr</span><span class=\"params\">(<span class=\"built_in\">string</span> pro)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">string</span> city = <span class=\"string\">\"\"</span>;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (pro)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"湖北\"</span>:</div><div class=\"line\">                city = <span class=\"string\">\"武汉,黄冈,黄石,襄樊\"</span>;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"河北\"</span>:</div><div class=\"line\">                city = <span class=\"string\">\"石家庄,唐山,承德,邯郸\"</span>;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"广东\"</span>:</div><div class=\"line\">                city = <span class=\"string\">\"广州,佛山,深圳,珠海\"</span>;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"河南\"</span>:</div><div class=\"line\">                city = <span class=\"string\">\"郑州,新乡,安阳,信阳\"</span>;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> city;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"CallBack无刷新联动\"><a href=\"#CallBack无刷新联动\" class=\"headerlink\" title=\"CallBack无刷新联动\"></a>CallBack无刷新联动</h2><h3 id=\"前台代码：\"><a href=\"#前台代码：\" class=\"headerlink\" title=\"前台代码：\"></a>前台代码：</h3><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"oec2003index.aspx.cs\"</span></div><div class=\"line\">Inherits=<span class=\"string\">\"callback_Default\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"</div><div class=\"line\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>无标题页<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">FillData</span>(<span class=\"params\"></span>)</div><div class=\"line\">         </span>&#123;</div><div class=\"line\">             <span class=\"keyword\">var</span> ddlpro=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'ddlPro'</span>);</div><div class=\"line\">             <span class=\"keyword\">var</span> pro=ddlpro.options[ddlpro.selectedIndex].value;</div><div class=\"line\">             <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span></span></span><span class=\"ruby\"> =ClientScript.GetCallbackEventReference(this,<span class=\"string\">\"pro\"</span>,<span class=\"string\">\"FillDll\"</span>,null) </span><span class=\"xml\"><span class=\"javascript\">%&gt;</div><div class=\"line\">         &#125; </div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">FillDll</span>(<span class=\"params\">strcity</span>)</div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).options.length=<span class=\"number\">0</span>;</div><div class=\"line\">            <span class=\"keyword\">var</span> indexofcity;</div><div class=\"line\">            <span class=\"keyword\">var</span> city;</div><div class=\"line\">            <span class=\"keyword\">while</span>(strcity.length&gt;<span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                indexofcity=strcity.indexOf(<span class=\"string\">\",\"</span>);</div><div class=\"line\">                <span class=\"keyword\">if</span>(indexofcity&gt;<span class=\"number\">0</span>)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    city=strcity.substring(<span class=\"number\">0</span>,indexofcity);</div><div class=\"line\">                    strcity=strcity.substring(indexofcity+<span class=\"number\">1</span>);</div><div class=\"line\">                    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).add(<span class=\"keyword\">new</span> Option(city,city));</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">else</span></div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).add(<span class=\"keyword\">new</span> Option(strcity,strcity));</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">width</span>=<span class=\"string\">\"700px\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">cellpadding</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"0\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span>&gt;</span></div><div class=\"line\">                    callback方法实现刷新</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    选择省份:</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ddlPro\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 200px\"</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"湖北\"</span>&gt;</span>湖北<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"河北\"</span>&gt;</span>河北<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"广东\"</span>&gt;</span>广东<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"河南\"</span>&gt;</span>河南<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btnQuery\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\" 查询\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"FillData()\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    城市:</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">asp:DropDownList</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"ddlCity\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"201px\"</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">asp:DropDownList</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<h3 id=\"后台代码：-1\"><a href=\"#后台代码：-1\" class=\"headerlink\" title=\"后台代码：\"></a>后台代码：</h3><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Data;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Configuration;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Collections;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Web.Security;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Web.UI;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Web.UI.WebControls;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Web.UI.WebControls.WebParts;</div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">System</span>.Web.UI.HtmlControls; </div><div class=\"line\"></div><div class=\"line\">public partial class callback_Default : <span class=\"keyword\">System</span>.Web.UI.Page,ICallbackEventHandler</div><div class=\"line\">&#123;</div><div class=\"line\"> private string _data;</div><div class=\"line\"> protected void Page_Load(object sender, EventArgs e)</div><div class=\"line\"> &#123; </div><div class=\"line\"></div><div class=\"line\"> &#125; </div><div class=\"line\"></div><div class=\"line\"> <span class=\"comment\">//ICallbackEventHandler 成员</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Ajax无刷新联动\"><a href=\"#Ajax无刷新联动\" class=\"headerlink\" title=\"Ajax无刷新联动\"></a>Ajax无刷新联动</h2><p>该例子也要用到两个页面：oec203index.aspx和oec2003datapage.aspx. oec2003datapage.aspx主要用来回送要显示的数据</p>\n<h3 id=\"oec2003-aspx页面前台代码：\"><a href=\"#oec2003-aspx页面前台代码：\" class=\"headerlink\" title=\"oec2003.aspx页面前台代码：\"></a>oec2003.aspx页面前台代码：</h3><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"oec2003index.aspx.cs\"</span></div><div class=\"line\">Inherits=<span class=\"string\">\"ajax_Default\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"</div><div class=\"line\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>无标题页<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">        <span class=\"keyword\">var</span> xmlhttp;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getData</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> ddlpro = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlPro\"</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> pro = ddlpro.options[ddlpro.selectedIndex].innerText;</div><div class=\"line\">            xmlhttp = <span class=\"keyword\">new</span> ActiveXObject(<span class=\"string\">\"Microsoft.XMLHTTP\"</span>);</div><div class=\"line\">            xmlhttp.onreadystatechange = statechange;</div><div class=\"line\">            xmlhttp.Open(<span class=\"string\">\"GET\"</span>, <span class=\"string\">\"oec2003datapage.aspx?pro=\"</span> + pro, <span class=\"literal\">true</span>);</div><div class=\"line\">            xmlhttp.Send();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">statechange</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (xmlhttp.readystate == <span class=\"number\">4</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (xmlhttp.status == <span class=\"number\">200</span>) &#123;</div><div class=\"line\">                    FillData(xmlhttp.responseText);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">FillData</span>(<span class=\"params\">strcity</span>) </span>&#123;</div><div class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).options.length = <span class=\"number\">0</span>;</div><div class=\"line\">            <span class=\"keyword\">var</span> indexofcity;</div><div class=\"line\">            <span class=\"keyword\">var</span> city;</div><div class=\"line\">            <span class=\"keyword\">while</span> (strcity.length &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                indexofcity = strcity.indexOf(<span class=\"string\">\",\"</span>);</div><div class=\"line\">                <span class=\"keyword\">if</span> (indexofcity &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                    city = strcity.substring(<span class=\"number\">0</span>, indexofcity);</div><div class=\"line\">                    strcity = strcity.substring(indexofcity + <span class=\"number\">1</span>);</div><div class=\"line\">                    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).add(<span class=\"keyword\">new</span> Option(city, city));</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"ddlCity\"</span>).add(<span class=\"keyword\">new</span> Option(strcity, strcity));</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">width</span>=<span class=\"string\">\"700px\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">cellpadding</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"0\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span>&gt;</span></div><div class=\"line\">                    ajax方法实现刷新</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    选择省份:</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ddlPro\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 201px\"</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"湖北\"</span>&gt;</span>湖北<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"河北\"</span>&gt;</span>河北<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"广东\"</span>&gt;</span>广东<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"河南\"</span>&gt;</span>河南<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btnQuery\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\" 查询\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"getData()\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    城市:</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">asp:DropDownList</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"ddlCity\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"201px\"</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">asp:DropDownList</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<h3 id=\"oec2003datapage-aspx后台代码：\"><a href=\"#oec2003datapage-aspx后台代码：\" class=\"headerlink\" title=\"oec2003datapage.aspx后台代码：\"></a>oec2003datapage.aspx后台代码：</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Data;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Configuration;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Security;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls.WebParts;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.HtmlControls;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> ajax_datapage : System.Web.UI.Page</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">string</span> pro = Request.QueryString[<span class=\"string\">\"pro\"</span>];</div><div class=\"line\">        Response.Clear();</div><div class=\"line\">        <span class=\"keyword\">switch</span> (pro)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"湖北\"</span>:</div><div class=\"line\">                Response.Write(<span class=\"string\">\"武汉,黄冈,黄石,襄樊\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"河北\"</span>:</div><div class=\"line\">                Response.Write(<span class=\"string\">\"石家庄,唐山,承德,邯郸\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"广东\"</span>:</div><div class=\"line\">                Response.Write(<span class=\"string\">\"广州,佛山,深圳,珠海\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"河南\"</span>:</div><div class=\"line\">                Response.Write(<span class=\"string\">\"郑州,新乡,安阳,信阳\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"Asp.Net中水晶报表的简单使用","date":"2007-01-10T16:00:00.000Z","_content":"\nCrystal Reports是具有强大内容创建和集成功能的高效的报表技术，是第三方开发的报表工具，使用水晶报表我们可以更好地向用户展示数据。以前可以通过编程的方式将数据集中的数据进行处理后在windows应用程序或web应用程序中输出显示，但如果要做超出了基本格式化的一些工作如：求和、平均、多极汇总、制作图标等就会显得比较复杂，而水晶报表正好弥补了其中的不足。\n<!--more-->\n在windows应用程序和web应用程序中我们都可以使用水晶报表，不过在windows应用程序中的水晶报表要比web应用程序中的功能强大，可以很容易地实现打印和导出功能。在这儿只讨论一下在asp.net中水晶报表的一些简单使用。\n\n在asp.net中使用水晶报表专家，可以很快速地创建报表，虽然水晶报表是第三方开发的，但在vs2003中水晶报表已经成为了开发环境的一个组成部分。先做一个很简单的小例子。新建一个web应用程序，在页面上添加工具箱中web窗体下的Button控件，CrystalReportViewer控件（这个就是水晶报表控件）和html下的File Field控件。File Field控件可以让我们从本地选择一个文件，要想实现水晶报表的显示我们首先需要一个水晶报表文件，该文件的后缀为rpt，这个文件可以通过添加新项添加。现在假设已经有一个水晶报表文件，通过以下几步就可以在页面上显示。\n\n1 双击页面进入代码环境在page_load事件中添加如下代码：\n\n```\nif(Session[\"filename\"]!=null)\n{\n    CrystalReportViewer1.ReportSource = Session[\"filename\"].ToString();\n}\n```\n\n这段代码主要是将文件的名字保存在session里面在pageload事件中加以判断，避免在刷新页面的时候出现错误。\n\n2 在Button按钮的单击事件中添加以下代码：\n\n```\nstring strName = File1.PostedFile.FileName;\nif(strName.Trim()!=\"\")\n{\n    CrystalReportViewer1.ReportSource = strName;\n    Session[\"filename\"] = strName;\n}\n```\n\n然后按F5运行，选择一个已经做好的rpt文件，点击按钮就可以看见页面上显示的报表结果了。\n\n在整个过程中重要的还是水晶报表文件的建立，水晶报表的创建有pull和push两种模式，pull模式是直接指定数据库驱动然后组装这些数据，push模式需要自己写代码来连接数据库，并将它们传至报表，push模式比pull要更灵活。\n\n由于篇幅原因先说一下pull模式：\n\n在页面中添加一个rpt文件，这时会弹出一个对话框，选择作为空白报表然后点击确定。\n\n在右边的“字段资源管理器”中右键点击“数据库字段”选择“添加删除数据库”，会弹出数据库专家的对话框，选择可用数据源中的OLEDB(ADO)根据向导创建数据库的连接。\n\n建立好数据库连接后可以将数据库中的表加到报表中，然后就可以将我们要显示的字段总结拖到rpt文件中的详细资料中，并且在页眉会自动添加字段名，这个名字是可以根据自己的喜好更改的。\n\n这样一个很简单的报表就做好的，当然报表的功能远远不止这些，下面就该写代码了。\n\n1、首先要导入命名空间\n\n```\nusing CrystalDecisions.CrystalReports.Engine;\nusing CrystalDecisions.Shared;\n```\n\n2、命名空间导入后就要申明一个ReportDocument类的对象\n\n```\nReportDocument ReportDoc;\n```\n\n3、最后在pageload事件中加入下面代码就ok了\n\n```\nReportDoc = new ReportDocument();\nReportDoc.Load(Server.MapPath(\"CraystalReport.rpt\"));\nCrystalReportViewer1.ReportSource = ReportDoc;\n```\n\n按F5运行就可以看到结果，这只是最最简单的一个小例子，要了解水晶报表的强大功能还需要不断努力学习，在vs2003中rpt的界面非常傻瓜化，只要右击页面就可以插入狠多东西，如图片、图表、汇总等等，有待日后慢慢尝试了\n\n就写到这儿了，继续学习中………\n\n","source":"_posts/simple-to-use-aspnet-in-crystal-reports.md","raw":"---\ntitle: Asp.Net中水晶报表的简单使用\ndate: 2007-01-11\ncategories: [Asp.Net]\ntags: [AspNet,水晶报表]\n---\n\nCrystal Reports是具有强大内容创建和集成功能的高效的报表技术，是第三方开发的报表工具，使用水晶报表我们可以更好地向用户展示数据。以前可以通过编程的方式将数据集中的数据进行处理后在windows应用程序或web应用程序中输出显示，但如果要做超出了基本格式化的一些工作如：求和、平均、多极汇总、制作图标等就会显得比较复杂，而水晶报表正好弥补了其中的不足。\n<!--more-->\n在windows应用程序和web应用程序中我们都可以使用水晶报表，不过在windows应用程序中的水晶报表要比web应用程序中的功能强大，可以很容易地实现打印和导出功能。在这儿只讨论一下在asp.net中水晶报表的一些简单使用。\n\n在asp.net中使用水晶报表专家，可以很快速地创建报表，虽然水晶报表是第三方开发的，但在vs2003中水晶报表已经成为了开发环境的一个组成部分。先做一个很简单的小例子。新建一个web应用程序，在页面上添加工具箱中web窗体下的Button控件，CrystalReportViewer控件（这个就是水晶报表控件）和html下的File Field控件。File Field控件可以让我们从本地选择一个文件，要想实现水晶报表的显示我们首先需要一个水晶报表文件，该文件的后缀为rpt，这个文件可以通过添加新项添加。现在假设已经有一个水晶报表文件，通过以下几步就可以在页面上显示。\n\n1 双击页面进入代码环境在page_load事件中添加如下代码：\n\n```\nif(Session[\"filename\"]!=null)\n{\n    CrystalReportViewer1.ReportSource = Session[\"filename\"].ToString();\n}\n```\n\n这段代码主要是将文件的名字保存在session里面在pageload事件中加以判断，避免在刷新页面的时候出现错误。\n\n2 在Button按钮的单击事件中添加以下代码：\n\n```\nstring strName = File1.PostedFile.FileName;\nif(strName.Trim()!=\"\")\n{\n    CrystalReportViewer1.ReportSource = strName;\n    Session[\"filename\"] = strName;\n}\n```\n\n然后按F5运行，选择一个已经做好的rpt文件，点击按钮就可以看见页面上显示的报表结果了。\n\n在整个过程中重要的还是水晶报表文件的建立，水晶报表的创建有pull和push两种模式，pull模式是直接指定数据库驱动然后组装这些数据，push模式需要自己写代码来连接数据库，并将它们传至报表，push模式比pull要更灵活。\n\n由于篇幅原因先说一下pull模式：\n\n在页面中添加一个rpt文件，这时会弹出一个对话框，选择作为空白报表然后点击确定。\n\n在右边的“字段资源管理器”中右键点击“数据库字段”选择“添加删除数据库”，会弹出数据库专家的对话框，选择可用数据源中的OLEDB(ADO)根据向导创建数据库的连接。\n\n建立好数据库连接后可以将数据库中的表加到报表中，然后就可以将我们要显示的字段总结拖到rpt文件中的详细资料中，并且在页眉会自动添加字段名，这个名字是可以根据自己的喜好更改的。\n\n这样一个很简单的报表就做好的，当然报表的功能远远不止这些，下面就该写代码了。\n\n1、首先要导入命名空间\n\n```\nusing CrystalDecisions.CrystalReports.Engine;\nusing CrystalDecisions.Shared;\n```\n\n2、命名空间导入后就要申明一个ReportDocument类的对象\n\n```\nReportDocument ReportDoc;\n```\n\n3、最后在pageload事件中加入下面代码就ok了\n\n```\nReportDoc = new ReportDocument();\nReportDoc.Load(Server.MapPath(\"CraystalReport.rpt\"));\nCrystalReportViewer1.ReportSource = ReportDoc;\n```\n\n按F5运行就可以看到结果，这只是最最简单的一个小例子，要了解水晶报表的强大功能还需要不断努力学习，在vs2003中rpt的界面非常傻瓜化，只要右击页面就可以插入狠多东西，如图片、图表、汇总等等，有待日后慢慢尝试了\n\n就写到这儿了，继续学习中………\n\n","slug":"simple-to-use-aspnet-in-crystal-reports","published":1,"updated":"2016-08-12T16:05:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz933006vxfynvylm2yzo","content":"<p>Crystal Reports是具有强大内容创建和集成功能的高效的报表技术，是第三方开发的报表工具，使用水晶报表我们可以更好地向用户展示数据。以前可以通过编程的方式将数据集中的数据进行处理后在windows应用程序或web应用程序中输出显示，但如果要做超出了基本格式化的一些工作如：求和、平均、多极汇总、制作图标等就会显得比较复杂，而水晶报表正好弥补了其中的不足。<br><a id=\"more\"></a><br>在windows应用程序和web应用程序中我们都可以使用水晶报表，不过在windows应用程序中的水晶报表要比web应用程序中的功能强大，可以很容易地实现打印和导出功能。在这儿只讨论一下在asp.net中水晶报表的一些简单使用。</p>\n<p>在asp.net中使用水晶报表专家，可以很快速地创建报表，虽然水晶报表是第三方开发的，但在vs2003中水晶报表已经成为了开发环境的一个组成部分。先做一个很简单的小例子。新建一个web应用程序，在页面上添加工具箱中web窗体下的Button控件，CrystalReportViewer控件（这个就是水晶报表控件）和html下的File Field控件。File Field控件可以让我们从本地选择一个文件，要想实现水晶报表的显示我们首先需要一个水晶报表文件，该文件的后缀为rpt，这个文件可以通过添加新项添加。现在假设已经有一个水晶报表文件，通过以下几步就可以在页面上显示。</p>\n<p>1 双击页面进入代码环境在page_load事件中添加如下代码：</p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(Session[<span class=\"string\">\"filename\"</span>]!=<span class=\"literal\">null</span>)</div><div class=\"line\">&#123;</div><div class=\"line\">    CrystalReportViewer1.<span class=\"attr\">ReportSource</span> = Session[<span class=\"string\">\"filename\"</span>].ToString();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这段代码主要是将文件的名字保存在session里面在pageload事件中加以判断，避免在刷新页面的时候出现错误。</p>\n<p>2 在Button按钮的单击事件中添加以下代码：</p>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">string </span><span class=\"keyword\">strName </span>= File1.PostedFile.FileName<span class=\"comment\">;</span></div><div class=\"line\"><span class=\"symbol\">if</span>(<span class=\"keyword\">strName.Trim()!=\"\")</span></div><div class=\"line\">&#123;</div><div class=\"line\">    CrystalReportViewer1.ReportSource = <span class=\"keyword\">strName;</span></div><div class=\"line\">    Session[<span class=\"string\">\"filename\"</span>] = <span class=\"keyword\">strName;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>然后按F5运行，选择一个已经做好的rpt文件，点击按钮就可以看见页面上显示的报表结果了。</p>\n<p>在整个过程中重要的还是水晶报表文件的建立，水晶报表的创建有pull和push两种模式，pull模式是直接指定数据库驱动然后组装这些数据，push模式需要自己写代码来连接数据库，并将它们传至报表，push模式比pull要更灵活。</p>\n<p>由于篇幅原因先说一下pull模式：</p>\n<p>在页面中添加一个rpt文件，这时会弹出一个对话框，选择作为空白报表然后点击确定。</p>\n<p>在右边的“字段资源管理器”中右键点击“数据库字段”选择“添加删除数据库”，会弹出数据库专家的对话框，选择可用数据源中的OLEDB(ADO)根据向导创建数据库的连接。</p>\n<p>建立好数据库连接后可以将数据库中的表加到报表中，然后就可以将我们要显示的字段总结拖到rpt文件中的详细资料中，并且在页眉会自动添加字段名，这个名字是可以根据自己的喜好更改的。</p>\n<p>这样一个很简单的报表就做好的，当然报表的功能远远不止这些，下面就该写代码了。</p>\n<p>1、首先要导入命名空间</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">using</span> <span class=\"selector-tag\">CrystalDecisions</span><span class=\"selector-class\">.CrystalReports</span><span class=\"selector-class\">.Engine</span>;</div><div class=\"line\"><span class=\"selector-tag\">using</span> <span class=\"selector-tag\">CrystalDecisions</span><span class=\"selector-class\">.Shared</span>;</div></pre></td></tr></table></figure>\n<p>2、命名空间导入后就要申明一个ReportDocument类的对象</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ReportDocument ReportDoc<span class=\"comment\">;</span></div></pre></td></tr></table></figure>\n<p>3、最后在pageload事件中加入下面代码就ok了</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ReportDoc = new ReportDocument()<span class=\"comment\">;</span></div><div class=\"line\">ReportDoc.Load(Server.MapPath(<span class=\"string\">\"CraystalReport.rpt\"</span>))<span class=\"comment\">;</span></div><div class=\"line\">CrystalReportViewer1.ReportSource = ReportDoc<span class=\"comment\">;</span></div></pre></td></tr></table></figure>\n<p>按F5运行就可以看到结果，这只是最最简单的一个小例子，要了解水晶报表的强大功能还需要不断努力学习，在vs2003中rpt的界面非常傻瓜化，只要右击页面就可以插入狠多东西，如图片、图表、汇总等等，有待日后慢慢尝试了</p>\n<p>就写到这儿了，继续学习中………</p>\n","excerpt":"<p>Crystal Reports是具有强大内容创建和集成功能的高效的报表技术，是第三方开发的报表工具，使用水晶报表我们可以更好地向用户展示数据。以前可以通过编程的方式将数据集中的数据进行处理后在windows应用程序或web应用程序中输出显示，但如果要做超出了基本格式化的一些工作如：求和、平均、多极汇总、制作图标等就会显得比较复杂，而水晶报表正好弥补了其中的不足。<br>","more":"<br>在windows应用程序和web应用程序中我们都可以使用水晶报表，不过在windows应用程序中的水晶报表要比web应用程序中的功能强大，可以很容易地实现打印和导出功能。在这儿只讨论一下在asp.net中水晶报表的一些简单使用。</p>\n<p>在asp.net中使用水晶报表专家，可以很快速地创建报表，虽然水晶报表是第三方开发的，但在vs2003中水晶报表已经成为了开发环境的一个组成部分。先做一个很简单的小例子。新建一个web应用程序，在页面上添加工具箱中web窗体下的Button控件，CrystalReportViewer控件（这个就是水晶报表控件）和html下的File Field控件。File Field控件可以让我们从本地选择一个文件，要想实现水晶报表的显示我们首先需要一个水晶报表文件，该文件的后缀为rpt，这个文件可以通过添加新项添加。现在假设已经有一个水晶报表文件，通过以下几步就可以在页面上显示。</p>\n<p>1 双击页面进入代码环境在page_load事件中添加如下代码：</p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(Session[<span class=\"string\">\"filename\"</span>]!=<span class=\"literal\">null</span>)</div><div class=\"line\">&#123;</div><div class=\"line\">    CrystalReportViewer1.<span class=\"attr\">ReportSource</span> = Session[<span class=\"string\">\"filename\"</span>].ToString();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这段代码主要是将文件的名字保存在session里面在pageload事件中加以判断，避免在刷新页面的时候出现错误。</p>\n<p>2 在Button按钮的单击事件中添加以下代码：</p>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">string </span><span class=\"keyword\">strName </span>= File1.PostedFile.FileName<span class=\"comment\">;</span></div><div class=\"line\"><span class=\"symbol\">if</span>(<span class=\"keyword\">strName.Trim()!=\"\")</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    CrystalReportViewer1.ReportSource = <span class=\"keyword\">strName;</div><div class=\"line\"></span>    Session[<span class=\"string\">\"filename\"</span>] = <span class=\"keyword\">strName;</div><div class=\"line\"></span>&#125;</div></pre></td></tr></table></figure>\n<p>然后按F5运行，选择一个已经做好的rpt文件，点击按钮就可以看见页面上显示的报表结果了。</p>\n<p>在整个过程中重要的还是水晶报表文件的建立，水晶报表的创建有pull和push两种模式，pull模式是直接指定数据库驱动然后组装这些数据，push模式需要自己写代码来连接数据库，并将它们传至报表，push模式比pull要更灵活。</p>\n<p>由于篇幅原因先说一下pull模式：</p>\n<p>在页面中添加一个rpt文件，这时会弹出一个对话框，选择作为空白报表然后点击确定。</p>\n<p>在右边的“字段资源管理器”中右键点击“数据库字段”选择“添加删除数据库”，会弹出数据库专家的对话框，选择可用数据源中的OLEDB(ADO)根据向导创建数据库的连接。</p>\n<p>建立好数据库连接后可以将数据库中的表加到报表中，然后就可以将我们要显示的字段总结拖到rpt文件中的详细资料中，并且在页眉会自动添加字段名，这个名字是可以根据自己的喜好更改的。</p>\n<p>这样一个很简单的报表就做好的，当然报表的功能远远不止这些，下面就该写代码了。</p>\n<p>1、首先要导入命名空间</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">using</span> <span class=\"selector-tag\">CrystalDecisions</span><span class=\"selector-class\">.CrystalReports</span><span class=\"selector-class\">.Engine</span>;</div><div class=\"line\"><span class=\"selector-tag\">using</span> <span class=\"selector-tag\">CrystalDecisions</span><span class=\"selector-class\">.Shared</span>;</div></pre></td></tr></table></figure>\n<p>2、命名空间导入后就要申明一个ReportDocument类的对象</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ReportDocument ReportDoc<span class=\"comment\">;</span></div></pre></td></tr></table></figure>\n<p>3、最后在pageload事件中加入下面代码就ok了</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ReportDoc = new ReportDocument()<span class=\"comment\">;</span></div><div class=\"line\">ReportDoc.Load(Server.MapPath(<span class=\"string\">\"CraystalReport.rpt\"</span>))<span class=\"comment\">;</span></div><div class=\"line\">CrystalReportViewer1.ReportSource = ReportDoc<span class=\"comment\">;</span></div></pre></td></tr></table></figure>\n<p>按F5运行就可以看到结果，这只是最最简单的一个小例子，要了解水晶报表的强大功能还需要不断努力学习，在vs2003中rpt的界面非常傻瓜化，只要右击页面就可以插入狠多东西，如图片、图表、汇总等等，有待日后慢慢尝试了</p>\n<p>就写到这儿了，继续学习中………</p>"},{"title":"解决sqlserver2005数据库sa登录问题","date":"2007-12-01T16:00:00.000Z","_content":"\n如果安装sql server 2005的时候，设置的身份验证模式为”windows”(默认), 安装完成后,   再设置为”sql server和windows”的身份验证模式, 则sa用户是被禁用的。必须启用它。\n<!--more-->\n1 用Windows身份验证登陆(这个应该是不会存在问题的，在新安装好实例(SQL Server)的情况下，Windows身份验证是不可能被禁用的(安装过程中没有可以设置禁用Windows身份验证的地方)\n\nManage Studio–菜单”文件”–“连接对象资源管理器”，身份验证中选择”Windows Authentication”\n\n2 连接成功后，右键你的实例，选择”属性”\n\n3 在”属性”窗口中，转到”Security”(安全性)项，在”服务器身份验证”中设置为”SQL Server和Windows身份验证模式”，确定，根据提示，你应该重新启动sql服务。\n\n4 重新启动sql服务后，照用Windows身份验证连接，然后执行下面的语句启用sa用户，同时清除sa的密码(能成功登陆后再根据你的需要设置)。\n\n```\nEXEC   sp_password   null,null,'sa'\nALTER   LOGIN   sa   ENABLE   \n```\n\n5 语句执行完成后，再用sa连接你的实例，应该就没有问题了。\n注：如果执行\n\n```\nEXEC   sp_password   null,null,'sa'\nALTER   LOGIN   sa   ENABLE   \n```\n \n这句话时报如下的错：  \n    \n```  \nMsg   15118,   Level   16,   State   1,   Line   1\n密码有效性验证失败。该密码不够复杂，不符合Windows策略要求。\n```\n\n则说明你的服务器的密码策略有复杂性要求（SQL2005的密码复杂性与Windows的密码复杂性策略是关联的），则要求你把sa的密码设置为一个复杂的密码，因此得改为如下语句：\n\n```\nEXEC   sp_password   null,   ’复杂的密码',   'sa'\nALTER   LOGIN   sa   ENABLE\n```\n\n\n","source":"_posts/solve-the-problem-of-sqlserver2005-database-sa-login.md","raw":"---\ntitle: 解决sqlserver2005数据库sa登录问题\ndate: 2007-12-02\ncategories: [SqlServer]\ntags: [Sql,SqlServer,错误解决]\n---\n\n如果安装sql server 2005的时候，设置的身份验证模式为”windows”(默认), 安装完成后,   再设置为”sql server和windows”的身份验证模式, 则sa用户是被禁用的。必须启用它。\n<!--more-->\n1 用Windows身份验证登陆(这个应该是不会存在问题的，在新安装好实例(SQL Server)的情况下，Windows身份验证是不可能被禁用的(安装过程中没有可以设置禁用Windows身份验证的地方)\n\nManage Studio–菜单”文件”–“连接对象资源管理器”，身份验证中选择”Windows Authentication”\n\n2 连接成功后，右键你的实例，选择”属性”\n\n3 在”属性”窗口中，转到”Security”(安全性)项，在”服务器身份验证”中设置为”SQL Server和Windows身份验证模式”，确定，根据提示，你应该重新启动sql服务。\n\n4 重新启动sql服务后，照用Windows身份验证连接，然后执行下面的语句启用sa用户，同时清除sa的密码(能成功登陆后再根据你的需要设置)。\n\n```\nEXEC   sp_password   null,null,'sa'\nALTER   LOGIN   sa   ENABLE   \n```\n\n5 语句执行完成后，再用sa连接你的实例，应该就没有问题了。\n注：如果执行\n\n```\nEXEC   sp_password   null,null,'sa'\nALTER   LOGIN   sa   ENABLE   \n```\n \n这句话时报如下的错：  \n    \n```  \nMsg   15118,   Level   16,   State   1,   Line   1\n密码有效性验证失败。该密码不够复杂，不符合Windows策略要求。\n```\n\n则说明你的服务器的密码策略有复杂性要求（SQL2005的密码复杂性与Windows的密码复杂性策略是关联的），则要求你把sa的密码设置为一个复杂的密码，因此得改为如下语句：\n\n```\nEXEC   sp_password   null,   ’复杂的密码',   'sa'\nALTER   LOGIN   sa   ENABLE\n```\n\n\n","slug":"solve-the-problem-of-sqlserver2005-database-sa-login","published":1,"updated":"2016-08-13T14:04:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz934006zxfyne9hcfx7n","content":"<p>如果安装sql server 2005的时候，设置的身份验证模式为”windows”(默认), 安装完成后,   再设置为”sql server和windows”的身份验证模式, 则sa用户是被禁用的。必须启用它。<br><a id=\"more\"></a><br>1 用Windows身份验证登陆(这个应该是不会存在问题的，在新安装好实例(SQL Server)的情况下，Windows身份验证是不可能被禁用的(安装过程中没有可以设置禁用Windows身份验证的地方)</p>\n<p>Manage Studio–菜单”文件”–“连接对象资源管理器”，身份验证中选择”Windows Authentication”</p>\n<p>2 连接成功后，右键你的实例，选择”属性”</p>\n<p>3 在”属性”窗口中，转到”Security”(安全性)项，在”服务器身份验证”中设置为”SQL Server和Windows身份验证模式”，确定，根据提示，你应该重新启动sql服务。</p>\n<p>4 重新启动sql服务后，照用Windows身份验证连接，然后执行下面的语句启用sa用户，同时清除sa的密码(能成功登陆后再根据你的需要设置)。</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">EXEC</span>   sp_password   <span class=\"built_in\">null</span>,<span class=\"built_in\">null</span>,'sa'</div><div class=\"line\">ALTER   LOGIN   sa   <span class=\"keyword\">ENABLE</span></div></pre></td></tr></table></figure>\n<p>5 语句执行完成后，再用sa连接你的实例，应该就没有问题了。<br>注：如果执行</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">EXEC</span>   sp_password   <span class=\"built_in\">null</span>,<span class=\"built_in\">null</span>,'sa'</div><div class=\"line\">ALTER   LOGIN   sa   <span class=\"keyword\">ENABLE</span></div></pre></td></tr></table></figure>\n<p>这句话时报如下的错：  </p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Msg   <span class=\"number\">15118</span>,   Level   <span class=\"number\">16</span>,   State   <span class=\"number\">1</span>,   Line   <span class=\"number\">1</span></div><div class=\"line\">密码有效性验证失败。该密码不够复杂，不符合Windows策略要求。</div></pre></td></tr></table></figure>\n<p>则说明你的服务器的密码策略有复杂性要求（SQL2005的密码复杂性与Windows的密码复杂性策略是关联的），则要求你把sa的密码设置为一个复杂的密码，因此得改为如下语句：</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">EXEC</span>   sp_password   <span class=\"built_in\">null</span>,   ’复杂的密码',   'sa'</div><div class=\"line\">ALTER   LOGIN   sa   <span class=\"keyword\">ENABLE</span></div></pre></td></tr></table></figure>\n","excerpt":"<p>如果安装sql server 2005的时候，设置的身份验证模式为”windows”(默认), 安装完成后,   再设置为”sql server和windows”的身份验证模式, 则sa用户是被禁用的。必须启用它。<br>","more":"<br>1 用Windows身份验证登陆(这个应该是不会存在问题的，在新安装好实例(SQL Server)的情况下，Windows身份验证是不可能被禁用的(安装过程中没有可以设置禁用Windows身份验证的地方)</p>\n<p>Manage Studio–菜单”文件”–“连接对象资源管理器”，身份验证中选择”Windows Authentication”</p>\n<p>2 连接成功后，右键你的实例，选择”属性”</p>\n<p>3 在”属性”窗口中，转到”Security”(安全性)项，在”服务器身份验证”中设置为”SQL Server和Windows身份验证模式”，确定，根据提示，你应该重新启动sql服务。</p>\n<p>4 重新启动sql服务后，照用Windows身份验证连接，然后执行下面的语句启用sa用户，同时清除sa的密码(能成功登陆后再根据你的需要设置)。</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">EXEC</span>   sp_password   <span class=\"built_in\">null</span>,<span class=\"built_in\">null</span>,'sa'</div><div class=\"line\">ALTER   LOGIN   sa   <span class=\"keyword\">ENABLE</span></div></pre></td></tr></table></figure>\n<p>5 语句执行完成后，再用sa连接你的实例，应该就没有问题了。<br>注：如果执行</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">EXEC</span>   sp_password   <span class=\"built_in\">null</span>,<span class=\"built_in\">null</span>,'sa'</div><div class=\"line\">ALTER   LOGIN   sa   <span class=\"keyword\">ENABLE</span></div></pre></td></tr></table></figure>\n<p>这句话时报如下的错：  </p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Msg   <span class=\"number\">15118</span>,   Level   <span class=\"number\">16</span>,   State   <span class=\"number\">1</span>,   Line   <span class=\"number\">1</span></div><div class=\"line\">密码有效性验证失败。该密码不够复杂，不符合Windows策略要求。</div></pre></td></tr></table></figure>\n<p>则说明你的服务器的密码策略有复杂性要求（SQL2005的密码复杂性与Windows的密码复杂性策略是关联的），则要求你把sa的密码设置为一个复杂的密码，因此得改为如下语句：</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">EXEC</span>   sp_password   <span class=\"built_in\">null</span>,   ’复杂的密码',   'sa'</div><div class=\"line\">ALTER   LOGIN   sa   <span class=\"keyword\">ENABLE</span></div></pre></td></tr></table></figure>"},{"title":"解决Asp.Net Ajax UpdatePanel 乱码问题","date":"2007-07-24T16:00:00.000Z","_content":"\nUpdatePanel中当ContentComplate里面存在TextBox的时候会出现中文乱码\n\n一般存在这样两个解决方案：\n\n1. 在web.config里面增加下面代码。\n\n```\n<globalization fileEncoding=\"utf-8\" requestEncoding=\"utf-8\"\n  responseEncoding=\"utf-8\" culture=\"zh-CN\"/>\n```\n<!--more-->\n\n2. 在后台代码里面对乱码进行decoder操作\n\n上面两种都不是好的方案，第一个可能会导致其他的页面出现问题， 第二个虽然存到数据库中的是正确的，但是，用户看到的仍然是乱码，严重影响用户体验。那么，最好的解决方法在哪里？\n\n解决思路：我们可以通过对`web.config`文件增加` <location> `配置节来对特定文件或者目录进行`encoding`配置 ，如下：\n\n```\n<location path=\"此处为目录或文件名\">\n    <system.web>\n      <globalization fileEncoding=\"utf-8\" requestEncoding=\"utf-8\" \n\n                responseEncoding=\"utf-8\" culture=\"zh-CN\"/>\n    </system.web>\n</location>\n```\n\n","source":"_posts/solve-the-problem-of-the-aspnet-ajax-updatepanel-garbled.md","raw":"---\ntitle: 解决Asp.Net Ajax UpdatePanel 乱码问题\ndate: 2007-07-25\ncategories: [Asp.Net Ajax]\ntags: [Ajax,AspNet]\n---\n\nUpdatePanel中当ContentComplate里面存在TextBox的时候会出现中文乱码\n\n一般存在这样两个解决方案：\n\n1. 在web.config里面增加下面代码。\n\n```\n<globalization fileEncoding=\"utf-8\" requestEncoding=\"utf-8\"\n  responseEncoding=\"utf-8\" culture=\"zh-CN\"/>\n```\n<!--more-->\n\n2. 在后台代码里面对乱码进行decoder操作\n\n上面两种都不是好的方案，第一个可能会导致其他的页面出现问题， 第二个虽然存到数据库中的是正确的，但是，用户看到的仍然是乱码，严重影响用户体验。那么，最好的解决方法在哪里？\n\n解决思路：我们可以通过对`web.config`文件增加` <location> `配置节来对特定文件或者目录进行`encoding`配置 ，如下：\n\n```\n<location path=\"此处为目录或文件名\">\n    <system.web>\n      <globalization fileEncoding=\"utf-8\" requestEncoding=\"utf-8\" \n\n                responseEncoding=\"utf-8\" culture=\"zh-CN\"/>\n    </system.web>\n</location>\n```\n\n","slug":"solve-the-problem-of-the-aspnet-ajax-updatepanel-garbled","published":1,"updated":"2016-08-13T08:37:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz9360072xfynohuycco6","content":"<p>UpdatePanel中当ContentComplate里面存在TextBox的时候会出现中文乱码</p>\n<p>一般存在这样两个解决方案：</p>\n<ol>\n<li>在web.config里面增加下面代码。</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">globalization</span> <span class=\"attr\">fileEncoding</span>=<span class=\"string\">\"utf-8\"</span> <span class=\"attr\">requestEncoding</span>=<span class=\"string\">\"utf-8\"</span></span></div><div class=\"line\">  <span class=\"attr\">responseEncoding</span>=<span class=\"string\">\"utf-8\"</span> <span class=\"attr\">culture</span>=<span class=\"string\">\"zh-CN\"</span>/&gt;</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ol>\n<li>在后台代码里面对乱码进行decoder操作</li>\n</ol>\n<p>上面两种都不是好的方案，第一个可能会导致其他的页面出现问题， 第二个虽然存到数据库中的是正确的，但是，用户看到的仍然是乱码，严重影响用户体验。那么，最好的解决方法在哪里？</p>\n<p>解决思路：我们可以通过对<code>web.config</code>文件增加<code>&lt;location&gt;</code>配置节来对特定文件或者目录进行<code>encoding</code>配置 ，如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">location</span> <span class=\"attr\">path</span>=<span class=\"string\">\"此处为目录或文件名\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">system.web</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">globalization</span> <span class=\"attr\">fileEncoding</span>=<span class=\"string\">\"utf-8\"</span> <span class=\"attr\">requestEncoding</span>=<span class=\"string\">\"utf-8\"</span> </span></div><div class=\"line\"></div><div class=\"line\">                <span class=\"attr\">responseEncoding</span>=<span class=\"string\">\"utf-8\"</span> <span class=\"attr\">culture</span>=<span class=\"string\">\"zh-CN\"</span>/&gt;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">system.web</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">location</span>&gt;</span></div></pre></td></tr></table></figure>\n","excerpt":"<p>UpdatePanel中当ContentComplate里面存在TextBox的时候会出现中文乱码</p>\n<p>一般存在这样两个解决方案：</p>\n<ol>\n<li>在web.config里面增加下面代码。</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">globalization</span> <span class=\"attr\">fileEncoding</span>=<span class=\"string\">\"utf-8\"</span> <span class=\"attr\">requestEncoding</span>=<span class=\"string\">\"utf-8\"</span></div><div class=\"line\">  <span class=\"attr\">responseEncoding</span>=<span class=\"string\">\"utf-8\"</span> <span class=\"attr\">culture</span>=<span class=\"string\">\"zh-CN\"</span>/&gt;</span></div></pre></td></tr></table></figure>","more":"<ol>\n<li>在后台代码里面对乱码进行decoder操作</li>\n</ol>\n<p>上面两种都不是好的方案，第一个可能会导致其他的页面出现问题， 第二个虽然存到数据库中的是正确的，但是，用户看到的仍然是乱码，严重影响用户体验。那么，最好的解决方法在哪里？</p>\n<p>解决思路：我们可以通过对<code>web.config</code>文件增加<code>&lt;location&gt;</code>配置节来对特定文件或者目录进行<code>encoding</code>配置 ，如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">location</span> <span class=\"attr\">path</span>=<span class=\"string\">\"此处为目录或文件名\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">system.web</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">globalization</span> <span class=\"attr\">fileEncoding</span>=<span class=\"string\">\"utf-8\"</span> <span class=\"attr\">requestEncoding</span>=<span class=\"string\">\"utf-8\"</span> </div><div class=\"line\"></div><div class=\"line\">                <span class=\"attr\">responseEncoding</span>=<span class=\"string\">\"utf-8\"</span> <span class=\"attr\">culture</span>=<span class=\"string\">\"zh-CN\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">system.web</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">location</span>&gt;</span></div></pre></td></tr></table></figure>"},{"title":"My97 使用的一点技巧","date":"2008-10-14T16:00:00.000Z","_content":"\n## 需求：\n\n1.两个时间文本框，一个开始时间和一个结束时间，两个时间都是今天起以后的时间，并且开始时间不能大于结束时间。\n\n这样的需求在很多地方都会应用到，比如有些网站提供一些服务的购买，用户需要选择要购买服务的时间域等等。\n\n在My97的官网中有自定义时间的例子，我只是根据需要稍加了修改，代码如下:\n\n```\n<html>\n<head><title></title>\n<script type=\"text/javascript\" src=\"WdatePicker.js\"></script>\n</head>\n<body>\n<input id=\"txtB\" type=\"text\"\nonclick=\"WdatePicker({minDate:'%y-%M-#{%d}',maxDate:'#F{$dp.$D(\\'txtE\\',{d:-1})}'})\"/>\n<input id=\"txtE\" type=\"text\"\nonFocus=\"WdatePicker({minDate:'#F{$dp.$D(\\'txtB\\',{d:1})||\\'%y-%M-#{%d+2}\\'}'})\"/>\n\n</body>\n\n</html>\n```\n\n\n\n","source":"_posts/some-tips-of-my97.md","raw":"---\ntitle: My97 使用的一点技巧\ndate: 2008-10-15\ncategories: [Javascript]\ntags: [javascript,My97]\n---\n\n## 需求：\n\n1.两个时间文本框，一个开始时间和一个结束时间，两个时间都是今天起以后的时间，并且开始时间不能大于结束时间。\n\n这样的需求在很多地方都会应用到，比如有些网站提供一些服务的购买，用户需要选择要购买服务的时间域等等。\n\n在My97的官网中有自定义时间的例子，我只是根据需要稍加了修改，代码如下:\n\n```\n<html>\n<head><title></title>\n<script type=\"text/javascript\" src=\"WdatePicker.js\"></script>\n</head>\n<body>\n<input id=\"txtB\" type=\"text\"\nonclick=\"WdatePicker({minDate:'%y-%M-#{%d}',maxDate:'#F{$dp.$D(\\'txtE\\',{d:-1})}'})\"/>\n<input id=\"txtE\" type=\"text\"\nonFocus=\"WdatePicker({minDate:'#F{$dp.$D(\\'txtB\\',{d:1})||\\'%y-%M-#{%d+2}\\'}'})\"/>\n\n</body>\n\n</html>\n```\n\n\n\n","slug":"some-tips-of-my97","published":1,"updated":"2016-08-14T07:02:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz9370075xfyn70h4gwn7","content":"<h2 id=\"需求：\"><a href=\"#需求：\" class=\"headerlink\" title=\"需求：\"></a>需求：</h2><p>1.两个时间文本框，一个开始时间和一个结束时间，两个时间都是今天起以后的时间，并且开始时间不能大于结束时间。</p>\n<p>这样的需求在很多地方都会应用到，比如有些网站提供一些服务的购买，用户需要选择要购买服务的时间域等等。</p>\n<p>在My97的官网中有自定义时间的例子，我只是根据需要稍加了修改，代码如下:</p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"WdatePicker.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txtB\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span></span></div><div class=\"line\"><span class=\"attr\">onclick</span>=<span class=\"string\">\"WdatePicker(</span><span class=\"template-variable\">&#123;minDate:'%y-%M-#&#123;%d&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">',maxDate:'#F</span></span></span><span class=\"template-variable\">&#123;$dp.$D(\\'txtE\\',&#123;d:-1&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">)&#125;'&#125;)\"</span>/&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txtE\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span></span></div><div class=\"line\"><span class=\"attr\">onFocus</span>=<span class=\"string\">\"WdatePicker(</span><span class=\"template-variable\">&#123;minDate:'#F&#123;$dp.$D(\\'txtB\\',&#123;d:1&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">)||\\'%y-%M-#</span></span></span><span class=\"template-variable\">&#123;%d+2&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\\'&#125;'&#125;)\"</span>/&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"需求：\"><a href=\"#需求：\" class=\"headerlink\" title=\"需求：\"></a>需求：</h2><p>1.两个时间文本框，一个开始时间和一个结束时间，两个时间都是今天起以后的时间，并且开始时间不能大于结束时间。</p>\n<p>这样的需求在很多地方都会应用到，比如有些网站提供一些服务的购买，用户需要选择要购买服务的时间域等等。</p>\n<p>在My97的官网中有自定义时间的例子，我只是根据需要稍加了修改，代码如下:</p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"WdatePicker.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txtB\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span></div><div class=\"line\"><span class=\"attr\">onclick</span>=<span class=\"string\">\"WdatePicker(</span></span></span><span class=\"template-variable\">&#123;minDate:'%y-%M-#&#123;%d&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">',maxDate:'#F</span></span></span><span class=\"template-variable\">&#123;$dp.$D(\\'txtE\\',&#123;d:-1&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">)&#125;'&#125;)\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txtE\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span></div><div class=\"line\"><span class=\"attr\">onFocus</span>=<span class=\"string\">\"WdatePicker(</span></span></span><span class=\"template-variable\">&#123;minDate:'#F&#123;$dp.$D(\\'txtB\\',&#123;d:1&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">)||\\'%y-%M-#</span></span></span><span class=\"template-variable\">&#123;%d+2&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\\'&#125;'&#125;)\"</span>/&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></div></pre></td></tr></table></figure>\n"},{"title":"即将成为一名程序员","date":"2007-09-15T16:00:00.000Z","_content":"\n终于要工作了，真是不容易啊，好在这第一份工作正是我一直都想做的软件开发，我会努力在这条路上走出自己的一片天。\n<!--more-->\n当初面试的时候根本没有想到能够面试上，笔试的题目差不多有一小半没做，当时心想肯定有没戏了，按照一般的惯例公司都是看了笔试成绩再决定是否继续面试，但很幸运，做完笔试HR就那着我的试卷领着我进了会议室，然后针对我的试卷来提问，HR是台湾人，我所有的答案他一个字都没有看懂，没办法，我只能一个题一个题地跟他讲解，没有做的题我都把思路讲出来了。没想到几天后公司来电话了，说我面试通过了，17号上班，也就是明天，我人生很重要的一步，我一定会努力的。\n\n","source":"_posts/soon-to-be-a-programmer.md","raw":"---\ntitle: 即将成为一名程序员\ndate: 2007-09-16\ncategories: [心情日记]\ntags:\n---\n\n终于要工作了，真是不容易啊，好在这第一份工作正是我一直都想做的软件开发，我会努力在这条路上走出自己的一片天。\n<!--more-->\n当初面试的时候根本没有想到能够面试上，笔试的题目差不多有一小半没做，当时心想肯定有没戏了，按照一般的惯例公司都是看了笔试成绩再决定是否继续面试，但很幸运，做完笔试HR就那着我的试卷领着我进了会议室，然后针对我的试卷来提问，HR是台湾人，我所有的答案他一个字都没有看懂，没办法，我只能一个题一个题地跟他讲解，没有做的题我都把思路讲出来了。没想到几天后公司来电话了，说我面试通过了，17号上班，也就是明天，我人生很重要的一步，我一定会努力的。\n\n","slug":"soon-to-be-a-programmer","published":1,"updated":"2016-08-13T13:28:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz9380079xfynsgrkp0yo","content":"<p>终于要工作了，真是不容易啊，好在这第一份工作正是我一直都想做的软件开发，我会努力在这条路上走出自己的一片天。<br><a id=\"more\"></a><br>当初面试的时候根本没有想到能够面试上，笔试的题目差不多有一小半没做，当时心想肯定有没戏了，按照一般的惯例公司都是看了笔试成绩再决定是否继续面试，但很幸运，做完笔试HR就那着我的试卷领着我进了会议室，然后针对我的试卷来提问，HR是台湾人，我所有的答案他一个字都没有看懂，没办法，我只能一个题一个题地跟他讲解，没有做的题我都把思路讲出来了。没想到几天后公司来电话了，说我面试通过了，17号上班，也就是明天，我人生很重要的一步，我一定会努力的。</p>\n","excerpt":"<p>终于要工作了，真是不容易啊，好在这第一份工作正是我一直都想做的软件开发，我会努力在这条路上走出自己的一片天。<br>","more":"<br>当初面试的时候根本没有想到能够面试上，笔试的题目差不多有一小半没做，当时心想肯定有没戏了，按照一般的惯例公司都是看了笔试成绩再决定是否继续面试，但很幸运，做完笔试HR就那着我的试卷领着我进了会议室，然后针对我的试卷来提问，HR是台湾人，我所有的答案他一个字都没有看懂，没办法，我只能一个题一个题地跟他讲解，没有做的题我都把思路讲出来了。没想到几天后公司来电话了，说我面试通过了，17号上班，也就是明天，我人生很重要的一步，我一定会努力的。</p>"},{"title":"SQL实现分组统计查询（按月、小时分组）","date":"2009-06-03T16:00:00.000Z","_content":"\n## 首先创建数据表\n\n```\nCreate table Counter\n(\n    CounterID int identity(1,1) not null,\n    IP varchar(20),\n    AccessDateTime datetime,\n    AccessCount int\n)\n```\n\n该表在这儿只是演示使用，所以只提供了最基本的字段:IP地址，访问时间和访问次数。如果每访问一次就插入一条记录，那么AccessCount可以不要，查询时使用count就可以了，这样当访问量很大的时候会对数据库造成很大压力。设置AccessCount字段可以根据需求在特定的时间范围内如果是相同IP访问就在AccessCount上累加。\n\n现在往表中插入几条记录\n\n```\ninsert into Counter\nselect '127.0.0.1',getdate(),1 union all\nselect '127.0.0.2',getdate(),1 union all\nselect '127.0.0.3',getdate(),1\n```\n\n## 根据年来查询，以月为时间单位\n\n通常情况下一个简单的分组就能搞定\n\n```\nselect\n    convert(varchar(7),AccessDateTime,120) as Date,\n    sum(AccessCount) as [Count]\nfrom\n    Counter\ngroup by\n    convert(varchar(7),AccessDateTime,120)\n```\n\n像这样分组后没有记录的月份不会显示，如下：\n\n![2010-12-30_103754](http://oec2003.qiniudn.com/2010-12-30_103754.gif)\n\n这当然不是我们想要的，所以得换一种思路来实现，如下：\n\n```\ndeclare @Year int\nset @Year=2009\nselect\n    m as [Date],\n    sum(\n        case when datepart(month,AccessDateTime)=m\n        then   AccessCount else 0 end\n       )  as [Count]\nfrom\n    Counter c,\n    (\n        select 1 m\n        union all select 2\n        union all select 3\n        union all select 4\n        union all select 5\n        union all select 6\n        union all select 7\n        union all select 8\n        union all select 9\n        union all select 10\n        union all select 11\n        union all select 12\n    ) aa\nwhere\n    @Year=year(AccessDateTime)\ngroup by\n    m\n```\n\n查询结果如下：\n\n![2010-12-30_104014](http://oec2003.qiniudn.com/2010-12-30_104014.gif)\n\n## 根据天来查询，以小时为单位。\n\n```\ndeclare @DateTime datetime\nset @DateTime=getdate()\nselect\n    right(100+a,2)+ ':00 ->  '+right(100+b,2)+ ':00 ' as DateSpan,\n    sum(\n        case when datepart(hour,AccessDateTime)> =a \n\n                  and datepart(hour,AccessDateTime) <b\n        then AccessCount else 0 end\n       )  as [Count] \n\nfrom   Counter c ,\n(select   0 a,1 b\nunion   all   select     1,2\nunion   all   select     2,3\nunion   all   select     3,4\nunion   all   select     4,5\nunion   all   select     5,6\nunion   all   select     6,7\nunion   all   select     7,8\nunion   all   select     8,9\nunion   all   select     9,10\nunion   all   select     10,11\nunion   all   select     11,12\nunion   all   select     12,13\nunion   all   select     13,14\nunion   all   select     14,15\nunion   all   select     15,16\nunion   all   select     16,17\nunion   all   select     17,18\nunion   all   select     18,19\nunion   all   select     19,20\nunion   all   select     20,21\nunion   all   select     21,22\nunion   all   select     22,23\nunion   all   select     23,24\n) aa\nwhere datediff(day,@DateTime,AccessDateTime)=0\ngroup by right(100+a,2)+ ':00 ->  '+right(100+b,2)+ ':00 '\n```\n\n查询结果如下图：\n\n![2010-12-30_104151](http://oec2003.qiniudn.com/2010-12-30_104151.gif)\n\n","source":"_posts/sql-implementation-group-statistical-query.md","raw":"---\ntitle: SQL实现分组统计查询（按月、小时分组）\ndate: 2009-06-04\ncategories:\ntags:\n---\n\n## 首先创建数据表\n\n```\nCreate table Counter\n(\n    CounterID int identity(1,1) not null,\n    IP varchar(20),\n    AccessDateTime datetime,\n    AccessCount int\n)\n```\n\n该表在这儿只是演示使用，所以只提供了最基本的字段:IP地址，访问时间和访问次数。如果每访问一次就插入一条记录，那么AccessCount可以不要，查询时使用count就可以了，这样当访问量很大的时候会对数据库造成很大压力。设置AccessCount字段可以根据需求在特定的时间范围内如果是相同IP访问就在AccessCount上累加。\n\n现在往表中插入几条记录\n\n```\ninsert into Counter\nselect '127.0.0.1',getdate(),1 union all\nselect '127.0.0.2',getdate(),1 union all\nselect '127.0.0.3',getdate(),1\n```\n\n## 根据年来查询，以月为时间单位\n\n通常情况下一个简单的分组就能搞定\n\n```\nselect\n    convert(varchar(7),AccessDateTime,120) as Date,\n    sum(AccessCount) as [Count]\nfrom\n    Counter\ngroup by\n    convert(varchar(7),AccessDateTime,120)\n```\n\n像这样分组后没有记录的月份不会显示，如下：\n\n![2010-12-30_103754](http://oec2003.qiniudn.com/2010-12-30_103754.gif)\n\n这当然不是我们想要的，所以得换一种思路来实现，如下：\n\n```\ndeclare @Year int\nset @Year=2009\nselect\n    m as [Date],\n    sum(\n        case when datepart(month,AccessDateTime)=m\n        then   AccessCount else 0 end\n       )  as [Count]\nfrom\n    Counter c,\n    (\n        select 1 m\n        union all select 2\n        union all select 3\n        union all select 4\n        union all select 5\n        union all select 6\n        union all select 7\n        union all select 8\n        union all select 9\n        union all select 10\n        union all select 11\n        union all select 12\n    ) aa\nwhere\n    @Year=year(AccessDateTime)\ngroup by\n    m\n```\n\n查询结果如下：\n\n![2010-12-30_104014](http://oec2003.qiniudn.com/2010-12-30_104014.gif)\n\n## 根据天来查询，以小时为单位。\n\n```\ndeclare @DateTime datetime\nset @DateTime=getdate()\nselect\n    right(100+a,2)+ ':00 ->  '+right(100+b,2)+ ':00 ' as DateSpan,\n    sum(\n        case when datepart(hour,AccessDateTime)> =a \n\n                  and datepart(hour,AccessDateTime) <b\n        then AccessCount else 0 end\n       )  as [Count] \n\nfrom   Counter c ,\n(select   0 a,1 b\nunion   all   select     1,2\nunion   all   select     2,3\nunion   all   select     3,4\nunion   all   select     4,5\nunion   all   select     5,6\nunion   all   select     6,7\nunion   all   select     7,8\nunion   all   select     8,9\nunion   all   select     9,10\nunion   all   select     10,11\nunion   all   select     11,12\nunion   all   select     12,13\nunion   all   select     13,14\nunion   all   select     14,15\nunion   all   select     15,16\nunion   all   select     16,17\nunion   all   select     17,18\nunion   all   select     18,19\nunion   all   select     19,20\nunion   all   select     20,21\nunion   all   select     21,22\nunion   all   select     22,23\nunion   all   select     23,24\n) aa\nwhere datediff(day,@DateTime,AccessDateTime)=0\ngroup by right(100+a,2)+ ':00 ->  '+right(100+b,2)+ ':00 '\n```\n\n查询结果如下图：\n\n![2010-12-30_104151](http://oec2003.qiniudn.com/2010-12-30_104151.gif)\n\n","slug":"sql-implementation-group-statistical-query","published":1,"updated":"2016-08-15T13:43:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93a007dxfynkhq9h3ei","content":"<h2 id=\"首先创建数据表\"><a href=\"#首先创建数据表\" class=\"headerlink\" title=\"首先创建数据表\"></a>首先创建数据表</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">Create</span> <span class=\"keyword\">table</span> Counter</div><div class=\"line\">(</div><div class=\"line\">    CounterID <span class=\"built_in\">int</span> <span class=\"keyword\">identity</span>(<span class=\"number\">1</span>,<span class=\"number\">1</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    IP <span class=\"built_in\">varchar</span>(<span class=\"number\">20</span>),</div><div class=\"line\">    AccessDateTime datetime,</div><div class=\"line\">    AccessCount <span class=\"built_in\">int</span></div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<p>该表在这儿只是演示使用，所以只提供了最基本的字段:IP地址，访问时间和访问次数。如果每访问一次就插入一条记录，那么AccessCount可以不要，查询时使用count就可以了，这样当访问量很大的时候会对数据库造成很大压力。设置AccessCount字段可以根据需求在特定的时间范围内如果是相同IP访问就在AccessCount上累加。</p>\n<p>现在往表中插入几条记录</p>\n<figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">insert into Counter</div><div class=\"line\">select <span class=\"string\">'127.0.0.1'</span>,getdate(),<span class=\"number\">1</span> <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span></span></div><div class=\"line\">select <span class=\"string\">'127.0.0.2'</span>,getdate(),<span class=\"number\">1</span> <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span></span></div><div class=\"line\">select <span class=\"string\">'127.0.0.3'</span>,getdate(),<span class=\"number\">1</span></div></pre></td></tr></table></figure>\n<h2 id=\"根据年来查询，以月为时间单位\"><a href=\"#根据年来查询，以月为时间单位\" class=\"headerlink\" title=\"根据年来查询，以月为时间单位\"></a>根据年来查询，以月为时间单位</h2><p>通常情况下一个简单的分组就能搞定</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span></div><div class=\"line\">    <span class=\"keyword\">convert</span>(<span class=\"built_in\">varchar</span>(<span class=\"number\">7</span>),AccessDateTime,<span class=\"number\">120</span>) <span class=\"keyword\">as</span> <span class=\"built_in\">Date</span>,</div><div class=\"line\">    <span class=\"keyword\">sum</span>(AccessCount) <span class=\"keyword\">as</span> [<span class=\"keyword\">Count</span>]</div><div class=\"line\"><span class=\"keyword\">from</span></div><div class=\"line\">    Counter</div><div class=\"line\"><span class=\"keyword\">group</span> <span class=\"keyword\">by</span></div><div class=\"line\">    <span class=\"keyword\">convert</span>(<span class=\"built_in\">varchar</span>(<span class=\"number\">7</span>),AccessDateTime,<span class=\"number\">120</span>)</div></pre></td></tr></table></figure>\n<p>像这样分组后没有记录的月份不会显示，如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_103754.gif\" alt=\"2010-12-30_103754\"></p>\n<p>这当然不是我们想要的，所以得换一种思路来实现，如下：</p>\n<figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare @Year int</div><div class=\"line\">set @Year=<span class=\"number\">2009</span></div><div class=\"line\">select</div><div class=\"line\">    m <span class=\"keyword\">as</span> [Date],</div><div class=\"line\">    sum(</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"keyword\">when</span> datepart(month,AccessDateTime)=m</div><div class=\"line\">        <span class=\"keyword\">then</span>   AccessCount <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">end</span></div><div class=\"line\">       )  <span class=\"keyword\">as</span> [Count]</div><div class=\"line\">from</div><div class=\"line\">    Counter c,</div><div class=\"line\">    (</div><div class=\"line\">        select <span class=\"number\">1</span> m</div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 2</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 3</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 4</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 5</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 6</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 7</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 8</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 9</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 10</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 11</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 12</span></div><div class=\"line\">    ) aa</div><div class=\"line\">where</div><div class=\"line\">    @Year=year(AccessDateTime)</div><div class=\"line\">group by</div><div class=\"line\">    m</div></pre></td></tr></table></figure>\n<p>查询结果如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_104014.gif\" alt=\"2010-12-30_104014\"></p>\n<h2 id=\"根据天来查询，以小时为单位。\"><a href=\"#根据天来查询，以小时为单位。\" class=\"headerlink\" title=\"根据天来查询，以小时为单位。\"></a>根据天来查询，以小时为单位。</h2><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare @DateTime datetime</div><div class=\"line\">set @DateTime=getdate()</div><div class=\"line\">select</div><div class=\"line\">    right(<span class=\"number\">100</span>+a,<span class=\"number\">2</span>)+ <span class=\"string\">':00 -&gt;  '</span>+right(<span class=\"number\">100</span>+b,<span class=\"number\">2</span>)+ <span class=\"string\">':00 '</span> <span class=\"keyword\">as</span> DateSpan,</div><div class=\"line\">    sum(</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"keyword\">when</span> datepart(hour,AccessDateTime)&gt; =a </div><div class=\"line\"></div><div class=\"line\">                  and datepart(hour,AccessDateTime) &lt;b</div><div class=\"line\">        <span class=\"keyword\">then</span> AccessCount <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">end</span></div><div class=\"line\">       )  <span class=\"keyword\">as</span> [Count] </div><div class=\"line\"></div><div class=\"line\">from   Counter c ,</div><div class=\"line\">(select   <span class=\"number\">0</span> a,<span class=\"number\">1</span> b</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     1,2</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     2,3</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     3,4</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     4,5</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     5,6</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     6,7</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     7,8</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     8,9</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     9,10</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     10,11</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     11,12</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     12,13</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     13,14</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     14,15</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     15,16</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     16,17</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     17,18</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     18,19</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     19,20</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     20,21</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     21,22</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     22,23</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     23,24</span></div><div class=\"line\">) aa</div><div class=\"line\">where datediff(day,@DateTime,AccessDateTime)=<span class=\"number\">0</span></div><div class=\"line\">group by right(<span class=\"number\">100</span>+a,<span class=\"number\">2</span>)+ <span class=\"string\">':00 -&gt;  '</span>+right(<span class=\"number\">100</span>+b,<span class=\"number\">2</span>)+ <span class=\"string\">':00 '</span></div></pre></td></tr></table></figure>\n<p>查询结果如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_104151.gif\" alt=\"2010-12-30_104151\"></p>\n","excerpt":"","more":"<h2 id=\"首先创建数据表\"><a href=\"#首先创建数据表\" class=\"headerlink\" title=\"首先创建数据表\"></a>首先创建数据表</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">Create</span> <span class=\"keyword\">table</span> Counter</div><div class=\"line\">(</div><div class=\"line\">    CounterID <span class=\"built_in\">int</span> <span class=\"keyword\">identity</span>(<span class=\"number\">1</span>,<span class=\"number\">1</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    IP <span class=\"built_in\">varchar</span>(<span class=\"number\">20</span>),</div><div class=\"line\">    AccessDateTime datetime,</div><div class=\"line\">    AccessCount <span class=\"built_in\">int</span></div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<p>该表在这儿只是演示使用，所以只提供了最基本的字段:IP地址，访问时间和访问次数。如果每访问一次就插入一条记录，那么AccessCount可以不要，查询时使用count就可以了，这样当访问量很大的时候会对数据库造成很大压力。设置AccessCount字段可以根据需求在特定的时间范围内如果是相同IP访问就在AccessCount上累加。</p>\n<p>现在往表中插入几条记录</p>\n<figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">insert into Counter</div><div class=\"line\">select <span class=\"string\">'127.0.0.1'</span>,getdate(),<span class=\"number\">1</span> <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span></span></div><div class=\"line\">select <span class=\"string\">'127.0.0.2'</span>,getdate(),<span class=\"number\">1</span> <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span></span></div><div class=\"line\">select <span class=\"string\">'127.0.0.3'</span>,getdate(),<span class=\"number\">1</span></div></pre></td></tr></table></figure>\n<h2 id=\"根据年来查询，以月为时间单位\"><a href=\"#根据年来查询，以月为时间单位\" class=\"headerlink\" title=\"根据年来查询，以月为时间单位\"></a>根据年来查询，以月为时间单位</h2><p>通常情况下一个简单的分组就能搞定</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span></div><div class=\"line\">    <span class=\"keyword\">convert</span>(<span class=\"built_in\">varchar</span>(<span class=\"number\">7</span>),AccessDateTime,<span class=\"number\">120</span>) <span class=\"keyword\">as</span> <span class=\"built_in\">Date</span>,</div><div class=\"line\">    <span class=\"keyword\">sum</span>(AccessCount) <span class=\"keyword\">as</span> [<span class=\"keyword\">Count</span>]</div><div class=\"line\"><span class=\"keyword\">from</span></div><div class=\"line\">    Counter</div><div class=\"line\"><span class=\"keyword\">group</span> <span class=\"keyword\">by</span></div><div class=\"line\">    <span class=\"keyword\">convert</span>(<span class=\"built_in\">varchar</span>(<span class=\"number\">7</span>),AccessDateTime,<span class=\"number\">120</span>)</div></pre></td></tr></table></figure>\n<p>像这样分组后没有记录的月份不会显示，如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_103754.gif\" alt=\"2010-12-30_103754\"></p>\n<p>这当然不是我们想要的，所以得换一种思路来实现，如下：</p>\n<figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare @Year int</div><div class=\"line\">set @Year=<span class=\"number\">2009</span></div><div class=\"line\">select</div><div class=\"line\">    m <span class=\"keyword\">as</span> [Date],</div><div class=\"line\">    sum(</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"keyword\">when</span> datepart(month,AccessDateTime)=m</div><div class=\"line\">        <span class=\"keyword\">then</span>   AccessCount <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">end</span></div><div class=\"line\">       )  <span class=\"keyword\">as</span> [Count]</div><div class=\"line\">from</div><div class=\"line\">    Counter c,</div><div class=\"line\">    (</div><div class=\"line\">        select <span class=\"number\">1</span> m</div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 2</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 3</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 4</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 5</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 6</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 7</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 8</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 9</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 10</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 11</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">all</span> <span class=\"title\">select</span> 12</span></div><div class=\"line\">    ) aa</div><div class=\"line\">where</div><div class=\"line\">    @Year=year(AccessDateTime)</div><div class=\"line\">group by</div><div class=\"line\">    m</div></pre></td></tr></table></figure>\n<p>查询结果如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_104014.gif\" alt=\"2010-12-30_104014\"></p>\n<h2 id=\"根据天来查询，以小时为单位。\"><a href=\"#根据天来查询，以小时为单位。\" class=\"headerlink\" title=\"根据天来查询，以小时为单位。\"></a>根据天来查询，以小时为单位。</h2><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare @DateTime datetime</div><div class=\"line\">set @DateTime=getdate()</div><div class=\"line\">select</div><div class=\"line\">    right(<span class=\"number\">100</span>+a,<span class=\"number\">2</span>)+ <span class=\"string\">':00 -&gt;  '</span>+right(<span class=\"number\">100</span>+b,<span class=\"number\">2</span>)+ <span class=\"string\">':00 '</span> <span class=\"keyword\">as</span> DateSpan,</div><div class=\"line\">    sum(</div><div class=\"line\">        <span class=\"keyword\">case</span> <span class=\"keyword\">when</span> datepart(hour,AccessDateTime)&gt; =a </div><div class=\"line\"></div><div class=\"line\">                  and datepart(hour,AccessDateTime) &lt;b</div><div class=\"line\">        <span class=\"keyword\">then</span> AccessCount <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">end</span></div><div class=\"line\">       )  <span class=\"keyword\">as</span> [Count] </div><div class=\"line\"></div><div class=\"line\">from   Counter c ,</div><div class=\"line\">(select   <span class=\"number\">0</span> a,<span class=\"number\">1</span> b</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     1,2</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     2,3</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     3,4</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     4,5</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     5,6</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     6,7</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     7,8</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     8,9</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     9,10</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     10,11</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     11,12</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     12,13</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     13,14</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     14,15</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     15,16</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     16,17</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     17,18</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     18,19</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     19,20</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     20,21</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     21,22</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     22,23</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span>   <span class=\"title\">all</span>   <span class=\"title\">select</span>     23,24</span></div><div class=\"line\">) aa</div><div class=\"line\">where datediff(day,@DateTime,AccessDateTime)=<span class=\"number\">0</span></div><div class=\"line\">group by right(<span class=\"number\">100</span>+a,<span class=\"number\">2</span>)+ <span class=\"string\">':00 -&gt;  '</span>+right(<span class=\"number\">100</span>+b,<span class=\"number\">2</span>)+ <span class=\"string\">':00 '</span></div></pre></td></tr></table></figure>\n<p>查询结果如下图：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_104151.gif\" alt=\"2010-12-30_104151\"></p>\n"},{"title":"SQL 计算一個字符串在另一个字符串中出現的次数","date":"2008-08-05T16:00:00.000Z","_content":"\n在sqlserver中來計算一個字符串在另一個字符串中出現的次數，通常會去用循環來匹配，然後計算出出現的次數，這樣的效能不是很高。現在講一種比較簡單的方法也能實現同樣的功能，思路如下：\n<!--more-->\n\n* 設有字符串str1 str2 ，現在要求str1 在 str2中出現的次數。\n* 將str1後面加上一個字符，如：str1+’_’，設更改後的字符串為str3。\n* 在str2中如果有子串str1 ，將之替換成str3，替換後的字符串設為str4。\n* str4與str2的長度之差即為str1在str2中出現的次數。\n\n看下面这个函数\n\n```\nCREATE  function fn_SCountOneWordOnOtherWord\n(\n    @Word NVARCHAR(200),\n    @WordAll NVARCHAR(2000)\n)\nRETURNS CHAR(4)\nAS\nBEGIN\n    RETURN  len(replace(@WordAll,@Word,@Word+'_'))-len(@WordAll)\nEND\n```\n\n\n","source":"_posts/sql-to-calculate-a-string-in-the-number-of-occurrences-of-another-string.md","raw":"---\ntitle: SQL 计算一個字符串在另一个字符串中出現的次数\ndate: 2008-08-06\ncategories: [SqlServer]\ntags: [Sql,小技巧]\n---\n\n在sqlserver中來計算一個字符串在另一個字符串中出現的次數，通常會去用循環來匹配，然後計算出出現的次數，這樣的效能不是很高。現在講一種比較簡單的方法也能實現同樣的功能，思路如下：\n<!--more-->\n\n* 設有字符串str1 str2 ，現在要求str1 在 str2中出現的次數。\n* 將str1後面加上一個字符，如：str1+’_’，設更改後的字符串為str3。\n* 在str2中如果有子串str1 ，將之替換成str3，替換後的字符串設為str4。\n* str4與str2的長度之差即為str1在str2中出現的次數。\n\n看下面这个函数\n\n```\nCREATE  function fn_SCountOneWordOnOtherWord\n(\n    @Word NVARCHAR(200),\n    @WordAll NVARCHAR(2000)\n)\nRETURNS CHAR(4)\nAS\nBEGIN\n    RETURN  len(replace(@WordAll,@Word,@Word+'_'))-len(@WordAll)\nEND\n```\n\n\n","slug":"sql-to-calculate-a-string-in-the-number-of-occurrences-of-another-string","published":1,"updated":"2016-08-14T06:46:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93d007hxfyn7wpry77j","content":"<p>在sqlserver中來計算一個字符串在另一個字符串中出現的次數，通常會去用循環來匹配，然後計算出出現的次數，這樣的效能不是很高。現在講一種比較簡單的方法也能實現同樣的功能，思路如下：<br><a id=\"more\"></a></p>\n<ul>\n<li>設有字符串str1 str2 ，現在要求str1 在 str2中出現的次數。</li>\n<li>將str1後面加上一個字符，如：str1+’_’，設更改後的字符串為str3。</li>\n<li>在str2中如果有子串str1 ，將之替換成str3，替換後的字符串設為str4。</li>\n<li>str4與str2的長度之差即為str1在str2中出現的次數。</li>\n</ul>\n<p>看下面这个函数</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CREATE</span>  <span class=\"keyword\">function</span> fn_SCountOneWordOnOtherWord</div><div class=\"line\">(</div><div class=\"line\">    @Word <span class=\"keyword\">NVARCHAR</span>(<span class=\"number\">200</span>),</div><div class=\"line\">    @WordAll <span class=\"keyword\">NVARCHAR</span>(<span class=\"number\">2000</span>)</div><div class=\"line\">)</div><div class=\"line\"><span class=\"keyword\">RETURNS</span> <span class=\"built_in\">CHAR</span>(<span class=\"number\">4</span>)</div><div class=\"line\"><span class=\"keyword\">AS</span></div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">    <span class=\"keyword\">RETURN</span>  <span class=\"keyword\">len</span>(<span class=\"keyword\">replace</span>(@WordAll,@Word,@Word+<span class=\"string\">'_'</span>))-<span class=\"keyword\">len</span>(@WordAll)</div><div class=\"line\"><span class=\"keyword\">END</span></div></pre></td></tr></table></figure>\n","excerpt":"<p>在sqlserver中來計算一個字符串在另一個字符串中出現的次數，通常會去用循環來匹配，然後計算出出現的次數，這樣的效能不是很高。現在講一種比較簡單的方法也能實現同樣的功能，思路如下：<br>","more":"</p>\n<ul>\n<li>設有字符串str1 str2 ，現在要求str1 在 str2中出現的次數。</li>\n<li>將str1後面加上一個字符，如：str1+’_’，設更改後的字符串為str3。</li>\n<li>在str2中如果有子串str1 ，將之替換成str3，替換後的字符串設為str4。</li>\n<li>str4與str2的長度之差即為str1在str2中出現的次數。</li>\n</ul>\n<p>看下面这个函数</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CREATE</span>  <span class=\"keyword\">function</span> fn_SCountOneWordOnOtherWord</div><div class=\"line\">(</div><div class=\"line\">    @Word <span class=\"keyword\">NVARCHAR</span>(<span class=\"number\">200</span>),</div><div class=\"line\">    @WordAll <span class=\"keyword\">NVARCHAR</span>(<span class=\"number\">2000</span>)</div><div class=\"line\">)</div><div class=\"line\"><span class=\"keyword\">RETURNS</span> <span class=\"built_in\">CHAR</span>(<span class=\"number\">4</span>)</div><div class=\"line\"><span class=\"keyword\">AS</span></div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">    <span class=\"keyword\">RETURN</span>  <span class=\"keyword\">len</span>(<span class=\"keyword\">replace</span>(@WordAll,@Word,@Word+<span class=\"string\">'_'</span>))-<span class=\"keyword\">len</span>(@WordAll)</div><div class=\"line\"><span class=\"keyword\">END</span></div></pre></td></tr></table></figure>"},{"title":"Sqlserver2005附加数据库为只读的解决方法","date":"2009-05-07T16:00:00.000Z","_content":"\n## 症状：\n\n在sqlserver2005中附加数据库时，附加的数据库会变成只读的，只能进行查询操作。\n<!--more-->\n\n![2010-12-30_105751](http://oec2003.qiniudn.com/2010-12-30_105751.gif)\n\n## 解决方法：\n\n1 打开SqlServer Configuration Manager   开始-》Microsoft Sqlserver 2005-》配置工具-》SqlServer Configuration Manager\n\n![2010-12-30_105828](http://oec2003.qiniudn.com/2010-12-30_105828.gif)\n\n2 在SqlServer Configuration Manager 窗口左边选中SQLServer 2005 服务，在窗口右边会出现一些列表项，选中Sqlserver（MSSqlserver）或SqlServer（SqlExpress）点击右键选择属性。\n\n![2010-12-30_105935](http://oec2003.qiniudn.com/2010-12-30_105935.gif)\n\n3 打开属性窗口，会发现内置帐户下面的下拉框选中的网络服务，将其改为本地服务。\n\n![2010-12-30_110010](http://oec2003.qiniudn.com/2010-12-30_110010.gif)\n\n4 打开SqlServer 2005 ，在只读的数据库上右击选择属性，选中属性窗口左边选择页下面的选项，在窗口右边将“数据库为只读”改为false ，点击确定即可。\n\n![2010-12-30_110055](http://oec2003.qiniudn.com/2010-12-30_110055.gif)\n\n\n","source":"_posts/sqlserver2005-additional-database-for-read-only-solutions.md","raw":"---\ntitle: Sqlserver2005附加数据库为只读的解决方法\ndate: 2009-05-08\ncategories: [SqlServer]\ntags: [SqlServer, 错误解决]\n---\n\n## 症状：\n\n在sqlserver2005中附加数据库时，附加的数据库会变成只读的，只能进行查询操作。\n<!--more-->\n\n![2010-12-30_105751](http://oec2003.qiniudn.com/2010-12-30_105751.gif)\n\n## 解决方法：\n\n1 打开SqlServer Configuration Manager   开始-》Microsoft Sqlserver 2005-》配置工具-》SqlServer Configuration Manager\n\n![2010-12-30_105828](http://oec2003.qiniudn.com/2010-12-30_105828.gif)\n\n2 在SqlServer Configuration Manager 窗口左边选中SQLServer 2005 服务，在窗口右边会出现一些列表项，选中Sqlserver（MSSqlserver）或SqlServer（SqlExpress）点击右键选择属性。\n\n![2010-12-30_105935](http://oec2003.qiniudn.com/2010-12-30_105935.gif)\n\n3 打开属性窗口，会发现内置帐户下面的下拉框选中的网络服务，将其改为本地服务。\n\n![2010-12-30_110010](http://oec2003.qiniudn.com/2010-12-30_110010.gif)\n\n4 打开SqlServer 2005 ，在只读的数据库上右击选择属性，选中属性窗口左边选择页下面的选项，在窗口右边将“数据库为只读”改为false ，点击确定即可。\n\n![2010-12-30_110055](http://oec2003.qiniudn.com/2010-12-30_110055.gif)\n\n\n","slug":"sqlserver2005-additional-database-for-read-only-solutions","published":1,"updated":"2016-08-15T13:33:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93e007lxfynjw4eng80","content":"<h2 id=\"症状：\"><a href=\"#症状：\" class=\"headerlink\" title=\"症状：\"></a>症状：</h2><p>在sqlserver2005中附加数据库时，附加的数据库会变成只读的，只能进行查询操作。<br><a id=\"more\"></a></p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_105751.gif\" alt=\"2010-12-30_105751\"></p>\n<h2 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h2><p>1 打开SqlServer Configuration Manager   开始-》Microsoft Sqlserver 2005-》配置工具-》SqlServer Configuration Manager</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_105828.gif\" alt=\"2010-12-30_105828\"></p>\n<p>2 在SqlServer Configuration Manager 窗口左边选中SQLServer 2005 服务，在窗口右边会出现一些列表项，选中Sqlserver（MSSqlserver）或SqlServer（SqlExpress）点击右键选择属性。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_105935.gif\" alt=\"2010-12-30_105935\"></p>\n<p>3 打开属性窗口，会发现内置帐户下面的下拉框选中的网络服务，将其改为本地服务。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_110010.gif\" alt=\"2010-12-30_110010\"></p>\n<p>4 打开SqlServer 2005 ，在只读的数据库上右击选择属性，选中属性窗口左边选择页下面的选项，在窗口右边将“数据库为只读”改为false ，点击确定即可。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_110055.gif\" alt=\"2010-12-30_110055\"></p>\n","excerpt":"<h2 id=\"症状：\"><a href=\"#症状：\" class=\"headerlink\" title=\"症状：\"></a>症状：</h2><p>在sqlserver2005中附加数据库时，附加的数据库会变成只读的，只能进行查询操作。<br>","more":"</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_105751.gif\" alt=\"2010-12-30_105751\"></p>\n<h2 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h2><p>1 打开SqlServer Configuration Manager   开始-》Microsoft Sqlserver 2005-》配置工具-》SqlServer Configuration Manager</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_105828.gif\" alt=\"2010-12-30_105828\"></p>\n<p>2 在SqlServer Configuration Manager 窗口左边选中SQLServer 2005 服务，在窗口右边会出现一些列表项，选中Sqlserver（MSSqlserver）或SqlServer（SqlExpress）点击右键选择属性。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_105935.gif\" alt=\"2010-12-30_105935\"></p>\n<p>3 打开属性窗口，会发现内置帐户下面的下拉框选中的网络服务，将其改为本地服务。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_110010.gif\" alt=\"2010-12-30_110010\"></p>\n<p>4 打开SqlServer 2005 ，在只读的数据库上右击选择属性，选中属性窗口左边选择页下面的选项，在窗口右边将“数据库为只读”改为false ，点击确定即可。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_110055.gif\" alt=\"2010-12-30_110055\"></p>"},{"title":"存储过程生成流水号","date":"2007-10-30T16:00:00.000Z","_content":"\n## 首先在数据库中创建一个存放流水号的表\n\n```\nCREATE TABLE [dbo].[NumSeq] (\n    [Cate] [varchar] (2)  NOT NULL ,\n    [DateNo] [varchar] (4)  NOT NULL ,\n    [Seq] [int] NULL ,\n    [CrTime] [datetime] NOT NULL\n)\n```\n\n上面的代码中，Cate 字段为流水号的头，可以在下面的存储过程中用参数的方式传入，我的定义是2个字符，这个可以根据具体需要更改\n\n* DateNo 字段为获取日期信息\n* Seq 字段为流水号，但最终生成的流水号是这三个字段的相加\n\n## 创建存储过程\n\n```\nCREATE  PROC dpPMT_SGetMaintainSeq\n@MaintainCate VARCHAR(2)\n\nAS\n--***********************累加编号*************************************************\nDECLARE @MaintainNo VARCHAR(12)\nIF NOT EXISTS(SELECT\n            *\n        FROM\n            NumSeq\n        WHERE\n            Cate=@MaintainCate AND DATEDIFF(DAY,CrTime,GETDATE())=0)\n    BEGIN\n        INSERT INTO\n            NumSeq(Cate,DateNo,Seq)\n        values(@MaintainCate,RIGHT(CONVERT(VARCHAR(4),YEAR(GETDATE())),2)+\n                REPLICATE('0',2-LEN(MONTH(GETDATE())))+CONVERT(VARCHAR(2),MONTH(GETDATE())),0)\n\n    END\nELSE\n    BEGIN\n        UPDATE\n            NumSeq\n        SET\n            Seq=Seq+1\n        WHERE\n            Cate=@MaintainCate AND DateNo=RIGHT(CONVERT(VARCHAR(4),YEAR(GETDATE())),2)+\n                       REPLICATE('0',2-LEN(MONTH(GETDATE())))+CONVERT(VARCHAR(2),MONTH(GETDATE()))\n    END\n\n--************************组合编号***************************************************************\nSELECT\n    @MaintainNo=Cate+DateNo+REPLICATE('0',6-LEN(Seq))+CONVERT(VARCHAR(6),Seq)\nFROM\n    NumSeq\nWHERE\n    Cate=@MaintainCate AND DateNo=RIGHT(CONVERT(VARCHAR(4),YEAR(GETDATE())),2)+\n                      REPLICATE('0',2-LEN(MONTH(GETDATE())))+CONVERT(VARCHAR(2),MONTH(GETDATE()))\n\nSELECT @MaintainNo\n```\n\n这个存储过程最终输出的结果如：AA071031000001 前面两位是传入的参数，中间四位是年份的后两位和月，最后的六位为6位数字的流水号。您也可以修改上面的存储过程来生成符合您要求的流水号\n\n\n","source":"_posts/stored-procedure-to-generate-a-serial-number.md","raw":"---\ntitle: 存储过程生成流水号\ndate: 2007-10-31\ncategories: [SqlServer]\ntags: [Sql,SqlServer,存储过程]\n---\n\n## 首先在数据库中创建一个存放流水号的表\n\n```\nCREATE TABLE [dbo].[NumSeq] (\n    [Cate] [varchar] (2)  NOT NULL ,\n    [DateNo] [varchar] (4)  NOT NULL ,\n    [Seq] [int] NULL ,\n    [CrTime] [datetime] NOT NULL\n)\n```\n\n上面的代码中，Cate 字段为流水号的头，可以在下面的存储过程中用参数的方式传入，我的定义是2个字符，这个可以根据具体需要更改\n\n* DateNo 字段为获取日期信息\n* Seq 字段为流水号，但最终生成的流水号是这三个字段的相加\n\n## 创建存储过程\n\n```\nCREATE  PROC dpPMT_SGetMaintainSeq\n@MaintainCate VARCHAR(2)\n\nAS\n--***********************累加编号*************************************************\nDECLARE @MaintainNo VARCHAR(12)\nIF NOT EXISTS(SELECT\n            *\n        FROM\n            NumSeq\n        WHERE\n            Cate=@MaintainCate AND DATEDIFF(DAY,CrTime,GETDATE())=0)\n    BEGIN\n        INSERT INTO\n            NumSeq(Cate,DateNo,Seq)\n        values(@MaintainCate,RIGHT(CONVERT(VARCHAR(4),YEAR(GETDATE())),2)+\n                REPLICATE('0',2-LEN(MONTH(GETDATE())))+CONVERT(VARCHAR(2),MONTH(GETDATE())),0)\n\n    END\nELSE\n    BEGIN\n        UPDATE\n            NumSeq\n        SET\n            Seq=Seq+1\n        WHERE\n            Cate=@MaintainCate AND DateNo=RIGHT(CONVERT(VARCHAR(4),YEAR(GETDATE())),2)+\n                       REPLICATE('0',2-LEN(MONTH(GETDATE())))+CONVERT(VARCHAR(2),MONTH(GETDATE()))\n    END\n\n--************************组合编号***************************************************************\nSELECT\n    @MaintainNo=Cate+DateNo+REPLICATE('0',6-LEN(Seq))+CONVERT(VARCHAR(6),Seq)\nFROM\n    NumSeq\nWHERE\n    Cate=@MaintainCate AND DateNo=RIGHT(CONVERT(VARCHAR(4),YEAR(GETDATE())),2)+\n                      REPLICATE('0',2-LEN(MONTH(GETDATE())))+CONVERT(VARCHAR(2),MONTH(GETDATE()))\n\nSELECT @MaintainNo\n```\n\n这个存储过程最终输出的结果如：AA071031000001 前面两位是传入的参数，中间四位是年份的后两位和月，最后的六位为6位数字的流水号。您也可以修改上面的存储过程来生成符合您要求的流水号\n\n\n","slug":"stored-procedure-to-generate-a-serial-number","published":1,"updated":"2016-08-13T13:37:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93f007oxfyn3kgucso4","content":"<h2 id=\"首先在数据库中创建一个存放流水号的表\"><a href=\"#首先在数据库中创建一个存放流水号的表\" class=\"headerlink\" title=\"首先在数据库中创建一个存放流水号的表\"></a>首先在数据库中创建一个存放流水号的表</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> [dbo].[NumSeq] (</div><div class=\"line\">    [Cate] [<span class=\"built_in\">varchar</span>] (<span class=\"number\">2</span>)  <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> ,</div><div class=\"line\">    [DateNo] [<span class=\"built_in\">varchar</span>] (<span class=\"number\">4</span>)  <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> ,</div><div class=\"line\">    [Seq] [<span class=\"built_in\">int</span>] <span class=\"literal\">NULL</span> ,</div><div class=\"line\">    [CrTime] [datetime] <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span></div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<p>上面的代码中，Cate 字段为流水号的头，可以在下面的存储过程中用参数的方式传入，我的定义是2个字符，这个可以根据具体需要更改</p>\n<ul>\n<li>DateNo 字段为获取日期信息</li>\n<li>Seq 字段为流水号，但最终生成的流水号是这三个字段的相加</li>\n</ul>\n<h2 id=\"创建存储过程\"><a href=\"#创建存储过程\" class=\"headerlink\" title=\"创建存储过程\"></a>创建存储过程</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CREATE</span>  PROC dpPMT_SGetMaintainSeq</div><div class=\"line\">@MaintainCate <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">2</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">AS</span></div><div class=\"line\"><span class=\"comment\">--***********************累加编号*************************************************</span></div><div class=\"line\"><span class=\"keyword\">DECLARE</span> @MaintainNo <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">12</span>)</div><div class=\"line\"><span class=\"keyword\">IF</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">EXISTS</span>(<span class=\"keyword\">SELECT</span></div><div class=\"line\">            *</div><div class=\"line\">        <span class=\"keyword\">FROM</span></div><div class=\"line\">            NumSeq</div><div class=\"line\">        <span class=\"keyword\">WHERE</span></div><div class=\"line\">            Cate=@MaintainCate <span class=\"keyword\">AND</span> <span class=\"keyword\">DATEDIFF</span>(<span class=\"keyword\">DAY</span>,CrTime,<span class=\"keyword\">GETDATE</span>())=<span class=\"number\">0</span>)</div><div class=\"line\">    <span class=\"keyword\">BEGIN</span></div><div class=\"line\">        <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span></div><div class=\"line\">            NumSeq(Cate,DateNo,Seq)</div><div class=\"line\">        <span class=\"keyword\">values</span>(@MaintainCate,<span class=\"keyword\">RIGHT</span>(<span class=\"keyword\">CONVERT</span>(<span class=\"built_in\">VARCHAR</span>(<span class=\"number\">4</span>),<span class=\"keyword\">YEAR</span>(<span class=\"keyword\">GETDATE</span>())),<span class=\"number\">2</span>)+</div><div class=\"line\">                <span class=\"keyword\">REPLICATE</span>(<span class=\"string\">'0'</span>,<span class=\"number\">2</span>-<span class=\"keyword\">LEN</span>(<span class=\"keyword\">MONTH</span>(<span class=\"keyword\">GETDATE</span>())))+<span class=\"keyword\">CONVERT</span>(<span class=\"built_in\">VARCHAR</span>(<span class=\"number\">2</span>),<span class=\"keyword\">MONTH</span>(<span class=\"keyword\">GETDATE</span>())),<span class=\"number\">0</span>)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">END</span></div><div class=\"line\"><span class=\"keyword\">ELSE</span></div><div class=\"line\">    <span class=\"keyword\">BEGIN</span></div><div class=\"line\">        <span class=\"keyword\">UPDATE</span></div><div class=\"line\">            NumSeq</div><div class=\"line\">        <span class=\"keyword\">SET</span></div><div class=\"line\">            Seq=Seq+<span class=\"number\">1</span></div><div class=\"line\">        <span class=\"keyword\">WHERE</span></div><div class=\"line\">            Cate=@MaintainCate <span class=\"keyword\">AND</span> DateNo=<span class=\"keyword\">RIGHT</span>(<span class=\"keyword\">CONVERT</span>(<span class=\"built_in\">VARCHAR</span>(<span class=\"number\">4</span>),<span class=\"keyword\">YEAR</span>(<span class=\"keyword\">GETDATE</span>())),<span class=\"number\">2</span>)+</div><div class=\"line\">                       <span class=\"keyword\">REPLICATE</span>(<span class=\"string\">'0'</span>,<span class=\"number\">2</span>-<span class=\"keyword\">LEN</span>(<span class=\"keyword\">MONTH</span>(<span class=\"keyword\">GETDATE</span>())))+<span class=\"keyword\">CONVERT</span>(<span class=\"built_in\">VARCHAR</span>(<span class=\"number\">2</span>),<span class=\"keyword\">MONTH</span>(<span class=\"keyword\">GETDATE</span>()))</div><div class=\"line\">    <span class=\"keyword\">END</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--************************组合编号***************************************************************</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span></div><div class=\"line\">    @MaintainNo=Cate+DateNo+<span class=\"keyword\">REPLICATE</span>(<span class=\"string\">'0'</span>,<span class=\"number\">6</span>-<span class=\"keyword\">LEN</span>(Seq))+<span class=\"keyword\">CONVERT</span>(<span class=\"built_in\">VARCHAR</span>(<span class=\"number\">6</span>),Seq)</div><div class=\"line\"><span class=\"keyword\">FROM</span></div><div class=\"line\">    NumSeq</div><div class=\"line\"><span class=\"keyword\">WHERE</span></div><div class=\"line\">    Cate=@MaintainCate <span class=\"keyword\">AND</span> DateNo=<span class=\"keyword\">RIGHT</span>(<span class=\"keyword\">CONVERT</span>(<span class=\"built_in\">VARCHAR</span>(<span class=\"number\">4</span>),<span class=\"keyword\">YEAR</span>(<span class=\"keyword\">GETDATE</span>())),<span class=\"number\">2</span>)+</div><div class=\"line\">                      <span class=\"keyword\">REPLICATE</span>(<span class=\"string\">'0'</span>,<span class=\"number\">2</span>-<span class=\"keyword\">LEN</span>(<span class=\"keyword\">MONTH</span>(<span class=\"keyword\">GETDATE</span>())))+<span class=\"keyword\">CONVERT</span>(<span class=\"built_in\">VARCHAR</span>(<span class=\"number\">2</span>),<span class=\"keyword\">MONTH</span>(<span class=\"keyword\">GETDATE</span>()))</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">SELECT</span> @MaintainNo</div></pre></td></tr></table></figure>\n<p>这个存储过程最终输出的结果如：AA071031000001 前面两位是传入的参数，中间四位是年份的后两位和月，最后的六位为6位数字的流水号。您也可以修改上面的存储过程来生成符合您要求的流水号</p>\n","excerpt":"","more":"<h2 id=\"首先在数据库中创建一个存放流水号的表\"><a href=\"#首先在数据库中创建一个存放流水号的表\" class=\"headerlink\" title=\"首先在数据库中创建一个存放流水号的表\"></a>首先在数据库中创建一个存放流水号的表</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> [dbo].[NumSeq] (</div><div class=\"line\">    [Cate] [<span class=\"built_in\">varchar</span>] (<span class=\"number\">2</span>)  <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> ,</div><div class=\"line\">    [DateNo] [<span class=\"built_in\">varchar</span>] (<span class=\"number\">4</span>)  <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> ,</div><div class=\"line\">    [Seq] [<span class=\"built_in\">int</span>] <span class=\"literal\">NULL</span> ,</div><div class=\"line\">    [CrTime] [datetime] <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span></div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<p>上面的代码中，Cate 字段为流水号的头，可以在下面的存储过程中用参数的方式传入，我的定义是2个字符，这个可以根据具体需要更改</p>\n<ul>\n<li>DateNo 字段为获取日期信息</li>\n<li>Seq 字段为流水号，但最终生成的流水号是这三个字段的相加</li>\n</ul>\n<h2 id=\"创建存储过程\"><a href=\"#创建存储过程\" class=\"headerlink\" title=\"创建存储过程\"></a>创建存储过程</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CREATE</span>  PROC dpPMT_SGetMaintainSeq</div><div class=\"line\">@MaintainCate <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">2</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">AS</span></div><div class=\"line\"><span class=\"comment\">--***********************累加编号*************************************************</span></div><div class=\"line\"><span class=\"keyword\">DECLARE</span> @MaintainNo <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">12</span>)</div><div class=\"line\"><span class=\"keyword\">IF</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">EXISTS</span>(<span class=\"keyword\">SELECT</span></div><div class=\"line\">            *</div><div class=\"line\">        <span class=\"keyword\">FROM</span></div><div class=\"line\">            NumSeq</div><div class=\"line\">        <span class=\"keyword\">WHERE</span></div><div class=\"line\">            Cate=@MaintainCate <span class=\"keyword\">AND</span> <span class=\"keyword\">DATEDIFF</span>(<span class=\"keyword\">DAY</span>,CrTime,<span class=\"keyword\">GETDATE</span>())=<span class=\"number\">0</span>)</div><div class=\"line\">    <span class=\"keyword\">BEGIN</span></div><div class=\"line\">        <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span></div><div class=\"line\">            NumSeq(Cate,DateNo,Seq)</div><div class=\"line\">        <span class=\"keyword\">values</span>(@MaintainCate,<span class=\"keyword\">RIGHT</span>(<span class=\"keyword\">CONVERT</span>(<span class=\"built_in\">VARCHAR</span>(<span class=\"number\">4</span>),<span class=\"keyword\">YEAR</span>(<span class=\"keyword\">GETDATE</span>())),<span class=\"number\">2</span>)+</div><div class=\"line\">                <span class=\"keyword\">REPLICATE</span>(<span class=\"string\">'0'</span>,<span class=\"number\">2</span>-<span class=\"keyword\">LEN</span>(<span class=\"keyword\">MONTH</span>(<span class=\"keyword\">GETDATE</span>())))+<span class=\"keyword\">CONVERT</span>(<span class=\"built_in\">VARCHAR</span>(<span class=\"number\">2</span>),<span class=\"keyword\">MONTH</span>(<span class=\"keyword\">GETDATE</span>())),<span class=\"number\">0</span>)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">END</span></div><div class=\"line\"><span class=\"keyword\">ELSE</span></div><div class=\"line\">    <span class=\"keyword\">BEGIN</span></div><div class=\"line\">        <span class=\"keyword\">UPDATE</span></div><div class=\"line\">            NumSeq</div><div class=\"line\">        <span class=\"keyword\">SET</span></div><div class=\"line\">            Seq=Seq+<span class=\"number\">1</span></div><div class=\"line\">        <span class=\"keyword\">WHERE</span></div><div class=\"line\">            Cate=@MaintainCate <span class=\"keyword\">AND</span> DateNo=<span class=\"keyword\">RIGHT</span>(<span class=\"keyword\">CONVERT</span>(<span class=\"built_in\">VARCHAR</span>(<span class=\"number\">4</span>),<span class=\"keyword\">YEAR</span>(<span class=\"keyword\">GETDATE</span>())),<span class=\"number\">2</span>)+</div><div class=\"line\">                       <span class=\"keyword\">REPLICATE</span>(<span class=\"string\">'0'</span>,<span class=\"number\">2</span>-<span class=\"keyword\">LEN</span>(<span class=\"keyword\">MONTH</span>(<span class=\"keyword\">GETDATE</span>())))+<span class=\"keyword\">CONVERT</span>(<span class=\"built_in\">VARCHAR</span>(<span class=\"number\">2</span>),<span class=\"keyword\">MONTH</span>(<span class=\"keyword\">GETDATE</span>()))</div><div class=\"line\">    <span class=\"keyword\">END</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--************************组合编号***************************************************************</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span></div><div class=\"line\">    @MaintainNo=Cate+DateNo+<span class=\"keyword\">REPLICATE</span>(<span class=\"string\">'0'</span>,<span class=\"number\">6</span>-<span class=\"keyword\">LEN</span>(Seq))+<span class=\"keyword\">CONVERT</span>(<span class=\"built_in\">VARCHAR</span>(<span class=\"number\">6</span>),Seq)</div><div class=\"line\"><span class=\"keyword\">FROM</span></div><div class=\"line\">    NumSeq</div><div class=\"line\"><span class=\"keyword\">WHERE</span></div><div class=\"line\">    Cate=@MaintainCate <span class=\"keyword\">AND</span> DateNo=<span class=\"keyword\">RIGHT</span>(<span class=\"keyword\">CONVERT</span>(<span class=\"built_in\">VARCHAR</span>(<span class=\"number\">4</span>),<span class=\"keyword\">YEAR</span>(<span class=\"keyword\">GETDATE</span>())),<span class=\"number\">2</span>)+</div><div class=\"line\">                      <span class=\"keyword\">REPLICATE</span>(<span class=\"string\">'0'</span>,<span class=\"number\">2</span>-<span class=\"keyword\">LEN</span>(<span class=\"keyword\">MONTH</span>(<span class=\"keyword\">GETDATE</span>())))+<span class=\"keyword\">CONVERT</span>(<span class=\"built_in\">VARCHAR</span>(<span class=\"number\">2</span>),<span class=\"keyword\">MONTH</span>(<span class=\"keyword\">GETDATE</span>()))</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">SELECT</span> @MaintainNo</div></pre></td></tr></table></figure>\n<p>这个存储过程最终输出的结果如：AA071031000001 前面两位是传入的参数，中间四位是年份的后两位和月，最后的六位为6位数字的流水号。您也可以修改上面的存储过程来生成符合您要求的流水号</p>\n"},{"title":"开发总结—数据库篇","date":"2008-08-05T16:00:00.000Z","_content":"\n本文是我在平时工作中所遇到的数据库方面的一些知识总结\n<!--more-->\n\n1.多条件查询\n\n多条件查询在实际应用中用的很多，在一些页面上会要求根据时间，类别，或是其他的一些关键字来查询数据，而且这些条件并不是一定要输入的。以前有过在C#代码中根据条件选中的情况来拼where条件字串，也有过在存储过程中用if来判断传进的参数，但是后来知道早存储过程中使用OR是最简单的，如下：\n\n```\ncreate Table Users\n(\n    id int,\n    name nvarchar(20),\n    age int\n)\n\ncreate proc sp_SGetUserInfo\n(\n  @Name nvarchar(20),\n  @Age int\n)\nas\nselect\n    *\nfrom\n    Users\nwhere\n    (@Name='' or name=@Name)\nand\n    (@Age='' or age=@Age)\n```\n\n2.使用isnull\n\n对于传进的参数有可能为空或是null的情况，isnull就很有用了。 通常可以这样来判断\n\n```\nISNULL(@Name,'')  --如果参数@Name为null，则返回''\n```\n\n3.在数据库中几个常用的日期格式转换\n\n日期格式转换也是经常用到的，通常2008-04-12和20080412 这两种格式用的比较多，下面列出一些常用的：\n\n```\nCONVERT(VARCHAR(10),GETDATE(),120)\n--返回-04-12\nCONVERT(VARCHAR(10),GETDATE(),20)\n--返回-04-12\nCONVERT(VARCHAR(10),GETDATE(),112)\n--返回\nCONVERT(VARCHAR(10),GETDATE(),111)\n--返回/04/12\n```\n\n4.取指定字符串中两个字符 中间的字符串\n\n```\ndeclare @str1 nvarchar(20)\ndeclare @str2 nvarchar(20)\ndeclare @str3 nvarchar(20)\nset @str1 = 'ABCDEFGH'\nset @str2 = 'ab'\nset @str3 = 'f'\n\ndeclare @a int  ,@b int\nset @a=CHARINDEX(right(@str2,1),@str1) --第二个字符串的最后一个字符的索引\nset @b=CHARINDEX(left(@str3,1),@str1)  --第三个字符串的第一个字符的索引\n\n--结果取得是第二个字符串和?第三个字符串中间的字符\nselect substring(@str1,@a+1,@b-@a-1)  \n```\n\n5.一个实现拆分由特殊符分隔的字符串的函数\n\n```\nCreate   FUNCTION split\n(\n  @StrAll varchar(8000),\n  @StrSeprate varchar(10)\n)\nRETURNS @temp TABLE(F1 VARCHAR(100))\nAS\nBEGIN\n    DECLARE @i INT\n    SET @StrAll =rtrim(ltrim(@StrAll ))\n    SET @i=charindex(@StrSeprate,@StrAll )\n    WHILE @i>=1\n    BEGIN\n        INSERT @temp VALUES(left(@StrAll ,@i-1))\n        SET @StrAll =substring(@StrAll ,@i+1,len(@StrAll )-@i)\n        SET @i=charindex(@StrSeprate,@StrAll )\n    END\n    IF @StrAll <>''\n    INSERT @temp VALUES(@StrAll )\n    RETURN\nEND\n```\n\n6.取出数据库中所有的表名\n\n```\nselect name as  tablename from sysobjects where type='U' and name<>'dtproperties'\n```\n\n7.sqlserver中取随机数的两种方法\n\na.创建一个表Rand，字段是：RandomNum ，存储0到9的数据。\n\n使用下面SQL语句可产生随机数：\n\n```\nselect top 1 RandomNum from Rand order by NewID()\n```\n\nb.使用sqlserver提供的Rand()函数\n\n```\nselect cast( floor(rand()*N) as int)\n--产生到N-1之间的随机数\nselect cast(ceiling(rand() * N) as int)\n--产生到N之间的随机数\n```\n\n8.数据库中的集合运算（交， 并 ，差）\n\n先创建示例表\n\n```\ncreate table T1\n(\n    id int\n)\n\ncreate table T2\n(\n    id int\n)\ninsert T1\nselect 1 union all\nselect 2 union all\nselect 3 union all\nselect 4 \n\ninsert T2\nselect 3 union all\nselect 4\n运算代码：\n\n--交集\n----------------------------------------------\n--方法\nselect *  from T1\nintersect\nselect * from T2\n--方法\nselect distinct\n    *\nfrom\n    T1\nwhere\n    T1.id in (select id from T2)\n--方法\nselect distinct\n    *\nfrom\n    T1\nwhere exists(select id from T2 where T2.id=T1.id)\n\n--in和exists 的不同是in只能判断唯一列，而exists可以判断多列\n---------------------------------------------------\n\n--并集\nselect *  from T1\nunion all\nselect * from T2\n----------------------------------------------------\n--差集\nselect *  from T1\nexcept\nselect * from T2\n```\n\n返回结果就不写了，呵呵，大家运行一下就知道了。\n\n9 在sqlserver实现除法\n\n通常情况下在用sql语句写除法得到的都是整数部分\n\n```\nselect 29/3\n--结果为\n```\n\n用下面的方法可以得到小数\n\n```\n--定义结果变量为Decimal类型\ndeclare @result decimal(18,2)\n--关键在于除数要乘以1.0\nset @result=cast((29*1.0)/3  as decimal(18,2))\nselect @result\n--结果为9.67\n```\n\n10 SqlServer 中根据时间得到星期\n\n```\nselect datename(weekday,'2009-06-19')\n--结果星期五 \n\nselect DATEPART(dw,'2009-06-19')\n-- 结果6 \n\n--因为系统默认星期天为一个星期的第一天，所以星期五对应的值为\n```\n\n11 使用sql语句设置表主键\n\n```\nalter table TableName alter column ColumnName int not null\n go\nalter table TableName add constraint pk_ColumnName primary key(ID)\n```\n\n12 SCOPE_IDENTITY   @@IDENTITY    IDENT_CURRENT的区别\n\n```\n--SCOPE_IDENTITY和@@IDENTITY都返回上面操作的数据表最后row的IDENTITY 列的值\n--不过SCOPE_IDENTITY受到作用域的限制,@@IDENTITY不受作用域的限制\n/*\n    如有T1和T2两种?表?,在?表?T1中有一insert触发器,当在表T1中插入一条数据时,触发\n    器被激发,在T2表中插入一条数据,这时就存在两个作用域,T1 和T2 ,这时如果在\n    T1的insert语句后执行SCOPE_IDENTITY() 和@@IDENTITY将返回不同的值\n    SCOPE_IDENTITY 返回的是T1的IDENTITY\n    @@IDENTITY 返回的是T2的IDENTITY\n*/\nselect SCOPE_IDENTITY()\nselect @@IDENTITY \n\n--返回指?定表中的最后一个identity的值\nselect IDENT_CURRENT('TableName')\n```\n\n13 truncate和delete的区别\n\n```\n--delete 和truncate的作用作用都是将指定表中的数据清除，但两种方法有很大的区别\n\n--delete语句是dml,这个操作会放到?rollback segement中\n--事务提交之后才生效，如果有相应的trigger,执行的时候将被触发\n--用delete删除的数据可以找回来\ndelete from tablename \n\n--truncate是ddl, 操作立即生效,\n--原数据不放到rollback segment中,不能回滚. 操作不触发trigger\n--所以在使用truncate的时候要特别小心\ntruncate table tablename\n```\n\n14 sqlservr中随机取数据\n\n```\n--MsSql随机取数据\nselect top 10 * from tablename order by newid()\n--Access 随机取数据\nselect  top 10 *  FROM tablename order by rnd(id)\n--mySql 随机取数据\nSELECT * FROM tablename order by rand() limit 10\n```\n\n15 根据当前时间取上个月1号的时间\n\n```\nselect dateadd(month,-1,getdate())-\n             day(dateadd(month,-1,getdate()))+1\n```\n\n不断更新中……\n\n\n\n","source":"_posts/summary-the-database-development.md","raw":"---\ntitle: 开发总结—数据库篇\ndate: 2008-08-06\ncategories: [SqlServer]\ntags: [Sql,小技巧]\n---\n\n本文是我在平时工作中所遇到的数据库方面的一些知识总结\n<!--more-->\n\n1.多条件查询\n\n多条件查询在实际应用中用的很多，在一些页面上会要求根据时间，类别，或是其他的一些关键字来查询数据，而且这些条件并不是一定要输入的。以前有过在C#代码中根据条件选中的情况来拼where条件字串，也有过在存储过程中用if来判断传进的参数，但是后来知道早存储过程中使用OR是最简单的，如下：\n\n```\ncreate Table Users\n(\n    id int,\n    name nvarchar(20),\n    age int\n)\n\ncreate proc sp_SGetUserInfo\n(\n  @Name nvarchar(20),\n  @Age int\n)\nas\nselect\n    *\nfrom\n    Users\nwhere\n    (@Name='' or name=@Name)\nand\n    (@Age='' or age=@Age)\n```\n\n2.使用isnull\n\n对于传进的参数有可能为空或是null的情况，isnull就很有用了。 通常可以这样来判断\n\n```\nISNULL(@Name,'')  --如果参数@Name为null，则返回''\n```\n\n3.在数据库中几个常用的日期格式转换\n\n日期格式转换也是经常用到的，通常2008-04-12和20080412 这两种格式用的比较多，下面列出一些常用的：\n\n```\nCONVERT(VARCHAR(10),GETDATE(),120)\n--返回-04-12\nCONVERT(VARCHAR(10),GETDATE(),20)\n--返回-04-12\nCONVERT(VARCHAR(10),GETDATE(),112)\n--返回\nCONVERT(VARCHAR(10),GETDATE(),111)\n--返回/04/12\n```\n\n4.取指定字符串中两个字符 中间的字符串\n\n```\ndeclare @str1 nvarchar(20)\ndeclare @str2 nvarchar(20)\ndeclare @str3 nvarchar(20)\nset @str1 = 'ABCDEFGH'\nset @str2 = 'ab'\nset @str3 = 'f'\n\ndeclare @a int  ,@b int\nset @a=CHARINDEX(right(@str2,1),@str1) --第二个字符串的最后一个字符的索引\nset @b=CHARINDEX(left(@str3,1),@str1)  --第三个字符串的第一个字符的索引\n\n--结果取得是第二个字符串和?第三个字符串中间的字符\nselect substring(@str1,@a+1,@b-@a-1)  \n```\n\n5.一个实现拆分由特殊符分隔的字符串的函数\n\n```\nCreate   FUNCTION split\n(\n  @StrAll varchar(8000),\n  @StrSeprate varchar(10)\n)\nRETURNS @temp TABLE(F1 VARCHAR(100))\nAS\nBEGIN\n    DECLARE @i INT\n    SET @StrAll =rtrim(ltrim(@StrAll ))\n    SET @i=charindex(@StrSeprate,@StrAll )\n    WHILE @i>=1\n    BEGIN\n        INSERT @temp VALUES(left(@StrAll ,@i-1))\n        SET @StrAll =substring(@StrAll ,@i+1,len(@StrAll )-@i)\n        SET @i=charindex(@StrSeprate,@StrAll )\n    END\n    IF @StrAll <>''\n    INSERT @temp VALUES(@StrAll )\n    RETURN\nEND\n```\n\n6.取出数据库中所有的表名\n\n```\nselect name as  tablename from sysobjects where type='U' and name<>'dtproperties'\n```\n\n7.sqlserver中取随机数的两种方法\n\na.创建一个表Rand，字段是：RandomNum ，存储0到9的数据。\n\n使用下面SQL语句可产生随机数：\n\n```\nselect top 1 RandomNum from Rand order by NewID()\n```\n\nb.使用sqlserver提供的Rand()函数\n\n```\nselect cast( floor(rand()*N) as int)\n--产生到N-1之间的随机数\nselect cast(ceiling(rand() * N) as int)\n--产生到N之间的随机数\n```\n\n8.数据库中的集合运算（交， 并 ，差）\n\n先创建示例表\n\n```\ncreate table T1\n(\n    id int\n)\n\ncreate table T2\n(\n    id int\n)\ninsert T1\nselect 1 union all\nselect 2 union all\nselect 3 union all\nselect 4 \n\ninsert T2\nselect 3 union all\nselect 4\n运算代码：\n\n--交集\n----------------------------------------------\n--方法\nselect *  from T1\nintersect\nselect * from T2\n--方法\nselect distinct\n    *\nfrom\n    T1\nwhere\n    T1.id in (select id from T2)\n--方法\nselect distinct\n    *\nfrom\n    T1\nwhere exists(select id from T2 where T2.id=T1.id)\n\n--in和exists 的不同是in只能判断唯一列，而exists可以判断多列\n---------------------------------------------------\n\n--并集\nselect *  from T1\nunion all\nselect * from T2\n----------------------------------------------------\n--差集\nselect *  from T1\nexcept\nselect * from T2\n```\n\n返回结果就不写了，呵呵，大家运行一下就知道了。\n\n9 在sqlserver实现除法\n\n通常情况下在用sql语句写除法得到的都是整数部分\n\n```\nselect 29/3\n--结果为\n```\n\n用下面的方法可以得到小数\n\n```\n--定义结果变量为Decimal类型\ndeclare @result decimal(18,2)\n--关键在于除数要乘以1.0\nset @result=cast((29*1.0)/3  as decimal(18,2))\nselect @result\n--结果为9.67\n```\n\n10 SqlServer 中根据时间得到星期\n\n```\nselect datename(weekday,'2009-06-19')\n--结果星期五 \n\nselect DATEPART(dw,'2009-06-19')\n-- 结果6 \n\n--因为系统默认星期天为一个星期的第一天，所以星期五对应的值为\n```\n\n11 使用sql语句设置表主键\n\n```\nalter table TableName alter column ColumnName int not null\n go\nalter table TableName add constraint pk_ColumnName primary key(ID)\n```\n\n12 SCOPE_IDENTITY   @@IDENTITY    IDENT_CURRENT的区别\n\n```\n--SCOPE_IDENTITY和@@IDENTITY都返回上面操作的数据表最后row的IDENTITY 列的值\n--不过SCOPE_IDENTITY受到作用域的限制,@@IDENTITY不受作用域的限制\n/*\n    如有T1和T2两种?表?,在?表?T1中有一insert触发器,当在表T1中插入一条数据时,触发\n    器被激发,在T2表中插入一条数据,这时就存在两个作用域,T1 和T2 ,这时如果在\n    T1的insert语句后执行SCOPE_IDENTITY() 和@@IDENTITY将返回不同的值\n    SCOPE_IDENTITY 返回的是T1的IDENTITY\n    @@IDENTITY 返回的是T2的IDENTITY\n*/\nselect SCOPE_IDENTITY()\nselect @@IDENTITY \n\n--返回指?定表中的最后一个identity的值\nselect IDENT_CURRENT('TableName')\n```\n\n13 truncate和delete的区别\n\n```\n--delete 和truncate的作用作用都是将指定表中的数据清除，但两种方法有很大的区别\n\n--delete语句是dml,这个操作会放到?rollback segement中\n--事务提交之后才生效，如果有相应的trigger,执行的时候将被触发\n--用delete删除的数据可以找回来\ndelete from tablename \n\n--truncate是ddl, 操作立即生效,\n--原数据不放到rollback segment中,不能回滚. 操作不触发trigger\n--所以在使用truncate的时候要特别小心\ntruncate table tablename\n```\n\n14 sqlservr中随机取数据\n\n```\n--MsSql随机取数据\nselect top 10 * from tablename order by newid()\n--Access 随机取数据\nselect  top 10 *  FROM tablename order by rnd(id)\n--mySql 随机取数据\nSELECT * FROM tablename order by rand() limit 10\n```\n\n15 根据当前时间取上个月1号的时间\n\n```\nselect dateadd(month,-1,getdate())-\n             day(dateadd(month,-1,getdate()))+1\n```\n\n不断更新中……\n\n\n\n","slug":"summary-the-database-development","published":1,"updated":"2016-08-14T06:52:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93h007rxfynans4c3dq","content":"<p>本文是我在平时工作中所遇到的数据库方面的一些知识总结<br><a id=\"more\"></a></p>\n<p>1.多条件查询</p>\n<p>多条件查询在实际应用中用的很多，在一些页面上会要求根据时间，类别，或是其他的一些关键字来查询数据，而且这些条件并不是一定要输入的。以前有过在C#代码中根据条件选中的情况来拼where条件字串，也有过在存储过程中用if来判断传进的参数，但是后来知道早存储过程中使用OR是最简单的，如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">Table</span> <span class=\"keyword\">Users</span></div><div class=\"line\">(</div><div class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">int</span>,</div><div class=\"line\">    <span class=\"keyword\">name</span> <span class=\"keyword\">nvarchar</span>(<span class=\"number\">20</span>),</div><div class=\"line\">    age <span class=\"built_in\">int</span></div><div class=\"line\">)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">create</span> proc sp_SGetUserInfo</div><div class=\"line\">(</div><div class=\"line\">  @<span class=\"keyword\">Name</span> <span class=\"keyword\">nvarchar</span>(<span class=\"number\">20</span>),</div><div class=\"line\">  @Age <span class=\"built_in\">int</span></div><div class=\"line\">)</div><div class=\"line\"><span class=\"keyword\">as</span></div><div class=\"line\"><span class=\"keyword\">select</span></div><div class=\"line\">    *</div><div class=\"line\"><span class=\"keyword\">from</span></div><div class=\"line\">    <span class=\"keyword\">Users</span></div><div class=\"line\"><span class=\"keyword\">where</span></div><div class=\"line\">    (@<span class=\"keyword\">Name</span>=<span class=\"string\">''</span> <span class=\"keyword\">or</span> <span class=\"keyword\">name</span>=@<span class=\"keyword\">Name</span>)</div><div class=\"line\"><span class=\"keyword\">and</span></div><div class=\"line\">    (@Age=<span class=\"string\">''</span> <span class=\"keyword\">or</span> age=@Age)</div></pre></td></tr></table></figure>\n<p>2.使用isnull</p>\n<p>对于传进的参数有可能为空或是null的情况，isnull就很有用了。 通常可以这样来判断</p>\n<figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ISNULL(<span class=\"meta\">@Name</span>,<span class=\"string\">''</span>)  --如果参数<span class=\"meta\">@Name</span>为<span class=\"keyword\">null</span>，则返回<span class=\"string\">''</span></div></pre></td></tr></table></figure>\n<p>3.在数据库中几个常用的日期格式转换</p>\n<p>日期格式转换也是经常用到的，通常2008-04-12和20080412 这两种格式用的比较多，下面列出一些常用的：</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">CONVERT(VARCHAR(<span class=\"number\">10</span>),GETDATE(),<span class=\"number\">120</span>)</div><div class=\"line\">--返回<span class=\"number\">-04</span><span class=\"number\">-12</span></div><div class=\"line\">CONVERT(VARCHAR(<span class=\"number\">10</span>),GETDATE(),<span class=\"number\">20</span>)</div><div class=\"line\">--返回<span class=\"number\">-04</span><span class=\"number\">-12</span></div><div class=\"line\">CONVERT(VARCHAR(<span class=\"number\">10</span>),GETDATE(),<span class=\"number\">112</span>)</div><div class=\"line\">--返回</div><div class=\"line\">CONVERT(VARCHAR(<span class=\"number\">10</span>),GETDATE(),<span class=\"number\">111</span>)</div><div class=\"line\">--返回/<span class=\"number\">04</span>/<span class=\"number\">12</span></div></pre></td></tr></table></figure>\n<p>4.取指定字符串中两个字符 中间的字符串</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare <span class=\"variable\">@str1</span> nvarchar(<span class=\"number\">20</span>)</div><div class=\"line\">declare <span class=\"variable\">@str2</span> nvarchar(<span class=\"number\">20</span>)</div><div class=\"line\">declare <span class=\"variable\">@str3</span> nvarchar(<span class=\"number\">20</span>)</div><div class=\"line\">set <span class=\"variable\">@str1</span> = <span class=\"string\">'ABCDEFGH'</span></div><div class=\"line\">set <span class=\"variable\">@str2</span> = <span class=\"string\">'ab'</span></div><div class=\"line\">set <span class=\"variable\">@str3</span> = <span class=\"string\">'f'</span></div><div class=\"line\"></div><div class=\"line\">declare <span class=\"variable\">@a</span> int  ,<span class=\"variable\">@b</span> int</div><div class=\"line\">set <span class=\"variable\">@a</span>=CHARINDEX(right(<span class=\"variable\">@str2</span>,<span class=\"number\">1</span>),<span class=\"variable\">@str1</span>) --第二个字符串的最后一个字符的索引</div><div class=\"line\">set <span class=\"variable\">@b</span>=CHARINDEX(left(<span class=\"variable\">@str3</span>,<span class=\"number\">1</span>),<span class=\"variable\">@str1</span>)  --第三个字符串的第一个字符的索引</div><div class=\"line\"></div><div class=\"line\">--结果取得是第二个字符串和?第三个字符串中间的字符</div><div class=\"line\">select substring(<span class=\"variable\">@str1</span>,<span class=\"variable\">@a</span>+<span class=\"number\">1</span>,<span class=\"variable\">@b-</span><span class=\"variable\">@a-1</span>)</div></pre></td></tr></table></figure>\n<p>5.一个实现拆分由特殊符分隔的字符串的函数</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">Create</span>   <span class=\"keyword\">FUNCTION</span> <span class=\"keyword\">split</span></div><div class=\"line\">(</div><div class=\"line\">  @StrAll <span class=\"built_in\">varchar</span>(<span class=\"number\">8000</span>),</div><div class=\"line\">  @StrSeprate <span class=\"built_in\">varchar</span>(<span class=\"number\">10</span>)</div><div class=\"line\">)</div><div class=\"line\"><span class=\"keyword\">RETURNS</span> @temp <span class=\"keyword\">TABLE</span>(F1 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>))</div><div class=\"line\"><span class=\"keyword\">AS</span></div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">    <span class=\"keyword\">DECLARE</span> @i <span class=\"built_in\">INT</span></div><div class=\"line\">    <span class=\"keyword\">SET</span> @StrAll =<span class=\"keyword\">rtrim</span>(<span class=\"keyword\">ltrim</span>(@StrAll ))</div><div class=\"line\">    <span class=\"keyword\">SET</span> @i=<span class=\"keyword\">charindex</span>(@StrSeprate,@StrAll )</div><div class=\"line\">    <span class=\"keyword\">WHILE</span> @i&gt;=<span class=\"number\">1</span></div><div class=\"line\">    <span class=\"keyword\">BEGIN</span></div><div class=\"line\">        <span class=\"keyword\">INSERT</span> @temp <span class=\"keyword\">VALUES</span>(<span class=\"keyword\">left</span>(@StrAll ,@i<span class=\"number\">-1</span>))</div><div class=\"line\">        <span class=\"keyword\">SET</span> @StrAll =<span class=\"keyword\">substring</span>(@StrAll ,@i+<span class=\"number\">1</span>,<span class=\"keyword\">len</span>(@StrAll )-@i)</div><div class=\"line\">        <span class=\"keyword\">SET</span> @i=<span class=\"keyword\">charindex</span>(@StrSeprate,@StrAll )</div><div class=\"line\">    <span class=\"keyword\">END</span></div><div class=\"line\">    <span class=\"keyword\">IF</span> @StrAll &lt;&gt;<span class=\"string\">''</span></div><div class=\"line\">    <span class=\"keyword\">INSERT</span> @temp <span class=\"keyword\">VALUES</span>(@StrAll )</div><div class=\"line\">    <span class=\"keyword\">RETURN</span></div><div class=\"line\"><span class=\"keyword\">END</span></div></pre></td></tr></table></figure>\n<p>6.取出数据库中所有的表名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">name</span> <span class=\"keyword\">as</span>  tablename <span class=\"keyword\">from</span> sysobjects <span class=\"keyword\">where</span> <span class=\"keyword\">type</span>=<span class=\"string\">'U'</span> <span class=\"keyword\">and</span> <span class=\"keyword\">name</span>&lt;&gt;<span class=\"string\">'dtproperties'</span></div></pre></td></tr></table></figure>\n<p>7.sqlserver中取随机数的两种方法</p>\n<p>a.创建一个表Rand，字段是：RandomNum ，存储0到9的数据。</p>\n<p>使用下面SQL语句可产生随机数：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> top <span class=\"number\">1</span> RandomNum <span class=\"keyword\">from</span> <span class=\"keyword\">Rand</span> <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> NewID()</div></pre></td></tr></table></figure>\n<p>b.使用sqlserver提供的Rand()函数</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">cast</span>( <span class=\"keyword\">floor</span>(<span class=\"keyword\">rand</span>()*N) <span class=\"keyword\">as</span> <span class=\"built_in\">int</span>)</div><div class=\"line\"><span class=\"comment\">--产生到N-1之间的随机数</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">cast</span>(<span class=\"keyword\">ceiling</span>(<span class=\"keyword\">rand</span>() * N) <span class=\"keyword\">as</span> <span class=\"built_in\">int</span>)</div><div class=\"line\"><span class=\"comment\">--产生到N之间的随机数</span></div></pre></td></tr></table></figure>\n<p>8.数据库中的集合运算（交， 并 ，差）</p>\n<p>先创建示例表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> T1</div><div class=\"line\">(</div><div class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">int</span></div><div class=\"line\">)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> T2</div><div class=\"line\">(</div><div class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">int</span></div><div class=\"line\">)</div><div class=\"line\"><span class=\"keyword\">insert</span> T1</div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">1</span> <span class=\"keyword\">union</span> all</div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">2</span> <span class=\"keyword\">union</span> all</div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">3</span> <span class=\"keyword\">union</span> all</div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">4</span> </div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">insert</span> T2</div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">3</span> <span class=\"keyword\">union</span> all</div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">4</span></div><div class=\"line\">运算代码：</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--交集</span></div><div class=\"line\"><span class=\"comment\">----------------------------------------------</span></div><div class=\"line\"><span class=\"comment\">--方法</span></div><div class=\"line\"><span class=\"keyword\">select</span> *  <span class=\"keyword\">from</span> T1</div><div class=\"line\"><span class=\"keyword\">intersect</span></div><div class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> T2</div><div class=\"line\"><span class=\"comment\">--方法</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">distinct</span></div><div class=\"line\">    *</div><div class=\"line\"><span class=\"keyword\">from</span></div><div class=\"line\">    T1</div><div class=\"line\"><span class=\"keyword\">where</span></div><div class=\"line\">    T1.id <span class=\"keyword\">in</span> (<span class=\"keyword\">select</span> <span class=\"keyword\">id</span> <span class=\"keyword\">from</span> T2)</div><div class=\"line\"><span class=\"comment\">--方法</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">distinct</span></div><div class=\"line\">    *</div><div class=\"line\"><span class=\"keyword\">from</span></div><div class=\"line\">    T1</div><div class=\"line\"><span class=\"keyword\">where</span> <span class=\"keyword\">exists</span>(<span class=\"keyword\">select</span> <span class=\"keyword\">id</span> <span class=\"keyword\">from</span> T2 <span class=\"keyword\">where</span> T2.id=T1.id)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--in和exists 的不同是in只能判断唯一列，而exists可以判断多列</span></div><div class=\"line\"><span class=\"comment\">---------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--并集</span></div><div class=\"line\"><span class=\"keyword\">select</span> *  <span class=\"keyword\">from</span> T1</div><div class=\"line\"><span class=\"keyword\">union</span> all</div><div class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> T2</div><div class=\"line\"><span class=\"comment\">----------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\">--差集</span></div><div class=\"line\"><span class=\"keyword\">select</span> *  <span class=\"keyword\">from</span> T1</div><div class=\"line\"><span class=\"keyword\">except</span></div><div class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> T2</div></pre></td></tr></table></figure>\n<p>返回结果就不写了，呵呵，大家运行一下就知道了。</p>\n<p>9 在sqlserver实现除法</p>\n<p>通常情况下在用sql语句写除法得到的都是整数部分</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">29</span>/<span class=\"number\">3</span></div><div class=\"line\"><span class=\"comment\">--结果为</span></div></pre></td></tr></table></figure>\n<p>用下面的方法可以得到小数</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">--定义结果变量为Decimal类型</div><div class=\"line\">declare <span class=\"variable\">@result</span> decimal(<span class=\"number\">18</span>,<span class=\"number\">2</span>)</div><div class=\"line\">--关键在于除数要乘以<span class=\"number\">1.0</span></div><div class=\"line\">set <span class=\"variable\">@result</span>=cast((<span class=\"number\">29</span>*<span class=\"number\">1.0</span>)/<span class=\"number\">3</span>  as decimal(<span class=\"number\">18</span>,<span class=\"number\">2</span>))</div><div class=\"line\">select <span class=\"variable\">@result</span></div><div class=\"line\">--结果为<span class=\"number\">9.67</span></div></pre></td></tr></table></figure>\n<p>10 SqlServer 中根据时间得到星期</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">datename</span>(<span class=\"keyword\">weekday</span>,<span class=\"string\">'2009-06-19'</span>)</div><div class=\"line\"><span class=\"comment\">--结果星期五 </span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">DATEPART</span>(dw,<span class=\"string\">'2009-06-19'</span>)</div><div class=\"line\"><span class=\"comment\">-- 结果6 </span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--因为系统默认星期天为一个星期的第一天，所以星期五对应的值为</span></div></pre></td></tr></table></figure>\n<p>11 使用sql语句设置表主键</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> TableName <span class=\"keyword\">alter</span> <span class=\"keyword\">column</span> ColumnName <span class=\"built_in\">int</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span></div><div class=\"line\"> <span class=\"keyword\">go</span></div><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> TableName <span class=\"keyword\">add</span> <span class=\"keyword\">constraint</span> pk_ColumnName primary <span class=\"keyword\">key</span>(<span class=\"keyword\">ID</span>)</div></pre></td></tr></table></figure>\n<p>12 SCOPE_IDENTITY   @@IDENTITY    IDENT_CURRENT的区别</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">--SCOPE_IDENTITY和@<span class=\"variable\">@IDENTITY</span>都返回上面操作的数据表最后row的IDENTITY 列的值</div><div class=\"line\">--不过SCOPE_IDENTITY受到作用域的限制,<span class=\"variable\">@@IDENTITY</span>不受作用域的限制</div><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\">    如有T1和T2两种?表?,在?表?T1中有一insert触发器,当在表T1中插入一条数据时,触发</div><div class=\"line\">    器被激发,在T2表中插入一条数据,这时就存在两个作用域,T1 和T2 ,这时如果在</div><div class=\"line\">    T1的insert语句后执行SCOPE_IDENTITY() 和@@IDENTITY将返回不同的值</div><div class=\"line\">    SCOPE_IDENTITY 返回的是T1的IDENTITY</div><div class=\"line\">    @@IDENTITY 返回的是T2的IDENTITY</div><div class=\"line\">*/</div><div class=\"line\">select SCOPE_IDENTITY()</div><div class=\"line\">select <span class=\"variable\">@@IDENTITY</span> </div><div class=\"line\"></div><div class=\"line\">--返回指?定表中的最后一个identity的值</div><div class=\"line\">select IDENT_CURRENT(<span class=\"string\">'TableName'</span>)</div></pre></td></tr></table></figure>\n<p>13 truncate和delete的区别</p>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">-<span class=\"ruby\">-delete 和truncate的作用作用都是将指定表中的数据清除，但两种方法有很大的区别</span></div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-delete语句是dml,这个操作会放到?rollback segement中</span></div><div class=\"line\">-<span class=\"ruby\">-事务提交之后才生效，如果有相应的trigger,执行的时候将被触发</span></div><div class=\"line\">-<span class=\"ruby\">-用delete删除的数据可以找回来</span></div><div class=\"line\">delete from tablename </div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-truncate是ddl, 操作立即生效,</span></div><div class=\"line\">-<span class=\"ruby\">-原数据不放到rollback segment中,不能回滚. 操作不触发trigger</span></div><div class=\"line\">-<span class=\"ruby\">-所以在使用truncate的时候要特别小心</span></div><div class=\"line\">truncate table tablename</div></pre></td></tr></table></figure>\n<p>14 sqlservr中随机取数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--MsSql随机取数据</span></div><div class=\"line\"><span class=\"keyword\">select</span> top <span class=\"number\">10</span> * <span class=\"keyword\">from</span> tablename <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> newid()</div><div class=\"line\"><span class=\"comment\">--Access 随机取数据</span></div><div class=\"line\"><span class=\"keyword\">select</span>  top <span class=\"number\">10</span> *  <span class=\"keyword\">FROM</span> tablename <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> rnd(<span class=\"keyword\">id</span>)</div><div class=\"line\"><span class=\"comment\">--mySql 随机取数据</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> tablename <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> <span class=\"keyword\">rand</span>() <span class=\"keyword\">limit</span> <span class=\"number\">10</span></div></pre></td></tr></table></figure>\n<p>15 根据当前时间取上个月1号的时间</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">select dateadd(<span class=\"name\">month</span>,<span class=\"number\">-1</span>,getdate())-</div><div class=\"line\">             day(<span class=\"name\">dateadd</span>(<span class=\"name\">month</span>,<span class=\"number\">-1</span>,getdate()))<span class=\"number\">+1</span></div></pre></td></tr></table></figure>\n<p>不断更新中……</p>\n","excerpt":"<p>本文是我在平时工作中所遇到的数据库方面的一些知识总结<br>","more":"</p>\n<p>1.多条件查询</p>\n<p>多条件查询在实际应用中用的很多，在一些页面上会要求根据时间，类别，或是其他的一些关键字来查询数据，而且这些条件并不是一定要输入的。以前有过在C#代码中根据条件选中的情况来拼where条件字串，也有过在存储过程中用if来判断传进的参数，但是后来知道早存储过程中使用OR是最简单的，如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">Table</span> <span class=\"keyword\">Users</span></div><div class=\"line\">(</div><div class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">int</span>,</div><div class=\"line\">    <span class=\"keyword\">name</span> <span class=\"keyword\">nvarchar</span>(<span class=\"number\">20</span>),</div><div class=\"line\">    age <span class=\"built_in\">int</span></div><div class=\"line\">)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">create</span> proc sp_SGetUserInfo</div><div class=\"line\">(</div><div class=\"line\">  @<span class=\"keyword\">Name</span> <span class=\"keyword\">nvarchar</span>(<span class=\"number\">20</span>),</div><div class=\"line\">  @Age <span class=\"built_in\">int</span></div><div class=\"line\">)</div><div class=\"line\"><span class=\"keyword\">as</span></div><div class=\"line\"><span class=\"keyword\">select</span></div><div class=\"line\">    *</div><div class=\"line\"><span class=\"keyword\">from</span></div><div class=\"line\">    <span class=\"keyword\">Users</span></div><div class=\"line\"><span class=\"keyword\">where</span></div><div class=\"line\">    (@<span class=\"keyword\">Name</span>=<span class=\"string\">''</span> <span class=\"keyword\">or</span> <span class=\"keyword\">name</span>=@<span class=\"keyword\">Name</span>)</div><div class=\"line\"><span class=\"keyword\">and</span></div><div class=\"line\">    (@Age=<span class=\"string\">''</span> <span class=\"keyword\">or</span> age=@Age)</div></pre></td></tr></table></figure>\n<p>2.使用isnull</p>\n<p>对于传进的参数有可能为空或是null的情况，isnull就很有用了。 通常可以这样来判断</p>\n<figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ISNULL(<span class=\"meta\">@Name</span>,<span class=\"string\">''</span>)  --如果参数<span class=\"meta\">@Name</span>为<span class=\"keyword\">null</span>，则返回<span class=\"string\">''</span></div></pre></td></tr></table></figure>\n<p>3.在数据库中几个常用的日期格式转换</p>\n<p>日期格式转换也是经常用到的，通常2008-04-12和20080412 这两种格式用的比较多，下面列出一些常用的：</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">CONVERT(VARCHAR(<span class=\"number\">10</span>),GETDATE(),<span class=\"number\">120</span>)</div><div class=\"line\">--返回<span class=\"number\">-04</span><span class=\"number\">-12</span></div><div class=\"line\">CONVERT(VARCHAR(<span class=\"number\">10</span>),GETDATE(),<span class=\"number\">20</span>)</div><div class=\"line\">--返回<span class=\"number\">-04</span><span class=\"number\">-12</span></div><div class=\"line\">CONVERT(VARCHAR(<span class=\"number\">10</span>),GETDATE(),<span class=\"number\">112</span>)</div><div class=\"line\">--返回</div><div class=\"line\">CONVERT(VARCHAR(<span class=\"number\">10</span>),GETDATE(),<span class=\"number\">111</span>)</div><div class=\"line\">--返回/<span class=\"number\">04</span>/<span class=\"number\">12</span></div></pre></td></tr></table></figure>\n<p>4.取指定字符串中两个字符 中间的字符串</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare <span class=\"variable\">@str1</span> nvarchar(<span class=\"number\">20</span>)</div><div class=\"line\">declare <span class=\"variable\">@str2</span> nvarchar(<span class=\"number\">20</span>)</div><div class=\"line\">declare <span class=\"variable\">@str3</span> nvarchar(<span class=\"number\">20</span>)</div><div class=\"line\">set <span class=\"variable\">@str1</span> = <span class=\"string\">'ABCDEFGH'</span></div><div class=\"line\">set <span class=\"variable\">@str2</span> = <span class=\"string\">'ab'</span></div><div class=\"line\">set <span class=\"variable\">@str3</span> = <span class=\"string\">'f'</span></div><div class=\"line\"></div><div class=\"line\">declare <span class=\"variable\">@a</span> int  ,<span class=\"variable\">@b</span> int</div><div class=\"line\">set <span class=\"variable\">@a</span>=CHARINDEX(right(<span class=\"variable\">@str2</span>,<span class=\"number\">1</span>),<span class=\"variable\">@str1</span>) --第二个字符串的最后一个字符的索引</div><div class=\"line\">set <span class=\"variable\">@b</span>=CHARINDEX(left(<span class=\"variable\">@str3</span>,<span class=\"number\">1</span>),<span class=\"variable\">@str1</span>)  --第三个字符串的第一个字符的索引</div><div class=\"line\"></div><div class=\"line\">--结果取得是第二个字符串和?第三个字符串中间的字符</div><div class=\"line\">select substring(<span class=\"variable\">@str1</span>,<span class=\"variable\">@a</span>+<span class=\"number\">1</span>,<span class=\"variable\">@b-</span><span class=\"variable\">@a-1</span>)</div></pre></td></tr></table></figure>\n<p>5.一个实现拆分由特殊符分隔的字符串的函数</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">Create</span>   <span class=\"keyword\">FUNCTION</span> <span class=\"keyword\">split</span></div><div class=\"line\">(</div><div class=\"line\">  @StrAll <span class=\"built_in\">varchar</span>(<span class=\"number\">8000</span>),</div><div class=\"line\">  @StrSeprate <span class=\"built_in\">varchar</span>(<span class=\"number\">10</span>)</div><div class=\"line\">)</div><div class=\"line\"><span class=\"keyword\">RETURNS</span> @temp <span class=\"keyword\">TABLE</span>(F1 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">100</span>))</div><div class=\"line\"><span class=\"keyword\">AS</span></div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">    <span class=\"keyword\">DECLARE</span> @i <span class=\"built_in\">INT</span></div><div class=\"line\">    <span class=\"keyword\">SET</span> @StrAll =<span class=\"keyword\">rtrim</span>(<span class=\"keyword\">ltrim</span>(@StrAll ))</div><div class=\"line\">    <span class=\"keyword\">SET</span> @i=<span class=\"keyword\">charindex</span>(@StrSeprate,@StrAll )</div><div class=\"line\">    <span class=\"keyword\">WHILE</span> @i&gt;=<span class=\"number\">1</span></div><div class=\"line\">    <span class=\"keyword\">BEGIN</span></div><div class=\"line\">        <span class=\"keyword\">INSERT</span> @temp <span class=\"keyword\">VALUES</span>(<span class=\"keyword\">left</span>(@StrAll ,@i<span class=\"number\">-1</span>))</div><div class=\"line\">        <span class=\"keyword\">SET</span> @StrAll =<span class=\"keyword\">substring</span>(@StrAll ,@i+<span class=\"number\">1</span>,<span class=\"keyword\">len</span>(@StrAll )-@i)</div><div class=\"line\">        <span class=\"keyword\">SET</span> @i=<span class=\"keyword\">charindex</span>(@StrSeprate,@StrAll )</div><div class=\"line\">    <span class=\"keyword\">END</span></div><div class=\"line\">    <span class=\"keyword\">IF</span> @StrAll &lt;&gt;<span class=\"string\">''</span></div><div class=\"line\">    <span class=\"keyword\">INSERT</span> @temp <span class=\"keyword\">VALUES</span>(@StrAll )</div><div class=\"line\">    <span class=\"keyword\">RETURN</span></div><div class=\"line\"><span class=\"keyword\">END</span></div></pre></td></tr></table></figure>\n<p>6.取出数据库中所有的表名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">name</span> <span class=\"keyword\">as</span>  tablename <span class=\"keyword\">from</span> sysobjects <span class=\"keyword\">where</span> <span class=\"keyword\">type</span>=<span class=\"string\">'U'</span> <span class=\"keyword\">and</span> <span class=\"keyword\">name</span>&lt;&gt;<span class=\"string\">'dtproperties'</span></div></pre></td></tr></table></figure>\n<p>7.sqlserver中取随机数的两种方法</p>\n<p>a.创建一个表Rand，字段是：RandomNum ，存储0到9的数据。</p>\n<p>使用下面SQL语句可产生随机数：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> top <span class=\"number\">1</span> RandomNum <span class=\"keyword\">from</span> <span class=\"keyword\">Rand</span> <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> NewID()</div></pre></td></tr></table></figure>\n<p>b.使用sqlserver提供的Rand()函数</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">cast</span>( <span class=\"keyword\">floor</span>(<span class=\"keyword\">rand</span>()*N) <span class=\"keyword\">as</span> <span class=\"built_in\">int</span>)</div><div class=\"line\"><span class=\"comment\">--产生到N-1之间的随机数</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">cast</span>(<span class=\"keyword\">ceiling</span>(<span class=\"keyword\">rand</span>() * N) <span class=\"keyword\">as</span> <span class=\"built_in\">int</span>)</div><div class=\"line\"><span class=\"comment\">--产生到N之间的随机数</span></div></pre></td></tr></table></figure>\n<p>8.数据库中的集合运算（交， 并 ，差）</p>\n<p>先创建示例表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> T1</div><div class=\"line\">(</div><div class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">int</span></div><div class=\"line\">)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> T2</div><div class=\"line\">(</div><div class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">int</span></div><div class=\"line\">)</div><div class=\"line\"><span class=\"keyword\">insert</span> T1</div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">1</span> <span class=\"keyword\">union</span> all</div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">2</span> <span class=\"keyword\">union</span> all</div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">3</span> <span class=\"keyword\">union</span> all</div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">4</span> </div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">insert</span> T2</div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">3</span> <span class=\"keyword\">union</span> all</div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">4</span></div><div class=\"line\">运算代码：</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--交集</span></div><div class=\"line\"><span class=\"comment\">----------------------------------------------</span></div><div class=\"line\"><span class=\"comment\">--方法</span></div><div class=\"line\"><span class=\"keyword\">select</span> *  <span class=\"keyword\">from</span> T1</div><div class=\"line\"><span class=\"keyword\">intersect</span></div><div class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> T2</div><div class=\"line\"><span class=\"comment\">--方法</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">distinct</span></div><div class=\"line\">    *</div><div class=\"line\"><span class=\"keyword\">from</span></div><div class=\"line\">    T1</div><div class=\"line\"><span class=\"keyword\">where</span></div><div class=\"line\">    T1.id <span class=\"keyword\">in</span> (<span class=\"keyword\">select</span> <span class=\"keyword\">id</span> <span class=\"keyword\">from</span> T2)</div><div class=\"line\"><span class=\"comment\">--方法</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">distinct</span></div><div class=\"line\">    *</div><div class=\"line\"><span class=\"keyword\">from</span></div><div class=\"line\">    T1</div><div class=\"line\"><span class=\"keyword\">where</span> <span class=\"keyword\">exists</span>(<span class=\"keyword\">select</span> <span class=\"keyword\">id</span> <span class=\"keyword\">from</span> T2 <span class=\"keyword\">where</span> T2.id=T1.id)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--in和exists 的不同是in只能判断唯一列，而exists可以判断多列</span></div><div class=\"line\"><span class=\"comment\">---------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--并集</span></div><div class=\"line\"><span class=\"keyword\">select</span> *  <span class=\"keyword\">from</span> T1</div><div class=\"line\"><span class=\"keyword\">union</span> all</div><div class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> T2</div><div class=\"line\"><span class=\"comment\">----------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\">--差集</span></div><div class=\"line\"><span class=\"keyword\">select</span> *  <span class=\"keyword\">from</span> T1</div><div class=\"line\"><span class=\"keyword\">except</span></div><div class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> T2</div></pre></td></tr></table></figure>\n<p>返回结果就不写了，呵呵，大家运行一下就知道了。</p>\n<p>9 在sqlserver实现除法</p>\n<p>通常情况下在用sql语句写除法得到的都是整数部分</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">29</span>/<span class=\"number\">3</span></div><div class=\"line\"><span class=\"comment\">--结果为</span></div></pre></td></tr></table></figure>\n<p>用下面的方法可以得到小数</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">--定义结果变量为Decimal类型</div><div class=\"line\">declare <span class=\"variable\">@result</span> decimal(<span class=\"number\">18</span>,<span class=\"number\">2</span>)</div><div class=\"line\">--关键在于除数要乘以<span class=\"number\">1.0</span></div><div class=\"line\">set <span class=\"variable\">@result</span>=cast((<span class=\"number\">29</span>*<span class=\"number\">1.0</span>)/<span class=\"number\">3</span>  as decimal(<span class=\"number\">18</span>,<span class=\"number\">2</span>))</div><div class=\"line\">select <span class=\"variable\">@result</span></div><div class=\"line\">--结果为<span class=\"number\">9.67</span></div></pre></td></tr></table></figure>\n<p>10 SqlServer 中根据时间得到星期</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">datename</span>(<span class=\"keyword\">weekday</span>,<span class=\"string\">'2009-06-19'</span>)</div><div class=\"line\"><span class=\"comment\">--结果星期五 </span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">DATEPART</span>(dw,<span class=\"string\">'2009-06-19'</span>)</div><div class=\"line\"><span class=\"comment\">-- 结果6 </span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--因为系统默认星期天为一个星期的第一天，所以星期五对应的值为</span></div></pre></td></tr></table></figure>\n<p>11 使用sql语句设置表主键</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> TableName <span class=\"keyword\">alter</span> <span class=\"keyword\">column</span> ColumnName <span class=\"built_in\">int</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span></div><div class=\"line\"> <span class=\"keyword\">go</span></div><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> TableName <span class=\"keyword\">add</span> <span class=\"keyword\">constraint</span> pk_ColumnName primary <span class=\"keyword\">key</span>(<span class=\"keyword\">ID</span>)</div></pre></td></tr></table></figure>\n<p>12 SCOPE_IDENTITY   @@IDENTITY    IDENT_CURRENT的区别</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">--SCOPE_IDENTITY和@<span class=\"variable\">@IDENTITY</span>都返回上面操作的数据表最后row的IDENTITY 列的值</div><div class=\"line\">--不过SCOPE_IDENTITY受到作用域的限制,<span class=\"variable\">@@IDENTITY</span>不受作用域的限制</div><div class=\"line\"><span class=\"comment\">/*</div><div class=\"line\">    如有T1和T2两种?表?,在?表?T1中有一insert触发器,当在表T1中插入一条数据时,触发</div><div class=\"line\">    器被激发,在T2表中插入一条数据,这时就存在两个作用域,T1 和T2 ,这时如果在</div><div class=\"line\">    T1的insert语句后执行SCOPE_IDENTITY() 和@@IDENTITY将返回不同的值</div><div class=\"line\">    SCOPE_IDENTITY 返回的是T1的IDENTITY</div><div class=\"line\">    @@IDENTITY 返回的是T2的IDENTITY</div><div class=\"line\">*/</span></div><div class=\"line\">select SCOPE_IDENTITY()</div><div class=\"line\">select <span class=\"variable\">@@IDENTITY</span> </div><div class=\"line\"></div><div class=\"line\">--返回指?定表中的最后一个identity的值</div><div class=\"line\">select IDENT_CURRENT(<span class=\"string\">'TableName'</span>)</div></pre></td></tr></table></figure>\n<p>13 truncate和delete的区别</p>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">-<span class=\"ruby\">-delete 和truncate的作用作用都是将指定表中的数据清除，但两种方法有很大的区别</div><div class=\"line\"></span></div><div class=\"line\">-<span class=\"ruby\">-delete语句是dml,这个操作会放到?rollback segement中</div><div class=\"line\"></span>-<span class=\"ruby\">-事务提交之后才生效，如果有相应的trigger,执行的时候将被触发</div><div class=\"line\"></span>-<span class=\"ruby\">-用delete删除的数据可以找回来</div><div class=\"line\"></span>delete from tablename </div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\">-truncate是ddl, 操作立即生效,</div><div class=\"line\"></span>-<span class=\"ruby\">-原数据不放到rollback segment中,不能回滚. 操作不触发trigger</div><div class=\"line\"></span>-<span class=\"ruby\">-所以在使用truncate的时候要特别小心</div><div class=\"line\"></span>truncate table tablename</div></pre></td></tr></table></figure>\n<p>14 sqlservr中随机取数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--MsSql随机取数据</span></div><div class=\"line\"><span class=\"keyword\">select</span> top <span class=\"number\">10</span> * <span class=\"keyword\">from</span> tablename <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> newid()</div><div class=\"line\"><span class=\"comment\">--Access 随机取数据</span></div><div class=\"line\"><span class=\"keyword\">select</span>  top <span class=\"number\">10</span> *  <span class=\"keyword\">FROM</span> tablename <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> rnd(<span class=\"keyword\">id</span>)</div><div class=\"line\"><span class=\"comment\">--mySql 随机取数据</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> tablename <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> <span class=\"keyword\">rand</span>() <span class=\"keyword\">limit</span> <span class=\"number\">10</span></div></pre></td></tr></table></figure>\n<p>15 根据当前时间取上个月1号的时间</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">select dateadd(<span class=\"name\">month</span>,<span class=\"number\">-1</span>,getdate())-</div><div class=\"line\">             day(<span class=\"name\">dateadd</span>(<span class=\"name\">month</span>,<span class=\"number\">-1</span>,getdate()))<span class=\"number\">+1</span></div></pre></td></tr></table></figure>\n<p>不断更新中……</p>"},{"title":"Sybase.PowerDesiner12.0 下载 破解 汉化","date":"2008-05-10T16:00:00.000Z","_content":"\n## PowerDesiner12 下载：\n\n[http://www.namipan.com/d/2687db90a67c150079bc1375ca2bb97a3f154e4add52000b](http://www.namipan.com/d/2687db90a67c150079bc1375ca2bb97a3f154e4add52000b)\n\n## 汉化补丁下载：\n\n[http://download.csdn.net/source/298116](http://download.csdn.net/source/298116)\n\n[http://www.namipan.com/d/SYBASE%20PowerDesigner%2012%20%e6%b1%89%e5%8c%96%e8%a1%a5%e4%b8%81%20.exe/20e073a65b965e5ac125f806da04da8bccc4623498d20600](http://www.namipan.com/d/SYBASE%20PowerDesigner%2012%20%e6%b1%89%e5%8c%96%e8%a1%a5%e4%b8%81%20.exe/20e073a65b965e5ac125f806da04da8bccc4623498d20600)\n\n## 破解下載：\n\n[http://www.namipan.com/d/powerdesigner12.0%e7%89%88%e7%a0%b4%e8%a7%a3%e6%96%b9%e6%b3%95.txt/d4426b20c60d5e81439e5716f8239e6fbf2e43218c000000](http://www.namipan.com/d/powerdesigner12.0%e7%89%88%e7%a0%b4%e8%a7%a3%e6%96%b9%e6%b3%95.txt/d4426b20c60d5e81439e5716f8239e6fbf2e43218c000000)\n\n\n","source":"_posts/sybase-powerdesiner12-0-download.md","raw":"---\ntitle: Sybase.PowerDesiner12.0 下载 破解 汉化\ndate: 2008-05-11\ncategories: [软件使用]\ntags: [PowerDesiner]\n---\n\n## PowerDesiner12 下载：\n\n[http://www.namipan.com/d/2687db90a67c150079bc1375ca2bb97a3f154e4add52000b](http://www.namipan.com/d/2687db90a67c150079bc1375ca2bb97a3f154e4add52000b)\n\n## 汉化补丁下载：\n\n[http://download.csdn.net/source/298116](http://download.csdn.net/source/298116)\n\n[http://www.namipan.com/d/SYBASE%20PowerDesigner%2012%20%e6%b1%89%e5%8c%96%e8%a1%a5%e4%b8%81%20.exe/20e073a65b965e5ac125f806da04da8bccc4623498d20600](http://www.namipan.com/d/SYBASE%20PowerDesigner%2012%20%e6%b1%89%e5%8c%96%e8%a1%a5%e4%b8%81%20.exe/20e073a65b965e5ac125f806da04da8bccc4623498d20600)\n\n## 破解下載：\n\n[http://www.namipan.com/d/powerdesigner12.0%e7%89%88%e7%a0%b4%e8%a7%a3%e6%96%b9%e6%b3%95.txt/d4426b20c60d5e81439e5716f8239e6fbf2e43218c000000](http://www.namipan.com/d/powerdesigner12.0%e7%89%88%e7%a0%b4%e8%a7%a3%e6%96%b9%e6%b3%95.txt/d4426b20c60d5e81439e5716f8239e6fbf2e43218c000000)\n\n\n","slug":"sybase-powerdesiner12-0-download","published":1,"updated":"2016-08-13T15:00:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93i007vxfyn02gq81j0","content":"<h2 id=\"PowerDesiner12-下载：\"><a href=\"#PowerDesiner12-下载：\" class=\"headerlink\" title=\"PowerDesiner12 下载：\"></a>PowerDesiner12 下载：</h2><p><a href=\"http://www.namipan.com/d/2687db90a67c150079bc1375ca2bb97a3f154e4add52000b\" target=\"_blank\" rel=\"external\">http://www.namipan.com/d/2687db90a67c150079bc1375ca2bb97a3f154e4add52000b</a></p>\n<h2 id=\"汉化补丁下载：\"><a href=\"#汉化补丁下载：\" class=\"headerlink\" title=\"汉化补丁下载：\"></a>汉化补丁下载：</h2><p><a href=\"http://download.csdn.net/source/298116\" target=\"_blank\" rel=\"external\">http://download.csdn.net/source/298116</a></p>\n<p><a href=\"http://www.namipan.com/d/SYBASE%20PowerDesigner%2012%20%e6%b1%89%e5%8c%96%e8%a1%a5%e4%b8%81%20.exe/20e073a65b965e5ac125f806da04da8bccc4623498d20600\" target=\"_blank\" rel=\"external\">http://www.namipan.com/d/SYBASE%20PowerDesigner%2012%20%e6%b1%89%e5%8c%96%e8%a1%a5%e4%b8%81%20.exe/20e073a65b965e5ac125f806da04da8bccc4623498d20600</a></p>\n<h2 id=\"破解下載：\"><a href=\"#破解下載：\" class=\"headerlink\" title=\"破解下載：\"></a>破解下載：</h2><p><a href=\"http://www.namipan.com/d/powerdesigner12.0%e7%89%88%e7%a0%b4%e8%a7%a3%e6%96%b9%e6%b3%95.txt/d4426b20c60d5e81439e5716f8239e6fbf2e43218c000000\" target=\"_blank\" rel=\"external\">http://www.namipan.com/d/powerdesigner12.0%e7%89%88%e7%a0%b4%e8%a7%a3%e6%96%b9%e6%b3%95.txt/d4426b20c60d5e81439e5716f8239e6fbf2e43218c000000</a></p>\n","excerpt":"","more":"<h2 id=\"PowerDesiner12-下载：\"><a href=\"#PowerDesiner12-下载：\" class=\"headerlink\" title=\"PowerDesiner12 下载：\"></a>PowerDesiner12 下载：</h2><p><a href=\"http://www.namipan.com/d/2687db90a67c150079bc1375ca2bb97a3f154e4add52000b\">http://www.namipan.com/d/2687db90a67c150079bc1375ca2bb97a3f154e4add52000b</a></p>\n<h2 id=\"汉化补丁下载：\"><a href=\"#汉化补丁下载：\" class=\"headerlink\" title=\"汉化补丁下载：\"></a>汉化补丁下载：</h2><p><a href=\"http://download.csdn.net/source/298116\">http://download.csdn.net/source/298116</a></p>\n<p><a href=\"http://www.namipan.com/d/SYBASE%20PowerDesigner%2012%20%e6%b1%89%e5%8c%96%e8%a1%a5%e4%b8%81%20.exe/20e073a65b965e5ac125f806da04da8bccc4623498d20600\">http://www.namipan.com/d/SYBASE%20PowerDesigner%2012%20%e6%b1%89%e5%8c%96%e8%a1%a5%e4%b8%81%20.exe/20e073a65b965e5ac125f806da04da8bccc4623498d20600</a></p>\n<h2 id=\"破解下載：\"><a href=\"#破解下載：\" class=\"headerlink\" title=\"破解下載：\"></a>破解下載：</h2><p><a href=\"http://www.namipan.com/d/powerdesigner12.0%e7%89%88%e7%a0%b4%e8%a7%a3%e6%96%b9%e6%b3%95.txt/d4426b20c60d5e81439e5716f8239e6fbf2e43218c000000\">http://www.namipan.com/d/powerdesigner12.0%e7%89%88%e7%a0%b4%e8%a7%a3%e6%96%b9%e6%b3%95.txt/d4426b20c60d5e81439e5716f8239e6fbf2e43218c000000</a></p>\n"},{"title":"Asp.Net中 %= 与%# 的区别","date":"2008-04-02T16:00:00.000Z","_content":"\n<%= “oec2003” % >  相当于：Response.Write(“oec2003”);\n<%# “oec2003” % >  相当于给变量赋值了oec2003\n\n在gridview中将一个绑定列转换成模板列时会看到有如下代码：\n<!--more-->\n\n```\n<ItemTemplate>\n<asp:Label ID=\"Label1\" runat=\"server\" Text='<%# Bind(\"oec2003\") %>'></asp:Label>\n</ItemTemplate>\n```\n\n上面的语句就将oec2003 这个列的值赋给了Lable1\n还可以直接这样写\n\n```\n<asp:Label ID=\"Label2\" runat=\"server\" Text='<%#  “Hello oec2003”) %>'></asp:Label>\n```\n\n这句相当于：\n\n```\nthis.Label2.Text=”Hello oec2003″;\n```\n\n<%= “”%>是将内容在页面输出，如在页面写如下代码：\n\n```\n<html >\n <body >\n <%= \"Hello oec2003 ,use =!\" %>\n <%# \"Hello oec2003  use #!\" %>\n </body >\n</html >\n```\n\n运行后会看到页面会显示：Hello oec2003 use =！ 说明<%= “Hello oec2003 ,use =!” %> 这句起了作用在页面输出了文本。因为 <%# “Hello oec2003  use #!” %>  是相当于赋值，在上面代码中没有接收值得变量，所以也就看不见运行效果。\n\n","source":"_posts/the-difference-between-the-and-aspnet.md","raw":"---\ntitle: Asp.Net中 %= 与%# 的区别\ndate: 2008-04-03\ncategories: [Asp.Net]\ntags: [AspNet]\n---\n\n<%= “oec2003” % >  相当于：Response.Write(“oec2003”);\n<%# “oec2003” % >  相当于给变量赋值了oec2003\n\n在gridview中将一个绑定列转换成模板列时会看到有如下代码：\n<!--more-->\n\n```\n<ItemTemplate>\n<asp:Label ID=\"Label1\" runat=\"server\" Text='<%# Bind(\"oec2003\") %>'></asp:Label>\n</ItemTemplate>\n```\n\n上面的语句就将oec2003 这个列的值赋给了Lable1\n还可以直接这样写\n\n```\n<asp:Label ID=\"Label2\" runat=\"server\" Text='<%#  “Hello oec2003”) %>'></asp:Label>\n```\n\n这句相当于：\n\n```\nthis.Label2.Text=”Hello oec2003″;\n```\n\n<%= “”%>是将内容在页面输出，如在页面写如下代码：\n\n```\n<html >\n <body >\n <%= \"Hello oec2003 ,use =!\" %>\n <%# \"Hello oec2003  use #!\" %>\n </body >\n</html >\n```\n\n运行后会看到页面会显示：Hello oec2003 use =！ 说明<%= “Hello oec2003 ,use =!” %> 这句起了作用在页面输出了文本。因为 <%# “Hello oec2003  use #!” %>  是相当于赋值，在上面代码中没有接收值得变量，所以也就看不见运行效果。\n\n","slug":"the-difference-between-the-and-aspnet","published":1,"updated":"2016-08-16T14:47:03.000Z","_id":"cirxkz93j007yxfyn2umv42n9","comments":1,"layout":"post","photos":[],"link":"","content":"<p>&lt;%= “oec2003” % &gt;  相当于：Response.Write(“oec2003”);<br>&lt;%# “oec2003” % &gt;  相当于给变量赋值了oec2003</p>\n<p>在gridview中将一个绑定列转换成模板列时会看到有如下代码：<br><a id=\"more\"></a></p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">ItemTemplate</span>&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:Label</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Label1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Text</span>=<span class=\"string\">'&lt;%</span></span><span class=\"perl\"><span class=\"comment\"># Bind(\"oec2003\") </span></span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">%&gt;'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:Label</span>&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ItemTemplate</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>上面的语句就将oec2003 这个列的值赋给了Lable1<br>还可以直接这样写</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">asp:Label</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Label2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Text</span>=<span class=\"string\">'&lt;%</span></span></span><span class=\"perl\"><span class=\"comment\">#  “Hello oec2003”) </span></span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">%&gt;'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:Label</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>这句相当于：</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.Label2.Text=”Hello oec2003″;</div></pre></td></tr></table></figure>\n<p>&lt;%= “”%&gt;是将内容在页面输出，如在页面写如下代码：</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">html</span> &gt;</span></span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span> &gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">%=</span></span><span class=\"perl\"> <span class=\"string\">\"Hello oec2003 ,use =!\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">%</span></span><span class=\"perl\"><span class=\"comment\"># \"Hello oec2003  use #!\" </span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span> &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span> &gt;</span></div></pre></td></tr></table></figure>\n<p>运行后会看到页面会显示：Hello oec2003 use =！ 说明&lt;%= “Hello oec2003 ,use =!” %&gt; 这句起了作用在页面输出了文本。因为 &lt;%# “Hello oec2003  use #!” %&gt;  是相当于赋值，在上面代码中没有接收值得变量，所以也就看不见运行效果。</p>\n","excerpt":"<p>&lt;%= “oec2003” % &gt;  相当于：Response.Write(“oec2003”);<br>&lt;%# “oec2003” % &gt;  相当于给变量赋值了oec2003</p>\n<p>在gridview中将一个绑定列转换成模板列时会看到有如下代码：<br>","more":"</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:Label</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Label1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Text</span>=<span class=\"string\">'&lt;%</span></span></span><span class=\"perl\"><span class=\"comment\"># Bind(\"oec2003\") </span></span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">%&gt;'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:Label</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ItemTemplate</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>上面的语句就将oec2003 这个列的值赋给了Lable1<br>还可以直接这样写</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">asp:Label</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"Label2\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Text</span>=<span class=\"string\">'&lt;%</span></span></span><span class=\"perl\"><span class=\"comment\">#  “Hello oec2003”) </span></span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">%&gt;'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">asp:Label</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>这句相当于：</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.Label2.Text=”Hello oec2003″;</div></pre></td></tr></table></figure>\n<p>&lt;%= “”%&gt;是将内容在页面输出，如在页面写如下代码：</p>\n<figure class=\"highlight mojolicious\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">html</span> &gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">body</span> &gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"perl\"> <span class=\"string\">\"Hello oec2003 ,use =!\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"perl\"><span class=\"comment\"># \"Hello oec2003  use #!\" </span></span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">body</span> &gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span> &gt;</span></span></div></pre></td></tr></table></figure>\n<p>运行后会看到页面会显示：Hello oec2003 use =！ 说明&lt;%= “Hello oec2003 ,use =!” %&gt; 这句起了作用在页面输出了文本。因为 &lt;%# “Hello oec2003  use #!” %&gt;  是相当于赋值，在上面代码中没有接收值得变量，所以也就看不见运行效果。</p>"},{"title":"第一次面试","date":"2007-03-06T16:00:00.000Z","_content":"\n元宵前几天就匆匆赶回石家庄了，因为3月1号有一场招聘会，那天下着雨，但人仍然很多，大概有十几万吧。把整个会场转了个遍也才投出去了四五份简历，石家庄的IT行业确实还很落后，单位很多，但和计算机相关的不多。\n<!--more-->\n回到学校就等着面试通知了，5号上午就接到了一个电话，让我下午去参加笔试，当时很高兴，终于有一次机会了。下午准时到达公司，考官给了我一份试卷，限定在两个小时内交卷。试卷分为了四个部分，基础题（50分的选择题）包括数据结构，操作系统，数据库等内容，一共25道其中有十几道是英文的；数据库部分（10分）给了两张表，还有10个小题，让做一些查询，插入，更新的操作；综合素质部分（20分）两个大题，第一题让用语言写出要求的算法，第二题是和他们公司业务相关的一道题；最后一个部分也是20分考的是专业知识包括HTML 、asp.net、c＃、ado.net等。一个小时我就交了试卷，不过心里一点底都没有。考官说明天之前没打电话通知就是没过。当天晚上我就接到第二天复试的通知了，真的很幸运。晚上我也查了那家公司的背景，是一家很不错的公司，国有企业，做数字证书的待遇也很好。6号上午到公司后，考官给了我一张基本信息的表格和一张有20几个问题的答卷让我填写，写完后带着我进了一个会议室参加面试，面试官一共两个人，一个是人力资源的经理，一个是技术部的主管。面试用了半个多小时，面试官还是让我等通知参加下一轮的复试，当天下午两点多我有接到电话了，让我3点半参加复试，当时有点兴奋了，感觉好像已经面试成功了。下午的主考官是公司的总经理，而且留到下午参加最后一轮的就5个人，公司只要两个，很不幸我没有能成功。当考官宣布名单的时候，我感到非常失落，但很快我就调整好了心态，毕竟这只是我的真正意义上的第一次面试，以前去过一次中软，那个是让参加培训的。能留到最后一轮我已经感到很幸运了。\n\n这个面试经历了两天，感到学到了很多，也发现了自己的很多不足，虽然没能面试上，但可以让我更好地完善自己。而且我还发现就业指导老师讲的和网上的很多面试技巧在真正面试时不一定适用，关键要靠平时知识的积累和养成一个好的的习惯。\n\n","source":"_posts/the-first-interview.md","raw":"---\ntitle: 第一次面试\ndate: 2007-03-07\ncategories: [心情日记]\ntags:\n---\n\n元宵前几天就匆匆赶回石家庄了，因为3月1号有一场招聘会，那天下着雨，但人仍然很多，大概有十几万吧。把整个会场转了个遍也才投出去了四五份简历，石家庄的IT行业确实还很落后，单位很多，但和计算机相关的不多。\n<!--more-->\n回到学校就等着面试通知了，5号上午就接到了一个电话，让我下午去参加笔试，当时很高兴，终于有一次机会了。下午准时到达公司，考官给了我一份试卷，限定在两个小时内交卷。试卷分为了四个部分，基础题（50分的选择题）包括数据结构，操作系统，数据库等内容，一共25道其中有十几道是英文的；数据库部分（10分）给了两张表，还有10个小题，让做一些查询，插入，更新的操作；综合素质部分（20分）两个大题，第一题让用语言写出要求的算法，第二题是和他们公司业务相关的一道题；最后一个部分也是20分考的是专业知识包括HTML 、asp.net、c＃、ado.net等。一个小时我就交了试卷，不过心里一点底都没有。考官说明天之前没打电话通知就是没过。当天晚上我就接到第二天复试的通知了，真的很幸运。晚上我也查了那家公司的背景，是一家很不错的公司，国有企业，做数字证书的待遇也很好。6号上午到公司后，考官给了我一张基本信息的表格和一张有20几个问题的答卷让我填写，写完后带着我进了一个会议室参加面试，面试官一共两个人，一个是人力资源的经理，一个是技术部的主管。面试用了半个多小时，面试官还是让我等通知参加下一轮的复试，当天下午两点多我有接到电话了，让我3点半参加复试，当时有点兴奋了，感觉好像已经面试成功了。下午的主考官是公司的总经理，而且留到下午参加最后一轮的就5个人，公司只要两个，很不幸我没有能成功。当考官宣布名单的时候，我感到非常失落，但很快我就调整好了心态，毕竟这只是我的真正意义上的第一次面试，以前去过一次中软，那个是让参加培训的。能留到最后一轮我已经感到很幸运了。\n\n这个面试经历了两天，感到学到了很多，也发现了自己的很多不足，虽然没能面试上，但可以让我更好地完善自己。而且我还发现就业指导老师讲的和网上的很多面试技巧在真正面试时不一定适用，关键要靠平时知识的积累和养成一个好的的习惯。\n\n","slug":"the-first-interview","published":1,"updated":"2016-08-12T16:08:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93k0082xfyn9e17rsxj","content":"<p>元宵前几天就匆匆赶回石家庄了，因为3月1号有一场招聘会，那天下着雨，但人仍然很多，大概有十几万吧。把整个会场转了个遍也才投出去了四五份简历，石家庄的IT行业确实还很落后，单位很多，但和计算机相关的不多。<br><a id=\"more\"></a><br>回到学校就等着面试通知了，5号上午就接到了一个电话，让我下午去参加笔试，当时很高兴，终于有一次机会了。下午准时到达公司，考官给了我一份试卷，限定在两个小时内交卷。试卷分为了四个部分，基础题（50分的选择题）包括数据结构，操作系统，数据库等内容，一共25道其中有十几道是英文的；数据库部分（10分）给了两张表，还有10个小题，让做一些查询，插入，更新的操作；综合素质部分（20分）两个大题，第一题让用语言写出要求的算法，第二题是和他们公司业务相关的一道题；最后一个部分也是20分考的是专业知识包括HTML 、asp.net、c＃、ado.net等。一个小时我就交了试卷，不过心里一点底都没有。考官说明天之前没打电话通知就是没过。当天晚上我就接到第二天复试的通知了，真的很幸运。晚上我也查了那家公司的背景，是一家很不错的公司，国有企业，做数字证书的待遇也很好。6号上午到公司后，考官给了我一张基本信息的表格和一张有20几个问题的答卷让我填写，写完后带着我进了一个会议室参加面试，面试官一共两个人，一个是人力资源的经理，一个是技术部的主管。面试用了半个多小时，面试官还是让我等通知参加下一轮的复试，当天下午两点多我有接到电话了，让我3点半参加复试，当时有点兴奋了，感觉好像已经面试成功了。下午的主考官是公司的总经理，而且留到下午参加最后一轮的就5个人，公司只要两个，很不幸我没有能成功。当考官宣布名单的时候，我感到非常失落，但很快我就调整好了心态，毕竟这只是我的真正意义上的第一次面试，以前去过一次中软，那个是让参加培训的。能留到最后一轮我已经感到很幸运了。</p>\n<p>这个面试经历了两天，感到学到了很多，也发现了自己的很多不足，虽然没能面试上，但可以让我更好地完善自己。而且我还发现就业指导老师讲的和网上的很多面试技巧在真正面试时不一定适用，关键要靠平时知识的积累和养成一个好的的习惯。</p>\n","excerpt":"<p>元宵前几天就匆匆赶回石家庄了，因为3月1号有一场招聘会，那天下着雨，但人仍然很多，大概有十几万吧。把整个会场转了个遍也才投出去了四五份简历，石家庄的IT行业确实还很落后，单位很多，但和计算机相关的不多。<br>","more":"<br>回到学校就等着面试通知了，5号上午就接到了一个电话，让我下午去参加笔试，当时很高兴，终于有一次机会了。下午准时到达公司，考官给了我一份试卷，限定在两个小时内交卷。试卷分为了四个部分，基础题（50分的选择题）包括数据结构，操作系统，数据库等内容，一共25道其中有十几道是英文的；数据库部分（10分）给了两张表，还有10个小题，让做一些查询，插入，更新的操作；综合素质部分（20分）两个大题，第一题让用语言写出要求的算法，第二题是和他们公司业务相关的一道题；最后一个部分也是20分考的是专业知识包括HTML 、asp.net、c＃、ado.net等。一个小时我就交了试卷，不过心里一点底都没有。考官说明天之前没打电话通知就是没过。当天晚上我就接到第二天复试的通知了，真的很幸运。晚上我也查了那家公司的背景，是一家很不错的公司，国有企业，做数字证书的待遇也很好。6号上午到公司后，考官给了我一张基本信息的表格和一张有20几个问题的答卷让我填写，写完后带着我进了一个会议室参加面试，面试官一共两个人，一个是人力资源的经理，一个是技术部的主管。面试用了半个多小时，面试官还是让我等通知参加下一轮的复试，当天下午两点多我有接到电话了，让我3点半参加复试，当时有点兴奋了，感觉好像已经面试成功了。下午的主考官是公司的总经理，而且留到下午参加最后一轮的就5个人，公司只要两个，很不幸我没有能成功。当考官宣布名单的时候，我感到非常失落，但很快我就调整好了心态，毕竟这只是我的真正意义上的第一次面试，以前去过一次中软，那个是让参加培训的。能留到最后一轮我已经感到很幸运了。</p>\n<p>这个面试经历了两天，感到学到了很多，也发现了自己的很多不足，虽然没能面试上，但可以让我更好地完善自己。而且我还发现就业指导老师讲的和网上的很多面试技巧在真正面试时不一定适用，关键要靠平时知识的积累和养成一个好的的习惯。</p>"},{"title":"the-first-job-thoughts","date":"2007-10-16T16:00:00.000Z","_content":"\n到现在工作刚好一个月了，中间还有一个十一长假，再加上平时的双修，实际上真正做项目的时间还不到20天，但在这二十天中确实也学到了很多东西，在公司里和以前自己做有很大的不同，以前自己做的时候，遇到一个问题要解决，会去选一种自己最熟悉的，最简单的方法，就算是解决不了也没事，现在什么东西都要按照客户的要求来，当然就会学到很多以前没有用过的东西。\n<!--more-->\n这是我的第一份工作，我很珍惜，而且公司环境还行，工资虽然不高，但最重要的是能做自己喜欢做的事情，能够学习知识。工作后就一直没有碰过篮球，现在实在是憋得难受，在武汉同学很多，但没有几个打篮球的。近期一定要去打打球，否则肯定会疯掉的。\n\n有时候很怀念大学时的生活，想回到上学的时候，就像以前在上学的时候很想工作一样，人就是这样奇怪，一些东西总是要到失去了才会去想她，所以我要珍惜现在，未来的路是掌握在自己手中的，我会朝着自己的目标去奋斗。\n\n","source":"_posts/the-first-job-thoughts.md","raw":"---\ntitle: the-first-job-thoughts\ndate: 2007-10-17\ncategories: [心情日记]\ntags:\n---\n\n到现在工作刚好一个月了，中间还有一个十一长假，再加上平时的双修，实际上真正做项目的时间还不到20天，但在这二十天中确实也学到了很多东西，在公司里和以前自己做有很大的不同，以前自己做的时候，遇到一个问题要解决，会去选一种自己最熟悉的，最简单的方法，就算是解决不了也没事，现在什么东西都要按照客户的要求来，当然就会学到很多以前没有用过的东西。\n<!--more-->\n这是我的第一份工作，我很珍惜，而且公司环境还行，工资虽然不高，但最重要的是能做自己喜欢做的事情，能够学习知识。工作后就一直没有碰过篮球，现在实在是憋得难受，在武汉同学很多，但没有几个打篮球的。近期一定要去打打球，否则肯定会疯掉的。\n\n有时候很怀念大学时的生活，想回到上学的时候，就像以前在上学的时候很想工作一样，人就是这样奇怪，一些东西总是要到失去了才会去想她，所以我要珍惜现在，未来的路是掌握在自己手中的，我会朝着自己的目标去奋斗。\n\n","slug":"the-first-job-thoughts","published":1,"updated":"2016-08-13T13:34:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93l0085xfyne90ubhki","content":"<p>到现在工作刚好一个月了，中间还有一个十一长假，再加上平时的双修，实际上真正做项目的时间还不到20天，但在这二十天中确实也学到了很多东西，在公司里和以前自己做有很大的不同，以前自己做的时候，遇到一个问题要解决，会去选一种自己最熟悉的，最简单的方法，就算是解决不了也没事，现在什么东西都要按照客户的要求来，当然就会学到很多以前没有用过的东西。<br><a id=\"more\"></a><br>这是我的第一份工作，我很珍惜，而且公司环境还行，工资虽然不高，但最重要的是能做自己喜欢做的事情，能够学习知识。工作后就一直没有碰过篮球，现在实在是憋得难受，在武汉同学很多，但没有几个打篮球的。近期一定要去打打球，否则肯定会疯掉的。</p>\n<p>有时候很怀念大学时的生活，想回到上学的时候，就像以前在上学的时候很想工作一样，人就是这样奇怪，一些东西总是要到失去了才会去想她，所以我要珍惜现在，未来的路是掌握在自己手中的，我会朝着自己的目标去奋斗。</p>\n","excerpt":"<p>到现在工作刚好一个月了，中间还有一个十一长假，再加上平时的双修，实际上真正做项目的时间还不到20天，但在这二十天中确实也学到了很多东西，在公司里和以前自己做有很大的不同，以前自己做的时候，遇到一个问题要解决，会去选一种自己最熟悉的，最简单的方法，就算是解决不了也没事，现在什么东西都要按照客户的要求来，当然就会学到很多以前没有用过的东西。<br>","more":"<br>这是我的第一份工作，我很珍惜，而且公司环境还行，工资虽然不高，但最重要的是能做自己喜欢做的事情，能够学习知识。工作后就一直没有碰过篮球，现在实在是憋得难受，在武汉同学很多，但没有几个打篮球的。近期一定要去打打球，否则肯定会疯掉的。</p>\n<p>有时候很怀念大学时的生活，想回到上学的时候，就像以前在上学的时候很想工作一样，人就是这样奇怪，一些东西总是要到失去了才会去想她，所以我要珍惜现在，未来的路是掌握在自己手中的，我会朝着自己的目标去奋斗。</p>"},{"title":"Html细线表格的实现","date":"2008-01-09T16:00:00.000Z","_content":"\n在网页制作中，我们常常会使用到表格，表格使得需要表达的信息更清楚，明了。\n\n```\n<table border=\"1\" cellspacing=\"0\" bordercolor=\"#000000\" width = \"80%\">\n    <tr>\n        <td>1.1</td>\n        <td>1.2</td>\n    </tr>\n    <tr>\n        <td>2.1</td>\n        <td>2.2</td>\n    </tr>\n<table>\n```\n\n这段代码定义了border = 1pix的表格，但实际上表格的实际边框宽度为2pix, 这是因为表格边框由：表格外边框和单元格边框两部分构成。那么如何定义一个细线表格(实际边宽为1pix) 呢？\n\n### 使用 cellspacing和背景色技术:\n\n```\n<table border=\"0\" cellspacing=\"1\" bgcolor=\"#000000\" width = \"80%\">\n    <tr bgcolor=\"#ffffff\">\n        <td>1.1</td>\n        <td>1.2</td>\n    </tr>\n    <tr bgcolor=\"#ffffff\">\n        <td>2.1</td>\n        <td>2.2</td>\n    </tr>\n<table> \n```\n\n### 使用border-collapse属性:\n\n```\n<table border=\"1\" cellspacing=\"0\" bordercolor=\"#000000\" width = \"80%\"\n           style=\"border-collapse:collapse;\">\n    <tr>\n        <td>1.1</td>\n        <td>1.2</td>\n    </tr>\n    <tr>\n        <td>2.1</td>\n        <td>2.2</td>\n    </tr>\n<table>\n```\n\n\n","source":"_posts/the-realization-of-the-html-form-thin-lines.md","raw":"---\ntitle: Html细线表格的实现\ndate: 2008-01-10\ncategories: [HTML]\ntags: [HTML]\n---\n\n在网页制作中，我们常常会使用到表格，表格使得需要表达的信息更清楚，明了。\n\n```\n<table border=\"1\" cellspacing=\"0\" bordercolor=\"#000000\" width = \"80%\">\n    <tr>\n        <td>1.1</td>\n        <td>1.2</td>\n    </tr>\n    <tr>\n        <td>2.1</td>\n        <td>2.2</td>\n    </tr>\n<table>\n```\n\n这段代码定义了border = 1pix的表格，但实际上表格的实际边框宽度为2pix, 这是因为表格边框由：表格外边框和单元格边框两部分构成。那么如何定义一个细线表格(实际边宽为1pix) 呢？\n\n### 使用 cellspacing和背景色技术:\n\n```\n<table border=\"0\" cellspacing=\"1\" bgcolor=\"#000000\" width = \"80%\">\n    <tr bgcolor=\"#ffffff\">\n        <td>1.1</td>\n        <td>1.2</td>\n    </tr>\n    <tr bgcolor=\"#ffffff\">\n        <td>2.1</td>\n        <td>2.2</td>\n    </tr>\n<table> \n```\n\n### 使用border-collapse属性:\n\n```\n<table border=\"1\" cellspacing=\"0\" bordercolor=\"#000000\" width = \"80%\"\n           style=\"border-collapse:collapse;\">\n    <tr>\n        <td>1.1</td>\n        <td>1.2</td>\n    </tr>\n    <tr>\n        <td>2.1</td>\n        <td>2.2</td>\n    </tr>\n<table>\n```\n\n\n","slug":"the-realization-of-the-html-form-thin-lines","published":1,"updated":"2016-08-13T14:29:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93m0089xfynct2798ha","content":"<p>在网页制作中，我们常常会使用到表格，表格使得需要表达的信息更清楚，明了。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">bordercolor</span>=<span class=\"string\">\"#000000\"</span> <span class=\"attr\">width</span> = <span class=\"string\">\"80%\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1.1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2.1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>这段代码定义了border = 1pix的表格，但实际上表格的实际边框宽度为2pix, 这是因为表格边框由：表格外边框和单元格边框两部分构成。那么如何定义一个细线表格(实际边宽为1pix) 呢？</p>\n<h3 id=\"使用-cellspacing和背景色技术\"><a href=\"#使用-cellspacing和背景色技术\" class=\"headerlink\" title=\"使用 cellspacing和背景色技术:\"></a>使用 cellspacing和背景色技术:</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">bgcolor</span>=<span class=\"string\">\"#000000\"</span> <span class=\"attr\">width</span> = <span class=\"string\">\"80%\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">bgcolor</span>=<span class=\"string\">\"#ffffff\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1.1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">bgcolor</span>=<span class=\"string\">\"#ffffff\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2.1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"使用border-collapse属性\"><a href=\"#使用border-collapse属性\" class=\"headerlink\" title=\"使用border-collapse属性:\"></a>使用border-collapse属性:</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">bordercolor</span>=<span class=\"string\">\"#000000\"</span> <span class=\"attr\">width</span> = <span class=\"string\">\"80%\"</span></span></div><div class=\"line\">           <span class=\"attr\">style</span>=<span class=\"string\">\"border-collapse:collapse;\"</span>&gt;</div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1.1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2.1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>在网页制作中，我们常常会使用到表格，表格使得需要表达的信息更清楚，明了。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">bordercolor</span>=<span class=\"string\">\"#000000\"</span> <span class=\"attr\">width</span> = <span class=\"string\">\"80%\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1.1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2.1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>这段代码定义了border = 1pix的表格，但实际上表格的实际边框宽度为2pix, 这是因为表格边框由：表格外边框和单元格边框两部分构成。那么如何定义一个细线表格(实际边宽为1pix) 呢？</p>\n<h3 id=\"使用-cellspacing和背景色技术\"><a href=\"#使用-cellspacing和背景色技术\" class=\"headerlink\" title=\"使用 cellspacing和背景色技术:\"></a>使用 cellspacing和背景色技术:</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">bgcolor</span>=<span class=\"string\">\"#000000\"</span> <span class=\"attr\">width</span> = <span class=\"string\">\"80%\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">bgcolor</span>=<span class=\"string\">\"#ffffff\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1.1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">bgcolor</span>=<span class=\"string\">\"#ffffff\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2.1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"使用border-collapse属性\"><a href=\"#使用border-collapse属性\" class=\"headerlink\" title=\"使用border-collapse属性:\"></a>使用border-collapse属性:</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">bordercolor</span>=<span class=\"string\">\"#000000\"</span> <span class=\"attr\">width</span> = <span class=\"string\">\"80%\"</span></div><div class=\"line\">           <span class=\"attr\">style</span>=<span class=\"string\">\"border-collapse:collapse;\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1.1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2.1<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></div></pre></td></tr></table></figure>\n"},{"title":"火箭十八连胜 振奋人心","date":"2008-03-08T16:00:00.000Z","_content":"\n一早就起来坐在电脑前等着火箭的比赛，这场比赛关系重大，是对战黄蜂，赢了这场比赛就可以提升到西部第三名。虽然上次和黄蜂交锋赢了，但那时姚还没有受伤，所以这场比赛仍然很艰巨。\n<!--more-->\n\n不过今天真的很倒霉，刚跳完球，网就断了，直到下午才来。网一来，马上就找这场比赛的种子，花了一个多小时终于给下完了。真是看得大快人心，火箭完全占据了主动，场下观众，替补，和厂上的球员融为一体，黄蜂其实发挥也还可以，但在火箭前大的气势下仍然是让火箭给射落了。他们频频的空中接力在火箭队面前时显得那么苍白无力。火箭赢了，真的很让人高兴，十八连胜–NBA历史上的第四连胜纪录，而且的这个连胜将还会继续，以为接下来的三场比赛是网 老鹰 山猫，这三支球队都是胜率没有超过50%的，应该能够很轻松拿下。这三场之后是湖人和凯尔特，可是强劲对手啊，愿火箭路走好。\n\n","source":"_posts/the-rockets-18-in-a-row.md","raw":"---\ntitle: 火箭十八连胜 振奋人心\ndate: 2008-03-09\ncategories: [篮球]\ntags: [NBA,篮球]\n---\n\n一早就起来坐在电脑前等着火箭的比赛，这场比赛关系重大，是对战黄蜂，赢了这场比赛就可以提升到西部第三名。虽然上次和黄蜂交锋赢了，但那时姚还没有受伤，所以这场比赛仍然很艰巨。\n<!--more-->\n\n不过今天真的很倒霉，刚跳完球，网就断了，直到下午才来。网一来，马上就找这场比赛的种子，花了一个多小时终于给下完了。真是看得大快人心，火箭完全占据了主动，场下观众，替补，和厂上的球员融为一体，黄蜂其实发挥也还可以，但在火箭前大的气势下仍然是让火箭给射落了。他们频频的空中接力在火箭队面前时显得那么苍白无力。火箭赢了，真的很让人高兴，十八连胜–NBA历史上的第四连胜纪录，而且的这个连胜将还会继续，以为接下来的三场比赛是网 老鹰 山猫，这三支球队都是胜率没有超过50%的，应该能够很轻松拿下。这三场之后是湖人和凯尔特，可是强劲对手啊，愿火箭路走好。\n\n","slug":"the-rockets-18-in-a-row","published":1,"updated":"2016-08-13T14:48:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93n008cxfynitma3ek4","content":"<p>一早就起来坐在电脑前等着火箭的比赛，这场比赛关系重大，是对战黄蜂，赢了这场比赛就可以提升到西部第三名。虽然上次和黄蜂交锋赢了，但那时姚还没有受伤，所以这场比赛仍然很艰巨。<br><a id=\"more\"></a></p>\n<p>不过今天真的很倒霉，刚跳完球，网就断了，直到下午才来。网一来，马上就找这场比赛的种子，花了一个多小时终于给下完了。真是看得大快人心，火箭完全占据了主动，场下观众，替补，和厂上的球员融为一体，黄蜂其实发挥也还可以，但在火箭前大的气势下仍然是让火箭给射落了。他们频频的空中接力在火箭队面前时显得那么苍白无力。火箭赢了，真的很让人高兴，十八连胜–NBA历史上的第四连胜纪录，而且的这个连胜将还会继续，以为接下来的三场比赛是网 老鹰 山猫，这三支球队都是胜率没有超过50%的，应该能够很轻松拿下。这三场之后是湖人和凯尔特，可是强劲对手啊，愿火箭路走好。</p>\n","excerpt":"<p>一早就起来坐在电脑前等着火箭的比赛，这场比赛关系重大，是对战黄蜂，赢了这场比赛就可以提升到西部第三名。虽然上次和黄蜂交锋赢了，但那时姚还没有受伤，所以这场比赛仍然很艰巨。<br>","more":"</p>\n<p>不过今天真的很倒霉，刚跳完球，网就断了，直到下午才来。网一来，马上就找这场比赛的种子，花了一个多小时终于给下完了。真是看得大快人心，火箭完全占据了主动，场下观众，替补，和厂上的球员融为一体，黄蜂其实发挥也还可以，但在火箭前大的气势下仍然是让火箭给射落了。他们频频的空中接力在火箭队面前时显得那么苍白无力。火箭赢了，真的很让人高兴，十八连胜–NBA历史上的第四连胜纪录，而且的这个连胜将还会继续，以为接下来的三场比赛是网 老鹰 山猫，这三支球队都是胜率没有超过50%的，应该能够很轻松拿下。这三场之后是湖人和凯尔特，可是强劲对手啊，愿火箭路走好。</p>"},{"title":"CheckBox全选终极方案","date":"2008-10-22T16:00:00.000Z","_content":"\n在我们的程序开发中经常会要用到CheckBox的全选，通常情况下是在一些数据绑定控件中如Gridview等\n<!--more-->\n\n下面以Repeater为例，在Repeater的header 和item中放入CheckBox控件 。\n\n```\n<asp:Repeater ID=\"rptGroup\" runat=\"server\">\n    <HeaderTemplate>\n        <table width=\"100%\" cellspacing=\"1\" >\n            <tr>\n                <td width=\"3%\" align=\"center\" >\n                  <input type=\"checkbox\" id=\"chkAll\" name=\"chkAll\" value=\"checkbox\"\n                  onclick=\"checkAll   ('chkAll',this);\" />\n                </td>\n            </tr>\n    </HeaderTemplate>\n    <ItemTemplate>\n        <tr>\n        <td align=\"center\" >\n          <input type=\"checkbox\" name=\"chkSelect\" value='<%# Eval(\"ID\") %>'\n          onclick=\"checkAll('chkAll',this);\"/>\n        </td>\n        </tr>\n    </ItemTemplate>\n    <FooterTemplate>\n        </table>\n    </FooterTemplate>\n </asp:Repeater>\n ```\n  \n下面就是js脚本了\n\ncheckAll方法是实现CheckBox的全选和取消全选的。\n\n```\nfunction checkAll(chkAllID, thisObj) {\n    var chkAll = document.getElementById(chkAllID);\n    var chks = document.getElementsByTagName(\"input\");\n    var chkNo = 0;\n    var selectNo = 0;\n    for (var i = 0; i < chks.length; i++) {\n        if (chks[i].type == \"checkbox\") {\n            //全选触发事件\n            if (chkAll == thisObj) {\n                chks[i].checked = thisObj.checked;\n            }\n            //非全选触发\n            else {\n                if (chks[i].checked && chks[i].id != chkAllID)\n                    selectNo++;\n            }\n            if (chks[i].id != chkAllID) {\n                chkNo++;\n            }\n        }\n    }\n    if (chkAll != thisObj) {\n        chkAll.checked = chkNo == selectNo;\n    }\n} \n```\n\ncheckSelectNo 函数是用来获取 所有checkbox 选中的个数 这个在用来判断 是否有勾选时非常有用。\n\n```\nfunction checkSelectNo(chkAllID) {\n    var chks = document.getElementsByTagName(\"input\");\n    var selectNo = 0;\n    for (var i = 0; i < chks.length; i++) {\n        if (chks[i].type == \"checkbox\") {\n            if (chks[i].id != chkAllID && chks[i].checked) {\n                selectNo++;\n            }\n        }\n    }\n    return selectNo;\n} \n```\n\n\n","source":"_posts/the-ultimate-solution-checkbox-selection.md","raw":"---\ntitle: CheckBox全选终极方案\ndate: 2008-10-23\ncategories: [Asp.Net,Javascript]\ntags: [AspNet,CheckBox,javascript,全选]\n---\n\n在我们的程序开发中经常会要用到CheckBox的全选，通常情况下是在一些数据绑定控件中如Gridview等\n<!--more-->\n\n下面以Repeater为例，在Repeater的header 和item中放入CheckBox控件 。\n\n```\n<asp:Repeater ID=\"rptGroup\" runat=\"server\">\n    <HeaderTemplate>\n        <table width=\"100%\" cellspacing=\"1\" >\n            <tr>\n                <td width=\"3%\" align=\"center\" >\n                  <input type=\"checkbox\" id=\"chkAll\" name=\"chkAll\" value=\"checkbox\"\n                  onclick=\"checkAll   ('chkAll',this);\" />\n                </td>\n            </tr>\n    </HeaderTemplate>\n    <ItemTemplate>\n        <tr>\n        <td align=\"center\" >\n          <input type=\"checkbox\" name=\"chkSelect\" value='<%# Eval(\"ID\") %>'\n          onclick=\"checkAll('chkAll',this);\"/>\n        </td>\n        </tr>\n    </ItemTemplate>\n    <FooterTemplate>\n        </table>\n    </FooterTemplate>\n </asp:Repeater>\n ```\n  \n下面就是js脚本了\n\ncheckAll方法是实现CheckBox的全选和取消全选的。\n\n```\nfunction checkAll(chkAllID, thisObj) {\n    var chkAll = document.getElementById(chkAllID);\n    var chks = document.getElementsByTagName(\"input\");\n    var chkNo = 0;\n    var selectNo = 0;\n    for (var i = 0; i < chks.length; i++) {\n        if (chks[i].type == \"checkbox\") {\n            //全选触发事件\n            if (chkAll == thisObj) {\n                chks[i].checked = thisObj.checked;\n            }\n            //非全选触发\n            else {\n                if (chks[i].checked && chks[i].id != chkAllID)\n                    selectNo++;\n            }\n            if (chks[i].id != chkAllID) {\n                chkNo++;\n            }\n        }\n    }\n    if (chkAll != thisObj) {\n        chkAll.checked = chkNo == selectNo;\n    }\n} \n```\n\ncheckSelectNo 函数是用来获取 所有checkbox 选中的个数 这个在用来判断 是否有勾选时非常有用。\n\n```\nfunction checkSelectNo(chkAllID) {\n    var chks = document.getElementsByTagName(\"input\");\n    var selectNo = 0;\n    for (var i = 0; i < chks.length; i++) {\n        if (chks[i].type == \"checkbox\") {\n            if (chks[i].id != chkAllID && chks[i].checked) {\n                selectNo++;\n            }\n        }\n    }\n    return selectNo;\n} \n```\n\n\n","slug":"the-ultimate-solution-checkbox-selection","published":1,"updated":"2016-08-14T07:16:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93p008hxfyn3hx9pmdo","content":"<p>在我们的程序开发中经常会要用到CheckBox的全选，通常情况下是在一些数据绑定控件中如Gridview等<br><a id=\"more\"></a></p>\n<p>下面以Repeater为例，在Repeater的header 和item中放入CheckBox控件 。</p>\n<figure class=\"highlight vbscript-html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">asp:Repeater</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"rptGroup\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">HeaderTemplate</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"1\"</span> &gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">width</span>=<span class=\"string\">\"3%\"</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span> &gt;</span></div><div class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"chkAll\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"chkAll\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"checkbox\"</span></span></div><div class=\"line\">                  <span class=\"attr\">onclick</span>=<span class=\"string\">\"checkAll   ('chkAll',this);\"</span> /&gt;</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">HeaderTemplate</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span> &gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"chkSelect\"</span> <span class=\"attr\">value</span>=<span class=\"string\">'</span></span><span class=\"vbscript\">&lt;%# <span class=\"built_in\">Eval</span>(<span class=\"string\">\"ID\"</span>) %&gt;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">'</span></span></span></div><div class=\"line\">          <span class=\"attr\">onclick</span>=<span class=\"string\">\"checkAll('chkAll',this);\"</span>/&gt;</div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">FooterTemplate</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">FooterTemplate</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">asp:Repeater</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>下面就是js脚本了</p>\n<p>checkAll方法是实现CheckBox的全选和取消全选的。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\">function <span class=\"title\">checkAll</span>(<span class=\"params\">chkAllID, thisObj</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> chkAll = document.getElementById(chkAllID);</div><div class=\"line\">    <span class=\"keyword\">var</span> chks = document.getElementsByTagName(<span class=\"string\">\"input\"</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> chkNo = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> selectNo = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; chks.length; i++) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (chks[i].type == <span class=\"string\">\"checkbox\"</span>) &#123;</div><div class=\"line\">            <span class=\"comment\">//全选触发事件</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (chkAll == thisObj) &#123;</div><div class=\"line\">                chks[i].<span class=\"keyword\">checked</span> = thisObj.<span class=\"keyword\">checked</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"comment\">//非全选触发</span></div><div class=\"line\">            <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (chks[i].<span class=\"keyword\">checked</span> &amp;&amp; chks[i].id != chkAllID)</div><div class=\"line\">                    selectNo++;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">if</span> (chks[i].id != chkAllID) &#123;</div><div class=\"line\">                chkNo++;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span> (chkAll != thisObj) &#123;</div><div class=\"line\">        chkAll.<span class=\"keyword\">checked</span> = chkNo == selectNo;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>checkSelectNo 函数是用来获取 所有checkbox 选中的个数 这个在用来判断 是否有勾选时非常有用。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkSelectNo</span>(<span class=\"params\">chkAllID</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> chks = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"input\"</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> selectNo = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; chks.length; i++) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (chks[i].type == <span class=\"string\">\"checkbox\"</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (chks[i].id != chkAllID &amp;&amp; chks[i].checked) &#123;</div><div class=\"line\">                selectNo++;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> selectNo;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"<p>在我们的程序开发中经常会要用到CheckBox的全选，通常情况下是在一些数据绑定控件中如Gridview等<br>","more":"</p>\n<p>下面以Repeater为例，在Repeater的header 和item中放入CheckBox控件 。</p>\n<figure class=\"highlight vbscript-html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">asp:Repeater</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"rptGroup\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">HeaderTemplate</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"1\"</span> &gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">width</span>=<span class=\"string\">\"3%\"</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span> &gt;</span></div><div class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"chkAll\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"chkAll\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"checkbox\"</span></div><div class=\"line\">                  <span class=\"attr\">onclick</span>=<span class=\"string\">\"checkAll   ('chkAll',this);\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">HeaderTemplate</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span> &gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"chkSelect\"</span> <span class=\"attr\">value</span>=<span class=\"string\">'</span></span></span><span class=\"vbscript\">&lt;%# <span class=\"built_in\">Eval</span>(<span class=\"string\">\"ID\"</span>) %&gt;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">'</span></div><div class=\"line\">          <span class=\"attr\">onclick</span>=<span class=\"string\">\"checkAll('chkAll',this);\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">FooterTemplate</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">FooterTemplate</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">asp:Repeater</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>下面就是js脚本了</p>\n<p>checkAll方法是实现CheckBox的全选和取消全选的。</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\">function <span class=\"title\">checkAll</span>(<span class=\"params\">chkAllID, thisObj</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> chkAll = document.getElementById(chkAllID);</div><div class=\"line\">    <span class=\"keyword\">var</span> chks = document.getElementsByTagName(<span class=\"string\">\"input\"</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> chkNo = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> selectNo = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; chks.length; i++) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (chks[i].type == <span class=\"string\">\"checkbox\"</span>) &#123;</div><div class=\"line\">            <span class=\"comment\">//全选触发事件</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (chkAll == thisObj) &#123;</div><div class=\"line\">                chks[i].<span class=\"keyword\">checked</span> = thisObj.<span class=\"keyword\">checked</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"comment\">//非全选触发</span></div><div class=\"line\">            <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (chks[i].<span class=\"keyword\">checked</span> &amp;&amp; chks[i].id != chkAllID)</div><div class=\"line\">                    selectNo++;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">if</span> (chks[i].id != chkAllID) &#123;</div><div class=\"line\">                chkNo++;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span> (chkAll != thisObj) &#123;</div><div class=\"line\">        chkAll.<span class=\"keyword\">checked</span> = chkNo == selectNo;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>checkSelectNo 函数是用来获取 所有checkbox 选中的个数 这个在用来判断 是否有勾选时非常有用。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkSelectNo</span>(<span class=\"params\">chkAllID</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> chks = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"input\"</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> selectNo = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; chks.length; i++) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (chks[i].type == <span class=\"string\">\"checkbox\"</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (chks[i].id != chkAllID &amp;&amp; chks[i].checked) &#123;</div><div class=\"line\">                selectNo++;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> selectNo;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"要毕业了","date":"2007-06-25T16:00:00.000Z","_content":"\n要毕业了，同学们又纷纷来到了学校将自己的大学生涯画上圆满的句号。我们学校每人发了一张毕业流程表，看上去像是一个数据流图。最终箭头指向的结果是领取毕业证和学位证。中间有很多的环节，都是到学校的相关部门去盖章说明你在毕业前的该部分的事情已经处理清楚了。在这最后的关头，学校要让我们知道想毕业不是那么容易，得要按照我们的步骤来。\n<!--more-->\n要毕业了，吃散伙饭，照毕业照等等这些都是少不了的，人非草木，面对一起生活四年的兄弟，面对熟悉的校园，想到马上就要离开，总会有点伤感。大学的终点是人生的又一个起点，我们应该感到兴奋，因为在社会的这个大熔炉里，并不是四年就可以找到终点的，我们要走的路还很长很长，需要付出更多的努力和汗水。\n\n要毕业了，而我现在还没有工作，但我很庆幸现在没有工作，正是因为没有工作，我才能在学校里度过这最后的清闲时光。曾经看到一句话，说是有信心的人就已经成功一半，所以我相信一定会有一份很好的工作等着我的。\n\n","source":"_posts/to-graduate.md","raw":"---\ntitle: 要毕业了\ndate: 2007-06-26\ncategories: [心情日记]\ntags:\n---\n\n要毕业了，同学们又纷纷来到了学校将自己的大学生涯画上圆满的句号。我们学校每人发了一张毕业流程表，看上去像是一个数据流图。最终箭头指向的结果是领取毕业证和学位证。中间有很多的环节，都是到学校的相关部门去盖章说明你在毕业前的该部分的事情已经处理清楚了。在这最后的关头，学校要让我们知道想毕业不是那么容易，得要按照我们的步骤来。\n<!--more-->\n要毕业了，吃散伙饭，照毕业照等等这些都是少不了的，人非草木，面对一起生活四年的兄弟，面对熟悉的校园，想到马上就要离开，总会有点伤感。大学的终点是人生的又一个起点，我们应该感到兴奋，因为在社会的这个大熔炉里，并不是四年就可以找到终点的，我们要走的路还很长很长，需要付出更多的努力和汗水。\n\n要毕业了，而我现在还没有工作，但我很庆幸现在没有工作，正是因为没有工作，我才能在学校里度过这最后的清闲时光。曾经看到一句话，说是有信心的人就已经成功一半，所以我相信一定会有一份很好的工作等着我的。\n\n","slug":"to-graduate","published":1,"updated":"2016-08-12T16:19:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93q008kxfynbymku2ms","content":"<p>要毕业了，同学们又纷纷来到了学校将自己的大学生涯画上圆满的句号。我们学校每人发了一张毕业流程表，看上去像是一个数据流图。最终箭头指向的结果是领取毕业证和学位证。中间有很多的环节，都是到学校的相关部门去盖章说明你在毕业前的该部分的事情已经处理清楚了。在这最后的关头，学校要让我们知道想毕业不是那么容易，得要按照我们的步骤来。<br><a id=\"more\"></a><br>要毕业了，吃散伙饭，照毕业照等等这些都是少不了的，人非草木，面对一起生活四年的兄弟，面对熟悉的校园，想到马上就要离开，总会有点伤感。大学的终点是人生的又一个起点，我们应该感到兴奋，因为在社会的这个大熔炉里，并不是四年就可以找到终点的，我们要走的路还很长很长，需要付出更多的努力和汗水。</p>\n<p>要毕业了，而我现在还没有工作，但我很庆幸现在没有工作，正是因为没有工作，我才能在学校里度过这最后的清闲时光。曾经看到一句话，说是有信心的人就已经成功一半，所以我相信一定会有一份很好的工作等着我的。</p>\n","excerpt":"<p>要毕业了，同学们又纷纷来到了学校将自己的大学生涯画上圆满的句号。我们学校每人发了一张毕业流程表，看上去像是一个数据流图。最终箭头指向的结果是领取毕业证和学位证。中间有很多的环节，都是到学校的相关部门去盖章说明你在毕业前的该部分的事情已经处理清楚了。在这最后的关头，学校要让我们知道想毕业不是那么容易，得要按照我们的步骤来。<br>","more":"<br>要毕业了，吃散伙饭，照毕业照等等这些都是少不了的，人非草木，面对一起生活四年的兄弟，面对熟悉的校园，想到马上就要离开，总会有点伤感。大学的终点是人生的又一个起点，我们应该感到兴奋，因为在社会的这个大熔炉里，并不是四年就可以找到终点的，我们要走的路还很长很长，需要付出更多的努力和汗水。</p>\n<p>要毕业了，而我现在还没有工作，但我很庆幸现在没有工作，正是因为没有工作，我才能在学校里度过这最后的清闲时光。曾经看到一句话，说是有信心的人就已经成功一半，所以我相信一定会有一份很好的工作等着我的。</p>"},{"title":"推广blog四妙招！","date":"2006-12-20T16:00:00.000Z","_content":"\n写blog有一段时间了，虽然不是很长但达到现在的访问量已让我很满意了。在写blog的这段时间里学习到了很多同时也总结出了一些推广自己blog的方法：\r\r1、我们每个人的blog内容应该都和自己的兴趣爱好有关，所以我们可以在自己感兴趣的方面写出一些好的文章，然后到一些相应的论坛去发贴或是回贴随便把自己的blog推广出去。如blog内容是IT相关的就可以到CSDN或是一些大的门户网站的IT论坛去推广。\r\r2、在网上见到很多人在blog里贴上一些比较暴露的图片或是在一些色情网站设置相应当链接来提高blog的点击率。虽然这种方法的效果还可以，但我个人不是十分同，在以前的文章中我说过blog不仅仅可以让我们来学习而且还能建立我们的个人品牌，如果使用这种方式个人的形象会受到损害，更无从谈起个人品牌了。我们写blog的目的是为了结交朋友，有一个更好的学习交流的平台，提升自我素质，而不仅仅是点击率。所以强烈建议用提高文章质量的方式来获得广大网友的喜欢。\r\r3、自己东奔西跑，到处逛论坛，相同学朋友推荐，不如把这些事情交给一些特定的网站来做，在这儿推荐两个推广blog的网站：博客砖和中文博客群。在我blog首页的左边博客推荐栏目下有这两个网站的相应链接。大家可以进去看看，只需要通过简单点注册就可以让您的blog在他们的网站占有一席之地。是一个推广blog的好途径\r\r4、如果你是一个兴趣广泛的人，你就可以加入很多的博客圈，这样很多的博友都能看到你的文章，也可以达到推广自己blog的目的。\r\r总之不管使用什么方法，最重要的一点还是要内容好，有特色，这样你才会有一群固定的读者，才会创建好你的个人品牌。\n\n\n","source":"_posts/to-promote-the-blog-four-tips.md","raw":"---\ntitle: 推广blog四妙招！\ndate: 2006-12-21\ncategories: [随笔杂谈]\ntags:\n---\n\n写blog有一段时间了，虽然不是很长但达到现在的访问量已让我很满意了。在写blog的这段时间里学习到了很多同时也总结出了一些推广自己blog的方法：\r\r1、我们每个人的blog内容应该都和自己的兴趣爱好有关，所以我们可以在自己感兴趣的方面写出一些好的文章，然后到一些相应的论坛去发贴或是回贴随便把自己的blog推广出去。如blog内容是IT相关的就可以到CSDN或是一些大的门户网站的IT论坛去推广。\r\r2、在网上见到很多人在blog里贴上一些比较暴露的图片或是在一些色情网站设置相应当链接来提高blog的点击率。虽然这种方法的效果还可以，但我个人不是十分同，在以前的文章中我说过blog不仅仅可以让我们来学习而且还能建立我们的个人品牌，如果使用这种方式个人的形象会受到损害，更无从谈起个人品牌了。我们写blog的目的是为了结交朋友，有一个更好的学习交流的平台，提升自我素质，而不仅仅是点击率。所以强烈建议用提高文章质量的方式来获得广大网友的喜欢。\r\r3、自己东奔西跑，到处逛论坛，相同学朋友推荐，不如把这些事情交给一些特定的网站来做，在这儿推荐两个推广blog的网站：博客砖和中文博客群。在我blog首页的左边博客推荐栏目下有这两个网站的相应链接。大家可以进去看看，只需要通过简单点注册就可以让您的blog在他们的网站占有一席之地。是一个推广blog的好途径\r\r4、如果你是一个兴趣广泛的人，你就可以加入很多的博客圈，这样很多的博友都能看到你的文章，也可以达到推广自己blog的目的。\r\r总之不管使用什么方法，最重要的一点还是要内容好，有特色，这样你才会有一群固定的读者，才会创建好你的个人品牌。\n\n\n","slug":"to-promote-the-blog-four-tips","published":1,"updated":"2016-08-12T04:53:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93r008oxfyntbsuae69","content":"<p>写blog有一段时间了，虽然不是很长但达到现在的访问量已让我很满意了。在写blog的这段时间里学习到了很多同时也总结出了一些推广自己blog的方法：</p>\n<p>1、我们每个人的blog内容应该都和自己的兴趣爱好有关，所以我们可以在自己感兴趣的方面写出一些好的文章，然后到一些相应的论坛去发贴或是回贴随便把自己的blog推广出去。如blog内容是IT相关的就可以到CSDN或是一些大的门户网站的IT论坛去推广。</p>\n<p>2、在网上见到很多人在blog里贴上一些比较暴露的图片或是在一些色情网站设置相应当链接来提高blog的点击率。虽然这种方法的效果还可以，但我个人不是十分同，在以前的文章中我说过blog不仅仅可以让我们来学习而且还能建立我们的个人品牌，如果使用这种方式个人的形象会受到损害，更无从谈起个人品牌了。我们写blog的目的是为了结交朋友，有一个更好的学习交流的平台，提升自我素质，而不仅仅是点击率。所以强烈建议用提高文章质量的方式来获得广大网友的喜欢。</p>\n<p>3、自己东奔西跑，到处逛论坛，相同学朋友推荐，不如把这些事情交给一些特定的网站来做，在这儿推荐两个推广blog的网站：博客砖和中文博客群。在我blog首页的左边博客推荐栏目下有这两个网站的相应链接。大家可以进去看看，只需要通过简单点注册就可以让您的blog在他们的网站占有一席之地。是一个推广blog的好途径</p>\n<p>4、如果你是一个兴趣广泛的人，你就可以加入很多的博客圈，这样很多的博友都能看到你的文章，也可以达到推广自己blog的目的。</p>\n<p>总之不管使用什么方法，最重要的一点还是要内容好，有特色，这样你才会有一群固定的读者，才会创建好你的个人品牌。</p>\n","excerpt":"","more":"<p>写blog有一段时间了，虽然不是很长但达到现在的访问量已让我很满意了。在写blog的这段时间里学习到了很多同时也总结出了一些推广自己blog的方法：</p>\n<p>1、我们每个人的blog内容应该都和自己的兴趣爱好有关，所以我们可以在自己感兴趣的方面写出一些好的文章，然后到一些相应的论坛去发贴或是回贴随便把自己的blog推广出去。如blog内容是IT相关的就可以到CSDN或是一些大的门户网站的IT论坛去推广。</p>\n<p>2、在网上见到很多人在blog里贴上一些比较暴露的图片或是在一些色情网站设置相应当链接来提高blog的点击率。虽然这种方法的效果还可以，但我个人不是十分同，在以前的文章中我说过blog不仅仅可以让我们来学习而且还能建立我们的个人品牌，如果使用这种方式个人的形象会受到损害，更无从谈起个人品牌了。我们写blog的目的是为了结交朋友，有一个更好的学习交流的平台，提升自我素质，而不仅仅是点击率。所以强烈建议用提高文章质量的方式来获得广大网友的喜欢。</p>\n<p>3、自己东奔西跑，到处逛论坛，相同学朋友推荐，不如把这些事情交给一些特定的网站来做，在这儿推荐两个推广blog的网站：博客砖和中文博客群。在我blog首页的左边博客推荐栏目下有这两个网站的相应链接。大家可以进去看看，只需要通过简单点注册就可以让您的blog在他们的网站占有一席之地。是一个推广blog的好途径</p>\n<p>4、如果你是一个兴趣广泛的人，你就可以加入很多的博客圈，这样很多的博友都能看到你的文章，也可以达到推广自己blog的目的。</p>\n<p>总之不管使用什么方法，最重要的一点还是要内容好，有特色，这样你才会有一群固定的读者，才会创建好你的个人品牌。</p>\n"},{"title":"GridView中实现CheckBox的全选","date":"2007-11-08T16:00:00.000Z","_content":"\n## 用服务器端的方法\n在页面上放一个gridview控件，配置好数据源，编辑列，添加一个模版列，再编辑模版，放入一个checkbox控件。代码如下：\n<!--more-->\n\n```\n<asp:GridView ID=\"GridView1\" runat=\"server\" AllowPaging=\"True\" AutoGenerateColumns=\"False\"\n        DataKeyNames=\"AreaID\" DataSourceID=\"SqlDataSource1\">\n        <Columns>\n            <asp:BoundField DataField=\"AreaID\" HeaderText=\"AreaID\" ReadOnly=\"True\" SortExpression=\"AreaID\" />\n            <asp:BoundField DataField=\"CityID\" HeaderText=\"CityID\" SortExpression=\"CityID\" />\n            <asp:TemplateField>\n                <HeaderTemplate>\n                    <asp:CheckBox ID=\"chkAll\" runat=\"server\" AutoPostBack=\"True\" \n                                          OnCheckedChanged=\"chkAll_CheckedChanged\" />\n                </HeaderTemplate>\n                <ItemTemplate>\n                    <asp:CheckBox ID=\"chkItem\" runat=\"server\" />\n                </ItemTemplate>\n            </asp:TemplateField>\n        </Columns>\n    </asp:GridView>\n```\n\n## 后台cs代码\n\n```\nprotected void chkAll_CheckedChanged(object sender, EventArgs e)\n{\n    for (int i = 0; i < this.GridView1.Rows.Count; i++)\n    {\n        ((CheckBox)GridView1.Rows[i].FindControl(\"chkItem\")).Checked =\n            ((CheckBox)this.GridView1.HeaderRow.FindControl(\"chkAll\")).Checked;\n    }\n}\n```\n\n## 用脚本实现\n\n```\n<asp:GridView ID=\"GridView1\" runat=\"server\" AllowPaging=\"True\" AutoGenerateColumns=\"False\"\n        DataKeyNames=\"AreaID\" DataSourceID=\"SqlDataSource1\">\n        <Columns>\n            <asp:BoundField DataField=\"AreaID\" HeaderText=\"AreaID\" ReadOnly=\"True\" \n                      SortExpression=\"AreaID\" />\n            <asp:BoundField DataField=\"CityID\" HeaderText=\"CityID\" SortExpression=\"CityID\" />\n            <asp:TemplateField>\n                <HeaderTemplate>\n                    <input id=\"chkAll\"  onclick=\"SelectAll(this)\"; type=checkbox>\n                </HeaderTemplate>\n                <ItemTemplate>\n                    <input id=\"chkItem\" type=checkbox>\n                 </ItemTemplate>\n            </asp:TemplateField>\n        </Columns>\n    </asp:GridView>\n```\n\n## 在客户端写javascript\n\n```\nfunction SelectAll(chkbox)\n{\n   var box=chkbox;\n   state=theBox.checked;\n   elem=box.form.elements;\n   for(i=0;i<elem.length;i++)\n   if(elem[i].type==\"checkbox\" && elem[i].id!=box.id)\n    {\n         if(elem[i].checked!=state)\n         {\n            elem[i].click();\n         }\n    }\n }\n ```\n\n\n","source":"_posts/to-realize-the-checkbox-selection-in-the-gridview.md","raw":"---\ntitle: GridView中实现CheckBox的全选\ndate: 2007-11-09\ncategories: [Asp.Net]\ntags: [AspNet,CheckBox,gridview,全选]\n---\n\n## 用服务器端的方法\n在页面上放一个gridview控件，配置好数据源，编辑列，添加一个模版列，再编辑模版，放入一个checkbox控件。代码如下：\n<!--more-->\n\n```\n<asp:GridView ID=\"GridView1\" runat=\"server\" AllowPaging=\"True\" AutoGenerateColumns=\"False\"\n        DataKeyNames=\"AreaID\" DataSourceID=\"SqlDataSource1\">\n        <Columns>\n            <asp:BoundField DataField=\"AreaID\" HeaderText=\"AreaID\" ReadOnly=\"True\" SortExpression=\"AreaID\" />\n            <asp:BoundField DataField=\"CityID\" HeaderText=\"CityID\" SortExpression=\"CityID\" />\n            <asp:TemplateField>\n                <HeaderTemplate>\n                    <asp:CheckBox ID=\"chkAll\" runat=\"server\" AutoPostBack=\"True\" \n                                          OnCheckedChanged=\"chkAll_CheckedChanged\" />\n                </HeaderTemplate>\n                <ItemTemplate>\n                    <asp:CheckBox ID=\"chkItem\" runat=\"server\" />\n                </ItemTemplate>\n            </asp:TemplateField>\n        </Columns>\n    </asp:GridView>\n```\n\n## 后台cs代码\n\n```\nprotected void chkAll_CheckedChanged(object sender, EventArgs e)\n{\n    for (int i = 0; i < this.GridView1.Rows.Count; i++)\n    {\n        ((CheckBox)GridView1.Rows[i].FindControl(\"chkItem\")).Checked =\n            ((CheckBox)this.GridView1.HeaderRow.FindControl(\"chkAll\")).Checked;\n    }\n}\n```\n\n## 用脚本实现\n\n```\n<asp:GridView ID=\"GridView1\" runat=\"server\" AllowPaging=\"True\" AutoGenerateColumns=\"False\"\n        DataKeyNames=\"AreaID\" DataSourceID=\"SqlDataSource1\">\n        <Columns>\n            <asp:BoundField DataField=\"AreaID\" HeaderText=\"AreaID\" ReadOnly=\"True\" \n                      SortExpression=\"AreaID\" />\n            <asp:BoundField DataField=\"CityID\" HeaderText=\"CityID\" SortExpression=\"CityID\" />\n            <asp:TemplateField>\n                <HeaderTemplate>\n                    <input id=\"chkAll\"  onclick=\"SelectAll(this)\"; type=checkbox>\n                </HeaderTemplate>\n                <ItemTemplate>\n                    <input id=\"chkItem\" type=checkbox>\n                 </ItemTemplate>\n            </asp:TemplateField>\n        </Columns>\n    </asp:GridView>\n```\n\n## 在客户端写javascript\n\n```\nfunction SelectAll(chkbox)\n{\n   var box=chkbox;\n   state=theBox.checked;\n   elem=box.form.elements;\n   for(i=0;i<elem.length;i++)\n   if(elem[i].type==\"checkbox\" && elem[i].id!=box.id)\n    {\n         if(elem[i].checked!=state)\n         {\n            elem[i].click();\n         }\n    }\n }\n ```\n\n\n","slug":"to-realize-the-checkbox-selection-in-the-gridview","published":1,"updated":"2016-08-13T13:54:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93s008sxfynaity70jd","content":"<h2 id=\"用服务器端的方法\"><a href=\"#用服务器端的方法\" class=\"headerlink\" title=\"用服务器端的方法\"></a>用服务器端的方法</h2><p>在页面上放一个gridview控件，配置好数据源，编辑列，添加一个模版列，再编辑模版，放入一个checkbox控件。代码如下：<br><a id=\"more\"></a></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:GridView</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"GridView1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">AllowPaging</span>=<span class=\"string\">\"True\"</span> <span class=\"attr\">AutoGenerateColumns</span>=<span class=\"string\">\"False\"</span></span></div><div class=\"line\">        <span class=\"attr\">DataKeyNames</span>=<span class=\"string\">\"AreaID\"</span> <span class=\"attr\">DataSourceID</span>=<span class=\"string\">\"SqlDataSource1\"</span>&gt;</div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Columns</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">asp:BoundField</span> <span class=\"attr\">DataField</span>=<span class=\"string\">\"AreaID\"</span> <span class=\"attr\">HeaderText</span>=<span class=\"string\">\"AreaID\"</span> <span class=\"attr\">ReadOnly</span>=<span class=\"string\">\"True\"</span> <span class=\"attr\">SortExpression</span>=<span class=\"string\">\"AreaID\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">asp:BoundField</span> <span class=\"attr\">DataField</span>=<span class=\"string\">\"CityID\"</span> <span class=\"attr\">HeaderText</span>=<span class=\"string\">\"CityID\"</span> <span class=\"attr\">SortExpression</span>=<span class=\"string\">\"CityID\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">asp:TemplateField</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">HeaderTemplate</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">asp:CheckBox</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"chkAll\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">AutoPostBack</span>=<span class=\"string\">\"True\"</span> </span></div><div class=\"line\">                                          <span class=\"attr\">OnCheckedChanged</span>=<span class=\"string\">\"chkAll_CheckedChanged\"</span> /&gt;</div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">HeaderTemplate</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">asp:CheckBox</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"chkItem\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">asp:TemplateField</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Columns</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">asp:GridView</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"后台cs代码\"><a href=\"#后台cs代码\" class=\"headerlink\" title=\"后台cs代码\"></a>后台cs代码</h2><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">chkAll_CheckedChanged</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">this</span>.GridView1.Rows.Count; i++)</div><div class=\"line\">    &#123;</div><div class=\"line\">        ((CheckBox)GridView1.Rows[i].FindControl(<span class=\"string\">\"chkItem\"</span>)).Checked =</div><div class=\"line\">            ((CheckBox)<span class=\"keyword\">this</span>.GridView1.HeaderRow.FindControl(<span class=\"string\">\"chkAll\"</span>)).Checked;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"用脚本实现\"><a href=\"#用脚本实现\" class=\"headerlink\" title=\"用脚本实现\"></a>用脚本实现</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:GridView</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"GridView1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">AllowPaging</span>=<span class=\"string\">\"True\"</span> <span class=\"attr\">AutoGenerateColumns</span>=<span class=\"string\">\"False\"</span></span></div><div class=\"line\">        <span class=\"attr\">DataKeyNames</span>=<span class=\"string\">\"AreaID\"</span> <span class=\"attr\">DataSourceID</span>=<span class=\"string\">\"SqlDataSource1\"</span>&gt;</div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Columns</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">asp:BoundField</span> <span class=\"attr\">DataField</span>=<span class=\"string\">\"AreaID\"</span> <span class=\"attr\">HeaderText</span>=<span class=\"string\">\"AreaID\"</span> <span class=\"attr\">ReadOnly</span>=<span class=\"string\">\"True\"</span> </span></div><div class=\"line\">                      <span class=\"attr\">SortExpression</span>=<span class=\"string\">\"AreaID\"</span> /&gt;</div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">asp:BoundField</span> <span class=\"attr\">DataField</span>=<span class=\"string\">\"CityID\"</span> <span class=\"attr\">HeaderText</span>=<span class=\"string\">\"CityID\"</span> <span class=\"attr\">SortExpression</span>=<span class=\"string\">\"CityID\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">asp:TemplateField</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">HeaderTemplate</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"chkAll\"</span>  <span class=\"attr\">onclick</span>=<span class=\"string\">\"SelectAll(this)\"</span>; <span class=\"attr\">type</span>=<span class=\"string\">checkbox</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">HeaderTemplate</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"chkItem\"</span> <span class=\"attr\">type</span>=<span class=\"string\">checkbox</span>&gt;</span></div><div class=\"line\">                 <span class=\"tag\">&lt;/<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">asp:TemplateField</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Columns</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">asp:GridView</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"在客户端写javascript\"><a href=\"#在客户端写javascript\" class=\"headerlink\" title=\"在客户端写javascript\"></a>在客户端写javascript</h2><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">function SelectAll(chkbox)</div><div class=\"line\">&#123;</div><div class=\"line\">   <span class=\"built_in\">var</span> <span class=\"built_in\">box</span>=chkbox;</div><div class=\"line\">   state=theBox.checked;</div><div class=\"line\">   <span class=\"built_in\">elem</span>=<span class=\"built_in\">box</span>.form.elements;</div><div class=\"line\">   <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"built_in\">elem</span>.<span class=\"built_in\">length</span>;i++)</div><div class=\"line\">   <span class=\"keyword\">if</span>(<span class=\"built_in\">elem</span>[i].type==<span class=\"string\">\"checkbox\"</span> &amp;&amp; <span class=\"built_in\">elem</span>[i].id!=<span class=\"built_in\">box</span>.id)</div><div class=\"line\">    &#123;</div><div class=\"line\">         <span class=\"keyword\">if</span>(<span class=\"built_in\">elem</span>[i].checked!=state)</div><div class=\"line\">         &#123;</div><div class=\"line\">            <span class=\"built_in\">elem</span>[i].click();</div><div class=\"line\">         &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n","excerpt":"<h2 id=\"用服务器端的方法\"><a href=\"#用服务器端的方法\" class=\"headerlink\" title=\"用服务器端的方法\"></a>用服务器端的方法</h2><p>在页面上放一个gridview控件，配置好数据源，编辑列，添加一个模版列，再编辑模版，放入一个checkbox控件。代码如下：<br>","more":"</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:GridView</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"GridView1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">AllowPaging</span>=<span class=\"string\">\"True\"</span> <span class=\"attr\">AutoGenerateColumns</span>=<span class=\"string\">\"False\"</span></div><div class=\"line\">        <span class=\"attr\">DataKeyNames</span>=<span class=\"string\">\"AreaID\"</span> <span class=\"attr\">DataSourceID</span>=<span class=\"string\">\"SqlDataSource1\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Columns</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">asp:BoundField</span> <span class=\"attr\">DataField</span>=<span class=\"string\">\"AreaID\"</span> <span class=\"attr\">HeaderText</span>=<span class=\"string\">\"AreaID\"</span> <span class=\"attr\">ReadOnly</span>=<span class=\"string\">\"True\"</span> <span class=\"attr\">SortExpression</span>=<span class=\"string\">\"AreaID\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">asp:BoundField</span> <span class=\"attr\">DataField</span>=<span class=\"string\">\"CityID\"</span> <span class=\"attr\">HeaderText</span>=<span class=\"string\">\"CityID\"</span> <span class=\"attr\">SortExpression</span>=<span class=\"string\">\"CityID\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">asp:TemplateField</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">HeaderTemplate</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">asp:CheckBox</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"chkAll\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">AutoPostBack</span>=<span class=\"string\">\"True\"</span> </div><div class=\"line\">                                          <span class=\"attr\">OnCheckedChanged</span>=<span class=\"string\">\"chkAll_CheckedChanged\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">HeaderTemplate</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">asp:CheckBox</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"chkItem\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> /&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">asp:TemplateField</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Columns</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">asp:GridView</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"后台cs代码\"><a href=\"#后台cs代码\" class=\"headerlink\" title=\"后台cs代码\"></a>后台cs代码</h2><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">chkAll_CheckedChanged</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">this</span>.GridView1.Rows.Count; i++)</div><div class=\"line\">    &#123;</div><div class=\"line\">        ((CheckBox)GridView1.Rows[i].FindControl(<span class=\"string\">\"chkItem\"</span>)).Checked =</div><div class=\"line\">            ((CheckBox)<span class=\"keyword\">this</span>.GridView1.HeaderRow.FindControl(<span class=\"string\">\"chkAll\"</span>)).Checked;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"用脚本实现\"><a href=\"#用脚本实现\" class=\"headerlink\" title=\"用脚本实现\"></a>用脚本实现</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">asp:GridView</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"GridView1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">AllowPaging</span>=<span class=\"string\">\"True\"</span> <span class=\"attr\">AutoGenerateColumns</span>=<span class=\"string\">\"False\"</span></div><div class=\"line\">        <span class=\"attr\">DataKeyNames</span>=<span class=\"string\">\"AreaID\"</span> <span class=\"attr\">DataSourceID</span>=<span class=\"string\">\"SqlDataSource1\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Columns</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">asp:BoundField</span> <span class=\"attr\">DataField</span>=<span class=\"string\">\"AreaID\"</span> <span class=\"attr\">HeaderText</span>=<span class=\"string\">\"AreaID\"</span> <span class=\"attr\">ReadOnly</span>=<span class=\"string\">\"True\"</span> </div><div class=\"line\">                      <span class=\"attr\">SortExpression</span>=<span class=\"string\">\"AreaID\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">asp:BoundField</span> <span class=\"attr\">DataField</span>=<span class=\"string\">\"CityID\"</span> <span class=\"attr\">HeaderText</span>=<span class=\"string\">\"CityID\"</span> <span class=\"attr\">SortExpression</span>=<span class=\"string\">\"CityID\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">asp:TemplateField</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">HeaderTemplate</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"chkAll\"</span>  <span class=\"attr\">onclick</span>=<span class=\"string\">\"SelectAll(this)\"</span>; <span class=\"attr\">type</span>=<span class=\"string\">checkbox</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">HeaderTemplate</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"chkItem\"</span> <span class=\"attr\">type</span>=<span class=\"string\">checkbox</span>&gt;</span></div><div class=\"line\">                 <span class=\"tag\">&lt;/<span class=\"name\">ItemTemplate</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">asp:TemplateField</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Columns</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">asp:GridView</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"在客户端写javascript\"><a href=\"#在客户端写javascript\" class=\"headerlink\" title=\"在客户端写javascript\"></a>在客户端写javascript</h2><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">function SelectAll(chkbox)</div><div class=\"line\">&#123;</div><div class=\"line\">   <span class=\"built_in\">var</span> <span class=\"built_in\">box</span>=chkbox;</div><div class=\"line\">   state=theBox.checked;</div><div class=\"line\">   <span class=\"built_in\">elem</span>=<span class=\"built_in\">box</span>.form.elements;</div><div class=\"line\">   <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"built_in\">elem</span>.<span class=\"built_in\">length</span>;i++)</div><div class=\"line\">   <span class=\"keyword\">if</span>(<span class=\"built_in\">elem</span>[i].type==<span class=\"string\">\"checkbox\"</span> &amp;&amp; <span class=\"built_in\">elem</span>[i].id!=<span class=\"built_in\">box</span>.id)</div><div class=\"line\">    &#123;</div><div class=\"line\">         <span class=\"keyword\">if</span>(<span class=\"built_in\">elem</span>[i].checked!=state)</div><div class=\"line\">         &#123;</div><div class=\"line\">            <span class=\"built_in\">elem</span>[i].click();</div><div class=\"line\">         &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>"},{"title":"解決“无法解决 equal to 操作的排序规则冲突 ”问题","date":"2008-07-02T16:00:00.000Z","_content":"\n## 问题：\n\n在创建存储过程时 出现 “无法解决 equal to 操作的排序规则冲突 ”\n\n## 解决方法：\n\n1 WHERE 列名 collate Chinese_PRC_CI_AS(强制指定排序规则)，如：\n\n```\nselect\n    *\nfrom\n    test\nwhere\n    name collate chinese_prc_ci_as in\n     (select name1 chinese_prc_ci_as from test1)\n```\n\n2 如果涉及到多表查询，则在on后面加上collate Chinese_PRC_CI_AS(强制指定排序规则) 如：\n\n```\nselect\n    *\nfrom\n    test1 1\njoin\n    test2 2\non\n    1.id=2.id collate Chinese_PRC_CI_AS\n```\n\n\n","source":"_posts/to-solve-the-unable-to-solve-the-equal-to-operation-collation-conflict-problem.md","raw":"---\ntitle: 解決“无法解决 equal to 操作的排序规则冲突 ”问题\ndate: 2008-07-03\ncategories: [SqlServer]\ntags: [SqlServer,错误解决]\n---\n\n## 问题：\n\n在创建存储过程时 出现 “无法解决 equal to 操作的排序规则冲突 ”\n\n## 解决方法：\n\n1 WHERE 列名 collate Chinese_PRC_CI_AS(强制指定排序规则)，如：\n\n```\nselect\n    *\nfrom\n    test\nwhere\n    name collate chinese_prc_ci_as in\n     (select name1 chinese_prc_ci_as from test1)\n```\n\n2 如果涉及到多表查询，则在on后面加上collate Chinese_PRC_CI_AS(强制指定排序规则) 如：\n\n```\nselect\n    *\nfrom\n    test1 1\njoin\n    test2 2\non\n    1.id=2.id collate Chinese_PRC_CI_AS\n```\n\n\n","slug":"to-solve-the-unable-to-solve-the-equal-to-operation-collation-conflict-problem","published":1,"updated":"2016-08-14T06:41:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93t008vxfyng5675gsk","content":"<h2 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h2><p>在创建存储过程时 出现 “无法解决 equal to 操作的排序规则冲突 ”</p>\n<h2 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h2><p>1 WHERE 列名 collate Chinese_PRC_CI_AS(强制指定排序规则)，如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span></div><div class=\"line\">    *</div><div class=\"line\"><span class=\"keyword\">from</span></div><div class=\"line\">    <span class=\"keyword\">test</span></div><div class=\"line\"><span class=\"keyword\">where</span></div><div class=\"line\">    <span class=\"keyword\">name</span> <span class=\"keyword\">collate</span> chinese_prc_ci_as <span class=\"keyword\">in</span></div><div class=\"line\">     (<span class=\"keyword\">select</span> name1 chinese_prc_ci_as <span class=\"keyword\">from</span> test1)</div></pre></td></tr></table></figure>\n<p>2 如果涉及到多表查询，则在on后面加上collate Chinese_PRC_CI_AS(强制指定排序规则) 如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span></div><div class=\"line\">    *</div><div class=\"line\"><span class=\"keyword\">from</span></div><div class=\"line\">    test1 <span class=\"number\">1</span></div><div class=\"line\"><span class=\"keyword\">join</span></div><div class=\"line\">    test2 <span class=\"number\">2</span></div><div class=\"line\"><span class=\"keyword\">on</span></div><div class=\"line\">    <span class=\"number\">1.</span><span class=\"keyword\">id</span>=<span class=\"number\">2.</span><span class=\"keyword\">id</span> <span class=\"keyword\">collate</span> Chinese_PRC_CI_AS</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h2><p>在创建存储过程时 出现 “无法解决 equal to 操作的排序规则冲突 ”</p>\n<h2 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h2><p>1 WHERE 列名 collate Chinese_PRC_CI_AS(强制指定排序规则)，如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span></div><div class=\"line\">    *</div><div class=\"line\"><span class=\"keyword\">from</span></div><div class=\"line\">    <span class=\"keyword\">test</span></div><div class=\"line\"><span class=\"keyword\">where</span></div><div class=\"line\">    <span class=\"keyword\">name</span> <span class=\"keyword\">collate</span> chinese_prc_ci_as <span class=\"keyword\">in</span></div><div class=\"line\">     (<span class=\"keyword\">select</span> name1 chinese_prc_ci_as <span class=\"keyword\">from</span> test1)</div></pre></td></tr></table></figure>\n<p>2 如果涉及到多表查询，则在on后面加上collate Chinese_PRC_CI_AS(强制指定排序规则) 如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span></div><div class=\"line\">    *</div><div class=\"line\"><span class=\"keyword\">from</span></div><div class=\"line\">    test1 <span class=\"number\">1</span></div><div class=\"line\"><span class=\"keyword\">join</span></div><div class=\"line\">    test2 <span class=\"number\">2</span></div><div class=\"line\"><span class=\"keyword\">on</span></div><div class=\"line\">    <span class=\"number\">1.</span><span class=\"keyword\">id</span>=<span class=\"number\">2.</span><span class=\"keyword\">id</span> <span class=\"keyword\">collate</span> Chinese_PRC_CI_AS</div></pre></td></tr></table></figure>\n"},{"title":"类型“GridView”的控件 必须放在具有 runat=server 的窗体标记内 错误的解决方法","date":"2007-12-15T16:00:00.000Z","_content":"\n## 错误提示: \n\n> 类型“GridView”的控件  必须放在具有 runat=server 的窗体标记内\n\n## 解决方法:\n\n在后台文件中重载VerifyRenderingInServerForm方法,如:\n\n```\npublic override void VerifyRenderingInServerForm(Control control)\n{\n    //base.VerifyRenderingInServerForm(control);\n}\n```\n\n","source":"_posts/type-of-the-gridview-controls-within-the-form-tag-must-be-placed-with-runat-equal-server-error-solution.md","raw":"---\ntitle: 类型“GridView”的控件 必须放在具有 runat=server 的窗体标记内 错误的解决方法\ndate: 2007-12-16\ncategories: [Asp.Net]\ntags: [AspNet,GrdiView,错误解决]\n---\n\n## 错误提示: \n\n> 类型“GridView”的控件  必须放在具有 runat=server 的窗体标记内\n\n## 解决方法:\n\n在后台文件中重载VerifyRenderingInServerForm方法,如:\n\n```\npublic override void VerifyRenderingInServerForm(Control control)\n{\n    //base.VerifyRenderingInServerForm(control);\n}\n```\n\n","slug":"type-of-the-gridview-controls-within-the-form-tag-must-be-placed-with-runat-equal-server-error-solution","published":1,"updated":"2016-08-13T14:08:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93v008zxfynj2xmm9lx","content":"<h2 id=\"错误提示\"><a href=\"#错误提示\" class=\"headerlink\" title=\"错误提示:\"></a>错误提示:</h2><blockquote>\n<p>类型“GridView”的控件  必须放在具有 runat=server 的窗体标记内</p>\n</blockquote>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法:\"></a>解决方法:</h2><p>在后台文件中重载VerifyRenderingInServerForm方法,如:</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">VerifyRenderingInServerForm</span>(<span class=\"params\">Control control</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">//base.VerifyRenderingInServerForm(control);</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"错误提示\"><a href=\"#错误提示\" class=\"headerlink\" title=\"错误提示:\"></a>错误提示:</h2><blockquote>\n<p>类型“GridView”的控件  必须放在具有 runat=server 的窗体标记内</p>\n</blockquote>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法:\"></a>解决方法:</h2><p>在后台文件中重载VerifyRenderingInServerForm方法,如:</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">VerifyRenderingInServerForm</span>(<span class=\"params\">Control control</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"comment\">//base.VerifyRenderingInServerForm(control);</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"“无法在web服务器上启动调试,不具备调试此程序的权限” 问题解决","date":"2007-11-27T16:00:00.000Z","_content":"\n最近维护以前用03做的一个项目,又重新将03装上了，很久都没有用03了,装上后打开项目没有问题,但按F5运行却出现下面错误\n<!--more-->\n![2010-12-31_152927](http://oec2003.qiniudn.com/2010-12-31_152927.gif)\n\n解决方法如下:\n\n在INTERNET选项–>安全–>选择internet–>点击“自定义级别”–>移到“用户验证”，选择“自动使用当前名和密码登录”，点击“确定”。\n\n","source":"_posts/unable-to-start-debugging-on-the-web-server-do-not-have-permission-to-debug-the-program-problem-solving.md","raw":"---\ntitle: “无法在web服务器上启动调试,不具备调试此程序的权限” 问题解决\ndate: 2007-11-28\ncategories: [Asp.Net]\ntags: [AspNet,错误解决]\n---\n\n最近维护以前用03做的一个项目,又重新将03装上了，很久都没有用03了,装上后打开项目没有问题,但按F5运行却出现下面错误\n<!--more-->\n![2010-12-31_152927](http://oec2003.qiniudn.com/2010-12-31_152927.gif)\n\n解决方法如下:\n\n在INTERNET选项–>安全–>选择internet–>点击“自定义级别”–>移到“用户验证”，选择“自动使用当前名和密码登录”，点击“确定”。\n\n","slug":"unable-to-start-debugging-on-the-web-server-do-not-have-permission-to-debug-the-program-problem-solving","published":1,"updated":"2016-08-13T13:52:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93w0092xfyndze53jao","content":"<p>最近维护以前用03做的一个项目,又重新将03装上了，很久都没有用03了,装上后打开项目没有问题,但按F5运行却出现下面错误<br><a id=\"more\"></a><br><img src=\"http://oec2003.qiniudn.com/2010-12-31_152927.gif\" alt=\"2010-12-31_152927\"></p>\n<p>解决方法如下:</p>\n<p>在INTERNET选项–&gt;安全–&gt;选择internet–&gt;点击“自定义级别”–&gt;移到“用户验证”，选择“自动使用当前名和密码登录”，点击“确定”。</p>\n","excerpt":"<p>最近维护以前用03做的一个项目,又重新将03装上了，很久都没有用03了,装上后打开项目没有问题,但按F5运行却出现下面错误<br>","more":"<br><img src=\"http://oec2003.qiniudn.com/2010-12-31_152927.gif\" alt=\"2010-12-31_152927\"></p>\n<p>解决方法如下:</p>\n<p>在INTERNET选项–&gt;安全–&gt;选择internet–&gt;点击“自定义级别”–&gt;移到“用户验证”，选择“自动使用当前名和密码登录”，点击“确定”。</p>"},{"title":"解决AJAX中使用UpdatePanel后再用Response.Write();无法弹出对话框问题","date":"2008-01-18T16:00:00.000Z","_content":"\n在AJAX支持的网站中使用想使用Response.Wrie(‘’); 或 Page. RegisterStartupScript (); 弹出一些提示对话框，没有效果。有如下三种解决方法：\n<!--more-->\n\n1 System.Web.UI.ScriptManager.RegisterStartupScript来替代Page.ClientScript.RegisterStartupScript\n\n函数原型：\n\n```\nSystem.Web.UI.ScriptManager.RegisterStartupScript（Contrl control, Type type,string key,string script, bool addScriptTags）;\n```\n\n参数：\n\n* control:要要注册此段javascript语句的控件ID,如下面示例的按钮ID btnUnReport\n* type:这个参数是注册脚本块控件的类型,即updatepanel的类型。一般直接用this.GetType()即可\n* key:为要执行的javascirpt语句起的名字，可以随便起，类似控件的name属性\n* script:javascript语句\n* addScriptTags:为true时，前边的script参数可以不用再写javascript标签；为false,则需自己为script参数添加<script language=’javascript’></script>标签。\n\n注：要多传一个Control参数，如果这个control在UpdatePanel里，则运行脚本，如果这个control不在UpdatePanel则不运行这段脚本。\n\n例如:\n\n```\nSystem.Web.UI.ScriptManager.RegisterStartupScript(btnTestthis.GetType(), \"test\",\n        \"alert('test');window.close();\", true);\n```\n\n2 注册DataItem方法\n\n前台代码\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"WebForm1.aspx.cs\" Inherits=\"WebForm1\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head id=\"Head1\" runat=\"server\">\n    <title>无标题页</title>\n</head>\n<body>\n    <form id=\"form1\" runat=\"server\">\n    <asp:ScriptManager ID=\"ScriptManager1\" runat=\"server\">\n    </asp:ScriptManager>\n\n    <script type=\"text/javascript\">\n        Sys.WebForms.PageRequestManager.getInstance().add_pageLoading(\n            function(sender, e) {\n                var dataItem = e.get_dataItems()[\"<%= this.UpdatePanel1.ClientID %>\"]();\n                    alert(dataItem.Name);\n            });\n    </script>\n\n    <div>\n        <asp:UpdatePanel ID=\"UpdatePanel1\" runat=\"server\">\n            <ContentTemplate>\n                <asp:Button ID=\"test\" runat=\"server\" Text=\"test\" OnClick=\"test_Click\" />\n            </ContentTemplate>\n        </asp:UpdatePanel>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n后台代码\n\n```\nusing System;\nusing System.Data;\nusing System.Configuration;\nusing System.Collections;\nusing System.Web;\nusing System.Web.Security;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\nusing System.Web.UI.HtmlControls;\nusing System.Web.Script.Serialization;\n\npublic partial class WebForm1 : System.Web.UI.Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n\n    }\n    protected void test_Click(object sender, EventArgs e)\n    {\n        JavaScriptSerializer serializer = new JavaScriptSerializer();\n        ScriptManager.GetCurrent(this.Page).RegisterDataItem(this.UpdatePanel1,\n            \"var _f = function(){alert('Hello World!');}; _f;\", true);\n\n    }\n\n}\n```\n\n3 使用Javascript的非模态对话框弹出提示\n\n```\nPage.RegisterStartupScript(\"alert\",\n  \"<script language='javascript'>window.showModelessDialog(\"javascript:alert('test');window.close();\",\n  \"\",\"status:no;resizable:no;help:no;dialogHeight:height:30px;dialogHeight:40px;\")</script>\"); \n```\n\n\n","source":"_posts/updatepanel-issues.md","raw":"---\ntitle: 解决AJAX中使用UpdatePanel后再用Response.Write();无法弹出对话框问题\ndate: 2008-01-19\ncategories: [Asp.Net Ajax]\ntags: [Ajax,AspNet,错误解决]\n---\n\n在AJAX支持的网站中使用想使用Response.Wrie(‘’); 或 Page. RegisterStartupScript (); 弹出一些提示对话框，没有效果。有如下三种解决方法：\n<!--more-->\n\n1 System.Web.UI.ScriptManager.RegisterStartupScript来替代Page.ClientScript.RegisterStartupScript\n\n函数原型：\n\n```\nSystem.Web.UI.ScriptManager.RegisterStartupScript（Contrl control, Type type,string key,string script, bool addScriptTags）;\n```\n\n参数：\n\n* control:要要注册此段javascript语句的控件ID,如下面示例的按钮ID btnUnReport\n* type:这个参数是注册脚本块控件的类型,即updatepanel的类型。一般直接用this.GetType()即可\n* key:为要执行的javascirpt语句起的名字，可以随便起，类似控件的name属性\n* script:javascript语句\n* addScriptTags:为true时，前边的script参数可以不用再写javascript标签；为false,则需自己为script参数添加<script language=’javascript’></script>标签。\n\n注：要多传一个Control参数，如果这个control在UpdatePanel里，则运行脚本，如果这个control不在UpdatePanel则不运行这段脚本。\n\n例如:\n\n```\nSystem.Web.UI.ScriptManager.RegisterStartupScript(btnTestthis.GetType(), \"test\",\n        \"alert('test');window.close();\", true);\n```\n\n2 注册DataItem方法\n\n前台代码\n\n```\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"WebForm1.aspx.cs\" Inherits=\"WebForm1\" %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head id=\"Head1\" runat=\"server\">\n    <title>无标题页</title>\n</head>\n<body>\n    <form id=\"form1\" runat=\"server\">\n    <asp:ScriptManager ID=\"ScriptManager1\" runat=\"server\">\n    </asp:ScriptManager>\n\n    <script type=\"text/javascript\">\n        Sys.WebForms.PageRequestManager.getInstance().add_pageLoading(\n            function(sender, e) {\n                var dataItem = e.get_dataItems()[\"<%= this.UpdatePanel1.ClientID %>\"]();\n                    alert(dataItem.Name);\n            });\n    </script>\n\n    <div>\n        <asp:UpdatePanel ID=\"UpdatePanel1\" runat=\"server\">\n            <ContentTemplate>\n                <asp:Button ID=\"test\" runat=\"server\" Text=\"test\" OnClick=\"test_Click\" />\n            </ContentTemplate>\n        </asp:UpdatePanel>\n    </div>\n    </form>\n</body>\n</html>\n```\n\n后台代码\n\n```\nusing System;\nusing System.Data;\nusing System.Configuration;\nusing System.Collections;\nusing System.Web;\nusing System.Web.Security;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\nusing System.Web.UI.HtmlControls;\nusing System.Web.Script.Serialization;\n\npublic partial class WebForm1 : System.Web.UI.Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n\n    }\n    protected void test_Click(object sender, EventArgs e)\n    {\n        JavaScriptSerializer serializer = new JavaScriptSerializer();\n        ScriptManager.GetCurrent(this.Page).RegisterDataItem(this.UpdatePanel1,\n            \"var _f = function(){alert('Hello World!');}; _f;\", true);\n\n    }\n\n}\n```\n\n3 使用Javascript的非模态对话框弹出提示\n\n```\nPage.RegisterStartupScript(\"alert\",\n  \"<script language='javascript'>window.showModelessDialog(\"javascript:alert('test');window.close();\",\n  \"\",\"status:no;resizable:no;help:no;dialogHeight:height:30px;dialogHeight:40px;\")</script>\"); \n```\n\n\n","slug":"updatepanel-issues","published":1,"updated":"2016-08-13T14:44:25.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93x0096xfyneg0rp74o","content":"<p>在AJAX支持的网站中使用想使用Response.Wrie(‘’); 或 Page. RegisterStartupScript (); 弹出一些提示对话框，没有效果。有如下三种解决方法：<br><a id=\"more\"></a></p>\n<p>1 System.Web.UI.ScriptManager.RegisterStartupScript来替代Page.ClientScript.RegisterStartupScript</p>\n<p>函数原型：</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">System</span>.Web.UI.ScriptManager.RegisterStartupScript（Contrl control, <span class=\"built_in\">Type</span> <span class=\"built_in\">type</span>,<span class=\"keyword\">string</span> <span class=\"built_in\">key</span>,<span class=\"keyword\">string</span> script, <span class=\"keyword\">bool</span> addScriptTags）;</div></pre></td></tr></table></figure>\n<p>参数：</p>\n<ul>\n<li>control:要要注册此段javascript语句的控件ID,如下面示例的按钮ID btnUnReport</li>\n<li>type:这个参数是注册脚本块控件的类型,即updatepanel的类型。一般直接用this.GetType()即可</li>\n<li>key:为要执行的javascirpt语句起的名字，可以随便起，类似控件的name属性</li>\n<li>script:javascript语句</li>\n<li>addScriptTags:为true时，前边的script参数可以不用再写javascript标签；为false,则需自己为script参数添加<script language=\"’javascript’\"></script>标签。</li>\n</ul>\n<p>注：要多传一个Control参数，如果这个control在UpdatePanel里，则运行脚本，如果这个control不在UpdatePanel则不运行这段脚本。</p>\n<p>例如:</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">System<span class=\"selector-class\">.Web</span><span class=\"selector-class\">.UI</span><span class=\"selector-class\">.ScriptManager</span><span class=\"selector-class\">.RegisterStartupScript</span>(btnTestthis.GetType(), <span class=\"string\">\"test\"</span>,</div><div class=\"line\">        <span class=\"string\">\"alert('test');window.close();\"</span>, true);</div></pre></td></tr></table></figure>\n<p>2 注册DataItem方法</p>\n<p>前台代码</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"WebForm1.aspx.cs\"</span> Inherits=<span class=\"string\">\"WebForm1\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"</span></div><div class=\"line\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>无标题页<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:ScriptManager</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"ScriptManager1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">asp:ScriptManager</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"actionscript\"></span></div><div class=\"line\">        Sys.WebForms.PageRequestManager.getInstance().add_pageLoading(</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(sender, e)</span> </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> dataItem = e.get_dataItems()[<span class=\"string\">\"&lt;%=</span><span class=\"ruby\"> this.UpdatePanel1.ClientID </span><span class=\"xml\"><span class=\"undefined\">%&gt;\"]();</span></span></div><div class=\"line\">                    alert(dataItem.Name);</div><div class=\"line\">            &#125;);</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">asp:UpdatePanel</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"UpdatePanel1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ContentTemplate</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">asp:Button</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"test\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"test\"</span> <span class=\"attr\">OnClick</span>=<span class=\"string\">\"test_Click\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ContentTemplate</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">asp:UpdatePanel</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>后台代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Data;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Configuration;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Security;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls.WebParts;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.HtmlControls;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Script.Serialization;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> WebForm1 : System.Web.UI.Page</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">test_Click</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        JavaScriptSerializer serializer = <span class=\"keyword\">new</span> JavaScriptSerializer();</div><div class=\"line\">        ScriptManager.GetCurrent(<span class=\"keyword\">this</span>.Page).RegisterDataItem(<span class=\"keyword\">this</span>.UpdatePanel1,</div><div class=\"line\">            <span class=\"string\">\"var _f = function()&#123;alert('Hello World!');&#125;; _f;\"</span>, <span class=\"literal\">true</span>);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>3 使用Javascript的非模态对话框弹出提示</p>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Page.RegisterStartupScript(<span class=\"string\">\"alert\"</span>,</div><div class=\"line\">  <span class=\"string\">\"&lt;script language='javascript'&gt;window.showModelessDialog(\"</span>javascript:alert(<span class=\"string\">'test'</span>);<span class=\"built_in\">window</span>.close();<span class=\"string\">\",</span></div><div class=\"line\">  \"<span class=\"string\">\",\"</span>status:<span class=\"literal\">no</span>;resizable:<span class=\"literal\">no</span>;help:<span class=\"literal\">no</span>;dialogHeight:height:<span class=\"number\">30</span>px;dialogHeight:<span class=\"number\">40</span>px;<span class=\"string\">\")&lt;/script&gt;\"</span>);</div></pre></td></tr></table></figure>\n","excerpt":"<p>在AJAX支持的网站中使用想使用Response.Wrie(‘’); 或 Page. RegisterStartupScript (); 弹出一些提示对话框，没有效果。有如下三种解决方法：<br>","more":"</p>\n<p>1 System.Web.UI.ScriptManager.RegisterStartupScript来替代Page.ClientScript.RegisterStartupScript</p>\n<p>函数原型：</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">System</span>.Web.UI.ScriptManager.RegisterStartupScript（Contrl control, <span class=\"built_in\">Type</span> <span class=\"built_in\">type</span>,<span class=\"keyword\">string</span> <span class=\"built_in\">key</span>,<span class=\"keyword\">string</span> script, <span class=\"keyword\">bool</span> addScriptTags）;</div></pre></td></tr></table></figure>\n<p>参数：</p>\n<ul>\n<li>control:要要注册此段javascript语句的控件ID,如下面示例的按钮ID btnUnReport</li>\n<li>type:这个参数是注册脚本块控件的类型,即updatepanel的类型。一般直接用this.GetType()即可</li>\n<li>key:为要执行的javascirpt语句起的名字，可以随便起，类似控件的name属性</li>\n<li>script:javascript语句</li>\n<li>addScriptTags:为true时，前边的script参数可以不用再写javascript标签；为false,则需自己为script参数添加<script language=’javascript’></script>标签。</li>\n</ul>\n<p>注：要多传一个Control参数，如果这个control在UpdatePanel里，则运行脚本，如果这个control不在UpdatePanel则不运行这段脚本。</p>\n<p>例如:</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">System<span class=\"selector-class\">.Web</span><span class=\"selector-class\">.UI</span><span class=\"selector-class\">.ScriptManager</span><span class=\"selector-class\">.RegisterStartupScript</span>(btnTestthis.GetType(), <span class=\"string\">\"test\"</span>,</div><div class=\"line\">        <span class=\"string\">\"alert('test');window.close();\"</span>, true);</div></pre></td></tr></table></figure>\n<p>2 注册DataItem方法</p>\n<p>前台代码</p>\n<figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\">@ Page Language=<span class=\"string\">\"C#\"</span> AutoEventWireup=<span class=\"string\">\"true\"</span> CodeFile=<span class=\"string\">\"WebForm1.aspx.cs\"</span> Inherits=<span class=\"string\">\"WebForm1\"</span> </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"</div><div class=\"line\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Head1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>无标题页<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">asp:ScriptManager</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"ScriptManager1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">asp:ScriptManager</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"actionscript\"></div><div class=\"line\">        Sys.WebForms.PageRequestManager.getInstance().add_pageLoading(</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(sender, e)</span> </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> dataItem = e.get_dataItems()[<span class=\"string\">\"&lt;%=</span></span></span><span class=\"ruby\"> this.UpdatePanel1.ClientID </span><span class=\"xml\"><span class=\"undefined\">%&gt;\"]();</div><div class=\"line\">                    alert(dataItem.Name);</div><div class=\"line\">            &#125;);</div><div class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">asp:UpdatePanel</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"UpdatePanel1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ContentTemplate</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">asp:Button</span> <span class=\"attr\">ID</span>=<span class=\"string\">\"test\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"test\"</span> <span class=\"attr\">OnClick</span>=<span class=\"string\">\"test_Click\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ContentTemplate</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">asp:UpdatePanel</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></div></pre></td></tr></table></figure>\n<p>后台代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Data;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Configuration;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Security;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.WebControls.WebParts;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.UI.HtmlControls;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Script.Serialization;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> WebForm1 : System.Web.UI.Page</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">test_Click</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        JavaScriptSerializer serializer = <span class=\"keyword\">new</span> JavaScriptSerializer();</div><div class=\"line\">        ScriptManager.GetCurrent(<span class=\"keyword\">this</span>.Page).RegisterDataItem(<span class=\"keyword\">this</span>.UpdatePanel1,</div><div class=\"line\">            <span class=\"string\">\"var _f = function()&#123;alert('Hello World!');&#125;; _f;\"</span>, <span class=\"literal\">true</span>);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>3 使用Javascript的非模态对话框弹出提示</p>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Page.RegisterStartupScript(<span class=\"string\">\"alert\"</span>,</div><div class=\"line\">  <span class=\"string\">\"&lt;script language='javascript'&gt;window.showModelessDialog(\"</span>javascript:alert(<span class=\"string\">'test'</span>);<span class=\"built_in\">window</span>.close();<span class=\"string\">\",</div><div class=\"line\">  \"</span><span class=\"string\">\",\"</span>status:<span class=\"literal\">no</span>;resizable:<span class=\"literal\">no</span>;help:<span class=\"literal\">no</span>;dialogHeight:height:<span class=\"number\">30</span>px;dialogHeight:<span class=\"number\">40</span>px;<span class=\"string\">\")&lt;/script&gt;\"</span>);</div></pre></td></tr></table></figure>"},{"title":"使用windows live writer连接CSDN和博客园博客","date":"2009-09-25T16:00:00.000Z","_content":"\nwindows live writer很早就听说了，不过前几天才真正的使用他在博客园上发文章，感觉非常不错，可以点击此处下载，遗憾的是支持的网站不是很多，像新浪博客，百度空间就不支持。下面简单介绍一下在博客园和CSDN博客等一些网站中的配置：\n\n## 博客园\n\n您的日志网址：填写blog的首页地址 如：[http://oec2003.cnblogs.com](http://oec2003.cnblogs.com/)\n\n用户名：blog中登录的用户名 如：oec2003\n\n密码：您blog的账号的密码\n\n您所使用的日志类型：选择MetaWeblog API\n\n日志的远程发布Url：[http://www.cnblogs.com/UserID/services/metaweblog.aspx](http://www.cnblogs.com/UserID/services/metaweblog.aspx)\n\nUserID为您登陆的用户名 如：[http://www.cnblogs.com/oec2003/services/metaweblog.aspx](http://www.cnblogs.com/oec2003/services/metaweblog.aspx)\n\n## Csdn博客\n\ncsdn博客的设置和博客园中的大致相似，使用的日志类型同样为Metaweblog API，不同的是日志的远程发布Url，在csdn中该地址为：[http://blog.csdn.net/userID/services/MetaBlogApi.aspx](http://blog.csdn.net/userID/services/MetaBlogApi.aspx)\n\n如果使用live writer 来写一些技术文章，难免会在写文章的过程中药插入一些源代码，这时就需要用到一些live writer的语法高亮插件了，有关live writer语法高亮插件的使用请参考[这里](http://www.cnblogs.com/oec2003/archive/2009/09/22/1572166.html)\n\n\n","source":"_posts/use-windows-live-writer-connection-csdn-and-cnblogs-blog.md","raw":"---\ntitle: 使用windows live writer连接CSDN和博客园博客\ndate: 2009-09-26\ncategories: [软件使用]\ntags: [windows live writer]\n---\n\nwindows live writer很早就听说了，不过前几天才真正的使用他在博客园上发文章，感觉非常不错，可以点击此处下载，遗憾的是支持的网站不是很多，像新浪博客，百度空间就不支持。下面简单介绍一下在博客园和CSDN博客等一些网站中的配置：\n\n## 博客园\n\n您的日志网址：填写blog的首页地址 如：[http://oec2003.cnblogs.com](http://oec2003.cnblogs.com/)\n\n用户名：blog中登录的用户名 如：oec2003\n\n密码：您blog的账号的密码\n\n您所使用的日志类型：选择MetaWeblog API\n\n日志的远程发布Url：[http://www.cnblogs.com/UserID/services/metaweblog.aspx](http://www.cnblogs.com/UserID/services/metaweblog.aspx)\n\nUserID为您登陆的用户名 如：[http://www.cnblogs.com/oec2003/services/metaweblog.aspx](http://www.cnblogs.com/oec2003/services/metaweblog.aspx)\n\n## Csdn博客\n\ncsdn博客的设置和博客园中的大致相似，使用的日志类型同样为Metaweblog API，不同的是日志的远程发布Url，在csdn中该地址为：[http://blog.csdn.net/userID/services/MetaBlogApi.aspx](http://blog.csdn.net/userID/services/MetaBlogApi.aspx)\n\n如果使用live writer 来写一些技术文章，难免会在写文章的过程中药插入一些源代码，这时就需要用到一些live writer的语法高亮插件了，有关live writer语法高亮插件的使用请参考[这里](http://www.cnblogs.com/oec2003/archive/2009/09/22/1572166.html)\n\n\n","slug":"use-windows-live-writer-connection-csdn-and-cnblogs-blog","published":1,"updated":"2016-08-16T14:07:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz93y0099xfyn43nq1wsu","content":"<p>windows live writer很早就听说了，不过前几天才真正的使用他在博客园上发文章，感觉非常不错，可以点击此处下载，遗憾的是支持的网站不是很多，像新浪博客，百度空间就不支持。下面简单介绍一下在博客园和CSDN博客等一些网站中的配置：</p>\n<h2 id=\"博客园\"><a href=\"#博客园\" class=\"headerlink\" title=\"博客园\"></a>博客园</h2><p>您的日志网址：填写blog的首页地址 如：<a href=\"http://oec2003.cnblogs.com/\" target=\"_blank\" rel=\"external\">http://oec2003.cnblogs.com</a></p>\n<p>用户名：blog中登录的用户名 如：oec2003</p>\n<p>密码：您blog的账号的密码</p>\n<p>您所使用的日志类型：选择MetaWeblog API</p>\n<p>日志的远程发布Url：<a href=\"http://www.cnblogs.com/UserID/services/metaweblog.aspx\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/UserID/services/metaweblog.aspx</a></p>\n<p>UserID为您登陆的用户名 如：<a href=\"http://www.cnblogs.com/oec2003/services/metaweblog.aspx\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/oec2003/services/metaweblog.aspx</a></p>\n<h2 id=\"Csdn博客\"><a href=\"#Csdn博客\" class=\"headerlink\" title=\"Csdn博客\"></a>Csdn博客</h2><p>csdn博客的设置和博客园中的大致相似，使用的日志类型同样为Metaweblog API，不同的是日志的远程发布Url，在csdn中该地址为：<a href=\"http://blog.csdn.net/userID/services/MetaBlogApi.aspx\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/userID/services/MetaBlogApi.aspx</a></p>\n<p>如果使用live writer 来写一些技术文章，难免会在写文章的过程中药插入一些源代码，这时就需要用到一些live writer的语法高亮插件了，有关live writer语法高亮插件的使用请参考<a href=\"http://www.cnblogs.com/oec2003/archive/2009/09/22/1572166.html\" target=\"_blank\" rel=\"external\">这里</a></p>\n","excerpt":"","more":"<p>windows live writer很早就听说了，不过前几天才真正的使用他在博客园上发文章，感觉非常不错，可以点击此处下载，遗憾的是支持的网站不是很多，像新浪博客，百度空间就不支持。下面简单介绍一下在博客园和CSDN博客等一些网站中的配置：</p>\n<h2 id=\"博客园\"><a href=\"#博客园\" class=\"headerlink\" title=\"博客园\"></a>博客园</h2><p>您的日志网址：填写blog的首页地址 如：<a href=\"http://oec2003.cnblogs.com/\">http://oec2003.cnblogs.com</a></p>\n<p>用户名：blog中登录的用户名 如：oec2003</p>\n<p>密码：您blog的账号的密码</p>\n<p>您所使用的日志类型：选择MetaWeblog API</p>\n<p>日志的远程发布Url：<a href=\"http://www.cnblogs.com/UserID/services/metaweblog.aspx\">http://www.cnblogs.com/UserID/services/metaweblog.aspx</a></p>\n<p>UserID为您登陆的用户名 如：<a href=\"http://www.cnblogs.com/oec2003/services/metaweblog.aspx\">http://www.cnblogs.com/oec2003/services/metaweblog.aspx</a></p>\n<h2 id=\"Csdn博客\"><a href=\"#Csdn博客\" class=\"headerlink\" title=\"Csdn博客\"></a>Csdn博客</h2><p>csdn博客的设置和博客园中的大致相似，使用的日志类型同样为Metaweblog API，不同的是日志的远程发布Url，在csdn中该地址为：<a href=\"http://blog.csdn.net/userID/services/MetaBlogApi.aspx\">http://blog.csdn.net/userID/services/MetaBlogApi.aspx</a></p>\n<p>如果使用live writer 来写一些技术文章，难免会在写文章的过程中药插入一些源代码，这时就需要用到一些live writer的语法高亮插件了，有关live writer语法高亮插件的使用请参考<a href=\"http://www.cnblogs.com/oec2003/archive/2009/09/22/1572166.html\">这里</a></p>\n"},{"title":"ZedGraph在Web中的使用","date":"2009-06-05T16:00:00.000Z","_content":"\n上一篇[SQL实现分组统计查询（按月、小时分组）](http://blog.fwhyy.com/2009/06/sql-implementation-group-statistical-query/) 中介绍了按月和小时为单位怎样实现分组查询，在本文中会实现将上文查询的结果以图表的形式显示在页面上。在页面上显示图标有很多种解决方案，office的owc组建、自己写代码、或者是第三方的控件。本文中将使用ZedGraph控件来实现。选择ZedGraph有两个原因：\n\n1. 该控件是开源的，在必要的时候可以根据自己的需要来修改；\n2. 该控件所显示的图片是绘出来的，而不是生成的图片。\n\n下载地址：[http://sourceforge.net/project/showfiles.php?group_id=114675](http://sourceforge.net/project/showfiles.php?group_id=114675)\n\n1 将控件引用到项目中，本示例使用的是5.1.5版。\n\n在工具栏下方的空白处点击右键—>添加选项卡,命名为ZedGraph\n\n![2010-12-30_101747](http://oec2003.qiniudn.com/2010-12-30_101747.gif)\n![2010-12-30_101836](http://oec2003.qiniudn.com/2010-12-30_101836.gif)\n\n在ZedGraph选项卡点右键—>选择项…,在弹出窗口中选择下载下来的ZedGraph.Web.dll文件。\n\n![14712687428710.jpg](http://oec2003.qiniudn.com/14712687428710.jpg)\n\n2 在项目中新建一aspx页面，命名为Year.aspx,将刚添加的ZedGraph控件拖到页面中，并在页面中添加一个文本框和一个按钮，文本框用来选择年份。\n\n![2010-12-30_102641](http://oec2003.qiniudn.com/2010-12-30_102641.gif)\n\n3 切换到代码视图，添加如下代码：\n\n```\nnamespace ZedGraphDemo\n{\n    public partial class Year : System.Web.UI.Page\n    {\n        protected void Page_Load(object sender, EventArgs e)\n        {\n            this.ZgwYear.RenderGraph +=\n                new ZedGraphWebControlEventHandler(ZgwYear_RenderGraph);\n        }\n\n        void ZgwYear_RenderGraph(ZedGraphWeb webObject,\n            System.Drawing.Graphics g, MasterPane pane)\n        {\n            GraphPane myPane = pane[0];\n\n            // 标题\n            myPane.Title.Text = \"每年分析（月为单位）\";\n            myPane.XAxis.Title.Text = \"时间\";\n            myPane.YAxis.Title.Text = \"访问量\";\n\n            // 坐标对集\n            PointPairList list = new PointPairList();\n            //PointPairList list1 = new PointPairList();\n            //PointPairList list2 = new PointPairList();\n\n            //从数据库中获取数据集\n            DataTable dtYear = GetData();\n            if (dtYear == null)\n                return;\n            for (int i = 0; i < dtYear.Rows.Count; i++)\n            {\n                list.Add(Convert.ToDouble(i), Convert.ToDouble(dtYear.Rows[i][\"Count\"]));\n                //如果有多种类型，可以添加多个\n                //list1.Add(Convert.ToDouble(i), Convert.ToDouble(dtYear.Rows[i][\"Count1\"]));\n                //list2.Add(Convert.ToDouble(i), Convert.ToDouble(dtYear.Rows[i][\"Count2\"]));\n            }\n\n            BarItem myBar = myPane.AddBar(\"页面访问\", list, Color.Blue);\n            //BarItem myBar1 = myPane.AddBar(\"\", list1, Color.Red);\n            //BarItem myBar2 = myPane.AddBar(\"\", list2, Color.Yellow);\n\n            myBar.Bar.Fill = new Fill(Color.Blue, Color.White, Color.Blue);\n            //myBar1.Bar.Fill = new Fill(Color.Red, Color.White, Color.Red);\n            //myBar2.Bar.Fill = new Fill(Color.Yellow, Color.White, Color.Yellow);\n\n            myPane.XAxis.MajorTic.IsBetweenLabels = true;\n            // X轴Label\n            string[] labels = new string[] { \"1月\", \"2月\", \"3月\", \"4月\", \"5月\", \"6月\",\n                                             \"7月\", \"8月\", \"9月\", \"10月\", \"11月\", \"12月\" };\n\n            //设置x轴刻度\n            myPane.XAxis.Scale.TextLabels = labels;\n            myPane.XAxis.Type = AxisType.Text;\n\n            // 颜色填充\n            myPane.Fill = new Fill(Color.White, Color.FromArgb(200, 200, 255), 45.0f);\n            myPane.Chart.Fill = new Fill(Color.White, Color.LightGoldenrodYellow, 45.0f);\n\n            pane.AxisChange(g);\n\n            myPane.YAxis.Scale.Max += myPane.YAxis.Scale.MajorStep;\n            BarItem.CreateBarLabels(myPane, false, \"f0\"); //在柱状图上方显示统计数\n        }\n\n        protected void btnQuerys_Click(object sender, EventArgs e)\n        {\n            GetData();\n        }\n\n        private DataTable GetData()\n        {\n            SqlHelper.ConnectionString =\n                ConfigurationManager.AppSettings[\"ConnectionString\"].ToString();\n            SqlParameter[] parameters = new SqlParameter[1];\n\n            parameters[0] = new SqlParameter(\"@Year\", SqlDbType.Int, 4);\n            parameters[0].Value = this.txtYear.Value.Trim().Length == 0 ? DateTime.Now.Year :\n                                                  Convert.ToInt32(txtYear.Value.Trim());\n            DataSet ds = SqlHelper.ExecuteDataset(\"Counter_CounterYear\", parameters);\n            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)\n            {\n                return ds.Tables[0];\n            }\n            else\n            {\n                return null;\n            }\n        }\n    }\n}\n```\n\n4 在项目的根目录下创建一个名为ZedGraphImages的文件夹，只是作为ZedGraph绘图时的一个临时目录，并不会在该文件夹中生成图片，如果没有该文件夹会报异常。\n\n[代码下载](http://files.cnblogs.com/oec2003/ZedGraphDemo.rar)\n\n\n","source":"_posts/use-zedgraph-in-the-web.md","raw":"---\ntitle: ZedGraph在Web中的使用\ndate: 2009-06-06\ncategories: [Asp.Net]\ntags: [AspNet, ZedGraph, 报表统计]\n---\n\n上一篇[SQL实现分组统计查询（按月、小时分组）](http://blog.fwhyy.com/2009/06/sql-implementation-group-statistical-query/) 中介绍了按月和小时为单位怎样实现分组查询，在本文中会实现将上文查询的结果以图表的形式显示在页面上。在页面上显示图标有很多种解决方案，office的owc组建、自己写代码、或者是第三方的控件。本文中将使用ZedGraph控件来实现。选择ZedGraph有两个原因：\n\n1. 该控件是开源的，在必要的时候可以根据自己的需要来修改；\n2. 该控件所显示的图片是绘出来的，而不是生成的图片。\n\n下载地址：[http://sourceforge.net/project/showfiles.php?group_id=114675](http://sourceforge.net/project/showfiles.php?group_id=114675)\n\n1 将控件引用到项目中，本示例使用的是5.1.5版。\n\n在工具栏下方的空白处点击右键—>添加选项卡,命名为ZedGraph\n\n![2010-12-30_101747](http://oec2003.qiniudn.com/2010-12-30_101747.gif)\n![2010-12-30_101836](http://oec2003.qiniudn.com/2010-12-30_101836.gif)\n\n在ZedGraph选项卡点右键—>选择项…,在弹出窗口中选择下载下来的ZedGraph.Web.dll文件。\n\n![14712687428710.jpg](http://oec2003.qiniudn.com/14712687428710.jpg)\n\n2 在项目中新建一aspx页面，命名为Year.aspx,将刚添加的ZedGraph控件拖到页面中，并在页面中添加一个文本框和一个按钮，文本框用来选择年份。\n\n![2010-12-30_102641](http://oec2003.qiniudn.com/2010-12-30_102641.gif)\n\n3 切换到代码视图，添加如下代码：\n\n```\nnamespace ZedGraphDemo\n{\n    public partial class Year : System.Web.UI.Page\n    {\n        protected void Page_Load(object sender, EventArgs e)\n        {\n            this.ZgwYear.RenderGraph +=\n                new ZedGraphWebControlEventHandler(ZgwYear_RenderGraph);\n        }\n\n        void ZgwYear_RenderGraph(ZedGraphWeb webObject,\n            System.Drawing.Graphics g, MasterPane pane)\n        {\n            GraphPane myPane = pane[0];\n\n            // 标题\n            myPane.Title.Text = \"每年分析（月为单位）\";\n            myPane.XAxis.Title.Text = \"时间\";\n            myPane.YAxis.Title.Text = \"访问量\";\n\n            // 坐标对集\n            PointPairList list = new PointPairList();\n            //PointPairList list1 = new PointPairList();\n            //PointPairList list2 = new PointPairList();\n\n            //从数据库中获取数据集\n            DataTable dtYear = GetData();\n            if (dtYear == null)\n                return;\n            for (int i = 0; i < dtYear.Rows.Count; i++)\n            {\n                list.Add(Convert.ToDouble(i), Convert.ToDouble(dtYear.Rows[i][\"Count\"]));\n                //如果有多种类型，可以添加多个\n                //list1.Add(Convert.ToDouble(i), Convert.ToDouble(dtYear.Rows[i][\"Count1\"]));\n                //list2.Add(Convert.ToDouble(i), Convert.ToDouble(dtYear.Rows[i][\"Count2\"]));\n            }\n\n            BarItem myBar = myPane.AddBar(\"页面访问\", list, Color.Blue);\n            //BarItem myBar1 = myPane.AddBar(\"\", list1, Color.Red);\n            //BarItem myBar2 = myPane.AddBar(\"\", list2, Color.Yellow);\n\n            myBar.Bar.Fill = new Fill(Color.Blue, Color.White, Color.Blue);\n            //myBar1.Bar.Fill = new Fill(Color.Red, Color.White, Color.Red);\n            //myBar2.Bar.Fill = new Fill(Color.Yellow, Color.White, Color.Yellow);\n\n            myPane.XAxis.MajorTic.IsBetweenLabels = true;\n            // X轴Label\n            string[] labels = new string[] { \"1月\", \"2月\", \"3月\", \"4月\", \"5月\", \"6月\",\n                                             \"7月\", \"8月\", \"9月\", \"10月\", \"11月\", \"12月\" };\n\n            //设置x轴刻度\n            myPane.XAxis.Scale.TextLabels = labels;\n            myPane.XAxis.Type = AxisType.Text;\n\n            // 颜色填充\n            myPane.Fill = new Fill(Color.White, Color.FromArgb(200, 200, 255), 45.0f);\n            myPane.Chart.Fill = new Fill(Color.White, Color.LightGoldenrodYellow, 45.0f);\n\n            pane.AxisChange(g);\n\n            myPane.YAxis.Scale.Max += myPane.YAxis.Scale.MajorStep;\n            BarItem.CreateBarLabels(myPane, false, \"f0\"); //在柱状图上方显示统计数\n        }\n\n        protected void btnQuerys_Click(object sender, EventArgs e)\n        {\n            GetData();\n        }\n\n        private DataTable GetData()\n        {\n            SqlHelper.ConnectionString =\n                ConfigurationManager.AppSettings[\"ConnectionString\"].ToString();\n            SqlParameter[] parameters = new SqlParameter[1];\n\n            parameters[0] = new SqlParameter(\"@Year\", SqlDbType.Int, 4);\n            parameters[0].Value = this.txtYear.Value.Trim().Length == 0 ? DateTime.Now.Year :\n                                                  Convert.ToInt32(txtYear.Value.Trim());\n            DataSet ds = SqlHelper.ExecuteDataset(\"Counter_CounterYear\", parameters);\n            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)\n            {\n                return ds.Tables[0];\n            }\n            else\n            {\n                return null;\n            }\n        }\n    }\n}\n```\n\n4 在项目的根目录下创建一个名为ZedGraphImages的文件夹，只是作为ZedGraph绘图时的一个临时目录，并不会在该文件夹中生成图片，如果没有该文件夹会报异常。\n\n[代码下载](http://files.cnblogs.com/oec2003/ZedGraphDemo.rar)\n\n\n","slug":"use-zedgraph-in-the-web","published":1,"updated":"2016-08-15T13:48:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz940009dxfyn9qplx8lq","content":"<p>上一篇<a href=\"http://blog.fwhyy.com/2009/06/sql-implementation-group-statistical-query/\" target=\"_blank\" rel=\"external\">SQL实现分组统计查询（按月、小时分组）</a> 中介绍了按月和小时为单位怎样实现分组查询，在本文中会实现将上文查询的结果以图表的形式显示在页面上。在页面上显示图标有很多种解决方案，office的owc组建、自己写代码、或者是第三方的控件。本文中将使用ZedGraph控件来实现。选择ZedGraph有两个原因：</p>\n<ol>\n<li>该控件是开源的，在必要的时候可以根据自己的需要来修改；</li>\n<li>该控件所显示的图片是绘出来的，而不是生成的图片。</li>\n</ol>\n<p>下载地址：<a href=\"http://sourceforge.net/project/showfiles.php?group_id=114675\" target=\"_blank\" rel=\"external\">http://sourceforge.net/project/showfiles.php?group_id=114675</a></p>\n<p>1 将控件引用到项目中，本示例使用的是5.1.5版。</p>\n<p>在工具栏下方的空白处点击右键—&gt;添加选项卡,命名为ZedGraph</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_101747.gif\" alt=\"2010-12-30_101747\"><br><img src=\"http://oec2003.qiniudn.com/2010-12-30_101836.gif\" alt=\"2010-12-30_101836\"></p>\n<p>在ZedGraph选项卡点右键—&gt;选择项…,在弹出窗口中选择下载下来的ZedGraph.Web.dll文件。</p>\n<p><img src=\"http://oec2003.qiniudn.com/14712687428710.jpg\" alt=\"14712687428710.jpg\"></p>\n<p>2 在项目中新建一aspx页面，命名为Year.aspx,将刚添加的ZedGraph控件拖到页面中，并在页面中添加一个文本框和一个按钮，文本框用来选择年份。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_102641.gif\" alt=\"2010-12-30_102641\"></p>\n<p>3 切换到代码视图，添加如下代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">namespace</span> ZedGraphDemo</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> Year : System.Web.UI.Page</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.ZgwYear.RenderGraph +=</div><div class=\"line\">                <span class=\"keyword\">new</span> ZedGraphWebControlEventHandler(ZgwYear_RenderGraph);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ZgwYear_RenderGraph</span><span class=\"params\">(ZedGraphWeb webObject,</span></span></div><div class=\"line\">            System.Drawing.Graphics g, MasterPane pane)</div><div class=\"line\">        &#123;</div><div class=\"line\">            GraphPane myPane = pane[<span class=\"number\">0</span>];</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">// 标题</span></div><div class=\"line\">            myPane.Title.Text = <span class=\"string\">\"每年分析（月为单位）\"</span>;</div><div class=\"line\">            myPane.XAxis.Title.Text = <span class=\"string\">\"时间\"</span>;</div><div class=\"line\">            myPane.YAxis.Title.Text = <span class=\"string\">\"访问量\"</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">// 坐标对集</span></div><div class=\"line\">            PointPairList <span class=\"built_in\">list</span> = <span class=\"keyword\">new</span> PointPairList();</div><div class=\"line\">            <span class=\"comment\">//PointPairList list1 = new PointPairList();</span></div><div class=\"line\">            <span class=\"comment\">//PointPairList list2 = new PointPairList();</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//从数据库中获取数据集</span></div><div class=\"line\">            DataTable dtYear = GetData();</div><div class=\"line\">            <span class=\"keyword\">if</span> (dtYear == null)</div><div class=\"line\">                <span class=\"keyword\">return</span>;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; dtYear.Rows.Count; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"built_in\">list</span>.Add(Convert.ToDouble(i), Convert.ToDouble(dtYear.Rows[i][<span class=\"string\">\"Count\"</span>]));</div><div class=\"line\">                <span class=\"comment\">//如果有多种类型，可以添加多个</span></div><div class=\"line\">                <span class=\"comment\">//list1.Add(Convert.ToDouble(i), Convert.ToDouble(dtYear.Rows[i][\"Count1\"]));</span></div><div class=\"line\">                <span class=\"comment\">//list2.Add(Convert.ToDouble(i), Convert.ToDouble(dtYear.Rows[i][\"Count2\"]));</span></div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            BarItem myBar = myPane.AddBar(<span class=\"string\">\"页面访问\"</span>, <span class=\"built_in\">list</span>, Color.Blue);</div><div class=\"line\">            <span class=\"comment\">//BarItem myBar1 = myPane.AddBar(\"\", list1, Color.Red);</span></div><div class=\"line\">            <span class=\"comment\">//BarItem myBar2 = myPane.AddBar(\"\", list2, Color.Yellow);</span></div><div class=\"line\"></div><div class=\"line\">            myBar.Bar.Fill = <span class=\"keyword\">new</span> Fill(Color.Blue, Color.White, Color.Blue);</div><div class=\"line\">            <span class=\"comment\">//myBar1.Bar.Fill = new Fill(Color.Red, Color.White, Color.Red);</span></div><div class=\"line\">            <span class=\"comment\">//myBar2.Bar.Fill = new Fill(Color.Yellow, Color.White, Color.Yellow);</span></div><div class=\"line\"></div><div class=\"line\">            myPane.XAxis.MajorTic.IsBetweenLabels = <span class=\"literal\">true</span>;</div><div class=\"line\">            <span class=\"comment\">// X轴Label</span></div><div class=\"line\">            <span class=\"built_in\">string</span>[] labels = <span class=\"keyword\">new</span> <span class=\"built_in\">string</span>[] &#123; <span class=\"string\">\"1月\"</span>, <span class=\"string\">\"2月\"</span>, <span class=\"string\">\"3月\"</span>, <span class=\"string\">\"4月\"</span>, <span class=\"string\">\"5月\"</span>, <span class=\"string\">\"6月\"</span>,</div><div class=\"line\">                                             <span class=\"string\">\"7月\"</span>, <span class=\"string\">\"8月\"</span>, <span class=\"string\">\"9月\"</span>, <span class=\"string\">\"10月\"</span>, <span class=\"string\">\"11月\"</span>, <span class=\"string\">\"12月\"</span> &#125;;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//设置x轴刻度</span></div><div class=\"line\">            myPane.XAxis.Scale.TextLabels = labels;</div><div class=\"line\">            myPane.XAxis.Type = AxisType.Text;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">// 颜色填充</span></div><div class=\"line\">            myPane.Fill = <span class=\"keyword\">new</span> Fill(Color.White, Color.FromArgb(<span class=\"number\">200</span>, <span class=\"number\">200</span>, <span class=\"number\">255</span>), <span class=\"number\">45.0f</span>);</div><div class=\"line\">            myPane.Chart.Fill = <span class=\"keyword\">new</span> Fill(Color.White, Color.LightGoldenrodYellow, <span class=\"number\">45.0f</span>);</div><div class=\"line\"></div><div class=\"line\">            pane.AxisChange(g);</div><div class=\"line\"></div><div class=\"line\">            myPane.YAxis.Scale.Max += myPane.YAxis.Scale.MajorStep;</div><div class=\"line\">            BarItem.CreateBarLabels(myPane, <span class=\"literal\">false</span>, <span class=\"string\">\"f0\"</span>); <span class=\"comment\">//在柱状图上方显示统计数</span></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">btnQuerys_Click</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            GetData();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> DataTable <span class=\"title\">GetData</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            SqlHelper.ConnectionString =</div><div class=\"line\">                ConfigurationManager.AppSettings[<span class=\"string\">\"ConnectionString\"</span>].ToString();</div><div class=\"line\">            SqlParameter[] parameters = <span class=\"keyword\">new</span> SqlParameter[<span class=\"number\">1</span>];</div><div class=\"line\"></div><div class=\"line\">            parameters[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> SqlParameter(<span class=\"string\">\"@Year\"</span>, SqlDbType.Int, <span class=\"number\">4</span>);</div><div class=\"line\">            parameters[<span class=\"number\">0</span>].Value = <span class=\"keyword\">this</span>.txtYear.Value.Trim().Length == <span class=\"number\">0</span> ? DateTime.Now.Year :</div><div class=\"line\">                                                  Convert.ToInt32(txtYear.Value.Trim());</div><div class=\"line\">            DataSet ds = SqlHelper.ExecuteDataset(<span class=\"string\">\"Counter_CounterYear\"</span>, parameters);</div><div class=\"line\">            <span class=\"keyword\">if</span> (ds != null &amp;&amp; ds.Tables.Count &gt; <span class=\"number\">0</span> &amp;&amp; ds.Tables[<span class=\"number\">0</span>].Rows.Count &gt; <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> ds.Tables[<span class=\"number\">0</span>];</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> null;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>4 在项目的根目录下创建一个名为ZedGraphImages的文件夹，只是作为ZedGraph绘图时的一个临时目录，并不会在该文件夹中生成图片，如果没有该文件夹会报异常。</p>\n<p><a href=\"http://files.cnblogs.com/oec2003/ZedGraphDemo.rar\" target=\"_blank\" rel=\"external\">代码下载</a></p>\n","excerpt":"","more":"<p>上一篇<a href=\"http://blog.fwhyy.com/2009/06/sql-implementation-group-statistical-query/\">SQL实现分组统计查询（按月、小时分组）</a> 中介绍了按月和小时为单位怎样实现分组查询，在本文中会实现将上文查询的结果以图表的形式显示在页面上。在页面上显示图标有很多种解决方案，office的owc组建、自己写代码、或者是第三方的控件。本文中将使用ZedGraph控件来实现。选择ZedGraph有两个原因：</p>\n<ol>\n<li>该控件是开源的，在必要的时候可以根据自己的需要来修改；</li>\n<li>该控件所显示的图片是绘出来的，而不是生成的图片。</li>\n</ol>\n<p>下载地址：<a href=\"http://sourceforge.net/project/showfiles.php?group_id=114675\">http://sourceforge.net/project/showfiles.php?group_id=114675</a></p>\n<p>1 将控件引用到项目中，本示例使用的是5.1.5版。</p>\n<p>在工具栏下方的空白处点击右键—&gt;添加选项卡,命名为ZedGraph</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_101747.gif\" alt=\"2010-12-30_101747\"><br><img src=\"http://oec2003.qiniudn.com/2010-12-30_101836.gif\" alt=\"2010-12-30_101836\"></p>\n<p>在ZedGraph选项卡点右键—&gt;选择项…,在弹出窗口中选择下载下来的ZedGraph.Web.dll文件。</p>\n<p><img src=\"http://oec2003.qiniudn.com/14712687428710.jpg\" alt=\"14712687428710.jpg\"></p>\n<p>2 在项目中新建一aspx页面，命名为Year.aspx,将刚添加的ZedGraph控件拖到页面中，并在页面中添加一个文本框和一个按钮，文本框用来选择年份。</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-30_102641.gif\" alt=\"2010-12-30_102641\"></p>\n<p>3 切换到代码视图，添加如下代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">namespace</span> ZedGraphDemo</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> Year : System.Web.UI.Page</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.ZgwYear.RenderGraph +=</div><div class=\"line\">                <span class=\"keyword\">new</span> ZedGraphWebControlEventHandler(ZgwYear_RenderGraph);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ZgwYear_RenderGraph</span><span class=\"params\">(ZedGraphWeb webObject,</div><div class=\"line\">            System.Drawing.Graphics g, MasterPane pane)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            GraphPane myPane = pane[<span class=\"number\">0</span>];</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">// 标题</span></div><div class=\"line\">            myPane.Title.Text = <span class=\"string\">\"每年分析（月为单位）\"</span>;</div><div class=\"line\">            myPane.XAxis.Title.Text = <span class=\"string\">\"时间\"</span>;</div><div class=\"line\">            myPane.YAxis.Title.Text = <span class=\"string\">\"访问量\"</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">// 坐标对集</span></div><div class=\"line\">            PointPairList <span class=\"built_in\">list</span> = <span class=\"keyword\">new</span> PointPairList();</div><div class=\"line\">            <span class=\"comment\">//PointPairList list1 = new PointPairList();</span></div><div class=\"line\">            <span class=\"comment\">//PointPairList list2 = new PointPairList();</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//从数据库中获取数据集</span></div><div class=\"line\">            DataTable dtYear = GetData();</div><div class=\"line\">            <span class=\"keyword\">if</span> (dtYear == null)</div><div class=\"line\">                <span class=\"keyword\">return</span>;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; dtYear.Rows.Count; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"built_in\">list</span>.Add(Convert.ToDouble(i), Convert.ToDouble(dtYear.Rows[i][<span class=\"string\">\"Count\"</span>]));</div><div class=\"line\">                <span class=\"comment\">//如果有多种类型，可以添加多个</span></div><div class=\"line\">                <span class=\"comment\">//list1.Add(Convert.ToDouble(i), Convert.ToDouble(dtYear.Rows[i][\"Count1\"]));</span></div><div class=\"line\">                <span class=\"comment\">//list2.Add(Convert.ToDouble(i), Convert.ToDouble(dtYear.Rows[i][\"Count2\"]));</span></div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            BarItem myBar = myPane.AddBar(<span class=\"string\">\"页面访问\"</span>, <span class=\"built_in\">list</span>, Color.Blue);</div><div class=\"line\">            <span class=\"comment\">//BarItem myBar1 = myPane.AddBar(\"\", list1, Color.Red);</span></div><div class=\"line\">            <span class=\"comment\">//BarItem myBar2 = myPane.AddBar(\"\", list2, Color.Yellow);</span></div><div class=\"line\"></div><div class=\"line\">            myBar.Bar.Fill = <span class=\"keyword\">new</span> Fill(Color.Blue, Color.White, Color.Blue);</div><div class=\"line\">            <span class=\"comment\">//myBar1.Bar.Fill = new Fill(Color.Red, Color.White, Color.Red);</span></div><div class=\"line\">            <span class=\"comment\">//myBar2.Bar.Fill = new Fill(Color.Yellow, Color.White, Color.Yellow);</span></div><div class=\"line\"></div><div class=\"line\">            myPane.XAxis.MajorTic.IsBetweenLabels = <span class=\"literal\">true</span>;</div><div class=\"line\">            <span class=\"comment\">// X轴Label</span></div><div class=\"line\">            <span class=\"built_in\">string</span>[] labels = <span class=\"keyword\">new</span> <span class=\"built_in\">string</span>[] &#123; <span class=\"string\">\"1月\"</span>, <span class=\"string\">\"2月\"</span>, <span class=\"string\">\"3月\"</span>, <span class=\"string\">\"4月\"</span>, <span class=\"string\">\"5月\"</span>, <span class=\"string\">\"6月\"</span>,</div><div class=\"line\">                                             <span class=\"string\">\"7月\"</span>, <span class=\"string\">\"8月\"</span>, <span class=\"string\">\"9月\"</span>, <span class=\"string\">\"10月\"</span>, <span class=\"string\">\"11月\"</span>, <span class=\"string\">\"12月\"</span> &#125;;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//设置x轴刻度</span></div><div class=\"line\">            myPane.XAxis.Scale.TextLabels = labels;</div><div class=\"line\">            myPane.XAxis.Type = AxisType.Text;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">// 颜色填充</span></div><div class=\"line\">            myPane.Fill = <span class=\"keyword\">new</span> Fill(Color.White, Color.FromArgb(<span class=\"number\">200</span>, <span class=\"number\">200</span>, <span class=\"number\">255</span>), <span class=\"number\">45.0f</span>);</div><div class=\"line\">            myPane.Chart.Fill = <span class=\"keyword\">new</span> Fill(Color.White, Color.LightGoldenrodYellow, <span class=\"number\">45.0f</span>);</div><div class=\"line\"></div><div class=\"line\">            pane.AxisChange(g);</div><div class=\"line\"></div><div class=\"line\">            myPane.YAxis.Scale.Max += myPane.YAxis.Scale.MajorStep;</div><div class=\"line\">            BarItem.CreateBarLabels(myPane, <span class=\"literal\">false</span>, <span class=\"string\">\"f0\"</span>); <span class=\"comment\">//在柱状图上方显示统计数</span></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">btnQuerys_Click</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            GetData();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> DataTable <span class=\"title\">GetData</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            SqlHelper.ConnectionString =</div><div class=\"line\">                ConfigurationManager.AppSettings[<span class=\"string\">\"ConnectionString\"</span>].ToString();</div><div class=\"line\">            SqlParameter[] parameters = <span class=\"keyword\">new</span> SqlParameter[<span class=\"number\">1</span>];</div><div class=\"line\"></div><div class=\"line\">            parameters[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> SqlParameter(<span class=\"string\">\"@Year\"</span>, SqlDbType.Int, <span class=\"number\">4</span>);</div><div class=\"line\">            parameters[<span class=\"number\">0</span>].Value = <span class=\"keyword\">this</span>.txtYear.Value.Trim().Length == <span class=\"number\">0</span> ? DateTime.Now.Year :</div><div class=\"line\">                                                  Convert.ToInt32(txtYear.Value.Trim());</div><div class=\"line\">            DataSet ds = SqlHelper.ExecuteDataset(<span class=\"string\">\"Counter_CounterYear\"</span>, parameters);</div><div class=\"line\">            <span class=\"keyword\">if</span> (ds != null &amp;&amp; ds.Tables.Count &gt; <span class=\"number\">0</span> &amp;&amp; ds.Tables[<span class=\"number\">0</span>].Rows.Count &gt; <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> ds.Tables[<span class=\"number\">0</span>];</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> null;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>4 在项目的根目录下创建一个名为ZedGraphImages的文件夹，只是作为ZedGraph绘图时的一个临时目录，并不会在该文件夹中生成图片，如果没有该文件夹会报异常。</p>\n<p><a href=\"http://files.cnblogs.com/oec2003/ZedGraphDemo.rar\">代码下载</a></p>\n"},{"title":"利用HttpModule实现防sql注入","date":"2008-11-22T16:00:00.000Z","_content":"\nsql注入是被谈的很多的一个话题，有很多的方法能够实现sql的防注入，在这里就简单说一下如果使用HttpModule来实现sql的防注入。\n<!--more-->\n在项目中添加一个类让其实现IHttpModule接口。IHttpModule接口有两个方法 Init 和 Dispose。然后在Init方法中来订阅\n\nAcquireRequestState事件。\n\n```\npublic void Dispose()\n{\n\n}\n\npublic void Init(HttpApplication context)\n{\n    context.AcquireRequestState += new EventHandler(context_AcquireRequestState);\n}\n```\n为什么是AcquireRequestState 事件而不是Begin_Request呢 ，因为在Begin_Request执行的时候还没有加载session状态，而在处理的时侯可能会用到session。在AcquireRequestState 事件中我们就要进行相应的处理了，思路如下，一般网站提交数据只有两个地方，表单和url，所以就在该事件中将从这两处提交的数据截取，判断是否有一些危险字符，然后做相应处理。代码如下\n\n```\nprivate void context_AcquireRequestState(object sender, EventArgs e)\n{\n    HttpContext context = ((HttpApplication)sender).Context;\n\n    try\n    {\n        string getkeys = string.Empty;\n        string sqlErrorPage = \"~/Error.aspx\";//转向的错误提示页面\n        string keyvalue = string.Empty;\n\n        string requestUrl = context.Request.Path.ToString();\n        //url提交数据\n        if (context.Request.QueryString != null)\n        {\n            for (int i = 0; i < context.Request.QueryString.Count; i++)\n            {\n                getkeys = context.Request.QueryString.Keys[i];\n                keyvalue = context.Server.UrlDecode(context.Request.QueryString[getkeys]);\n\n                if (!ProcessSqlStr(keyvalue))\n                {\n                    context.Response.Redirect(sqlErrorPage);\n                    context.Response.End();\n                    break;\n                }\n            }\n        }\n        //表单提交数据\n        if (context.Request.Form != null)\n        {\n            for (int i = 0; i < context.Request.Form.Count; i++)\n            {\n                getkeys = context.Request.Form.Keys[i];\n                keyvalue = context.Server.HtmlDecode(context.Request.Form[i]);\n                if (getkeys == \"__VIEWSTATE\") continue;\n                if (!ProcessSqlStr(keyvalue))\n                {\n                    context.Response.Redirect(sqlErrorPage);\n                    context.Response.End();\n                    break;\n                }\n            }\n        }\n    }\n    catch (Exception ex)\n    {\n    }\n}\n```\n\n上面的代码只是做了简单的处理，当然也可以在事件中将输入非法关键字的用户ip ,操作页面的url,时间等信息记录在数据库中或是记录在日志中。而且还用到了一个叫ProcessSqlStr的方法，这个方法就是用来处理字符串的，判断是否合法，如下\n\n```\nprivate bool ProcessSqlStr(string str)\n{\n    bool returnValue = true;\n    try\n    {\n        if (str.Trim() != \"\")\n        {\n            //一般将关键词组配置在webconfig中\n            //string sqlStr = ConfigurationManager.AppSettings[\"FilterSql\"].Trim();\n            string sqlStr = \"declare |exec|varchar |cursor |begin |open |drop |creat |select |truncate\";\n\n            string[] sqlStrs = sqlStr.Split('|');\n            foreach (string ss in sqlStrs)\n            {\n                if (str.ToLower().IndexOf(ss) >= 0)\n                {\n                    m_sqlstr = ss;\n                    returnValue = false;\n                    break;\n                }\n            }\n        }\n    }\n    catch\n    {\n        returnValue = false;\n    }\n    return returnValue;\n}\n```\n\n到这儿类就写好了，再在web.config中做相应的配置就大功告成\n\n```\n<httpModules>\n    <add type=\"SqlHttpModule \" name=\"SqlHttpModule\"/>\n</httpModules>\n```\n\n用这种方法很方便，只需在这一处做处理，全站都能应用到，不过如果一个用户想用varchar 等sql的关键字来做用户名注册的话也会被挡掉，\n\n不过应该没人这么无聊吧，呵呵！\n\n\n","source":"_posts/using-httpmodule-prevent-sql-injection.md","raw":"---\ntitle: 利用HttpModule实现防sql注入\ndate: 2008-11-23\ncategories: [Asp.Net]\ntags: [HttpModule,Sql注入]\n---\n\nsql注入是被谈的很多的一个话题，有很多的方法能够实现sql的防注入，在这里就简单说一下如果使用HttpModule来实现sql的防注入。\n<!--more-->\n在项目中添加一个类让其实现IHttpModule接口。IHttpModule接口有两个方法 Init 和 Dispose。然后在Init方法中来订阅\n\nAcquireRequestState事件。\n\n```\npublic void Dispose()\n{\n\n}\n\npublic void Init(HttpApplication context)\n{\n    context.AcquireRequestState += new EventHandler(context_AcquireRequestState);\n}\n```\n为什么是AcquireRequestState 事件而不是Begin_Request呢 ，因为在Begin_Request执行的时候还没有加载session状态，而在处理的时侯可能会用到session。在AcquireRequestState 事件中我们就要进行相应的处理了，思路如下，一般网站提交数据只有两个地方，表单和url，所以就在该事件中将从这两处提交的数据截取，判断是否有一些危险字符，然后做相应处理。代码如下\n\n```\nprivate void context_AcquireRequestState(object sender, EventArgs e)\n{\n    HttpContext context = ((HttpApplication)sender).Context;\n\n    try\n    {\n        string getkeys = string.Empty;\n        string sqlErrorPage = \"~/Error.aspx\";//转向的错误提示页面\n        string keyvalue = string.Empty;\n\n        string requestUrl = context.Request.Path.ToString();\n        //url提交数据\n        if (context.Request.QueryString != null)\n        {\n            for (int i = 0; i < context.Request.QueryString.Count; i++)\n            {\n                getkeys = context.Request.QueryString.Keys[i];\n                keyvalue = context.Server.UrlDecode(context.Request.QueryString[getkeys]);\n\n                if (!ProcessSqlStr(keyvalue))\n                {\n                    context.Response.Redirect(sqlErrorPage);\n                    context.Response.End();\n                    break;\n                }\n            }\n        }\n        //表单提交数据\n        if (context.Request.Form != null)\n        {\n            for (int i = 0; i < context.Request.Form.Count; i++)\n            {\n                getkeys = context.Request.Form.Keys[i];\n                keyvalue = context.Server.HtmlDecode(context.Request.Form[i]);\n                if (getkeys == \"__VIEWSTATE\") continue;\n                if (!ProcessSqlStr(keyvalue))\n                {\n                    context.Response.Redirect(sqlErrorPage);\n                    context.Response.End();\n                    break;\n                }\n            }\n        }\n    }\n    catch (Exception ex)\n    {\n    }\n}\n```\n\n上面的代码只是做了简单的处理，当然也可以在事件中将输入非法关键字的用户ip ,操作页面的url,时间等信息记录在数据库中或是记录在日志中。而且还用到了一个叫ProcessSqlStr的方法，这个方法就是用来处理字符串的，判断是否合法，如下\n\n```\nprivate bool ProcessSqlStr(string str)\n{\n    bool returnValue = true;\n    try\n    {\n        if (str.Trim() != \"\")\n        {\n            //一般将关键词组配置在webconfig中\n            //string sqlStr = ConfigurationManager.AppSettings[\"FilterSql\"].Trim();\n            string sqlStr = \"declare |exec|varchar |cursor |begin |open |drop |creat |select |truncate\";\n\n            string[] sqlStrs = sqlStr.Split('|');\n            foreach (string ss in sqlStrs)\n            {\n                if (str.ToLower().IndexOf(ss) >= 0)\n                {\n                    m_sqlstr = ss;\n                    returnValue = false;\n                    break;\n                }\n            }\n        }\n    }\n    catch\n    {\n        returnValue = false;\n    }\n    return returnValue;\n}\n```\n\n到这儿类就写好了，再在web.config中做相应的配置就大功告成\n\n```\n<httpModules>\n    <add type=\"SqlHttpModule \" name=\"SqlHttpModule\"/>\n</httpModules>\n```\n\n用这种方法很方便，只需在这一处做处理，全站都能应用到，不过如果一个用户想用varchar 等sql的关键字来做用户名注册的话也会被挡掉，\n\n不过应该没人这么无聊吧，呵呵！\n\n\n","slug":"using-httpmodule-prevent-sql-injection","published":1,"updated":"2016-08-14T07:18:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz941009gxfyn4ubnaaen","content":"<p>sql注入是被谈的很多的一个话题，有很多的方法能够实现sql的防注入，在这里就简单说一下如果使用HttpModule来实现sql的防注入。<br><a id=\"more\"></a><br>在项目中添加一个类让其实现IHttpModule接口。IHttpModule接口有两个方法 Init 和 Dispose。然后在Init方法中来订阅</p>\n<p>AcquireRequestState事件。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Dispose</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Init</span><span class=\"params\">(HttpApplication context)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    context.AcquireRequestState += <span class=\"keyword\">new</span> EventHandler(context_AcquireRequestState);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>为什么是AcquireRequestState 事件而不是Begin_Request呢 ，因为在Begin_Request执行的时候还没有加载session状态，而在处理的时侯可能会用到session。在AcquireRequestState 事件中我们就要进行相应的处理了，思路如下，一般网站提交数据只有两个地方，表单和url，所以就在该事件中将从这两处提交的数据截取，判断是否有一些危险字符，然后做相应处理。代码如下</p>\n<figure class=\"highlight verilog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">private <span class=\"keyword\">void</span> context_AcquireRequestState(object sender, EventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">    HttpContext <span class=\"keyword\">context</span> = ((HttpApplication)sender)<span class=\"variable\">.Context</span>;</div><div class=\"line\"></div><div class=\"line\">    try</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">string</span> getkeys = <span class=\"keyword\">string</span><span class=\"variable\">.Empty</span>;</div><div class=\"line\">        <span class=\"keyword\">string</span> sqlErrorPage = <span class=\"string\">\"~/Error.aspx\"</span>;<span class=\"comment\">//转向的错误提示页面</span></div><div class=\"line\">        <span class=\"keyword\">string</span> keyvalue = <span class=\"keyword\">string</span><span class=\"variable\">.Empty</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">string</span> requestUrl = <span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.Path</span><span class=\"variable\">.ToString</span>();</div><div class=\"line\">        <span class=\"comment\">//url提交数据</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.QueryString</span> != <span class=\"literal\">null</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.QueryString</span><span class=\"variable\">.Count</span>; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                getkeys = <span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.QueryString</span><span class=\"variable\">.Keys</span>[i];</div><div class=\"line\">                keyvalue = <span class=\"keyword\">context</span><span class=\"variable\">.Server</span><span class=\"variable\">.UrlDecode</span>(<span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.QueryString</span>[getkeys]);</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> (!ProcessSqlStr(keyvalue))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">context</span><span class=\"variable\">.Response</span><span class=\"variable\">.Redirect</span>(sqlErrorPage);</div><div class=\"line\">                    <span class=\"keyword\">context</span><span class=\"variable\">.Response</span><span class=\"variable\">.End</span>();</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">//表单提交数据</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.Form</span> != <span class=\"literal\">null</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.Form</span><span class=\"variable\">.Count</span>; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                getkeys = <span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.Form</span><span class=\"variable\">.Keys</span>[i];</div><div class=\"line\">                keyvalue = <span class=\"keyword\">context</span><span class=\"variable\">.Server</span><span class=\"variable\">.HtmlDecode</span>(<span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.Form</span>[i]);</div><div class=\"line\">                <span class=\"keyword\">if</span> (getkeys == <span class=\"string\">\"__VIEWSTATE\"</span>) <span class=\"keyword\">continue</span>;</div><div class=\"line\">                <span class=\"keyword\">if</span> (!ProcessSqlStr(keyvalue))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">context</span><span class=\"variable\">.Response</span><span class=\"variable\">.Redirect</span>(sqlErrorPage);</div><div class=\"line\">                    <span class=\"keyword\">context</span><span class=\"variable\">.Response</span><span class=\"variable\">.End</span>();</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    catch (Exception ex)</div><div class=\"line\">    &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的代码只是做了简单的处理，当然也可以在事件中将输入非法关键字的用户ip ,操作页面的url,时间等信息记录在数据库中或是记录在日志中。而且还用到了一个叫ProcessSqlStr的方法，这个方法就是用来处理字符串的，判断是否合法，如下</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">bool</span> <span class=\"title\">ProcessSqlStr</span>(<span class=\"params\"><span class=\"keyword\">string</span> str</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">bool</span> returnValue = <span class=\"literal\">true</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (str.Trim() != <span class=\"string\">\"\"</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//一般将关键词组配置在webconfig中</span></div><div class=\"line\">            <span class=\"comment\">//string sqlStr = ConfigurationManager.AppSettings[\"FilterSql\"].Trim();</span></div><div class=\"line\">            <span class=\"keyword\">string</span> sqlStr = <span class=\"string\">\"declare |exec|varchar |cursor |begin |open |drop |creat |select |truncate\"</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">string</span>[] sqlStrs = sqlStr.Split(<span class=\"string\">'|'</span>);</div><div class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">string</span> ss <span class=\"keyword\">in</span> sqlStrs)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (str.ToLower().IndexOf(ss) &gt;= <span class=\"number\">0</span>)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    m_sqlstr = ss;</div><div class=\"line\">                    returnValue = <span class=\"literal\">false</span>;</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">catch</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        returnValue = <span class=\"literal\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> returnValue;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>到这儿类就写好了，再在web.config中做相应的配置就大功告成</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">httpModules</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">add</span> <span class=\"attr\">type</span>=<span class=\"string\">\"SqlHttpModule \"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"SqlHttpModule\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">httpModules</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>用这种方法很方便，只需在这一处做处理，全站都能应用到，不过如果一个用户想用varchar 等sql的关键字来做用户名注册的话也会被挡掉，</p>\n<p>不过应该没人这么无聊吧，呵呵！</p>\n","excerpt":"<p>sql注入是被谈的很多的一个话题，有很多的方法能够实现sql的防注入，在这里就简单说一下如果使用HttpModule来实现sql的防注入。<br>","more":"<br>在项目中添加一个类让其实现IHttpModule接口。IHttpModule接口有两个方法 Init 和 Dispose。然后在Init方法中来订阅</p>\n<p>AcquireRequestState事件。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Dispose</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Init</span><span class=\"params\">(HttpApplication context)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    context.AcquireRequestState += <span class=\"keyword\">new</span> EventHandler(context_AcquireRequestState);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>为什么是AcquireRequestState 事件而不是Begin_Request呢 ，因为在Begin_Request执行的时候还没有加载session状态，而在处理的时侯可能会用到session。在AcquireRequestState 事件中我们就要进行相应的处理了，思路如下，一般网站提交数据只有两个地方，表单和url，所以就在该事件中将从这两处提交的数据截取，判断是否有一些危险字符，然后做相应处理。代码如下</p>\n<figure class=\"highlight verilog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">private <span class=\"keyword\">void</span> context_AcquireRequestState(object sender, EventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">    HttpContext <span class=\"keyword\">context</span> = ((HttpApplication)sender)<span class=\"variable\">.Context</span>;</div><div class=\"line\"></div><div class=\"line\">    try</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">string</span> getkeys = <span class=\"keyword\">string</span><span class=\"variable\">.Empty</span>;</div><div class=\"line\">        <span class=\"keyword\">string</span> sqlErrorPage = <span class=\"string\">\"~/Error.aspx\"</span>;<span class=\"comment\">//转向的错误提示页面</span></div><div class=\"line\">        <span class=\"keyword\">string</span> keyvalue = <span class=\"keyword\">string</span><span class=\"variable\">.Empty</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">string</span> requestUrl = <span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.Path</span><span class=\"variable\">.ToString</span>();</div><div class=\"line\">        <span class=\"comment\">//url提交数据</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.QueryString</span> != <span class=\"literal\">null</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.QueryString</span><span class=\"variable\">.Count</span>; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                getkeys = <span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.QueryString</span><span class=\"variable\">.Keys</span>[i];</div><div class=\"line\">                keyvalue = <span class=\"keyword\">context</span><span class=\"variable\">.Server</span><span class=\"variable\">.UrlDecode</span>(<span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.QueryString</span>[getkeys]);</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> (!ProcessSqlStr(keyvalue))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">context</span><span class=\"variable\">.Response</span><span class=\"variable\">.Redirect</span>(sqlErrorPage);</div><div class=\"line\">                    <span class=\"keyword\">context</span><span class=\"variable\">.Response</span><span class=\"variable\">.End</span>();</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">//表单提交数据</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.Form</span> != <span class=\"literal\">null</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.Form</span><span class=\"variable\">.Count</span>; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                getkeys = <span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.Form</span><span class=\"variable\">.Keys</span>[i];</div><div class=\"line\">                keyvalue = <span class=\"keyword\">context</span><span class=\"variable\">.Server</span><span class=\"variable\">.HtmlDecode</span>(<span class=\"keyword\">context</span><span class=\"variable\">.Request</span><span class=\"variable\">.Form</span>[i]);</div><div class=\"line\">                <span class=\"keyword\">if</span> (getkeys == <span class=\"string\">\"__VIEWSTATE\"</span>) <span class=\"keyword\">continue</span>;</div><div class=\"line\">                <span class=\"keyword\">if</span> (!ProcessSqlStr(keyvalue))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">context</span><span class=\"variable\">.Response</span><span class=\"variable\">.Redirect</span>(sqlErrorPage);</div><div class=\"line\">                    <span class=\"keyword\">context</span><span class=\"variable\">.Response</span><span class=\"variable\">.End</span>();</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    catch (Exception ex)</div><div class=\"line\">    &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的代码只是做了简单的处理，当然也可以在事件中将输入非法关键字的用户ip ,操作页面的url,时间等信息记录在数据库中或是记录在日志中。而且还用到了一个叫ProcessSqlStr的方法，这个方法就是用来处理字符串的，判断是否合法，如下</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">bool</span> <span class=\"title\">ProcessSqlStr</span>(<span class=\"params\"><span class=\"keyword\">string</span> str</span>)</div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">bool</span> returnValue = <span class=\"literal\">true</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (str.Trim() != <span class=\"string\">\"\"</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//一般将关键词组配置在webconfig中</span></div><div class=\"line\">            <span class=\"comment\">//string sqlStr = ConfigurationManager.AppSettings[\"FilterSql\"].Trim();</span></div><div class=\"line\">            <span class=\"keyword\">string</span> sqlStr = <span class=\"string\">\"declare |exec|varchar |cursor |begin |open |drop |creat |select |truncate\"</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">string</span>[] sqlStrs = sqlStr.Split(<span class=\"string\">'|'</span>);</div><div class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">string</span> ss <span class=\"keyword\">in</span> sqlStrs)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (str.ToLower().IndexOf(ss) &gt;= <span class=\"number\">0</span>)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    m_sqlstr = ss;</div><div class=\"line\">                    returnValue = <span class=\"literal\">false</span>;</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">catch</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        returnValue = <span class=\"literal\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> returnValue;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>到这儿类就写好了，再在web.config中做相应的配置就大功告成</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">httpModules</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">add</span> <span class=\"attr\">type</span>=<span class=\"string\">\"SqlHttpModule \"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"SqlHttpModule\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">httpModules</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>用这种方法很方便，只需在这一处做处理，全站都能应用到，不过如果一个用户想用varchar 等sql的关键字来做用户名注册的话也会被挡掉，</p>\n<p>不过应该没人这么无聊吧，呵呵！</p>"},{"title":"DOM结构展现工具—iedevtoolbar","date":"2008-02-24T16:00:00.000Z","_content":"\n微软出的一个小工具iedevtoolbar，这个工具个能够很轻松的掌握网页的DOM结构,对应那些结构比较复制的网页分析很有特效。\n\n[点击下载](http://www.cnblogs.com/Files/oec2003/iedevtoolbar.rar)\n\n","source":"_posts/using-iedevtoolbar.md","raw":"---\ntitle: DOM结构展现工具—iedevtoolbar\ndate: 2008-02-25\ncategories: [软件推荐]\ntags:\n---\n\n微软出的一个小工具iedevtoolbar，这个工具个能够很轻松的掌握网页的DOM结构,对应那些结构比较复制的网页分析很有特效。\n\n[点击下载](http://www.cnblogs.com/Files/oec2003/iedevtoolbar.rar)\n\n","slug":"using-iedevtoolbar","published":1,"updated":"2016-08-13T14:40:51.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz942009kxfynvp66ykkh","content":"<p>微软出的一个小工具iedevtoolbar，这个工具个能够很轻松的掌握网页的DOM结构,对应那些结构比较复制的网页分析很有特效。</p>\n<p><a href=\"http://www.cnblogs.com/Files/oec2003/iedevtoolbar.rar\" target=\"_blank\" rel=\"external\">点击下载</a></p>\n","excerpt":"","more":"<p>微软出的一个小工具iedevtoolbar，这个工具个能够很轻松的掌握网页的DOM结构,对应那些结构比较复制的网页分析很有特效。</p>\n<p><a href=\"http://www.cnblogs.com/Files/oec2003/iedevtoolbar.rar\">点击下载</a></p>\n"},{"title":"Visual Studio 2010 Beta 2 公开下载地址","date":"2009-10-21T16:00:00.000Z","_content":"\n前天就在博客园见了lyj的那篇介绍Visual Studio 2010 Beta 2的文章了，今天终于开发下载了。\n下载地址：[http://msdn.microsoft.com/en-us/vstudio/dd582936.aspx](http://msdn.microsoft.com/en-us/vstudio/dd582936.aspx)\n\n看了下别人的安装截图感觉漂亮了不少，不过我还是想等到正式版出来后再下载安装，希望到时能换一个配置好点的本本，现在的这个已经陪伴我三四年的老本跑起来确实很吃力啊。\n\n## 相关文章\n\n[体验vs2010 （功能改进篇）](http://blog.fwhyy.com/2009/10/experience-vs2010-improvements/)\n[体验VS2010（安装篇）](http://blog.fwhyy.com/2009/10/experience-vs2010-installation/)\n[Net4.0—VS2010新特性](http://blog.fwhyy.com/2010/05/net-4-vs2010-new-features/)\n[Net4.0—数据绑定控件（GridView ListView…）中的ClientIDRowSuffix属性](http://blog.fwhyy.com/2010/07/net-4-data-bound-controls-the-clientidrowsuffix-properties/)\n[Net4.0—对HTML净化的处理](http://blog.fwhyy.com/2010/07/net-4-purification-processing-of-html/)\n[Net4.0—AspNet中的控件HyperLink的改进（支持路由跳转）](http://blog.fwhyy.com/2010/07/net-4-aspnet-controls-the-hyperlink-in-the-improvement/)\n[Net4.0—AspNet中URL重写的改进](http://blog.fwhyy.com/2010/07/net-4-aspnet-url-rewriting-in-the-improvement/)\n[Net4.0—Web部署工具](http://blog.fwhyy.com/2010/06/net-4-the-web-deployment-tool/)\n[Net4.0—Framwork新增特性](http://blog.fwhyy.com/2010/05/net-4-framwork-of-new-features/)\n\n","source":"_posts/visual-studio-2010-beta-2-download-address-publicly.md","raw":"---\ntitle: Visual Studio 2010 Beta 2 公开下载地址\ndate: 2009-10-22\ncategories: [DotNet, 软件推荐]\ntags: [DotNet, DotNet4, vs2010, 软件推荐]\n---\n\n前天就在博客园见了lyj的那篇介绍Visual Studio 2010 Beta 2的文章了，今天终于开发下载了。\n下载地址：[http://msdn.microsoft.com/en-us/vstudio/dd582936.aspx](http://msdn.microsoft.com/en-us/vstudio/dd582936.aspx)\n\n看了下别人的安装截图感觉漂亮了不少，不过我还是想等到正式版出来后再下载安装，希望到时能换一个配置好点的本本，现在的这个已经陪伴我三四年的老本跑起来确实很吃力啊。\n\n## 相关文章\n\n[体验vs2010 （功能改进篇）](http://blog.fwhyy.com/2009/10/experience-vs2010-improvements/)\n[体验VS2010（安装篇）](http://blog.fwhyy.com/2009/10/experience-vs2010-installation/)\n[Net4.0—VS2010新特性](http://blog.fwhyy.com/2010/05/net-4-vs2010-new-features/)\n[Net4.0—数据绑定控件（GridView ListView…）中的ClientIDRowSuffix属性](http://blog.fwhyy.com/2010/07/net-4-data-bound-controls-the-clientidrowsuffix-properties/)\n[Net4.0—对HTML净化的处理](http://blog.fwhyy.com/2010/07/net-4-purification-processing-of-html/)\n[Net4.0—AspNet中的控件HyperLink的改进（支持路由跳转）](http://blog.fwhyy.com/2010/07/net-4-aspnet-controls-the-hyperlink-in-the-improvement/)\n[Net4.0—AspNet中URL重写的改进](http://blog.fwhyy.com/2010/07/net-4-aspnet-url-rewriting-in-the-improvement/)\n[Net4.0—Web部署工具](http://blog.fwhyy.com/2010/06/net-4-the-web-deployment-tool/)\n[Net4.0—Framwork新增特性](http://blog.fwhyy.com/2010/05/net-4-framwork-of-new-features/)\n\n","slug":"visual-studio-2010-beta-2-download-address-publicly","published":1,"updated":"2016-08-16T14:44:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz944009nxfyn6bjxi1jd","content":"<p>前天就在博客园见了lyj的那篇介绍Visual Studio 2010 Beta 2的文章了，今天终于开发下载了。<br>下载地址：<a href=\"http://msdn.microsoft.com/en-us/vstudio/dd582936.aspx\" target=\"_blank\" rel=\"external\">http://msdn.microsoft.com/en-us/vstudio/dd582936.aspx</a></p>\n<p>看了下别人的安装截图感觉漂亮了不少，不过我还是想等到正式版出来后再下载安装，希望到时能换一个配置好点的本本，现在的这个已经陪伴我三四年的老本跑起来确实很吃力啊。</p>\n<h2 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h2><p><a href=\"http://blog.fwhyy.com/2009/10/experience-vs2010-improvements/\" target=\"_blank\" rel=\"external\">体验vs2010 （功能改进篇）</a><br><a href=\"http://blog.fwhyy.com/2009/10/experience-vs2010-installation/\" target=\"_blank\" rel=\"external\">体验VS2010（安装篇）</a><br><a href=\"http://blog.fwhyy.com/2010/05/net-4-vs2010-new-features/\" target=\"_blank\" rel=\"external\">Net4.0—VS2010新特性</a><br><a href=\"http://blog.fwhyy.com/2010/07/net-4-data-bound-controls-the-clientidrowsuffix-properties/\" target=\"_blank\" rel=\"external\">Net4.0—数据绑定控件（GridView ListView…）中的ClientIDRowSuffix属性</a><br><a href=\"http://blog.fwhyy.com/2010/07/net-4-purification-processing-of-html/\" target=\"_blank\" rel=\"external\">Net4.0—对HTML净化的处理</a><br><a href=\"http://blog.fwhyy.com/2010/07/net-4-aspnet-controls-the-hyperlink-in-the-improvement/\" target=\"_blank\" rel=\"external\">Net4.0—AspNet中的控件HyperLink的改进（支持路由跳转）</a><br><a href=\"http://blog.fwhyy.com/2010/07/net-4-aspnet-url-rewriting-in-the-improvement/\" target=\"_blank\" rel=\"external\">Net4.0—AspNet中URL重写的改进</a><br><a href=\"http://blog.fwhyy.com/2010/06/net-4-the-web-deployment-tool/\" target=\"_blank\" rel=\"external\">Net4.0—Web部署工具</a><br><a href=\"http://blog.fwhyy.com/2010/05/net-4-framwork-of-new-features/\" target=\"_blank\" rel=\"external\">Net4.0—Framwork新增特性</a></p>\n","excerpt":"","more":"<p>前天就在博客园见了lyj的那篇介绍Visual Studio 2010 Beta 2的文章了，今天终于开发下载了。<br>下载地址：<a href=\"http://msdn.microsoft.com/en-us/vstudio/dd582936.aspx\">http://msdn.microsoft.com/en-us/vstudio/dd582936.aspx</a></p>\n<p>看了下别人的安装截图感觉漂亮了不少，不过我还是想等到正式版出来后再下载安装，希望到时能换一个配置好点的本本，现在的这个已经陪伴我三四年的老本跑起来确实很吃力啊。</p>\n<h2 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h2><p><a href=\"http://blog.fwhyy.com/2009/10/experience-vs2010-improvements/\">体验vs2010 （功能改进篇）</a><br><a href=\"http://blog.fwhyy.com/2009/10/experience-vs2010-installation/\">体验VS2010（安装篇）</a><br><a href=\"http://blog.fwhyy.com/2010/05/net-4-vs2010-new-features/\">Net4.0—VS2010新特性</a><br><a href=\"http://blog.fwhyy.com/2010/07/net-4-data-bound-controls-the-clientidrowsuffix-properties/\">Net4.0—数据绑定控件（GridView ListView…）中的ClientIDRowSuffix属性</a><br><a href=\"http://blog.fwhyy.com/2010/07/net-4-purification-processing-of-html/\">Net4.0—对HTML净化的处理</a><br><a href=\"http://blog.fwhyy.com/2010/07/net-4-aspnet-controls-the-hyperlink-in-the-improvement/\">Net4.0—AspNet中的控件HyperLink的改进（支持路由跳转）</a><br><a href=\"http://blog.fwhyy.com/2010/07/net-4-aspnet-url-rewriting-in-the-improvement/\">Net4.0—AspNet中URL重写的改进</a><br><a href=\"http://blog.fwhyy.com/2010/06/net-4-the-web-deployment-tool/\">Net4.0—Web部署工具</a><br><a href=\"http://blog.fwhyy.com/2010/05/net-4-framwork-of-new-features/\">Net4.0—Framwork新增特性</a></p>\n"},{"title":"window.print()实现局部打印","date":"2008-03-05T16:00:00.000Z","_content":"\nwindow.print()  实际上，是浏览器打印功能菜单的一种程序调用。与点击打印功能菜单一样，不能精确分页，不能设置纸型，套打的问题更加无从谈起，只不过，可以让用户不用去点菜单，直接点击网页中的一个按钮，或一个链接里面调用罢了。事实上，很多用户都是采用这种方式打印，但是这种方式最致命的缺点是不能设置打印参数，比如纸型，页边距，选择打印机等等。\n<!--more-->\n\n这种方法提供一个打印前和打印后的事件onbeforeprint、onafterprint。可以在打印前的时候重新编辑一些格式，专门送去打印，打印后又处理回来。\n\n```\nfunction window.onbeforeprint() {\n    //将一些不需要打印的隐藏\n    //如：document.getElementById(\"div1\").style.display=\"none\";\n}\nfunction window.onafterprint() {\n    //放开隐藏的元素\n    //如：document.getElementById(\"div1\").style.display=\"none\";\n}\n```\n\n通过这两个方法，就可以实现页面的局部打印。\n\n\n\n","source":"_posts/window-print-implementation-local-print.md","raw":"---\ntitle: window.print()实现局部打印\ndate: 2008-03-06\ncategories: [Javascript]\ntags: [javascript,print]\n---\n\nwindow.print()  实际上，是浏览器打印功能菜单的一种程序调用。与点击打印功能菜单一样，不能精确分页，不能设置纸型，套打的问题更加无从谈起，只不过，可以让用户不用去点菜单，直接点击网页中的一个按钮，或一个链接里面调用罢了。事实上，很多用户都是采用这种方式打印，但是这种方式最致命的缺点是不能设置打印参数，比如纸型，页边距，选择打印机等等。\n<!--more-->\n\n这种方法提供一个打印前和打印后的事件onbeforeprint、onafterprint。可以在打印前的时候重新编辑一些格式，专门送去打印，打印后又处理回来。\n\n```\nfunction window.onbeforeprint() {\n    //将一些不需要打印的隐藏\n    //如：document.getElementById(\"div1\").style.display=\"none\";\n}\nfunction window.onafterprint() {\n    //放开隐藏的元素\n    //如：document.getElementById(\"div1\").style.display=\"none\";\n}\n```\n\n通过这两个方法，就可以实现页面的局部打印。\n\n\n\n","slug":"window-print-implementation-local-print","published":1,"updated":"2016-08-13T14:46:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz946009rxfynrf27ygey","content":"<p>window.print()  实际上，是浏览器打印功能菜单的一种程序调用。与点击打印功能菜单一样，不能精确分页，不能设置纸型，套打的问题更加无从谈起，只不过，可以让用户不用去点菜单，直接点击网页中的一个按钮，或一个链接里面调用罢了。事实上，很多用户都是采用这种方式打印，但是这种方式最致命的缺点是不能设置打印参数，比如纸型，页边距，选择打印机等等。<br><a id=\"more\"></a></p>\n<p>这种方法提供一个打印前和打印后的事件onbeforeprint、onafterprint。可以在打印前的时候重新编辑一些格式，专门送去打印，打印后又处理回来。</p>\n<figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">function</span> <span class=\"built_in\">window</span>.onbeforeprint() &#123;</div><div class=\"line\">    <span class=\"regexp\">//将一些不需要打印的隐藏</span></div><div class=\"line\">    //如：<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"div1\"</span>).style.display=<span class=\"string\">\"none\"</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">function</span> <span class=\"built_in\">window</span>.onafterprint() &#123;</div><div class=\"line\">    <span class=\"regexp\">//放开隐藏的元素</span></div><div class=\"line\">    //如：<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"div1\"</span>).style.display=<span class=\"string\">\"none\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>通过这两个方法，就可以实现页面的局部打印。</p>\n","excerpt":"<p>window.print()  实际上，是浏览器打印功能菜单的一种程序调用。与点击打印功能菜单一样，不能精确分页，不能设置纸型，套打的问题更加无从谈起，只不过，可以让用户不用去点菜单，直接点击网页中的一个按钮，或一个链接里面调用罢了。事实上，很多用户都是采用这种方式打印，但是这种方式最致命的缺点是不能设置打印参数，比如纸型，页边距，选择打印机等等。<br>","more":"</p>\n<p>这种方法提供一个打印前和打印后的事件onbeforeprint、onafterprint。可以在打印前的时候重新编辑一些格式，专门送去打印，打印后又处理回来。</p>\n<figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">function</span> <span class=\"built_in\">window</span>.onbeforeprint() &#123;</div><div class=\"line\">    <span class=\"regexp\">//将一些不需要打印的隐藏</div><div class=\"line\">    //</span>如：<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"div1\"</span>).style.display=<span class=\"string\">\"none\"</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">function</span> <span class=\"built_in\">window</span>.onafterprint() &#123;</div><div class=\"line\">    <span class=\"regexp\">//放开隐藏的元素</div><div class=\"line\">    //</span>如：<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"div1\"</span>).style.display=<span class=\"string\">\"none\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>通过这两个方法，就可以实现页面的局部打印。</p>"},{"title":"Windows Live Writer中的语法高亮插件","date":"2009-09-21T16:00:00.000Z","_content":"\n## VSPaste\n该插件的作用是可以将 VS、 DELPHI 、VS STUDIO 6 、 SharpDevelop、Zend Studio 等IDE中的代码原样复制到Live Writer中。可以点击[此处](http://files.cnblogs.com/oec2003/VSPaste.zip)下载，下载后解压，将dll文件复制到Live Writer安装目录中的Plugins目录中，如果是安装在C盘，路径如下：C:\\Program Files\\Windows Live\\Writer\\Plugins。\n\n从IDE中复制了代码后点击下图中红色标记处就可以将代码复制到Live Writer中\n\n![2010-12-29_160715](http://oec2003.qiniudn.com/2010-12-29_160715.gif)\n\n## highlight4writer\n该插件安装后可以在一个弹出的对话框中选择c c# xml sql 等十几种语言，可以点击此处下载，下载后同样是将解压的文件复制到Plugins目录下，然后打开Live Writer可以看到如下图所示\n\n![2010-12-29_160911](http://oec2003.qiniudn.com/2010-12-29_160911.gif)\n\n点击就会弹出输入代码的对话框，如下图\n\n![2010-12-29_160950](http://oec2003.qiniudn.com/2010-12-29_160950.gif)\n\n就我个人感觉而言，使用第一种比较好些，因为第二种会产生很多的html代码，而第一种的html相对简洁，并且代码在一个class为Code的div中，可以自己设置css来改变代码部分的样式。\n\n下面是仿老赵的代码样式的css，打开博客园后台管理–》选项—》Configure ，在《通过css定制页面》下的文本框中加入下面的css样式\n\n```\n.Code{\n  background: #F8F8EE;\n  border-left:solid 3px #6CE26C;\n  border-top:dashed 1px #BBBBBB;\n  border-right:dashed 1px #BBBBBB;\n  border-bottom:dashed 1px #BBBBBB;\n  padding: 5px;\n  margin: 0 5px 0 5px;\n  font-family: Verdana,Helvetica, \"微软雅黑\" , Arial, \"宋体\";\n}\n```\n\n然后在文章中添加的代码效果如下：\n\n```\npublic class Test\n{\n}\n```\n\n","source":"_posts/windows-live-writer-syntax-highlighting-in-the-plug-in.md","raw":"---\ntitle: Windows Live Writer中的语法高亮插件\ndate: 2009-09-22\ncategories: [软件推荐]\ntags: [语法高亮, 软件推荐]\n---\n\n## VSPaste\n该插件的作用是可以将 VS、 DELPHI 、VS STUDIO 6 、 SharpDevelop、Zend Studio 等IDE中的代码原样复制到Live Writer中。可以点击[此处](http://files.cnblogs.com/oec2003/VSPaste.zip)下载，下载后解压，将dll文件复制到Live Writer安装目录中的Plugins目录中，如果是安装在C盘，路径如下：C:\\Program Files\\Windows Live\\Writer\\Plugins。\n\n从IDE中复制了代码后点击下图中红色标记处就可以将代码复制到Live Writer中\n\n![2010-12-29_160715](http://oec2003.qiniudn.com/2010-12-29_160715.gif)\n\n## highlight4writer\n该插件安装后可以在一个弹出的对话框中选择c c# xml sql 等十几种语言，可以点击此处下载，下载后同样是将解压的文件复制到Plugins目录下，然后打开Live Writer可以看到如下图所示\n\n![2010-12-29_160911](http://oec2003.qiniudn.com/2010-12-29_160911.gif)\n\n点击就会弹出输入代码的对话框，如下图\n\n![2010-12-29_160950](http://oec2003.qiniudn.com/2010-12-29_160950.gif)\n\n就我个人感觉而言，使用第一种比较好些，因为第二种会产生很多的html代码，而第一种的html相对简洁，并且代码在一个class为Code的div中，可以自己设置css来改变代码部分的样式。\n\n下面是仿老赵的代码样式的css，打开博客园后台管理–》选项—》Configure ，在《通过css定制页面》下的文本框中加入下面的css样式\n\n```\n.Code{\n  background: #F8F8EE;\n  border-left:solid 3px #6CE26C;\n  border-top:dashed 1px #BBBBBB;\n  border-right:dashed 1px #BBBBBB;\n  border-bottom:dashed 1px #BBBBBB;\n  padding: 5px;\n  margin: 0 5px 0 5px;\n  font-family: Verdana,Helvetica, \"微软雅黑\" , Arial, \"宋体\";\n}\n```\n\n然后在文章中添加的代码效果如下：\n\n```\npublic class Test\n{\n}\n```\n\n","slug":"windows-live-writer-syntax-highlighting-in-the-plug-in","published":1,"updated":"2016-08-16T14:09:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz947009uxfyn2wpdhki4","content":"<h2 id=\"VSPaste\"><a href=\"#VSPaste\" class=\"headerlink\" title=\"VSPaste\"></a>VSPaste</h2><p>该插件的作用是可以将 VS、 DELPHI 、VS STUDIO 6 、 SharpDevelop、Zend Studio 等IDE中的代码原样复制到Live Writer中。可以点击<a href=\"http://files.cnblogs.com/oec2003/VSPaste.zip\" target=\"_blank\" rel=\"external\">此处</a>下载，下载后解压，将dll文件复制到Live Writer安装目录中的Plugins目录中，如果是安装在C盘，路径如下：C:\\Program Files\\Windows Live\\Writer\\Plugins。</p>\n<p>从IDE中复制了代码后点击下图中红色标记处就可以将代码复制到Live Writer中</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_160715.gif\" alt=\"2010-12-29_160715\"></p>\n<h2 id=\"highlight4writer\"><a href=\"#highlight4writer\" class=\"headerlink\" title=\"highlight4writer\"></a>highlight4writer</h2><p>该插件安装后可以在一个弹出的对话框中选择c c# xml sql 等十几种语言，可以点击此处下载，下载后同样是将解压的文件复制到Plugins目录下，然后打开Live Writer可以看到如下图所示</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_160911.gif\" alt=\"2010-12-29_160911\"></p>\n<p>点击就会弹出输入代码的对话框，如下图</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_160950.gif\" alt=\"2010-12-29_160950\"></p>\n<p>就我个人感觉而言，使用第一种比较好些，因为第二种会产生很多的html代码，而第一种的html相对简洁，并且代码在一个class为Code的div中，可以自己设置css来改变代码部分的样式。</p>\n<p>下面是仿老赵的代码样式的css，打开博客园后台管理–》选项—》Configure ，在《通过css定制页面》下的文本框中加入下面的css样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.Code</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#F8F8EE</span>;</div><div class=\"line\">  <span class=\"attribute\">border-left</span>:solid <span class=\"number\">3px</span> <span class=\"number\">#6CE26C</span>;</div><div class=\"line\">  <span class=\"attribute\">border-top</span>:dashed <span class=\"number\">1px</span> <span class=\"number\">#BBBBBB</span>;</div><div class=\"line\">  <span class=\"attribute\">border-right</span>:dashed <span class=\"number\">1px</span> <span class=\"number\">#BBBBBB</span>;</div><div class=\"line\">  <span class=\"attribute\">border-bottom</span>:dashed <span class=\"number\">1px</span> <span class=\"number\">#BBBBBB</span>;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span>;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"number\">0</span> <span class=\"number\">5px</span>;</div><div class=\"line\">  <span class=\"attribute\">font-family</span>: Verdana,Helvetica, <span class=\"string\">\"微软雅黑\"</span> , Arial, <span class=\"string\">\"宋体\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>然后在文章中添加的代码效果如下：</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"VSPaste\"><a href=\"#VSPaste\" class=\"headerlink\" title=\"VSPaste\"></a>VSPaste</h2><p>该插件的作用是可以将 VS、 DELPHI 、VS STUDIO 6 、 SharpDevelop、Zend Studio 等IDE中的代码原样复制到Live Writer中。可以点击<a href=\"http://files.cnblogs.com/oec2003/VSPaste.zip\">此处</a>下载，下载后解压，将dll文件复制到Live Writer安装目录中的Plugins目录中，如果是安装在C盘，路径如下：C:\\Program Files\\Windows Live\\Writer\\Plugins。</p>\n<p>从IDE中复制了代码后点击下图中红色标记处就可以将代码复制到Live Writer中</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_160715.gif\" alt=\"2010-12-29_160715\"></p>\n<h2 id=\"highlight4writer\"><a href=\"#highlight4writer\" class=\"headerlink\" title=\"highlight4writer\"></a>highlight4writer</h2><p>该插件安装后可以在一个弹出的对话框中选择c c# xml sql 等十几种语言，可以点击此处下载，下载后同样是将解压的文件复制到Plugins目录下，然后打开Live Writer可以看到如下图所示</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_160911.gif\" alt=\"2010-12-29_160911\"></p>\n<p>点击就会弹出输入代码的对话框，如下图</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-12-29_160950.gif\" alt=\"2010-12-29_160950\"></p>\n<p>就我个人感觉而言，使用第一种比较好些，因为第二种会产生很多的html代码，而第一种的html相对简洁，并且代码在一个class为Code的div中，可以自己设置css来改变代码部分的样式。</p>\n<p>下面是仿老赵的代码样式的css，打开博客园后台管理–》选项—》Configure ，在《通过css定制页面》下的文本框中加入下面的css样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.Code</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#F8F8EE</span>;</div><div class=\"line\">  <span class=\"attribute\">border-left</span>:solid <span class=\"number\">3px</span> <span class=\"number\">#6CE26C</span>;</div><div class=\"line\">  <span class=\"attribute\">border-top</span>:dashed <span class=\"number\">1px</span> <span class=\"number\">#BBBBBB</span>;</div><div class=\"line\">  <span class=\"attribute\">border-right</span>:dashed <span class=\"number\">1px</span> <span class=\"number\">#BBBBBB</span>;</div><div class=\"line\">  <span class=\"attribute\">border-bottom</span>:dashed <span class=\"number\">1px</span> <span class=\"number\">#BBBBBB</span>;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span>;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"number\">0</span> <span class=\"number\">5px</span>;</div><div class=\"line\">  <span class=\"attribute\">font-family</span>: Verdana,Helvetica, <span class=\"string\">\"微软雅黑\"</span> , Arial, <span class=\"string\">\"宋体\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>然后在文章中添加的代码效果如下：</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"在数据库中将字表中的多行合并到一列中","date":"2009-10-14T16:00:00.000Z","_content":"\n几年前就做过这样的查询，在最近的项目中又遇到这样的需求，在此记录一下。\n\n假设有一个文章表Post和一个评论表Comments，可以对文章进行多次评论，现在希望在对Post表查询时能将Post的所有评论内容组合到一个字段中显示。\n\n首先创建表Post和Comments\n\n```\ncreate table Post\n(\n    [PostID] int identity(1,1) primary key not null,\n    [Title] nvarchar(50),\n    [Content] text,\n    [CreateDate] datetime default getdate()\n)\n\ncreate table Comments\n(\n    [CommentID] int identity(1,1) primary key not null,\n    [PostID] int,\n    [Content] text,\n    [CreateDate] datetime default getdate()\n)\n```\n\n给这两个表添加一些测试数据\n\n```\ninsert into Post select '钓鱼岛是中国的吗？','钓鱼岛是中国的',getdate()\ninsert into Comments select 1,'绝对是',getdate()\ninsert into Comments select 1,'必须是的',getdate()\ninsert into Comments select 1,'谁说不是呢',getdate()\n```\n\n评论内容的组合使用一个函数来实现，在函数中使用游标去遍历给定PostID的所有评论然后进行拼接，函数代码如下：\n\n```\ncreate  FUNCTION fn_GetAllComments(@PostID int)\nRETURNS NVARCHAR(4000)\nAS\nBEGIN\n    DECLARE @result VARCHAR(4000)\n    SET @result=''\n    DECLARE getAllComments CURSOR\n    FOR\n        select CommentID from Comments where PostID=@PostID\n    OPEN getAllComments\n    DECLARE @ID SYSNAME\n    FETCH  FROM getAllComments INTO @ID\n    WHILE @@fetch_status=0\n    BEGIN\n        SET @result=@result+(select convert(nvarchar(20),CreateDate,120)\n                                from Comments where CommentID=@ID)+':'+\n                            (select cast([Content] as nvarchar(4000))\n                                from Comments where CommentID=@ID)+'；'\n        FETCH  FROM getAllComments INTO @ID\n    END\n    CLOSE getAllComments\n    SET @result= substring(@result,0,len(@result))\n    DEALLOCATE getAllComments\n    RETURN @result\nEND\n```\n\n现在写SQL语句来测试一下结果\n\n```\nselect\n    Title,[Content],CreateDate,dbo.fn_GetAllComments(PostID) as AllComments\nfrom Post\n```\n\n查询结果如下：\n\n![2010-10-15_153653](http://oec2003.qiniudn.com/2010-10-15_153653.png)\n\n","source":"_posts/words-in-the-table-in-the-database-multi-line-merged-into-a-column.md","raw":"---\ntitle: 在数据库中将字表中的多行合并到一列中\ndate: 2009-10-15\ncategories: [SqlServer]\ntags: [Sql, 合并列]\n---\n\n几年前就做过这样的查询，在最近的项目中又遇到这样的需求，在此记录一下。\n\n假设有一个文章表Post和一个评论表Comments，可以对文章进行多次评论，现在希望在对Post表查询时能将Post的所有评论内容组合到一个字段中显示。\n\n首先创建表Post和Comments\n\n```\ncreate table Post\n(\n    [PostID] int identity(1,1) primary key not null,\n    [Title] nvarchar(50),\n    [Content] text,\n    [CreateDate] datetime default getdate()\n)\n\ncreate table Comments\n(\n    [CommentID] int identity(1,1) primary key not null,\n    [PostID] int,\n    [Content] text,\n    [CreateDate] datetime default getdate()\n)\n```\n\n给这两个表添加一些测试数据\n\n```\ninsert into Post select '钓鱼岛是中国的吗？','钓鱼岛是中国的',getdate()\ninsert into Comments select 1,'绝对是',getdate()\ninsert into Comments select 1,'必须是的',getdate()\ninsert into Comments select 1,'谁说不是呢',getdate()\n```\n\n评论内容的组合使用一个函数来实现，在函数中使用游标去遍历给定PostID的所有评论然后进行拼接，函数代码如下：\n\n```\ncreate  FUNCTION fn_GetAllComments(@PostID int)\nRETURNS NVARCHAR(4000)\nAS\nBEGIN\n    DECLARE @result VARCHAR(4000)\n    SET @result=''\n    DECLARE getAllComments CURSOR\n    FOR\n        select CommentID from Comments where PostID=@PostID\n    OPEN getAllComments\n    DECLARE @ID SYSNAME\n    FETCH  FROM getAllComments INTO @ID\n    WHILE @@fetch_status=0\n    BEGIN\n        SET @result=@result+(select convert(nvarchar(20),CreateDate,120)\n                                from Comments where CommentID=@ID)+':'+\n                            (select cast([Content] as nvarchar(4000))\n                                from Comments where CommentID=@ID)+'；'\n        FETCH  FROM getAllComments INTO @ID\n    END\n    CLOSE getAllComments\n    SET @result= substring(@result,0,len(@result))\n    DEALLOCATE getAllComments\n    RETURN @result\nEND\n```\n\n现在写SQL语句来测试一下结果\n\n```\nselect\n    Title,[Content],CreateDate,dbo.fn_GetAllComments(PostID) as AllComments\nfrom Post\n```\n\n查询结果如下：\n\n![2010-10-15_153653](http://oec2003.qiniudn.com/2010-10-15_153653.png)\n\n","slug":"words-in-the-table-in-the-database-multi-line-merged-into-a-column","published":1,"updated":"2016-08-16T14:37:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz949009zxfynwirmx562","content":"<p>几年前就做过这样的查询，在最近的项目中又遇到这样的需求，在此记录一下。</p>\n<p>假设有一个文章表Post和一个评论表Comments，可以对文章进行多次评论，现在希望在对Post表查询时能将Post的所有评论内容组合到一个字段中显示。</p>\n<p>首先创建表Post和Comments</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> Post</div><div class=\"line\">(</div><div class=\"line\">    [PostID] <span class=\"built_in\">int</span> <span class=\"keyword\">identity</span>(<span class=\"number\">1</span>,<span class=\"number\">1</span>) primary <span class=\"keyword\">key</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    [Title] <span class=\"keyword\">nvarchar</span>(<span class=\"number\">50</span>),</div><div class=\"line\">    [<span class=\"keyword\">Content</span>] <span class=\"built_in\">text</span>,</div><div class=\"line\">    [CreateDate] datetime <span class=\"keyword\">default</span> <span class=\"keyword\">getdate</span>()</div><div class=\"line\">)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> Comments</div><div class=\"line\">(</div><div class=\"line\">    [CommentID] <span class=\"built_in\">int</span> <span class=\"keyword\">identity</span>(<span class=\"number\">1</span>,<span class=\"number\">1</span>) primary <span class=\"keyword\">key</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    [PostID] <span class=\"built_in\">int</span>,</div><div class=\"line\">    [<span class=\"keyword\">Content</span>] <span class=\"built_in\">text</span>,</div><div class=\"line\">    [CreateDate] datetime <span class=\"keyword\">default</span> <span class=\"keyword\">getdate</span>()</div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<p>给这两个表添加一些测试数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Post <span class=\"keyword\">select</span> <span class=\"string\">'钓鱼岛是中国的吗？'</span>,<span class=\"string\">'钓鱼岛是中国的'</span>,<span class=\"keyword\">getdate</span>()</div><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Comments <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"string\">'绝对是'</span>,<span class=\"keyword\">getdate</span>()</div><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Comments <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"string\">'必须是的'</span>,<span class=\"keyword\">getdate</span>()</div><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Comments <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"string\">'谁说不是呢'</span>,<span class=\"keyword\">getdate</span>()</div></pre></td></tr></table></figure>\n<p>评论内容的组合使用一个函数来实现，在函数中使用游标去遍历给定PostID的所有评论然后进行拼接，函数代码如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span>  <span class=\"keyword\">FUNCTION</span> fn_GetAllComments(@PostID <span class=\"built_in\">int</span>)</div><div class=\"line\"><span class=\"keyword\">RETURNS</span> <span class=\"keyword\">NVARCHAR</span>(<span class=\"number\">4000</span>)</div><div class=\"line\"><span class=\"keyword\">AS</span></div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">    <span class=\"keyword\">DECLARE</span> @<span class=\"keyword\">result</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">4000</span>)</div><div class=\"line\">    <span class=\"keyword\">SET</span> @<span class=\"keyword\">result</span>=<span class=\"string\">''</span></div><div class=\"line\">    <span class=\"keyword\">DECLARE</span> getAllComments <span class=\"keyword\">CURSOR</span></div><div class=\"line\">    <span class=\"keyword\">FOR</span></div><div class=\"line\">        <span class=\"keyword\">select</span> CommentID <span class=\"keyword\">from</span> Comments <span class=\"keyword\">where</span> PostID=@PostID</div><div class=\"line\">    <span class=\"keyword\">OPEN</span> getAllComments</div><div class=\"line\">    <span class=\"keyword\">DECLARE</span> @<span class=\"keyword\">ID</span> SYSNAME</div><div class=\"line\">    <span class=\"keyword\">FETCH</span>  <span class=\"keyword\">FROM</span> getAllComments <span class=\"keyword\">INTO</span> @<span class=\"keyword\">ID</span></div><div class=\"line\">    <span class=\"keyword\">WHILE</span> @@fetch_status=<span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">BEGIN</span></div><div class=\"line\">        <span class=\"keyword\">SET</span> @<span class=\"keyword\">result</span>=@<span class=\"keyword\">result</span>+(<span class=\"keyword\">select</span> <span class=\"keyword\">convert</span>(<span class=\"keyword\">nvarchar</span>(<span class=\"number\">20</span>),CreateDate,<span class=\"number\">120</span>)</div><div class=\"line\">                                <span class=\"keyword\">from</span> Comments <span class=\"keyword\">where</span> CommentID=@<span class=\"keyword\">ID</span>)+<span class=\"string\">':'</span>+</div><div class=\"line\">                            (<span class=\"keyword\">select</span> <span class=\"keyword\">cast</span>([<span class=\"keyword\">Content</span>] <span class=\"keyword\">as</span> <span class=\"keyword\">nvarchar</span>(<span class=\"number\">4000</span>))</div><div class=\"line\">                                <span class=\"keyword\">from</span> Comments <span class=\"keyword\">where</span> CommentID=@<span class=\"keyword\">ID</span>)+<span class=\"string\">'；'</span></div><div class=\"line\">        <span class=\"keyword\">FETCH</span>  <span class=\"keyword\">FROM</span> getAllComments <span class=\"keyword\">INTO</span> @<span class=\"keyword\">ID</span></div><div class=\"line\">    <span class=\"keyword\">END</span></div><div class=\"line\">    <span class=\"keyword\">CLOSE</span> getAllComments</div><div class=\"line\">    <span class=\"keyword\">SET</span> @<span class=\"keyword\">result</span>= <span class=\"keyword\">substring</span>(@<span class=\"keyword\">result</span>,<span class=\"number\">0</span>,<span class=\"keyword\">len</span>(@<span class=\"keyword\">result</span>))</div><div class=\"line\">    <span class=\"keyword\">DEALLOCATE</span> getAllComments</div><div class=\"line\">    <span class=\"keyword\">RETURN</span> @<span class=\"keyword\">result</span></div><div class=\"line\"><span class=\"keyword\">END</span></div></pre></td></tr></table></figure>\n<p>现在写SQL语句来测试一下结果</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span></div><div class=\"line\">    Title,[<span class=\"keyword\">Content</span>],CreateDate,dbo.fn_GetAllComments(PostID) <span class=\"keyword\">as</span> AllComments</div><div class=\"line\"><span class=\"keyword\">from</span> Post</div></pre></td></tr></table></figure>\n<p>查询结果如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-10-15_153653.png\" alt=\"2010-10-15_153653\"></p>\n","excerpt":"","more":"<p>几年前就做过这样的查询，在最近的项目中又遇到这样的需求，在此记录一下。</p>\n<p>假设有一个文章表Post和一个评论表Comments，可以对文章进行多次评论，现在希望在对Post表查询时能将Post的所有评论内容组合到一个字段中显示。</p>\n<p>首先创建表Post和Comments</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> Post</div><div class=\"line\">(</div><div class=\"line\">    [PostID] <span class=\"built_in\">int</span> <span class=\"keyword\">identity</span>(<span class=\"number\">1</span>,<span class=\"number\">1</span>) primary <span class=\"keyword\">key</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    [Title] <span class=\"keyword\">nvarchar</span>(<span class=\"number\">50</span>),</div><div class=\"line\">    [<span class=\"keyword\">Content</span>] <span class=\"built_in\">text</span>,</div><div class=\"line\">    [CreateDate] datetime <span class=\"keyword\">default</span> <span class=\"keyword\">getdate</span>()</div><div class=\"line\">)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> Comments</div><div class=\"line\">(</div><div class=\"line\">    [CommentID] <span class=\"built_in\">int</span> <span class=\"keyword\">identity</span>(<span class=\"number\">1</span>,<span class=\"number\">1</span>) primary <span class=\"keyword\">key</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    [PostID] <span class=\"built_in\">int</span>,</div><div class=\"line\">    [<span class=\"keyword\">Content</span>] <span class=\"built_in\">text</span>,</div><div class=\"line\">    [CreateDate] datetime <span class=\"keyword\">default</span> <span class=\"keyword\">getdate</span>()</div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<p>给这两个表添加一些测试数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Post <span class=\"keyword\">select</span> <span class=\"string\">'钓鱼岛是中国的吗？'</span>,<span class=\"string\">'钓鱼岛是中国的'</span>,<span class=\"keyword\">getdate</span>()</div><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Comments <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"string\">'绝对是'</span>,<span class=\"keyword\">getdate</span>()</div><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Comments <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"string\">'必须是的'</span>,<span class=\"keyword\">getdate</span>()</div><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Comments <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"string\">'谁说不是呢'</span>,<span class=\"keyword\">getdate</span>()</div></pre></td></tr></table></figure>\n<p>评论内容的组合使用一个函数来实现，在函数中使用游标去遍历给定PostID的所有评论然后进行拼接，函数代码如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span>  <span class=\"keyword\">FUNCTION</span> fn_GetAllComments(@PostID <span class=\"built_in\">int</span>)</div><div class=\"line\"><span class=\"keyword\">RETURNS</span> <span class=\"keyword\">NVARCHAR</span>(<span class=\"number\">4000</span>)</div><div class=\"line\"><span class=\"keyword\">AS</span></div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">    <span class=\"keyword\">DECLARE</span> @<span class=\"keyword\">result</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">4000</span>)</div><div class=\"line\">    <span class=\"keyword\">SET</span> @<span class=\"keyword\">result</span>=<span class=\"string\">''</span></div><div class=\"line\">    <span class=\"keyword\">DECLARE</span> getAllComments <span class=\"keyword\">CURSOR</span></div><div class=\"line\">    <span class=\"keyword\">FOR</span></div><div class=\"line\">        <span class=\"keyword\">select</span> CommentID <span class=\"keyword\">from</span> Comments <span class=\"keyword\">where</span> PostID=@PostID</div><div class=\"line\">    <span class=\"keyword\">OPEN</span> getAllComments</div><div class=\"line\">    <span class=\"keyword\">DECLARE</span> @<span class=\"keyword\">ID</span> SYSNAME</div><div class=\"line\">    <span class=\"keyword\">FETCH</span>  <span class=\"keyword\">FROM</span> getAllComments <span class=\"keyword\">INTO</span> @<span class=\"keyword\">ID</span></div><div class=\"line\">    <span class=\"keyword\">WHILE</span> @@fetch_status=<span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">BEGIN</span></div><div class=\"line\">        <span class=\"keyword\">SET</span> @<span class=\"keyword\">result</span>=@<span class=\"keyword\">result</span>+(<span class=\"keyword\">select</span> <span class=\"keyword\">convert</span>(<span class=\"keyword\">nvarchar</span>(<span class=\"number\">20</span>),CreateDate,<span class=\"number\">120</span>)</div><div class=\"line\">                                <span class=\"keyword\">from</span> Comments <span class=\"keyword\">where</span> CommentID=@<span class=\"keyword\">ID</span>)+<span class=\"string\">':'</span>+</div><div class=\"line\">                            (<span class=\"keyword\">select</span> <span class=\"keyword\">cast</span>([<span class=\"keyword\">Content</span>] <span class=\"keyword\">as</span> <span class=\"keyword\">nvarchar</span>(<span class=\"number\">4000</span>))</div><div class=\"line\">                                <span class=\"keyword\">from</span> Comments <span class=\"keyword\">where</span> CommentID=@<span class=\"keyword\">ID</span>)+<span class=\"string\">'；'</span></div><div class=\"line\">        <span class=\"keyword\">FETCH</span>  <span class=\"keyword\">FROM</span> getAllComments <span class=\"keyword\">INTO</span> @<span class=\"keyword\">ID</span></div><div class=\"line\">    <span class=\"keyword\">END</span></div><div class=\"line\">    <span class=\"keyword\">CLOSE</span> getAllComments</div><div class=\"line\">    <span class=\"keyword\">SET</span> @<span class=\"keyword\">result</span>= <span class=\"keyword\">substring</span>(@<span class=\"keyword\">result</span>,<span class=\"number\">0</span>,<span class=\"keyword\">len</span>(@<span class=\"keyword\">result</span>))</div><div class=\"line\">    <span class=\"keyword\">DEALLOCATE</span> getAllComments</div><div class=\"line\">    <span class=\"keyword\">RETURN</span> @<span class=\"keyword\">result</span></div><div class=\"line\"><span class=\"keyword\">END</span></div></pre></td></tr></table></figure>\n<p>现在写SQL语句来测试一下结果</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span></div><div class=\"line\">    Title,[<span class=\"keyword\">Content</span>],CreateDate,dbo.fn_GetAllComments(PostID) <span class=\"keyword\">as</span> AllComments</div><div class=\"line\"><span class=\"keyword\">from</span> Post</div></pre></td></tr></table></figure>\n<p>查询结果如下：</p>\n<p><img src=\"http://oec2003.qiniudn.com/2010-10-15_153653.png\" alt=\"2010-10-15_153653\"></p>\n"},{"title":"姚明差一篮板平记录 火箭2分惜败开拓者","date":"2006-12-21T16:00:00.000Z","_content":"\n上午十一点，火箭对开拓者，中央台不转，我们一堆人挤在一个小小的电脑前面就看开了，忍受着超慢的网速，忍受着不很流畅的画面，只因为这场比赛的意义不一般，姚明只要在这场比赛拿到30加10就可以平火箭队的连续四场比赛那30加10的记录，真是看的扣人心悬，但最终姚明还是没能挺住，就差一个板啊！真是可惜。\r\r再说比赛，虽然比分落后最多的时候有十几分，但在离比赛快结束的时候层一度追到只剩两分，然而火箭没把握住，应该说是姚明没把握住。麦迪不在，姚明难道就不能独挑大梁吗？对湖人在大比分领先的情况下，在最后被对手反超；打勇士30秒大翻盘，包括今天的比赛，小巨人有点让火箭队的球迷失望了。\r\r姚明要走的路还很长，希望他越来越成熟，打得越来越好，我们期待着火箭夺冠的那一天。\n\n","source":"_posts/yao-ming-a-rebounding-flat-poor-records-the-rockets-2-points-defeat-the-blazers.md","raw":"---\ntitle: 姚明差一篮板平记录 火箭2分惜败开拓者\ndate: 2006-12-22\ncategories: [篮球]\ntags: [NBA,篮球]\n---\n\n上午十一点，火箭对开拓者，中央台不转，我们一堆人挤在一个小小的电脑前面就看开了，忍受着超慢的网速，忍受着不很流畅的画面，只因为这场比赛的意义不一般，姚明只要在这场比赛拿到30加10就可以平火箭队的连续四场比赛那30加10的记录，真是看的扣人心悬，但最终姚明还是没能挺住，就差一个板啊！真是可惜。\r\r再说比赛，虽然比分落后最多的时候有十几分，但在离比赛快结束的时候层一度追到只剩两分，然而火箭没把握住，应该说是姚明没把握住。麦迪不在，姚明难道就不能独挑大梁吗？对湖人在大比分领先的情况下，在最后被对手反超；打勇士30秒大翻盘，包括今天的比赛，小巨人有点让火箭队的球迷失望了。\r\r姚明要走的路还很长，希望他越来越成熟，打得越来越好，我们期待着火箭夺冠的那一天。\n\n","slug":"yao-ming-a-rebounding-flat-poor-records-the-rockets-2-points-defeat-the-blazers","published":1,"updated":"2016-08-12T04:54:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz94a00a2xfyn6t7f65s5","content":"<p>上午十一点，火箭对开拓者，中央台不转，我们一堆人挤在一个小小的电脑前面就看开了，忍受着超慢的网速，忍受着不很流畅的画面，只因为这场比赛的意义不一般，姚明只要在这场比赛拿到30加10就可以平火箭队的连续四场比赛那30加10的记录，真是看的扣人心悬，但最终姚明还是没能挺住，就差一个板啊！真是可惜。</p>\n<p>再说比赛，虽然比分落后最多的时候有十几分，但在离比赛快结束的时候层一度追到只剩两分，然而火箭没把握住，应该说是姚明没把握住。麦迪不在，姚明难道就不能独挑大梁吗？对湖人在大比分领先的情况下，在最后被对手反超；打勇士30秒大翻盘，包括今天的比赛，小巨人有点让火箭队的球迷失望了。</p>\n<p>姚明要走的路还很长，希望他越来越成熟，打得越来越好，我们期待着火箭夺冠的那一天。</p>\n","excerpt":"","more":"<p>上午十一点，火箭对开拓者，中央台不转，我们一堆人挤在一个小小的电脑前面就看开了，忍受着超慢的网速，忍受着不很流畅的画面，只因为这场比赛的意义不一般，姚明只要在这场比赛拿到30加10就可以平火箭队的连续四场比赛那30加10的记录，真是看的扣人心悬，但最终姚明还是没能挺住，就差一个板啊！真是可惜。</p>\n<p>再说比赛，虽然比分落后最多的时候有十几分，但在离比赛快结束的时候层一度追到只剩两分，然而火箭没把握住，应该说是姚明没把握住。麦迪不在，姚明难道就不能独挑大梁吗？对湖人在大比分领先的情况下，在最后被对手反超；打勇士30秒大翻盘，包括今天的比赛，小巨人有点让火箭队的球迷失望了。</p>\n<p>姚明要走的路还很长，希望他越来越成熟，打得越来越好，我们期待着火箭夺冠的那一天。</p>\n"},{"title":"姚明依然是火箭核心","date":"2007-03-11T16:00:00.000Z","_content":"\n离招聘会已经有十来天了，少数找到工作的很高兴地走上了工作岗位，大部分人还是那儿来会那儿去了，而我还留在学校，只是为了尽快地把论文做完，真要是出去找工作了恐怕就很少有精力来做论文了。上次的应聘虽然失败了，但从一两百人中进了前五至少也证明了自己的实力，人还是要积极向上一点。不能落在失败的阴影当中，总结经验找出不足才能使我走得更远。\n<!--more-->\n看球可以让我振奋，可以让我从面试失败的阴影中走出来。因为我认为篮球代表着一种顽强拼搏和积极向上的精神，代表着一种团结的力量。今天火箭的比赛虽然没能看到，但也看了文字直播，结果很让人高兴，火箭在主场以103-92击败魔术。姚明全场砍下了37分、7个篮板和4个盖帽，他全场22投14中。命中率很高，伤愈后的腿还是给篮板球带来了影响。姚明在复出后状态越来越好，也充分地推翻了在姚明受伤期间说没有姚明火箭打得更好的错误观点。虽然在姚明不在时曾经打出过一阵子很好的战绩，但遇到一些有强大中锋的队时就会显得非常吃力，遇强不弱，遇弱不强时火箭一个很大的毛病，因此也将很多本因该轻松搞定的比赛，最后反倒是输了。姚明的回归使内线有了绝对的优势，三连胜足以说明问题。明天对太阳也很希望姚明表现出色，火箭升天，击落太阳。\n\n","source":"_posts/yao-ming-is-still-the-rockets-core.md","raw":"---\ntitle: 姚明依然是火箭核心\ndate: 2007-03-12\ncategories: [篮球]\ntags: [NBA,篮球]\n---\n\n离招聘会已经有十来天了，少数找到工作的很高兴地走上了工作岗位，大部分人还是那儿来会那儿去了，而我还留在学校，只是为了尽快地把论文做完，真要是出去找工作了恐怕就很少有精力来做论文了。上次的应聘虽然失败了，但从一两百人中进了前五至少也证明了自己的实力，人还是要积极向上一点。不能落在失败的阴影当中，总结经验找出不足才能使我走得更远。\n<!--more-->\n看球可以让我振奋，可以让我从面试失败的阴影中走出来。因为我认为篮球代表着一种顽强拼搏和积极向上的精神，代表着一种团结的力量。今天火箭的比赛虽然没能看到，但也看了文字直播，结果很让人高兴，火箭在主场以103-92击败魔术。姚明全场砍下了37分、7个篮板和4个盖帽，他全场22投14中。命中率很高，伤愈后的腿还是给篮板球带来了影响。姚明在复出后状态越来越好，也充分地推翻了在姚明受伤期间说没有姚明火箭打得更好的错误观点。虽然在姚明不在时曾经打出过一阵子很好的战绩，但遇到一些有强大中锋的队时就会显得非常吃力，遇强不弱，遇弱不强时火箭一个很大的毛病，因此也将很多本因该轻松搞定的比赛，最后反倒是输了。姚明的回归使内线有了绝对的优势，三连胜足以说明问题。明天对太阳也很希望姚明表现出色，火箭升天，击落太阳。\n\n","slug":"yao-ming-is-still-the-rockets-core","published":1,"updated":"2016-08-12T16:10:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirxkz94b00a6xfyno9qpi5sa","content":"<p>离招聘会已经有十来天了，少数找到工作的很高兴地走上了工作岗位，大部分人还是那儿来会那儿去了，而我还留在学校，只是为了尽快地把论文做完，真要是出去找工作了恐怕就很少有精力来做论文了。上次的应聘虽然失败了，但从一两百人中进了前五至少也证明了自己的实力，人还是要积极向上一点。不能落在失败的阴影当中，总结经验找出不足才能使我走得更远。<br><a id=\"more\"></a><br>看球可以让我振奋，可以让我从面试失败的阴影中走出来。因为我认为篮球代表着一种顽强拼搏和积极向上的精神，代表着一种团结的力量。今天火箭的比赛虽然没能看到，但也看了文字直播，结果很让人高兴，火箭在主场以103-92击败魔术。姚明全场砍下了37分、7个篮板和4个盖帽，他全场22投14中。命中率很高，伤愈后的腿还是给篮板球带来了影响。姚明在复出后状态越来越好，也充分地推翻了在姚明受伤期间说没有姚明火箭打得更好的错误观点。虽然在姚明不在时曾经打出过一阵子很好的战绩，但遇到一些有强大中锋的队时就会显得非常吃力，遇强不弱，遇弱不强时火箭一个很大的毛病，因此也将很多本因该轻松搞定的比赛，最后反倒是输了。姚明的回归使内线有了绝对的优势，三连胜足以说明问题。明天对太阳也很希望姚明表现出色，火箭升天，击落太阳。</p>\n","excerpt":"<p>离招聘会已经有十来天了，少数找到工作的很高兴地走上了工作岗位，大部分人还是那儿来会那儿去了，而我还留在学校，只是为了尽快地把论文做完，真要是出去找工作了恐怕就很少有精力来做论文了。上次的应聘虽然失败了，但从一两百人中进了前五至少也证明了自己的实力，人还是要积极向上一点。不能落在失败的阴影当中，总结经验找出不足才能使我走得更远。<br>","more":"<br>看球可以让我振奋，可以让我从面试失败的阴影中走出来。因为我认为篮球代表着一种顽强拼搏和积极向上的精神，代表着一种团结的力量。今天火箭的比赛虽然没能看到，但也看了文字直播，结果很让人高兴，火箭在主场以103-92击败魔术。姚明全场砍下了37分、7个篮板和4个盖帽，他全场22投14中。命中率很高，伤愈后的腿还是给篮板球带来了影响。姚明在复出后状态越来越好，也充分地推翻了在姚明受伤期间说没有姚明火箭打得更好的错误观点。虽然在姚明不在时曾经打出过一阵子很好的战绩，但遇到一些有强大中锋的队时就会显得非常吃力，遇强不弱，遇弱不强时火箭一个很大的毛病，因此也将很多本因该轻松搞定的比赛，最后反倒是输了。姚明的回归使内线有了绝对的优势，三连胜足以说明问题。明天对太阳也很希望姚明表现出色，火箭升天，击落太阳。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cirxkz8xu0007xfynh70blsul","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz8y7000dxfyny99l8nxe"},{"post_id":"cirxkz8xa0001xfynvzt9xztr","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz8y9000ixfyn65s7hqkb"},{"post_id":"cirxkz8xw0009xfynxmpe69t8","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz8yb000kxfyn9p2ebrr4"},{"post_id":"cirxkz8y4000cxfynnbtno159","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz8ye000oxfyn71zre4h6"},{"post_id":"cirxkz8xi0003xfyn1cccg1ie","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz8yg000rxfync0y26ro8"},{"post_id":"cirxkz8xs0006xfynatzuq9jv","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz8yk000vxfyn0fhrjvbb"},{"post_id":"cirxkz8ye000qxfynhptb9pco","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz8yn000yxfynawu45g0n"},{"post_id":"cirxkz8y7000fxfynzuv8qcgt","category_id":"cirxkz8yd000mxfynojez3u7g","_id":"cirxkz8yr0012xfyn1dy6pcuc"},{"post_id":"cirxkz8ya000jxfynjhyvxdfd","category_id":"cirxkz8yj000txfyndhmz4xkr","_id":"cirxkz8yy0016xfyn7cueevi6"},{"post_id":"cirxkz8yc000lxfyn9bpngicw","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz8z4001dxfynrn74eo07"},{"post_id":"cirxkz8yz0019xfyn8yetbf85","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz8z6001hxfyn4vqgybnb"},{"post_id":"cirxkz8z2001bxfynq1y4tod4","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz8z9001jxfynngw74p2p"},{"post_id":"cirxkz8yh000sxfyn2jtpey2c","category_id":"cirxkz8yy0018xfynf0ctdb0v","_id":"cirxkz8zj001nxfynm4jtingc"},{"post_id":"cirxkz8yk000wxfyn80wzbk0z","category_id":"cirxkz8z6001gxfynchm0zpsu","_id":"cirxkz8zq001rxfyn7vd260ue"},{"post_id":"cirxkz8zb001kxfyn58wdxyxc","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz90a001vxfynu3qano02"},{"post_id":"cirxkz8yp000zxfyn16l4d6pq","category_id":"cirxkz8zi001mxfynvpf6fz2v","_id":"cirxkz90c001zxfyn9zpvfxnq"},{"post_id":"cirxkz909001uxfynr2cj3kng","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz90e0024xfynsy62mokz"},{"post_id":"cirxkz8yt0013xfynd39e7gm6","category_id":"cirxkz8zs001txfyn7d9zhqq0","_id":"cirxkz90g0027xfynfbwyfdm5"},{"post_id":"cirxkz8yw0015xfynvpgf7vfp","category_id":"cirxkz8z6001gxfynchm0zpsu","_id":"cirxkz90k002cxfyntbsnf127"},{"post_id":"cirxkz90i002bxfyn096fwv2l","category_id":"cirxkz90g0028xfynzlamfiw1","_id":"cirxkz90p002ixfynfa6d75t7"},{"post_id":"cirxkz8z4001fxfyn3e6nu6fc","category_id":"cirxkz90g0028xfynzlamfiw1","_id":"cirxkz90s002nxfynxoeg2qsi"},{"post_id":"cirxkz90k002dxfyneahtj59w","category_id":"cirxkz90g0028xfynzlamfiw1","_id":"cirxkz90t002qxfynm1dzobmf"},{"post_id":"cirxkz90n002hxfynloqupuvd","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz90v002vxfynym101fxj"},{"post_id":"cirxkz8z7001ixfyndsui9xim","category_id":"cirxkz90g0028xfynzlamfiw1","_id":"cirxkz90w002yxfyne94yx7lk"},{"post_id":"cirxkz90q002kxfyn5qkiq9s8","category_id":"cirxkz90g0028xfynzlamfiw1","_id":"cirxkz90z0032xfynhqjbcrfq"},{"post_id":"cirxkz90s002pxfyntieq30ku","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz9110036xfyngbi4bkqb"},{"post_id":"cirxkz8zj001oxfyngfsmzk8v","category_id":"cirxkz90g0028xfynzlamfiw1","_id":"cirxkz9130039xfynds3es9gs"},{"post_id":"cirxkz90t002sxfynn066cv6c","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz914003cxfyn9yhaah38"},{"post_id":"cirxkz90v002wxfynpvw0atqu","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz915003gxfynonp5vggj"},{"post_id":"cirxkz8zo001qxfynweox409m","category_id":"cirxkz90u002txfyno08whov9","_id":"cirxkz916003kxfynp79txxm7"},{"post_id":"cirxkz90w002zxfyn2irz1ary","category_id":"cirxkz90g0028xfynzlamfiw1","_id":"cirxkz919003oxfynnkfgde77"},{"post_id":"cirxkz90z0034xfynl8law5ua","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz91d003rxfynj1f0pxao"},{"post_id":"cirxkz90b001xxfynn5ma8s9o","category_id":"cirxkz90g0028xfynzlamfiw1","_id":"cirxkz91f003vxfyndt6crscc"},{"post_id":"cirxkz913003axfyn3hlzh6u0","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz91i003zxfyn42irk0k1"},{"post_id":"cirxkz90e0022xfyn8nydtq43","category_id":"cirxkz90g0028xfynzlamfiw1","_id":"cirxkz91k0042xfynzvykmwpd"},{"post_id":"cirxkz914003exfynnwvccmj9","category_id":"cirxkz8z6001gxfynchm0zpsu","_id":"cirxkz91m0044xfynkoleu0uc"},{"post_id":"cirxkz915003ixfynwypzv2al","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz91n0047xfynht9hbo3g"},{"post_id":"cirxkz90f0025xfynb5f2h6i7","category_id":"cirxkz90g0028xfynzlamfiw1","_id":"cirxkz91o004axfynk9enffre"},{"post_id":"cirxkz90g002axfynjreaxwba","category_id":"cirxkz90g0028xfynzlamfiw1","_id":"cirxkz91q004dxfyngfst4go9"},{"post_id":"cirxkz9110037xfynn5ya051p","category_id":"cirxkz91f003uxfynoe69an81","_id":"cirxkz91u004hxfyne2l5stsf"},{"post_id":"cirxkz91k0043xfynfoatlxhx","category_id":"cirxkz91k0041xfyndait4lgl","_id":"cirxkz91w004lxfyne1stq4nv"},{"post_id":"cirxkz916003mxfynpja42he5","category_id":"cirxkz91k0041xfyndait4lgl","_id":"cirxkz91x004pxfyn4dj4mk15"},{"post_id":"cirxkz919003pxfynbz7o07sz","category_id":"cirxkz91k0041xfyndait4lgl","_id":"cirxkz91y004txfyn0fvjtap6"},{"post_id":"cirxkz91r004gxfynavkekac2","category_id":"cirxkz8yj000txfyndhmz4xkr","_id":"cirxkz920004xxfyn6vxidjxu"},{"post_id":"cirxkz91d003sxfynyv3pze6w","category_id":"cirxkz91k0041xfyndait4lgl","_id":"cirxkz9210050xfynq2ibm7bd"},{"post_id":"cirxkz91w004oxfynoq6h6wk2","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz9230054xfyndkqi8j0u"},{"post_id":"cirxkz91f003wxfynuhcfeayj","category_id":"cirxkz91k0041xfyndait4lgl","_id":"cirxkz9250056xfynu83bn1r6"},{"post_id":"cirxkz91x004rxfyn2bxlnidu","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz928005bxfynagrzlmqr"},{"post_id":"cirxkz91i0040xfynfjcgj6q0","category_id":"cirxkz91k0041xfyndait4lgl","_id":"cirxkz92a005exfynl2n8d829"},{"post_id":"cirxkz920004yxfyn9i5avuvb","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz92b005ixfynx8kfkobh"},{"post_id":"cirxkz9220053xfyngckn2qfi","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz92c005kxfynuti2lyba"},{"post_id":"cirxkz9230055xfyna1rjrezj","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz92e005pxfyn0sx4e6fa"},{"post_id":"cirxkz91m0046xfynrxpai5ct","category_id":"cirxkz9210051xfyn40ha60ce","_id":"cirxkz92f005sxfynxqn880yp"},{"post_id":"cirxkz9270058xfyn92cvbmmj","category_id":"cirxkz9210051xfyn40ha60ce","_id":"cirxkz92l005wxfynx9yo586y"},{"post_id":"cirxkz91n0049xfynllbf6qmn","category_id":"cirxkz9280059xfynzyxt8dg1","_id":"cirxkz92n005yxfynjcnt1oah"},{"post_id":"cirxkz92b005jxfyn2h4btwek","category_id":"cirxkz92b005hxfyn862xhc9z","_id":"cirxkz92p0062xfynuw555d1z"},{"post_id":"cirxkz92c005mxfyn25pp33ik","category_id":"cirxkz92b005hxfyn862xhc9z","_id":"cirxkz92r0064xfyng91w49kz"},{"post_id":"cirxkz92e005qxfyn0vko6yp1","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz92s0067xfynn2c9n4ci"},{"post_id":"cirxkz91u004jxfynvnolerl5","category_id":"cirxkz9280059xfynzyxt8dg1","_id":"cirxkz92t006bxfyn1kythibk"},{"post_id":"cirxkz91z004vxfynwxf4ti53","category_id":"cirxkz9210051xfyn40ha60ce","_id":"cirxkz92u006fxfynpaemrwx1"},{"post_id":"cirxkz92n005zxfynp8ypfy8m","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz92v006jxfyn8pqhiyxp"},{"post_id":"cirxkz929005cxfynvdn3m4me","category_id":"cirxkz9280059xfynzyxt8dg1","_id":"cirxkz92y006mxfynrbi1hjtj"},{"post_id":"cirxkz929005cxfynvdn3m4me","category_id":"cirxkz92p0061xfyn1lpan6vv","_id":"cirxkz931006qxfynl9ntpvfi"},{"post_id":"cirxkz92r0065xfynoajahhv5","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz932006txfyniuspgvsz"},{"post_id":"cirxkz92a005gxfyn52zyudm9","category_id":"cirxkz92b005hxfyn862xhc9z","_id":"cirxkz934006yxfyn5ncn7cub"},{"post_id":"cirxkz92t006cxfyn23pp9zxo","category_id":"cirxkz9210051xfyn40ha60ce","_id":"cirxkz9350070xfynmc2a2825"},{"post_id":"cirxkz92v006hxfynft3vi3qe","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz9370074xfynd26r8duc"},{"post_id":"cirxkz91o004bxfynqljuiams","category_id":"cirxkz92b005hxfyn862xhc9z","_id":"cirxkz9380077xfyn30pqhlrf"},{"post_id":"cirxkz91o004bxfynqljuiams","category_id":"cirxkz92u006gxfynhi5ts7kb","_id":"cirxkz93a007bxfyn3af5iqdr"},{"post_id":"cirxkz92z006nxfynvzvs379x","category_id":"cirxkz8zs001txfyn7d9zhqq0","_id":"cirxkz93c007fxfynb1bli1sq"},{"post_id":"cirxkz931006rxfyn4hfoywal","category_id":"cirxkz90g0028xfynzlamfiw1","_id":"cirxkz93e007jxfynzwjarbri"},{"post_id":"cirxkz92g005txfyn931xxg98","category_id":"cirxkz92b005hxfyn862xhc9z","_id":"cirxkz93f007mxfynup0q3xih"},{"post_id":"cirxkz92g005txfyn931xxg98","category_id":"cirxkz931006oxfynw8kqr6r7","_id":"cirxkz93h007qxfyn5cgrkzhb"},{"post_id":"cirxkz933006vxfynvylm2yzo","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz93h007txfyn5xrkxycq"},{"post_id":"cirxkz934006zxfyne9hcfx7n","category_id":"cirxkz8zs001txfyn7d9zhqq0","_id":"cirxkz93j007xxfynhv8my6t3"},{"post_id":"cirxkz92m005xxfyn9a6fy6mg","category_id":"cirxkz934006wxfynmdn6yztn","_id":"cirxkz93k0080xfynjllea83k"},{"post_id":"cirxkz9360072xfynohuycco6","category_id":"cirxkz90g0028xfynzlamfiw1","_id":"cirxkz93l0084xfyniurpy43b"},{"post_id":"cirxkz9370075xfyn70h4gwn7","category_id":"cirxkz9210051xfyn40ha60ce","_id":"cirxkz93m0087xfynjvpq49ta"},{"post_id":"cirxkz92q0063xfynx1xgbhc9","category_id":"cirxkz9370073xfyng0i99wh5","_id":"cirxkz93n008bxfynqlfrw6o6"},{"post_id":"cirxkz9380079xfynsgrkp0yo","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz93p008fxfyn728gwapi"},{"post_id":"cirxkz92s0069xfynsry75hxe","category_id":"cirxkz934006wxfynmdn6yztn","_id":"cirxkz93q008jxfynij62o8d7"},{"post_id":"cirxkz93d007hxfyn7wpry77j","category_id":"cirxkz8zs001txfyn7d9zhqq0","_id":"cirxkz93r008mxfynxg7mxgm5"},{"post_id":"cirxkz93e007lxfynjw4eng80","category_id":"cirxkz8zs001txfyn7d9zhqq0","_id":"cirxkz93s008rxfynlk1l9lri"},{"post_id":"cirxkz93f007oxfyn3kgucso4","category_id":"cirxkz8zs001txfyn7d9zhqq0","_id":"cirxkz93t008uxfyn895s5qew"},{"post_id":"cirxkz92v006kxfynx64gqwrf","category_id":"cirxkz93e007kxfyn6ygejw4f","_id":"cirxkz93v008xxfynrz1w4ssk"},{"post_id":"cirxkz93h007rxfynans4c3dq","category_id":"cirxkz8zs001txfyn7d9zhqq0","_id":"cirxkz93w0090xfynyz46sxoc"},{"post_id":"cirxkz93i007vxfyn02gq81j0","category_id":"cirxkz8z6001gxfynchm0zpsu","_id":"cirxkz93x0094xfyn969eoszd"},{"post_id":"cirxkz93j007yxfyn2umv42n9","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz93y0097xfynydjqy6vx"},{"post_id":"cirxkz93k0082xfyn9e17rsxj","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz940009bxfyn1f3gmrr0"},{"post_id":"cirxkz93l0085xfyne90ubhki","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz941009exfyn2e5snqa1"},{"post_id":"cirxkz93n008cxfynitma3ek4","category_id":"cirxkz93e007kxfyn6ygejw4f","_id":"cirxkz942009ixfyn2rc0605y"},{"post_id":"cirxkz93q008kxfynbymku2ms","category_id":"cirxkz8xq0005xfyn2q5jlxkb","_id":"cirxkz944009lxfynnymx3iqf"},{"post_id":"cirxkz93m0089xfynct2798ha","category_id":"cirxkz93o008exfynmmji0tjy","_id":"cirxkz946009pxfynvuywhi02"},{"post_id":"cirxkz93r008oxfyntbsuae69","category_id":"cirxkz9370073xfyng0i99wh5","_id":"cirxkz947009sxfynuwognvhe"},{"post_id":"cirxkz93s008sxfynaity70jd","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz948009xxfynbnhkrtnx"},{"post_id":"cirxkz93p008hxfyn3hx9pmdo","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz94a00a0xfynn8k3hfb8"},{"post_id":"cirxkz93p008hxfyn3hx9pmdo","category_id":"cirxkz93s008pxfynoyklsr59","_id":"cirxkz94a00a3xfynh703g9qa"},{"post_id":"cirxkz93t008vxfyng5675gsk","category_id":"cirxkz8zs001txfyn7d9zhqq0","_id":"cirxkz94c00a7xfynip2hpl36"},{"post_id":"cirxkz93v008zxfynj2xmm9lx","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz94c00a9xfyniqghx7u6"},{"post_id":"cirxkz93w0092xfyndze53jao","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz94c00acxfynuwxt4286"},{"post_id":"cirxkz93x0096xfyneg0rp74o","category_id":"cirxkz90g0028xfynzlamfiw1","_id":"cirxkz94d00aexfyn72v7q9wi"},{"post_id":"cirxkz93y0099xfyn43nq1wsu","category_id":"cirxkz8z6001gxfynchm0zpsu","_id":"cirxkz94e00ahxfyn6b9ss165"},{"post_id":"cirxkz940009dxfyn9qplx8lq","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz94e00ajxfynfp7k6wic"},{"post_id":"cirxkz941009gxfyn4ubnaaen","category_id":"cirxkz8yr0011xfynxaw34s2x","_id":"cirxkz94e00amxfyn0slouj78"},{"post_id":"cirxkz942009kxfynvp66ykkh","category_id":"cirxkz934006wxfynmdn6yztn","_id":"cirxkz94e00aoxfynse3ldb13"},{"post_id":"cirxkz946009rxfynrf27ygey","category_id":"cirxkz9210051xfyn40ha60ce","_id":"cirxkz94f00arxfyn5e8c0tat"},{"post_id":"cirxkz947009uxfyn2wpdhki4","category_id":"cirxkz934006wxfynmdn6yztn","_id":"cirxkz94g00atxfynhpk4sq1l"},{"post_id":"cirxkz949009zxfynwirmx562","category_id":"cirxkz8zs001txfyn7d9zhqq0","_id":"cirxkz94g00awxfynju220eyh"},{"post_id":"cirxkz944009nxfyn6bjxi1jd","category_id":"cirxkz9280059xfynzyxt8dg1","_id":"cirxkz94g00ayxfyn58pkcoku"},{"post_id":"cirxkz944009nxfyn6bjxi1jd","category_id":"cirxkz948009vxfynbxdmg9z1","_id":"cirxkz94h00b0xfynd9jenerg"},{"post_id":"cirxkz94a00a2xfyn6t7f65s5","category_id":"cirxkz93e007kxfyn6ygejw4f","_id":"cirxkz94h00b2xfyn93gakzn5"},{"post_id":"cirxkz94b00a6xfyno9qpi5sa","category_id":"cirxkz93e007kxfyn6ygejw4f","_id":"cirxkz94h00b5xfynuqqx49ol"}],"PostTag":[{"post_id":"cirxkz8xa0001xfynvzt9xztr","tag_id":"cirxkz8xl0004xfyn7zibrb1h","_id":"cirxkz8y3000bxfyncbtd5l0w"},{"post_id":"cirxkz8xi0003xfyn1cccg1ie","tag_id":"cirxkz8xl0004xfyn7zibrb1h","_id":"cirxkz8y9000hxfynvlj58s9s"},{"post_id":"cirxkz8xs0006xfynatzuq9jv","tag_id":"cirxkz8y7000exfynnz2eya91","_id":"cirxkz8ye000pxfynu30bu0o6"},{"post_id":"cirxkz8xu0007xfynh70blsul","tag_id":"cirxkz8ye000nxfynp4hua7b9","_id":"cirxkz8yn000xxfynobzzwerw"},{"post_id":"cirxkz8xw0009xfynxmpe69t8","tag_id":"cirxkz8y7000exfynnz2eya91","_id":"cirxkz8yw0014xfyn00adwpma"},{"post_id":"cirxkz8y4000cxfynnbtno159","tag_id":"cirxkz8yr0010xfyn61httqq6","_id":"cirxkz8z1001axfyntvhu9ot7"},{"post_id":"cirxkz8yz0019xfyn8yetbf85","tag_id":"cirxkz8ye000nxfynp4hua7b9","_id":"cirxkz8z4001cxfyn2b2hpp5v"},{"post_id":"cirxkz8zb001kxfyn58wdxyxc","tag_id":"cirxkz8ye000nxfynp4hua7b9","_id":"cirxkz8zo001pxfynuw7hcdsi"},{"post_id":"cirxkz8y7000fxfynzuv8qcgt","tag_id":"cirxkz8yy0017xfynx68kd7id","_id":"cirxkz90a001wxfyn1ues0qag"},{"post_id":"cirxkz8y7000fxfynzuv8qcgt","tag_id":"cirxkz8z4001exfynt2mimhie","_id":"cirxkz90c001yxfyn3u6pavxc"},{"post_id":"cirxkz8y7000fxfynzuv8qcgt","tag_id":"cirxkz8zi001lxfyn7m2i3ayg","_id":"cirxkz90e0023xfyneztg2fqt"},{"post_id":"cirxkz8ya000jxfynjhyvxdfd","tag_id":"cirxkz8zr001sxfynpfx1bf13","_id":"cirxkz90g0026xfynm1e0s7wg"},{"post_id":"cirxkz8yc000lxfyn9bpngicw","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz90n002gxfynbh79ib1t"},{"post_id":"cirxkz8yc000lxfyn9bpngicw","tag_id":"cirxkz90g0029xfynbobspi8v","_id":"cirxkz90q002jxfynj0ztiryq"},{"post_id":"cirxkz90n002hxfynloqupuvd","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz90s002oxfyngm9s3r78"},{"post_id":"cirxkz8ye000qxfynhptb9pco","tag_id":"cirxkz90m002fxfyn4ywautfi","_id":"cirxkz90t002rxfynr44s6nwh"},{"post_id":"cirxkz8yh000sxfyn2jtpey2c","tag_id":"cirxkz90r002mxfynznuvyvl9","_id":"cirxkz90w002xxfyn6ljorxcq"},{"post_id":"cirxkz90t002sxfynn066cv6c","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz90y0031xfyn1kr6ho6x"},{"post_id":"cirxkz90t002sxfynn066cv6c","tag_id":"cirxkz90g0029xfynbobspi8v","_id":"cirxkz9110035xfynxdfon31g"},{"post_id":"cirxkz8yk000wxfyn80wzbk0z","tag_id":"cirxkz90v002uxfynajy4xrzu","_id":"cirxkz914003dxfynzjma0bjf"},{"post_id":"cirxkz8yk000wxfyn80wzbk0z","tag_id":"cirxkz90z0033xfynmo32b3cd","_id":"cirxkz915003hxfynz9apk43q"},{"post_id":"cirxkz913003axfyn3hlzh6u0","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz916003lxfyn7fe63oli"},{"post_id":"cirxkz8yp000zxfyn16l4d6pq","tag_id":"cirxkz8z4001exfynt2mimhie","_id":"cirxkz91f003txfyntabiswvc"},{"post_id":"cirxkz8yp000zxfyn16l4d6pq","tag_id":"cirxkz916003jxfyns908mjkg","_id":"cirxkz91i003xxfyn93jdkvmo"},{"post_id":"cirxkz8yt0013xfynd39e7gm6","tag_id":"cirxkz91c003qxfynhjg8q9k4","_id":"cirxkz91r004fxfyn8lq1yzkx"},{"post_id":"cirxkz8yt0013xfynd39e7gm6","tag_id":"cirxkz91i003yxfynodmst0ry","_id":"cirxkz91u004ixfynn5mwqf40"},{"post_id":"cirxkz8yt0013xfynd39e7gm6","tag_id":"cirxkz91m0045xfynmd3xr0vw","_id":"cirxkz91w004nxfyn03rpfx62"},{"post_id":"cirxkz8yw0015xfynvpgf7vfp","tag_id":"cirxkz91p004cxfynxuxo0gp5","_id":"cirxkz91x004qxfynufh37yv5"},{"post_id":"cirxkz8z2001bxfynq1y4tod4","tag_id":"cirxkz91w004kxfynmtz3b36l","_id":"cirxkz920004wxfynqacoweh6"},{"post_id":"cirxkz91x004rxfyn2bxlnidu","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz921004zxfyn5bthlcts"},{"post_id":"cirxkz8z4001fxfyn3e6nu6fc","tag_id":"cirxkz91y004sxfynpf2tmcjx","_id":"cirxkz928005axfynv8dsbyxv"},{"post_id":"cirxkz8z4001fxfyn3e6nu6fc","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz929005dxfynqi85c8gb"},{"post_id":"cirxkz8z7001ixfyndsui9xim","tag_id":"cirxkz91y004sxfynpf2tmcjx","_id":"cirxkz92e005oxfynr4w4mt2y"},{"post_id":"cirxkz8z7001ixfyndsui9xim","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz92f005rxfynngqw6ju9"},{"post_id":"cirxkz8zj001oxfyngfsmzk8v","tag_id":"cirxkz92c005lxfynyx56kc3i","_id":"cirxkz92t006axfynkwcojxsy"},{"post_id":"cirxkz8zj001oxfyngfsmzk8v","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz92u006dxfynegpt5ksq"},{"post_id":"cirxkz8zj001oxfyngfsmzk8v","tag_id":"cirxkz92p0060xfyn0dguh4qy","_id":"cirxkz92v006ixfynuc16bf0j"},{"post_id":"cirxkz8zo001qxfynweox409m","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz931006pxfynk6x971hz"},{"post_id":"cirxkz8zo001qxfynweox409m","tag_id":"cirxkz92u006exfynd2e3y8ia","_id":"cirxkz932006sxfynlneweubu"},{"post_id":"cirxkz909001uxfynr2cj3kng","tag_id":"cirxkz92x006lxfynmu9hizp8","_id":"cirxkz934006xxfynpiltog91"},{"post_id":"cirxkz9360072xfynohuycco6","tag_id":"cirxkz91y004sxfynpf2tmcjx","_id":"cirxkz9380076xfynaptln3o4"},{"post_id":"cirxkz9360072xfynohuycco6","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz93a007axfyn84qbghbj"},{"post_id":"cirxkz90b001xxfynn5ma8s9o","tag_id":"cirxkz91y004sxfynpf2tmcjx","_id":"cirxkz93c007exfynhnj8j62w"},{"post_id":"cirxkz90b001xxfynn5ma8s9o","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz93e007ixfyni707nhio"},{"post_id":"cirxkz93e007lxfynjw4eng80","tag_id":"cirxkz91c003qxfynhjg8q9k4","_id":"cirxkz93g007pxfynuqf6k72w"},{"post_id":"cirxkz93e007lxfynjw4eng80","tag_id":"cirxkz91m0045xfynmd3xr0vw","_id":"cirxkz93h007sxfyn18ugs3b1"},{"post_id":"cirxkz90e0022xfyn8nydtq43","tag_id":"cirxkz91y004sxfynpf2tmcjx","_id":"cirxkz93j007wxfynp4z6x25b"},{"post_id":"cirxkz90e0022xfyn8nydtq43","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz93j007zxfyn08nyj5do"},{"post_id":"cirxkz93j007yxfyn2umv42n9","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz93l0083xfyn2e2pim9j"},{"post_id":"cirxkz90f0025xfynb5f2h6i7","tag_id":"cirxkz91y004sxfynpf2tmcjx","_id":"cirxkz93m0086xfynlxezfwxa"},{"post_id":"cirxkz90f0025xfynb5f2h6i7","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz93n008axfyncidnk7u2"},{"post_id":"cirxkz90f0025xfynb5f2h6i7","tag_id":"cirxkz92p0060xfyn0dguh4qy","_id":"cirxkz93o008dxfyn1clgzhst"},{"post_id":"cirxkz90g002axfynjreaxwba","tag_id":"cirxkz91y004sxfynpf2tmcjx","_id":"cirxkz93q008ixfynzhe6b7wy"},{"post_id":"cirxkz90g002axfynjreaxwba","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz93r008lxfynl8t62bve"},{"post_id":"cirxkz90i002bxfyn096fwv2l","tag_id":"cirxkz91y004sxfynpf2tmcjx","_id":"cirxkz93s008qxfyn4wa5lq46"},{"post_id":"cirxkz90i002bxfyn096fwv2l","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz93t008txfynb7gmywjx"},{"post_id":"cirxkz90k002dxfyneahtj59w","tag_id":"cirxkz91y004sxfynpf2tmcjx","_id":"cirxkz93v008yxfynwgz4owg6"},{"post_id":"cirxkz90k002dxfyneahtj59w","tag_id":"cirxkz93r008nxfyno3tpg0gf","_id":"cirxkz93w0091xfyn012h2sb6"},{"post_id":"cirxkz93t008vxfyng5675gsk","tag_id":"cirxkz91c003qxfynhjg8q9k4","_id":"cirxkz93x0095xfyn7fwawry1"},{"post_id":"cirxkz93t008vxfyng5675gsk","tag_id":"cirxkz91m0045xfynmd3xr0vw","_id":"cirxkz93y0098xfynb0ce4vlx"},{"post_id":"cirxkz90q002kxfyn5qkiq9s8","tag_id":"cirxkz91y004sxfynpf2tmcjx","_id":"cirxkz940009cxfyne5cd26vp"},{"post_id":"cirxkz90q002kxfyn5qkiq9s8","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz941009fxfynr3t8i4og"},{"post_id":"cirxkz93w0092xfyndze53jao","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz942009jxfynbaljfhi6"},{"post_id":"cirxkz93w0092xfyndze53jao","tag_id":"cirxkz91m0045xfynmd3xr0vw","_id":"cirxkz944009mxfyn4jm727gd"},{"post_id":"cirxkz93x0096xfyneg0rp74o","tag_id":"cirxkz91y004sxfynpf2tmcjx","_id":"cirxkz946009qxfynm27xca73"},{"post_id":"cirxkz93x0096xfyneg0rp74o","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz947009txfynbqxp35km"},{"post_id":"cirxkz93x0096xfyneg0rp74o","tag_id":"cirxkz91m0045xfynmd3xr0vw","_id":"cirxkz949009yxfyn9guhu3vm"},{"post_id":"cirxkz90s002pxfyntieq30ku","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz94a00a1xfyn4pzm12wp"},{"post_id":"cirxkz90s002pxfyntieq30ku","tag_id":"cirxkz93x0093xfyn10qdx0xa","_id":"cirxkz94b00a5xfynkzox7aef"},{"post_id":"cirxkz90w002zxfyn2irz1ary","tag_id":"cirxkz91y004sxfynpf2tmcjx","_id":"cirxkz94c00a8xfyn7w60c4ko"},{"post_id":"cirxkz90w002zxfyn2irz1ary","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz94c00aaxfynoiastsv9"},{"post_id":"cirxkz90z0034xfynl8law5ua","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz94c00adxfynfz1s4m7i"},{"post_id":"cirxkz90z0034xfynl8law5ua","tag_id":"cirxkz93x0093xfyn10qdx0xa","_id":"cirxkz94d00afxfynefqbiuhr"},{"post_id":"cirxkz9110037xfynn5ya051p","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz94e00aixfynhoizddwv"},{"post_id":"cirxkz9110037xfynn5ya051p","tag_id":"cirxkz946009oxfyn8cyz4llq","_id":"cirxkz94e00akxfyn86htsys5"},{"post_id":"cirxkz914003exfynnwvccmj9","tag_id":"cirxkz948009wxfyn1vv11p9r","_id":"cirxkz94e00anxfyn1vcj045p"},{"post_id":"cirxkz916003mxfynpja42he5","tag_id":"cirxkz94b00a4xfynshewpnhi","_id":"cirxkz94e00apxfyncmxu57a1"},{"post_id":"cirxkz916003mxfynpja42he5","tag_id":"cirxkz94c00abxfyns18ahut8","_id":"cirxkz94f00asxfynhkfo7qfd"},{"post_id":"cirxkz919003pxfynbz7o07sz","tag_id":"cirxkz94b00a4xfynshewpnhi","_id":"cirxkz94g00auxfyno9nykfvg"},{"post_id":"cirxkz919003pxfynbz7o07sz","tag_id":"cirxkz94c00abxfyns18ahut8","_id":"cirxkz94g00axxfyn50h2pm3i"},{"post_id":"cirxkz91d003sxfynyv3pze6w","tag_id":"cirxkz94b00a4xfynshewpnhi","_id":"cirxkz94h00b1xfynfynpruto"},{"post_id":"cirxkz91d003sxfynyv3pze6w","tag_id":"cirxkz94c00abxfyns18ahut8","_id":"cirxkz94h00b3xfynixbnqb4q"},{"post_id":"cirxkz91f003wxfynuhcfeayj","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz94i00b7xfynlwhgozg0"},{"post_id":"cirxkz91f003wxfynuhcfeayj","tag_id":"cirxkz94b00a4xfynshewpnhi","_id":"cirxkz94i00b8xfyn9lwk8smi"},{"post_id":"cirxkz91f003wxfynuhcfeayj","tag_id":"cirxkz94c00abxfyns18ahut8","_id":"cirxkz94j00baxfynd3vbr7ej"},{"post_id":"cirxkz91i0040xfynfjcgj6q0","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz94j00bbxfynhrmrk44q"},{"post_id":"cirxkz91i0040xfynfjcgj6q0","tag_id":"cirxkz94b00a4xfynshewpnhi","_id":"cirxkz94k00bdxfynskoo184u"},{"post_id":"cirxkz91k0043xfynfoatlxhx","tag_id":"cirxkz94b00a4xfynshewpnhi","_id":"cirxkz94k00bfxfynmesi3jzd"},{"post_id":"cirxkz91k0043xfynfoatlxhx","tag_id":"cirxkz94c00abxfyns18ahut8","_id":"cirxkz94k00bgxfyng2wqrshd"},{"post_id":"cirxkz91m0046xfynrxpai5ct","tag_id":"cirxkz94k00bexfyn02q2p7jm","_id":"cirxkz94k00bjxfynec7khbvm"},{"post_id":"cirxkz91m0046xfynrxpai5ct","tag_id":"cirxkz94k00bhxfynsfoll95u","_id":"cirxkz94k00bkxfynguo3v4yx"},{"post_id":"cirxkz91n0049xfynllbf6qmn","tag_id":"cirxkz94k00bixfyn05kngx5r","_id":"cirxkz94l00bmxfyndrhyixo8"},{"post_id":"cirxkz91o004bxfynqljuiams","tag_id":"cirxkz94l00blxfyn2s8ustu1","_id":"cirxkz94l00bpxfyn0ucfat6z"},{"post_id":"cirxkz91o004bxfynqljuiams","tag_id":"cirxkz94k00bexfyn02q2p7jm","_id":"cirxkz94l00bqxfynae4gq5ia"},{"post_id":"cirxkz91r004gxfynavkekac2","tag_id":"cirxkz94l00blxfyn2s8ustu1","_id":"cirxkz94m00bsxfynnl6itsdj"},{"post_id":"cirxkz91r004gxfynavkekac2","tag_id":"cirxkz8zr001sxfynpfx1bf13","_id":"cirxkz94m00btxfynw6cg58fc"},{"post_id":"cirxkz91u004jxfynvnolerl5","tag_id":"cirxkz94c00abxfyns18ahut8","_id":"cirxkz94m00bwxfyn8bcxo2t6"},{"post_id":"cirxkz91u004jxfynvnolerl5","tag_id":"cirxkz94m00buxfynjtvqg8vb","_id":"cirxkz94m00bxxfyny2sja0fz"},{"post_id":"cirxkz91w004oxfynoq6h6wk2","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz94n00bzxfyngp0xfhhe"},{"post_id":"cirxkz91w004oxfynoq6h6wk2","tag_id":"cirxkz94m00bvxfynpfblv77e","_id":"cirxkz94n00c0xfynna48t3bz"},{"post_id":"cirxkz91z004vxfynwxf4ti53","tag_id":"cirxkz94k00bexfyn02q2p7jm","_id":"cirxkz94n00c2xfynepdsmzyw"},{"post_id":"cirxkz91z004vxfynwxf4ti53","tag_id":"cirxkz91w004kxfynmtz3b36l","_id":"cirxkz94n00c3xfyno1b75eep"},{"post_id":"cirxkz920004yxfyn9i5avuvb","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz94o00c5xfyn5xjrwpsw"},{"post_id":"cirxkz920004yxfyn9i5avuvb","tag_id":"cirxkz94m00bvxfynpfblv77e","_id":"cirxkz94o00c6xfynodmswa1b"},{"post_id":"cirxkz920004yxfyn9i5avuvb","tag_id":"cirxkz91w004kxfynmtz3b36l","_id":"cirxkz94o00c8xfynxunx7dee"},{"post_id":"cirxkz9220053xfyngckn2qfi","tag_id":"cirxkz94n00c4xfynkngar16v","_id":"cirxkz94o00c9xfynbc7l006c"},{"post_id":"cirxkz9270058xfyn92cvbmmj","tag_id":"cirxkz94k00bexfyn02q2p7jm","_id":"cirxkz94o00cbxfyn7x9dktfu"},{"post_id":"cirxkz929005cxfynvdn3m4me","tag_id":"cirxkz94c00abxfyns18ahut8","_id":"cirxkz94p00cexfynf6o54ktq"},{"post_id":"cirxkz929005cxfynvdn3m4me","tag_id":"cirxkz94o00ccxfyn4oxp76sh","_id":"cirxkz94p00cfxfynxkjw73e3"},{"post_id":"cirxkz92a005gxfyn52zyudm9","tag_id":"cirxkz94l00blxfyn2s8ustu1","_id":"cirxkz94q00cixfynguyf2ft3"},{"post_id":"cirxkz92a005gxfyn52zyudm9","tag_id":"cirxkz94m00buxfynjtvqg8vb","_id":"cirxkz94q00cjxfynn6aulzx6"},{"post_id":"cirxkz92b005jxfyn2h4btwek","tag_id":"cirxkz94l00blxfyn2s8ustu1","_id":"cirxkz94s00cmxfynar1wqk95"},{"post_id":"cirxkz92b005jxfyn2h4btwek","tag_id":"cirxkz94m00buxfynjtvqg8vb","_id":"cirxkz94s00cnxfynbbw6qtfd"},{"post_id":"cirxkz92c005mxfyn25pp33ik","tag_id":"cirxkz94l00blxfyn2s8ustu1","_id":"cirxkz94s00cqxfynnvkvmo2c"},{"post_id":"cirxkz92c005mxfyn25pp33ik","tag_id":"cirxkz94m00buxfynjtvqg8vb","_id":"cirxkz94s00crxfyn48vdti9w"},{"post_id":"cirxkz92e005qxfyn0vko6yp1","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz94w00ctxfynj9kxxndi"},{"post_id":"cirxkz92e005qxfyn0vko6yp1","tag_id":"cirxkz94s00cpxfyn178tlgbw","_id":"cirxkz94w00cuxfynnfjklqkf"},{"post_id":"cirxkz92g005txfyn931xxg98","tag_id":"cirxkz94l00blxfyn2s8ustu1","_id":"cirxkz94x00cyxfynrm5dshs1"},{"post_id":"cirxkz92g005txfyn931xxg98","tag_id":"cirxkz94c00abxfyns18ahut8","_id":"cirxkz94x00czxfynr1qwxemh"},{"post_id":"cirxkz92g005txfyn931xxg98","tag_id":"cirxkz94w00cwxfynk5ent0y8","_id":"cirxkz94x00d1xfynaose0ub0"},{"post_id":"cirxkz92m005xxfyn9a6fy6mg","tag_id":"cirxkz94x00cxxfyna518l5cn","_id":"cirxkz94y00d4xfynwhoorok7"},{"post_id":"cirxkz92m005xxfyn9a6fy6mg","tag_id":"cirxkz94k00bixfyn05kngx5r","_id":"cirxkz94y00d5xfynfx8z9u2p"},{"post_id":"cirxkz92m005xxfyn9a6fy6mg","tag_id":"cirxkz94x00d2xfynk4x6xkfc","_id":"cirxkz94y00d7xfynk08q2kki"},{"post_id":"cirxkz92s0069xfynsry75hxe","tag_id":"cirxkz94y00d3xfynny6drg4h","_id":"cirxkz94z00d9xfynj41bxhlt"},{"post_id":"cirxkz92s0069xfynsry75hxe","tag_id":"cirxkz94x00d2xfynk4x6xkfc","_id":"cirxkz94z00daxfynbdbyvq6t"},{"post_id":"cirxkz92t006cxfyn23pp9zxo","tag_id":"cirxkz94k00bexfyn02q2p7jm","_id":"cirxkz95000dcxfyn6ni9179d"},{"post_id":"cirxkz92v006hxfynft3vi3qe","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz95000dexfynpvxx65ik"},{"post_id":"cirxkz92v006hxfynft3vi3qe","tag_id":"cirxkz94m00buxfynjtvqg8vb","_id":"cirxkz95000dfxfynrs8c4y7c"},{"post_id":"cirxkz92v006kxfynx64gqwrf","tag_id":"cirxkz95000ddxfynq9e77b71","_id":"cirxkz95100dixfynpcxmu0fa"},{"post_id":"cirxkz92v006kxfynx64gqwrf","tag_id":"cirxkz95000dgxfyna5viyhzx","_id":"cirxkz95100djxfynvnvaww42"},{"post_id":"cirxkz92z006nxfynvzvs379x","tag_id":"cirxkz95000dhxfynqhsfdqv7","_id":"cirxkz95200dlxfyncfapl7f6"},{"post_id":"cirxkz92z006nxfynvzvs379x","tag_id":"cirxkz91w004kxfynmtz3b36l","_id":"cirxkz95200dmxfyno6k4bf0k"},{"post_id":"cirxkz931006rxfyn4hfoywal","tag_id":"cirxkz91y004sxfynpf2tmcjx","_id":"cirxkz95200doxfynnibr3xbi"},{"post_id":"cirxkz931006rxfyn4hfoywal","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz95200dpxfyn5p8l6ltz"},{"post_id":"cirxkz931006rxfyn4hfoywal","tag_id":"cirxkz95100dkxfynmw0s23xn","_id":"cirxkz95300drxfyn75kidc70"},{"post_id":"cirxkz933006vxfynvylm2yzo","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz95300dsxfynf52i4fud"},{"post_id":"cirxkz933006vxfynvylm2yzo","tag_id":"cirxkz95200dnxfyn70syw7hd","_id":"cirxkz95300duxfynoaz7klrg"},{"post_id":"cirxkz934006zxfyne9hcfx7n","tag_id":"cirxkz95000dhxfynqhsfdqv7","_id":"cirxkz95300dvxfynidnizjrz"},{"post_id":"cirxkz934006zxfyne9hcfx7n","tag_id":"cirxkz91c003qxfynhjg8q9k4","_id":"cirxkz95400dxxfyn8x0au9jh"},{"post_id":"cirxkz934006zxfyne9hcfx7n","tag_id":"cirxkz91m0045xfynmd3xr0vw","_id":"cirxkz95400dyxfynkyovhckh"},{"post_id":"cirxkz9370075xfyn70h4gwn7","tag_id":"cirxkz94k00bexfyn02q2p7jm","_id":"cirxkz95400e0xfynyj1iev6n"},{"post_id":"cirxkz9370075xfyn70h4gwn7","tag_id":"cirxkz95400dwxfyn9q82kps7","_id":"cirxkz95500e1xfynq6kcyrul"},{"post_id":"cirxkz93d007hxfyn7wpry77j","tag_id":"cirxkz95000dhxfynqhsfdqv7","_id":"cirxkz95500e3xfynhmwrzdpm"},{"post_id":"cirxkz93d007hxfyn7wpry77j","tag_id":"cirxkz91w004kxfynmtz3b36l","_id":"cirxkz95500e4xfynsxxokw8t"},{"post_id":"cirxkz93f007oxfyn3kgucso4","tag_id":"cirxkz95000dhxfynqhsfdqv7","_id":"cirxkz95600e7xfyn2efrizh7"},{"post_id":"cirxkz93f007oxfyn3kgucso4","tag_id":"cirxkz91c003qxfynhjg8q9k4","_id":"cirxkz95600e8xfynkqzzdism"},{"post_id":"cirxkz93f007oxfyn3kgucso4","tag_id":"cirxkz95500e5xfyncv8zr1kr","_id":"cirxkz95600eaxfyn9klw8kb5"},{"post_id":"cirxkz93h007rxfynans4c3dq","tag_id":"cirxkz95000dhxfynqhsfdqv7","_id":"cirxkz95600ebxfyn4pw0b7u8"},{"post_id":"cirxkz93h007rxfynans4c3dq","tag_id":"cirxkz91w004kxfynmtz3b36l","_id":"cirxkz95600edxfynavplb6qg"},{"post_id":"cirxkz93i007vxfyn02gq81j0","tag_id":"cirxkz95600e9xfynevip8rvd","_id":"cirxkz95600eexfyntih28odp"},{"post_id":"cirxkz93m0089xfynct2798ha","tag_id":"cirxkz95600ecxfyn6g9pbmaf","_id":"cirxkz95700egxfynvn21fq3m"},{"post_id":"cirxkz93n008cxfynitma3ek4","tag_id":"cirxkz95000ddxfynq9e77b71","_id":"cirxkz95800ejxfynam1ft5wc"},{"post_id":"cirxkz93n008cxfynitma3ek4","tag_id":"cirxkz95000dgxfyna5viyhzx","_id":"cirxkz95800ekxfyn9gp4x5ad"},{"post_id":"cirxkz93p008hxfyn3hx9pmdo","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz95900eoxfynz1rx0mt2"},{"post_id":"cirxkz93p008hxfyn3hx9pmdo","tag_id":"cirxkz95700eixfyno1bsfomr","_id":"cirxkz95900epxfynh5n4fd1c"},{"post_id":"cirxkz93p008hxfyn3hx9pmdo","tag_id":"cirxkz94k00bexfyn02q2p7jm","_id":"cirxkz95900erxfynwh501cvu"},{"post_id":"cirxkz93p008hxfyn3hx9pmdo","tag_id":"cirxkz95800emxfynkzurcbii","_id":"cirxkz95900esxfyn25fc37uw"},{"post_id":"cirxkz93s008sxfynaity70jd","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz95a00evxfynmnpd7na5"},{"post_id":"cirxkz93s008sxfynaity70jd","tag_id":"cirxkz95700eixfyno1bsfomr","_id":"cirxkz95a00ewxfynschm551n"},{"post_id":"cirxkz93s008sxfynaity70jd","tag_id":"cirxkz95900eqxfynqyuzns7z","_id":"cirxkz95a00eyxfynfoj2vb0e"},{"post_id":"cirxkz93s008sxfynaity70jd","tag_id":"cirxkz95800emxfynkzurcbii","_id":"cirxkz95b00ezxfynz8i0jwlj"},{"post_id":"cirxkz93v008zxfynj2xmm9lx","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz95b00f1xfynt31wnbd0"},{"post_id":"cirxkz93v008zxfynj2xmm9lx","tag_id":"cirxkz94m00bvxfynpfblv77e","_id":"cirxkz95b00f2xfyn8soyvvbk"},{"post_id":"cirxkz93v008zxfynj2xmm9lx","tag_id":"cirxkz91m0045xfynmd3xr0vw","_id":"cirxkz95b00f4xfynvlcyr85b"},{"post_id":"cirxkz93y0099xfyn43nq1wsu","tag_id":"cirxkz948009wxfyn1vv11p9r","_id":"cirxkz95b00f5xfyn37m8jaog"},{"post_id":"cirxkz940009dxfyn9qplx8lq","tag_id":"cirxkz90d0020xfynn1uu36b1","_id":"cirxkz95c00f7xfynzk7k6p9z"},{"post_id":"cirxkz940009dxfyn9qplx8lq","tag_id":"cirxkz95b00f0xfynddekasxm","_id":"cirxkz95c00f8xfynopsbma8x"},{"post_id":"cirxkz940009dxfyn9qplx8lq","tag_id":"cirxkz95b00f3xfyngxgq1j4s","_id":"cirxkz95c00faxfyngxwx8tjw"},{"post_id":"cirxkz941009gxfyn4ubnaaen","tag_id":"cirxkz95b00f6xfynaqhx0i1l","_id":"cirxkz95d00fcxfyn39asz5fg"},{"post_id":"cirxkz941009gxfyn4ubnaaen","tag_id":"cirxkz95c00f9xfyn3d2hfhlz","_id":"cirxkz95d00fdxfynp1ifzac7"},{"post_id":"cirxkz944009nxfyn6bjxi1jd","tag_id":"cirxkz94c00abxfyns18ahut8","_id":"cirxkz95f00fixfyndg8hjl3f"},{"post_id":"cirxkz944009nxfyn6bjxi1jd","tag_id":"cirxkz95d00fexfyn39q619ej","_id":"cirxkz95f00fjxfynd1x4ge1e"},{"post_id":"cirxkz944009nxfyn6bjxi1jd","tag_id":"cirxkz95e00ffxfynezbpz031","_id":"cirxkz95f00flxfynux2e0sdf"},{"post_id":"cirxkz944009nxfyn6bjxi1jd","tag_id":"cirxkz94x00d2xfynk4x6xkfc","_id":"cirxkz95f00fmxfynr3cg00sk"},{"post_id":"cirxkz946009rxfynrf27ygey","tag_id":"cirxkz94k00bexfyn02q2p7jm","_id":"cirxkz95g00foxfyn4qcm1c3w"},{"post_id":"cirxkz946009rxfynrf27ygey","tag_id":"cirxkz95f00fkxfynqgdkfnvu","_id":"cirxkz95g00fpxfyn496j23tg"},{"post_id":"cirxkz947009uxfyn2wpdhki4","tag_id":"cirxkz95f00fnxfyn7mcmomfr","_id":"cirxkz95g00fsxfyn8ycckr8r"},{"post_id":"cirxkz947009uxfyn2wpdhki4","tag_id":"cirxkz94x00d2xfynk4x6xkfc","_id":"cirxkz95g00ftxfynlm1nbkb4"},{"post_id":"cirxkz949009zxfynwirmx562","tag_id":"cirxkz95000dhxfynqhsfdqv7","_id":"cirxkz95h00fwxfyngpxm7i4f"},{"post_id":"cirxkz949009zxfynwirmx562","tag_id":"cirxkz95h00fuxfynmq9yu4k6","_id":"cirxkz95h00fxxfynxq2jz5wa"},{"post_id":"cirxkz94a00a2xfyn6t7f65s5","tag_id":"cirxkz95000ddxfynq9e77b71","_id":"cirxkz95k00g0xfyn50p8ygh2"},{"post_id":"cirxkz94a00a2xfyn6t7f65s5","tag_id":"cirxkz95000dgxfyna5viyhzx","_id":"cirxkz95k00g1xfynighcfno6"},{"post_id":"cirxkz94b00a6xfyno9qpi5sa","tag_id":"cirxkz95000ddxfynq9e77b71","_id":"cirxkz95l00g3xfynobq22uwh"},{"post_id":"cirxkz94b00a6xfyno9qpi5sa","tag_id":"cirxkz95000dgxfyna5viyhzx","_id":"cirxkz95l00g4xfynm43wd5g4"}],"Tag":[{"name":"找工作","_id":"cirxkz8xl0004xfyn7zibrb1h"},{"name":"总结","_id":"cirxkz8y7000exfynnz2eya91"},{"name":"日记","_id":"cirxkz8ye000nxfynp4hua7b9"},{"name":"记账本","_id":"cirxkz8yr0010xfyn61httqq6"},{"name":"LoadRunner","_id":"cirxkz8yy0017xfynx68kd7id"},{"name":"WMS","_id":"cirxkz8z4001exfynt2mimhie"},{"name":"压力测试","_id":"cirxkz8zi001lxfyn7m2i3ayg"},{"name":"设计模式","_id":"cirxkz8zr001sxfynpfx1bf13"},{"name":"AspNet","_id":"cirxkz90d0020xfynn1uu36b1"},{"name":"性能","_id":"cirxkz90g0029xfynbobspi8v"},{"name":"旅游","_id":"cirxkz90m002fxfyn4ywautfi"},{"name":"WCF","_id":"cirxkz90r002mxfynznuvyvl9"},{"name":"PDF","_id":"cirxkz90v002uxfynajy4xrzu"},{"name":"书签","_id":"cirxkz90z0033xfynmo32b3cd"},{"name":"发布点","_id":"cirxkz916003jxfyns908mjkg"},{"name":"SqlServer","_id":"cirxkz91c003qxfynhjg8q9k4"},{"name":"sqlserver2008","_id":"cirxkz91i003yxfynodmst0ry"},{"name":"错误解决","_id":"cirxkz91m0045xfynmd3xr0vw"},{"name":"虚拟机","_id":"cirxkz91p004cxfynxuxo0gp5"},{"name":"小技巧","_id":"cirxkz91w004kxfynmtz3b36l"},{"name":"Ajax","_id":"cirxkz91y004sxfynpf2tmcjx"},{"name":"ajaxpro","_id":"cirxkz92c005lxfynyx56kc3i"},{"name":"Autocomplete","_id":"cirxkz92p0060xfyn0dguh4qy"},{"name":"NHibernate","_id":"cirxkz92u006exfynd2e3y8ia"},{"name":"纪念日","_id":"cirxkz92x006lxfynmu9hizp8"},{"name":"spNet","_id":"cirxkz93r008nxfyno3tpg0gf"},{"name":"Eval","_id":"cirxkz93x0093xfyn10qdx0xa"},{"name":"MVC","_id":"cirxkz946009oxfyn8cyz4llq"},{"name":"windows live writer","_id":"cirxkz948009wxfyn1vv11p9r"},{"name":"CLR via C#","_id":"cirxkz94b00a4xfynshewpnhi"},{"name":"DotNet","_id":"cirxkz94c00abxfyns18ahut8"},{"name":"javascript","_id":"cirxkz94k00bexfyn02q2p7jm"},{"name":"正则","_id":"cirxkz94k00bhxfynsfoll95u"},{"name":"visual studio","_id":"cirxkz94k00bixfyn05kngx5r"},{"name":"C#","_id":"cirxkz94l00blxfyn2s8ustu1"},{"name":"DotNet3.0","_id":"cirxkz94m00buxfynjtvqg8vb"},{"name":"GrdiView","_id":"cirxkz94m00bvxfynpfblv77e"},{"name":"英语","_id":"cirxkz94n00c4xfynkngar16v"},{"name":"JQuery","_id":"cirxkz94o00ccxfyn4oxp76sh"},{"name":"MasterPage","_id":"cirxkz94s00cpxfyn178tlgbw"},{"name":"泛型","_id":"cirxkz94w00cwxfynk5ent0y8"},{"name":"Resharper","_id":"cirxkz94x00cxxfyna518l5cn"},{"name":"软件推荐","_id":"cirxkz94x00d2xfynk4x6xkfc"},{"name":"FastStone","_id":"cirxkz94y00d3xfynny6drg4h"},{"name":"NBA","_id":"cirxkz95000ddxfynq9e77b71"},{"name":"篮球","_id":"cirxkz95000dgxfyna5viyhzx"},{"name":"Sql","_id":"cirxkz95000dhxfynqhsfdqv7"},{"name":"无刷新联动","_id":"cirxkz95100dkxfynmw0s23xn"},{"name":"水晶报表","_id":"cirxkz95200dnxfyn70syw7hd"},{"name":"My97","_id":"cirxkz95400dwxfyn9q82kps7"},{"name":"存储过程","_id":"cirxkz95500e5xfyncv8zr1kr"},{"name":"PowerDesiner","_id":"cirxkz95600e9xfynevip8rvd"},{"name":"HTML","_id":"cirxkz95600ecxfyn6g9pbmaf"},{"name":"CheckBox","_id":"cirxkz95700eixfyno1bsfomr"},{"name":"全选","_id":"cirxkz95800emxfynkzurcbii"},{"name":"gridview","_id":"cirxkz95900eqxfynqyuzns7z"},{"name":"ZedGraph","_id":"cirxkz95b00f0xfynddekasxm"},{"name":"报表统计","_id":"cirxkz95b00f3xfyngxgq1j4s"},{"name":"HttpModule","_id":"cirxkz95b00f6xfynaqhx0i1l"},{"name":"Sql注入","_id":"cirxkz95c00f9xfyn3d2hfhlz"},{"name":"DotNet4","_id":"cirxkz95d00fexfyn39q619ej"},{"name":"vs2010","_id":"cirxkz95e00ffxfynezbpz031"},{"name":"print","_id":"cirxkz95f00fkxfynqgdkfnvu"},{"name":"语法高亮","_id":"cirxkz95f00fnxfyn7mcmomfr"},{"name":"合并列","_id":"cirxkz95h00fuxfynmq9yu4k6"}]}}